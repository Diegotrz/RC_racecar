

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Aug 21 15:12:51 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32     0000                     
    33                           ; Generated 22/03/2023 GMT
    34                           ; 
    35                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67     0000                     	;# 
    68     0001                     	;# 
    69     0002                     	;# 
    70     0003                     	;# 
    71     0004                     	;# 
    72     0005                     	;# 
    73     0006                     	;# 
    74     0007                     	;# 
    75     0008                     	;# 
    76     0009                     	;# 
    77     000A                     	;# 
    78     000B                     	;# 
    79     000C                     	;# 
    80     000D                     	;# 
    81     000E                     	;# 
    82     000E                     	;# 
    83     000F                     	;# 
    84     0010                     	;# 
    85     0011                     	;# 
    86     0012                     	;# 
    87     0013                     	;# 
    88     0014                     	;# 
    89     0015                     	;# 
    90     0015                     	;# 
    91     0016                     	;# 
    92     0017                     	;# 
    93     0018                     	;# 
    94     0019                     	;# 
    95     001A                     	;# 
    96     001B                     	;# 
    97     001B                     	;# 
    98     001C                     	;# 
    99     001D                     	;# 
   100     001E                     	;# 
   101     001F                     	;# 
   102     0081                     	;# 
   103     0085                     	;# 
   104     0086                     	;# 
   105     0087                     	;# 
   106     0088                     	;# 
   107     0089                     	;# 
   108     008C                     	;# 
   109     008D                     	;# 
   110     008E                     	;# 
   111     008F                     	;# 
   112     0090                     	;# 
   113     0091                     	;# 
   114     0092                     	;# 
   115     0093                     	;# 
   116     0093                     	;# 
   117     0093                     	;# 
   118     0094                     	;# 
   119     0095                     	;# 
   120     0096                     	;# 
   121     0097                     	;# 
   122     0098                     	;# 
   123     0099                     	;# 
   124     009A                     	;# 
   125     009B                     	;# 
   126     009C                     	;# 
   127     009D                     	;# 
   128     009E                     	;# 
   129     009F                     	;# 
   130     0105                     	;# 
   131     0107                     	;# 
   132     0108                     	;# 
   133     0109                     	;# 
   134     010C                     	;# 
   135     010C                     	;# 
   136     010D                     	;# 
   137     010E                     	;# 
   138     010F                     	;# 
   139     0185                     	;# 
   140     0187                     	;# 
   141     0188                     	;# 
   142     0189                     	;# 
   143     018C                     	;# 
   144     018D                     	;# 
   145     0000                     	;# 
   146     0001                     	;# 
   147     0002                     	;# 
   148     0003                     	;# 
   149     0004                     	;# 
   150     0005                     	;# 
   151     0006                     	;# 
   152     0007                     	;# 
   153     0008                     	;# 
   154     0009                     	;# 
   155     000A                     	;# 
   156     000B                     	;# 
   157     000C                     	;# 
   158     000D                     	;# 
   159     000E                     	;# 
   160     000E                     	;# 
   161     000F                     	;# 
   162     0010                     	;# 
   163     0011                     	;# 
   164     0012                     	;# 
   165     0013                     	;# 
   166     0014                     	;# 
   167     0015                     	;# 
   168     0015                     	;# 
   169     0016                     	;# 
   170     0017                     	;# 
   171     0018                     	;# 
   172     0019                     	;# 
   173     001A                     	;# 
   174     001B                     	;# 
   175     001B                     	;# 
   176     001C                     	;# 
   177     001D                     	;# 
   178     001E                     	;# 
   179     001F                     	;# 
   180     0081                     	;# 
   181     0085                     	;# 
   182     0086                     	;# 
   183     0087                     	;# 
   184     0088                     	;# 
   185     0089                     	;# 
   186     008C                     	;# 
   187     008D                     	;# 
   188     008E                     	;# 
   189     008F                     	;# 
   190     0090                     	;# 
   191     0091                     	;# 
   192     0092                     	;# 
   193     0093                     	;# 
   194     0093                     	;# 
   195     0093                     	;# 
   196     0094                     	;# 
   197     0095                     	;# 
   198     0096                     	;# 
   199     0097                     	;# 
   200     0098                     	;# 
   201     0099                     	;# 
   202     009A                     	;# 
   203     009B                     	;# 
   204     009C                     	;# 
   205     009D                     	;# 
   206     009E                     	;# 
   207     009F                     	;# 
   208     0105                     	;# 
   209     0107                     	;# 
   210     0108                     	;# 
   211     0109                     	;# 
   212     010C                     	;# 
   213     010C                     	;# 
   214     010D                     	;# 
   215     010E                     	;# 
   216     010F                     	;# 
   217     0185                     	;# 
   218     0187                     	;# 
   219     0188                     	;# 
   220     0189                     	;# 
   221     018C                     	;# 
   222     018D                     	;# 
   223     0000                     	;# 
   224     0001                     	;# 
   225     0002                     	;# 
   226     0003                     	;# 
   227     0004                     	;# 
   228     0005                     	;# 
   229     0006                     	;# 
   230     0007                     	;# 
   231     0008                     	;# 
   232     0009                     	;# 
   233     000A                     	;# 
   234     000B                     	;# 
   235     000C                     	;# 
   236     000D                     	;# 
   237     000E                     	;# 
   238     000E                     	;# 
   239     000F                     	;# 
   240     0010                     	;# 
   241     0011                     	;# 
   242     0012                     	;# 
   243     0013                     	;# 
   244     0014                     	;# 
   245     0015                     	;# 
   246     0015                     	;# 
   247     0016                     	;# 
   248     0017                     	;# 
   249     0018                     	;# 
   250     0019                     	;# 
   251     001A                     	;# 
   252     001B                     	;# 
   253     001B                     	;# 
   254     001C                     	;# 
   255     001D                     	;# 
   256     001E                     	;# 
   257     001F                     	;# 
   258     0081                     	;# 
   259     0085                     	;# 
   260     0086                     	;# 
   261     0087                     	;# 
   262     0088                     	;# 
   263     0089                     	;# 
   264     008C                     	;# 
   265     008D                     	;# 
   266     008E                     	;# 
   267     008F                     	;# 
   268     0090                     	;# 
   269     0091                     	;# 
   270     0092                     	;# 
   271     0093                     	;# 
   272     0093                     	;# 
   273     0093                     	;# 
   274     0094                     	;# 
   275     0095                     	;# 
   276     0096                     	;# 
   277     0097                     	;# 
   278     0098                     	;# 
   279     0099                     	;# 
   280     009A                     	;# 
   281     009B                     	;# 
   282     009C                     	;# 
   283     009D                     	;# 
   284     009E                     	;# 
   285     009F                     	;# 
   286     0105                     	;# 
   287     0107                     	;# 
   288     0108                     	;# 
   289     0109                     	;# 
   290     010C                     	;# 
   291     010C                     	;# 
   292     010D                     	;# 
   293     010E                     	;# 
   294     010F                     	;# 
   295     0185                     	;# 
   296     0187                     	;# 
   297     0188                     	;# 
   298     0189                     	;# 
   299     018C                     	;# 
   300     018D                     	;# 
   301     0000                     	;# 
   302     0001                     	;# 
   303     0002                     	;# 
   304     0003                     	;# 
   305     0004                     	;# 
   306     0005                     	;# 
   307     0006                     	;# 
   308     0007                     	;# 
   309     0008                     	;# 
   310     0009                     	;# 
   311     000A                     	;# 
   312     000B                     	;# 
   313     000C                     	;# 
   314     000D                     	;# 
   315     000E                     	;# 
   316     000E                     	;# 
   317     000F                     	;# 
   318     0010                     	;# 
   319     0011                     	;# 
   320     0012                     	;# 
   321     0013                     	;# 
   322     0014                     	;# 
   323     0015                     	;# 
   324     0015                     	;# 
   325     0016                     	;# 
   326     0017                     	;# 
   327     0018                     	;# 
   328     0019                     	;# 
   329     001A                     	;# 
   330     001B                     	;# 
   331     001B                     	;# 
   332     001C                     	;# 
   333     001D                     	;# 
   334     001E                     	;# 
   335     001F                     	;# 
   336     0081                     	;# 
   337     0085                     	;# 
   338     0086                     	;# 
   339     0087                     	;# 
   340     0088                     	;# 
   341     0089                     	;# 
   342     008C                     	;# 
   343     008D                     	;# 
   344     008E                     	;# 
   345     008F                     	;# 
   346     0090                     	;# 
   347     0091                     	;# 
   348     0092                     	;# 
   349     0093                     	;# 
   350     0093                     	;# 
   351     0093                     	;# 
   352     0094                     	;# 
   353     0095                     	;# 
   354     0096                     	;# 
   355     0097                     	;# 
   356     0098                     	;# 
   357     0099                     	;# 
   358     009A                     	;# 
   359     009B                     	;# 
   360     009C                     	;# 
   361     009D                     	;# 
   362     009E                     	;# 
   363     009F                     	;# 
   364     0105                     	;# 
   365     0107                     	;# 
   366     0108                     	;# 
   367     0109                     	;# 
   368     010C                     	;# 
   369     010C                     	;# 
   370     010D                     	;# 
   371     010E                     	;# 
   372     010F                     	;# 
   373     0185                     	;# 
   374     0187                     	;# 
   375     0188                     	;# 
   376     0189                     	;# 
   377     018C                     	;# 
   378     018D                     	;# 
   379     0000                     	;# 
   380     0001                     	;# 
   381     0002                     	;# 
   382     0003                     	;# 
   383     0004                     	;# 
   384     0005                     	;# 
   385     0006                     	;# 
   386     0007                     	;# 
   387     0008                     	;# 
   388     0009                     	;# 
   389     000A                     	;# 
   390     000B                     	;# 
   391     000C                     	;# 
   392     000D                     	;# 
   393     000E                     	;# 
   394     000E                     	;# 
   395     000F                     	;# 
   396     0010                     	;# 
   397     0011                     	;# 
   398     0012                     	;# 
   399     0013                     	;# 
   400     0014                     	;# 
   401     0015                     	;# 
   402     0015                     	;# 
   403     0016                     	;# 
   404     0017                     	;# 
   405     0018                     	;# 
   406     0019                     	;# 
   407     001A                     	;# 
   408     001B                     	;# 
   409     001B                     	;# 
   410     001C                     	;# 
   411     001D                     	;# 
   412     001E                     	;# 
   413     001F                     	;# 
   414     0081                     	;# 
   415     0085                     	;# 
   416     0086                     	;# 
   417     0087                     	;# 
   418     0088                     	;# 
   419     0089                     	;# 
   420     008C                     	;# 
   421     008D                     	;# 
   422     008E                     	;# 
   423     008F                     	;# 
   424     0090                     	;# 
   425     0091                     	;# 
   426     0092                     	;# 
   427     0093                     	;# 
   428     0093                     	;# 
   429     0093                     	;# 
   430     0094                     	;# 
   431     0095                     	;# 
   432     0096                     	;# 
   433     0097                     	;# 
   434     0098                     	;# 
   435     0099                     	;# 
   436     009A                     	;# 
   437     009B                     	;# 
   438     009C                     	;# 
   439     009D                     	;# 
   440     009E                     	;# 
   441     009F                     	;# 
   442     0105                     	;# 
   443     0107                     	;# 
   444     0108                     	;# 
   445     0109                     	;# 
   446     010C                     	;# 
   447     010C                     	;# 
   448     010D                     	;# 
   449     010E                     	;# 
   450     010F                     	;# 
   451     0185                     	;# 
   452     0187                     	;# 
   453     0188                     	;# 
   454     0189                     	;# 
   455     018C                     	;# 
   456     018D                     	;# 
   457                           
   458                           	psect	strings
   459     06D1                     __pstrings:
   460     06D1                     stringtab:
   461     06D1                     __stringtab:
   462     06D1                     stringcode:	
   463                           ;	String table - string pointers are 1 byte each
   464                           
   465     06D1                     stringdir:
   466     06D1  3006               	movlw	high stringdir
   467     06D2  008A               	movwf	10
   468     06D3  0804               	movf	4,w
   469     06D4  0A84               	incf	4,f
   470     06D5  0782               	addwf	2,f
   471     06D6                     __stringbase:
   472     06D6  3400               	retlw	0
   473     06D7                     __end_of__stringtab:
   474     06D7                     _dpowers:
   475     06D7  3401               	retlw	1
   476     06D8  3400               	retlw	0
   477     06D9  340A               	retlw	10
   478     06DA  3400               	retlw	0
   479     06DB  3464               	retlw	100
   480     06DC  3400               	retlw	0
   481     06DD  34E8               	retlw	232
   482     06DE  3403               	retlw	3
   483     06DF  3410               	retlw	16
   484     06E0  3427               	retlw	39
   485     06E1                     __end_of_dpowers:
   486     0008                     _PORTDbits	set	8
   487     0009                     _PORTE	set	9
   488     0008                     _PORTD	set	8
   489     0006                     _PORTBbits	set	6
   490     0001                     _TMR0	set	1
   491     000B                     _INTCONbits	set	11
   492     001F                     _ADCON0bits	set	31
   493     001E                     _ADRESH	set	30
   494     001B                     _CCPR2L	set	27
   495     001D                     _CCP2CONbits	set	29
   496     0012                     _T2CONbits	set	18
   497     000C                     _PIR1bits	set	12
   498     0015                     _CCPR1L	set	21
   499     0017                     _CCP1CONbits	set	23
   500     0013                     _SSPBUF	set	19
   501     0014                     _SSPCON	set	20
   502     0043                     _RD3	set	67
   503     0047                     _RD7	set	71
   504     0046                     _RD6	set	70
   505     0045                     _RD5	set	69
   506     0044                     _RD4	set	68
   507     0031                     _RB1	set	49
   508     0030                     _RB0	set	48
   509     0063                     _SSPIF	set	99
   510     005E                     _PEIE	set	94
   511     005F                     _GIE	set	95
   512     008C                     _PIE1bits	set	140
   513     009F                     _ADCON1bits	set	159
   514     008F                     _OSCCONbits	set	143
   515     0095                     _WPUB	set	149
   516     0081                     _OPTION_REGbits	set	129
   517     0088                     _TRISD	set	136
   518     0086                     _TRISB	set	134
   519     0085                     _TRISA	set	133
   520     008F                     _OSCCON	set	143
   521     0092                     _PR2	set	146
   522     0091                     _SSPCON2bits	set	145
   523     0087                     _TRISCbits	set	135
   524     0094                     _SSPSTAT	set	148
   525     0093                     _SSPADD	set	147
   526     0091                     _SSPCON2	set	145
   527     0463                     _SSPIE	set	1123
   528     043C                     _TRISC4	set	1084
   529     043B                     _TRISC3	set	1083
   530     0189                     _ANSELH	set	393
   531     0188                     _ANSEL	set	392
   532     06E1                     STR_1:
   533     06E1  3425               	retlw	37	;'%'
   534     06E2  3475               	retlw	117	;'u'
   535     06E3  3400               	retlw	0
   536     06E1                     
   537                           	psect	cinit
   538     0013                     start_initialization:	
   539                           ; #config settings
   540                           
   541     0013                     __initialization:
   542                           
   543                           ; Clear objects allocated to BANK0
   544     0013  1383               	bcf	3,7	;select IRP bank0
   545     0014  3047               	movlw	low __pbssBANK0
   546     0015  0084               	movwf	4
   547     0016  3060               	movlw	low (__pbssBANK0+25)
   548     0017  120A  118A  26E4  120A  118A  	fcall	clear_ram0
   549                           
   550                           ; Clear objects allocated to BANK1
   551     001C  1683               	bsf	3,5	;RP0=1, select bank1
   552     001D  1303               	bcf	3,6	;RP1=0, select bank1
   553     001E  01DF               	clrf	__pbssBANK1& (0+127)
   554     001F  01E0               	clrf	(__pbssBANK1+1)& (0+127)
   555     0020  01E1               	clrf	(__pbssBANK1+2)& (0+127)
   556     0021  01E2               	clrf	(__pbssBANK1+3)& (0+127)
   557     0022                     end_of_initialization:	
   558                           ;End of C runtime variable initialization code
   559                           
   560     0022                     __end_of__initialization:
   561     0022  0183               	clrf	3
   562     0023  120A  118A  2826   	ljmp	_main	;jump to C main() function
   563                           
   564                           	psect	bssBANK0
   565     0047                     __pbssBANK0:
   566     0047                     _val:
   567     0047                     	ds	4
   568     004B                     _periodo_ms:
   569     004B                     	ds	4
   570     004F                     _c:
   571     004F                     	ds	2
   572     0051                     _valprom:
   573     0051                     	ds	2
   574     0053                     _valpot1:
   575     0053                     	ds	2
   576     0055                     _valpot0:
   577     0055                     	ds	2
   578     0057                     _valadr:
   579     0057                     	ds	2
   580     0059                     _chn:
   581     0059                     	ds	2
   582     005B                     _chn2:
   583     005B                     	ds	2
   584     005D                     _chn1:
   585     005D                     	ds	2
   586     005F                     _a:
   587     005F                     	ds	1
   588                           
   589                           	psect	bssBANK1
   590     00DF                     __pbssBANK1:
   591     00DF                     _i:
   592     00DF                     	ds	2
   593     00E1                     _rpm:
   594     00E1                     	ds	1
   595     00E2                     _b:
   596     00E2                     	ds	1
   597                           
   598                           	psect	clrtext
   599     06E4                     clear_ram0:	
   600                           ;	Called with FSR containing the base address, and
   601                           ;	W with the last address+1
   602                           
   603     06E4  0064               	clrwdt	;clear the watchdog before getting into this loop
   604     06E5                     clrloop0:
   605     06E5  0180               	clrf	0	;clear RAM location pointed to by FSR
   606     06E6  0A84               	incf	4,f	;increment pointer
   607     06E7  0604               	xorwf	4,w	;XOR with final address
   608     06E8  1903               	btfsc	3,2	;have we reached the end yet?
   609     06E9  3400               	retlw	0	;all done for this memory range, return
   610     06EA  0604               	xorwf	4,w	;XOR again to restore value
   611     06EB  2EE5               	goto	clrloop0	;do the next byte
   612                           
   613                           	psect	cstackBANK1
   614     00A0                     __pcstackBANK1:
   615     00A0                     ??_main:
   616                           
   617                           ; 1 bytes @ 0x0
   618     00A0                     	ds	3
   619     00A3                     main@s:
   620                           
   621                           ; 20 bytes @ 0x3
   622     00A3                     	ds	20
   623     00B7                     main@s2:
   624                           
   625                           ; 20 bytes @ 0x17
   626     00B7                     	ds	20
   627     00CB                     main@s3:
   628                           
   629                           ; 20 bytes @ 0x2B
   630     00CB                     	ds	20
   631                           
   632                           	psect	cstackCOMMON
   633     0070                     __pcstackCOMMON:
   634     0070                     ?_setup:
   635     0070                     ?_Lcd_Init:	
   636                           ; 1 bytes @ 0x0
   637                           
   638     0070                     ?_Lcd_Write_String:	
   639                           ; 1 bytes @ 0x0
   640                           
   641     0070                     ?_isr:	
   642                           ; 1 bytes @ 0x0
   643                           
   644     0070                     ?_main:	
   645                           ; 1 bytes @ 0x0
   646                           
   647     0070                     ?_Lcd_Port:	
   648                           ; 1 bytes @ 0x0
   649                           
   650     0070                     ?_Lcd_Cmd:	
   651                           ; 1 bytes @ 0x0
   652                           
   653     0070                     ?_Lcd_Write_Char:	
   654                           ; 1 bytes @ 0x0
   655                           
   656     0070                     ?___awdiv:	
   657                           ; 1 bytes @ 0x0
   658                           
   659     0070                     ?___xxtofl:	
   660                           ; 2 bytes @ 0x0
   661                           
   662     0070                     ___awdiv@divisor:	
   663                           ; 4 bytes @ 0x0
   664                           
   665     0070                     ___xxtofl@val:	
   666                           ; 2 bytes @ 0x0
   667                           
   668                           
   669                           ; 4 bytes @ 0x0
   670     0070                     	ds	2
   671     0072                     ___awdiv@dividend:
   672                           
   673                           ; 2 bytes @ 0x2
   674     0072                     	ds	2
   675     0074                     ??___awdiv:
   676     0074                     ??___xxtofl:	
   677                           ; 1 bytes @ 0x4
   678                           
   679     0074                     ___awdiv@counter:	
   680                           ; 1 bytes @ 0x4
   681                           
   682                           
   683                           ; 1 bytes @ 0x4
   684     0074                     	ds	1
   685     0075                     ___awdiv@sign:
   686                           
   687                           ; 1 bytes @ 0x5
   688     0075                     	ds	1
   689     0076                     ___awdiv@quotient:
   690                           
   691                           ; 2 bytes @ 0x6
   692     0076                     	ds	2
   693     0078                     ___xxtofl@sign:
   694                           
   695                           ; 1 bytes @ 0x8
   696     0078                     	ds	1
   697     0079                     ___xxtofl@exp:
   698                           
   699                           ; 1 bytes @ 0x9
   700     0079                     	ds	1
   701     007A                     ___xxtofl@arg:
   702                           
   703                           ; 4 bytes @ 0xA
   704     007A                     	ds	4
   705                           
   706                           	psect	cstackBANK0
   707     0020                     __pcstackBANK0:
   708     0020                     ?_PWM_duty:
   709     0020                     PWM_duty@chn:	
   710                           ; 1 bytes @ 0x0
   711                           
   712                           
   713                           ; 2 bytes @ 0x0
   714     0020                     	ds	2
   715     0022                     PWM_duty@duty:
   716                           
   717                           ; 4 bytes @ 0x2
   718     0022                     	ds	4
   719     0026                     ??_PWM_duty:
   720                           
   721                           ; 1 bytes @ 0x6
   722     0026                     	ds	1
   723     0027                     ??_isr:
   724                           
   725                           ; 1 bytes @ 0x7
   726     0027                     	ds	7
   727     002E                     ??_setup:
   728     002E                     ??_Lcd_Port:	
   729                           ; 1 bytes @ 0xE
   730                           
   731     002E                     ?___lwdiv:	
   732                           ; 1 bytes @ 0xE
   733                           
   734     002E                     ?___fltol:	
   735                           ; 2 bytes @ 0xE
   736                           
   737     002E                     Lcd_Port@a:	
   738                           ; 4 bytes @ 0xE
   739                           
   740     002E                     ___lwdiv@divisor:	
   741                           ; 1 bytes @ 0xE
   742                           
   743     002E                     ___fltol@f1:	
   744                           ; 2 bytes @ 0xE
   745                           
   746                           
   747                           ; 4 bytes @ 0xE
   748     002E                     	ds	1
   749     002F                     ??_Lcd_Cmd:
   750     002F                     ??_Lcd_Write_Char:	
   751                           ; 1 bytes @ 0xF
   752                           
   753                           
   754                           ; 1 bytes @ 0xF
   755     002F                     	ds	1
   756     0030                     Lcd_Write_Char@temp:
   757     0030                     ___lwdiv@dividend:	
   758                           ; 1 bytes @ 0x10
   759                           
   760                           
   761                           ; 2 bytes @ 0x10
   762     0030                     	ds	1
   763     0031                     Lcd_Cmd@a:
   764     0031                     Lcd_Write_Char@y:	
   765                           ; 1 bytes @ 0x11
   766                           
   767                           
   768                           ; 1 bytes @ 0x11
   769     0031                     	ds	1
   770     0032                     ??_Lcd_Init:
   771     0032                     ?_Lcd_Set_Cursor:	
   772                           ; 1 bytes @ 0x12
   773                           
   774     0032                     ??___fltol:	
   775                           ; 1 bytes @ 0x12
   776                           
   777     0032                     ??___lwdiv:	
   778                           ; 1 bytes @ 0x12
   779                           
   780     0032                     Lcd_Set_Cursor@b:	
   781                           ; 1 bytes @ 0x12
   782                           
   783     0032                     Lcd_Write_Char@a:	
   784                           ; 1 bytes @ 0x12
   785                           
   786     0032                     ___lwdiv@quotient:	
   787                           ; 1 bytes @ 0x12
   788                           
   789                           
   790                           ; 2 bytes @ 0x12
   791     0032                     	ds	1
   792     0033                     ??_Lcd_Set_Cursor:
   793     0033                     ??_Lcd_Write_String:	
   794                           ; 1 bytes @ 0x13
   795                           
   796                           
   797                           ; 1 bytes @ 0x13
   798     0033                     	ds	1
   799     0034                     Lcd_Set_Cursor@a:
   800     0034                     ___lwdiv@counter:	
   801                           ; 1 bytes @ 0x14
   802                           
   803     0034                     Lcd_Write_String@i:	
   804                           ; 1 bytes @ 0x14
   805                           
   806                           
   807                           ; 2 bytes @ 0x14
   808     0034                     	ds	1
   809     0035                     ?___lwmod:
   810     0035                     Lcd_Set_Cursor@z:	
   811                           ; 2 bytes @ 0x15
   812                           
   813     0035                     ___lwmod@divisor:	
   814                           ; 1 bytes @ 0x15
   815                           
   816                           
   817                           ; 2 bytes @ 0x15
   818     0035                     	ds	1
   819     0036                     Lcd_Set_Cursor@y:
   820     0036                     Lcd_Write_String@a:	
   821                           ; 1 bytes @ 0x16
   822                           
   823     0036                     ___fltol@sign1:	
   824                           ; 1 bytes @ 0x16
   825                           
   826                           
   827                           ; 1 bytes @ 0x16
   828     0036                     	ds	1
   829     0037                     Lcd_Set_Cursor@temp:
   830     0037                     ___fltol@exp1:	
   831                           ; 1 bytes @ 0x17
   832                           
   833     0037                     ___lwmod@dividend:	
   834                           ; 1 bytes @ 0x17
   835                           
   836                           
   837                           ; 2 bytes @ 0x17
   838     0037                     	ds	1
   839     0038                     ?_PWM_init:
   840     0038                     PWM_init@chn1:	
   841                           ; 1 bytes @ 0x18
   842                           
   843                           
   844                           ; 2 bytes @ 0x18
   845     0038                     	ds	1
   846     0039                     ??___lwmod:
   847     0039                     ___lwmod@counter:	
   848                           ; 1 bytes @ 0x19
   849                           
   850                           
   851                           ; 1 bytes @ 0x19
   852     0039                     	ds	1
   853     003A                     ?_sprintf:
   854     003A                     sprintf@f:	
   855                           ; 2 bytes @ 0x1A
   856                           
   857     003A                     PWM_init@chn2:	
   858                           ; 1 bytes @ 0x1A
   859                           
   860                           
   861                           ; 2 bytes @ 0x1A
   862     003A                     	ds	2
   863     003C                     PWM_init@periodo_ms:
   864                           
   865                           ; 4 bytes @ 0x1C
   866     003C                     	ds	1
   867     003D                     ??_sprintf:
   868                           
   869                           ; 1 bytes @ 0x1D
   870     003D                     	ds	3
   871     0040                     ??_PWM_init:
   872     0040                     sprintf@flag:	
   873                           ; 1 bytes @ 0x20
   874                           
   875                           
   876                           ; 1 bytes @ 0x20
   877     0040                     	ds	1
   878     0041                     sprintf@ap:
   879                           
   880                           ; 1 bytes @ 0x21
   881     0041                     	ds	1
   882     0042                     sprintf@val:
   883                           
   884                           ; 2 bytes @ 0x22
   885     0042                     	ds	2
   886     0044                     sprintf@prec:
   887                           
   888                           ; 1 bytes @ 0x24
   889     0044                     	ds	1
   890     0045                     sprintf@sp:
   891                           
   892                           ; 1 bytes @ 0x25
   893     0045                     	ds	1
   894     0046                     sprintf@c:
   895                           
   896                           ; 1 bytes @ 0x26
   897     0046                     	ds	1
   898                           
   899                           	psect	maintext
   900     0026                     __pmaintext:	
   901 ;;
   902 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   903 ;;
   904 ;; *************** function _main *****************
   905 ;; Defined at:
   906 ;;		line 104 in file "PWMprueba1.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;		None
   909 ;; Auto vars:     Size  Location     Type
   910 ;;  s3             20   43[BANK1 ] unsigned char [20]
   911 ;;  s2             20   23[BANK1 ] unsigned char [20]
   912 ;;  s              20    3[BANK1 ] unsigned char [20]
   913 ;;  text            9    0        unsigned char [9]
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   918 ;; Tracked objects:
   919 ;;		On entry : B00/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   923 ;;      Params:         0       0       0       0       0
   924 ;;      Locals:         0       0      60       0       0
   925 ;;      Temps:          0       0       3       0       0
   926 ;;      Totals:         0       0      63       0       0
   927 ;;Total ram usage:       63 bytes
   928 ;; Hardware stack levels required when called: 5
   929 ;; This function calls:
   930 ;;		_Lcd_Init
   931 ;;		_Lcd_Set_Cursor
   932 ;;		_Lcd_Write_String
   933 ;;		_PWM_init
   934 ;;		_setup
   935 ;;		_sprintf
   936 ;; This function is called by:
   937 ;;		Startup code after reset
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941     0026                     _main:	
   942                           ;psect for function _main
   943                           
   944     0026                     l2000:	
   945                           ;incstack = 0
   946                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   947                           
   948                           
   949                           ;PWMprueba1.c: 106:     setup();
   950     0026  120A  118A  25A6  120A  118A  	fcall	_setup
   951     002B                     l2002:
   952                           
   953                           ;PWMprueba1.c: 107:     OSCCON = 0x70;
   954     002B  3070               	movlw	112
   955     002C  1683               	bsf	3,5	;RP0=1, select bank1
   956     002D  1303               	bcf	3,6	;RP1=0, select bank1
   957     002E  008F               	movwf	15	;volatile
   958     002F                     l2004:
   959                           
   960                           ;PWMprueba1.c: 108:      PWM_init (0,0,255);
   961     002F  3000               	movlw	0
   962     0030  1283               	bcf	3,5	;RP0=0, select bank0
   963     0031  1303               	bcf	3,6	;RP1=0, select bank0
   964     0032  00B8               	movwf	PWM_init@chn1
   965     0033  00B9               	movwf	PWM_init@chn1+1
   966     0034  3000               	movlw	0
   967     0035  00BA               	movwf	PWM_init@chn2
   968     0036  00BB               	movwf	PWM_init@chn2+1
   969     0037  3043               	movlw	67
   970     0038  00BF               	movwf	PWM_init@periodo_ms+3
   971     0039  307F               	movlw	127
   972     003A  00BE               	movwf	PWM_init@periodo_ms+2
   973     003B  3000               	movlw	0
   974     003C  00BD               	movwf	PWM_init@periodo_ms+1
   975     003D  3000               	movlw	0
   976     003E  00BC               	movwf	PWM_init@periodo_ms
   977     003F  120A  118A  2561  120A  118A  	fcall	_PWM_init
   978     0044                     l2006:
   979                           
   980                           ;PWMprueba1.c: 109:     ADCON0bits.GO =1;
   981     0044  1283               	bcf	3,5	;RP0=0, select bank0
   982     0045  1303               	bcf	3,6	;RP1=0, select bank0
   983     0046  149F               	bsf	31,1	;volatile
   984     0047                     l2008:
   985                           
   986                           ;PWMprueba1.c: 111:   _delay((unsigned long)((500)*(8000000/4000.0)));
   987     0047  3006               	movlw	6
   988     0048  1683               	bsf	3,5	;RP0=1, select bank1
   989     0049  1303               	bcf	3,6	;RP1=0, select bank1
   990     004A  00A2               	movwf	(??_main^(0+128)+2)
   991     004B  3013               	movlw	19
   992     004C  00A1               	movwf	(??_main^(0+128)+1)
   993     004D  30AD               	movlw	173
   994     004E  00A0               	movwf	??_main^(0+128)
   995     004F                     u1657:
   996     004F  0BA0               	decfsz	??_main^(0+128),f
   997     0050  284F               	goto	u1657
   998     0051  0BA1               	decfsz	(??_main^(0+128)+1),f
   999     0052  284F               	goto	u1657
  1000     0053  0BA2               	decfsz	(??_main^(0+128)+2),f
  1001     0054  284F               	goto	u1657
  1002     0055                     l2010:
  1003                           
  1004                           ;PWMprueba1.c: 114:  Lcd_Init();
  1005     0055  120A  118A  246D  120A  118A  	fcall	_Lcd_Init
  1006     005A                     l2012:
  1007                           
  1008                           ;PWMprueba1.c: 115:  ADCON0bits.GO =1;
  1009     005A  1283               	bcf	3,5	;RP0=0, select bank0
  1010     005B  1303               	bcf	3,6	;RP1=0, select bank0
  1011     005C  149F               	bsf	31,1	;volatile
  1012     005D                     l2014:
  1013                           
  1014                           ;PWMprueba1.c: 116:  char text[9];;PWMprueba1.c: 117:     i=0;
  1015     005D  1683               	bsf	3,5	;RP0=1, select bank1
  1016     005E  1303               	bcf	3,6	;RP1=0, select bank1
  1017     005F  01DF               	clrf	_i^(0+128)
  1018     0060  01E0               	clrf	(_i+1)^(0+128)
  1019     0061                     l2016:
  1020                           
  1021                           ;PWMprueba1.c: 120:     {;PWMprueba1.c: 122:        if (ADCON0bits.GO ==0){
  1022     0061  1283               	bcf	3,5	;RP0=0, select bank0
  1023     0062  1303               	bcf	3,6	;RP1=0, select bank0
  1024     0063  189F               	btfsc	31,1	;volatile
  1025     0064  2866               	goto	u1591
  1026     0065  2867               	goto	u1590
  1027     0066                     u1591:
  1028     0066  2892               	goto	l198
  1029     0067                     u1590:
  1030     0067                     l2018:
  1031                           
  1032                           ;PWMprueba1.c: 123:            for (i=0;i<=2;i++){
  1033     0067  1683               	bsf	3,5	;RP0=1, select bank1
  1034     0068  1303               	bcf	3,6	;RP1=0, select bank1
  1035     0069  01DF               	clrf	_i^(0+128)
  1036     006A  01E0               	clrf	(_i+1)^(0+128)
  1037     006B                     l2024:
  1038                           
  1039                           ;PWMprueba1.c: 124:            ADCON0bits.CHS = i;
  1040     006B  1683               	bsf	3,5	;RP0=1, select bank1
  1041     006C  1303               	bcf	3,6	;RP1=0, select bank1
  1042     006D  085F               	movf	_i^(0+128),w
  1043     006E  00A0               	movwf	??_main^(0+128)
  1044     006F  0DA0               	rlf	??_main^(0+128),f
  1045     0070  0DA0               	rlf	??_main^(0+128),f
  1046     0071  1283               	bcf	3,5	;RP0=0, select bank0
  1047     0072  1303               	bcf	3,6	;RP1=0, select bank0
  1048     0073  081F               	movf	31,w	;volatile
  1049     0074  1683               	bsf	3,5	;RP0=1, select bank1
  1050     0075  1303               	bcf	3,6	;RP1=0, select bank1
  1051     0076  0620               	xorwf	??_main^(0+128),w
  1052     0077  39C3               	andlw	-61
  1053     0078  0620               	xorwf	??_main^(0+128),w
  1054     0079  1283               	bcf	3,5	;RP0=0, select bank0
  1055     007A  1303               	bcf	3,6	;RP1=0, select bank0
  1056     007B  009F               	movwf	31	;volatile
  1057     007C                     l2026:
  1058                           
  1059                           ;PWMprueba1.c: 125:            ADCON0bits.GO =1;
  1060     007C  149F               	bsf	31,1	;volatile
  1061     007D                     l2028:
  1062                           
  1063                           ;PWMprueba1.c: 127:            }
  1064     007D  3001               	movlw	1
  1065     007E  1683               	bsf	3,5	;RP0=1, select bank1
  1066     007F  1303               	bcf	3,6	;RP1=0, select bank1
  1067     0080  07DF               	addwf	_i^(0+128),f
  1068     0081  1803               	skipnc
  1069     0082  0AE0               	incf	(_i+1)^(0+128),f
  1070     0083  3000               	movlw	0
  1071     0084  07E0               	addwf	(_i+1)^(0+128),f
  1072     0085                     l2030:
  1073     0085  0860               	movf	(_i+1)^(0+128),w
  1074     0086  3A80               	xorlw	128
  1075     0087  00FF               	movwf	btemp+1
  1076     0088  3080               	movlw	128
  1077     0089  027F               	subwf	btemp+1,w
  1078     008A  1D03               	skipz
  1079     008B  288E               	goto	u1605
  1080     008C  3003               	movlw	3
  1081     008D  025F               	subwf	_i^(0+128),w
  1082     008E                     u1605:
  1083     008E  1C03               	skipc
  1084     008F  2891               	goto	u1601
  1085     0090  2892               	goto	u1600
  1086     0091                     u1601:
  1087     0091  286B               	goto	l2024
  1088     0092                     u1600:
  1089     0092                     l198:	
  1090                           ;PWMprueba1.c: 130:        }
  1091                           
  1092                           
  1093                           ;PWMprueba1.c: 132:        if (!PORTBbits.RB0){
  1094     0092  1283               	bcf	3,5	;RP0=0, select bank0
  1095     0093  1303               	bcf	3,6	;RP1=0, select bank0
  1096     0094  1806               	btfsc	6,0	;volatile
  1097     0095  2897               	goto	u1611
  1098     0096  2898               	goto	u1610
  1099     0097                     u1611:
  1100     0097  28A0               	goto	l2036
  1101     0098                     u1610:
  1102     0098                     l202:
  1103     0098  1C06               	btfss	6,0	;volatile
  1104     0099  289B               	goto	u1621
  1105     009A  289C               	goto	u1620
  1106     009B                     u1621:
  1107     009B  2898               	goto	l202
  1108     009C                     u1620:
  1109     009C                     l2034:
  1110                           
  1111                           ;PWMprueba1.c: 134:                 a ++;
  1112     009C  3001               	movlw	1
  1113     009D  00FF               	movwf	btemp+1
  1114     009E  087F               	movf	btemp+1,w
  1115     009F  07DF               	addwf	_a,f
  1116     00A0                     l2036:
  1117                           
  1118                           ;PWMprueba1.c: 137:     if (!PORTBbits.RB1){
  1119     00A0  1886               	btfsc	6,1	;volatile
  1120     00A1  28A3               	goto	u1631
  1121     00A2  28A4               	goto	u1630
  1122     00A3                     u1631:
  1123     00A3  28AE               	goto	l2042
  1124     00A4                     u1630:
  1125     00A4                     l206:
  1126     00A4  1C86               	btfss	6,1	;volatile
  1127     00A5  28A7               	goto	u1641
  1128     00A6  28A8               	goto	u1640
  1129     00A7                     u1641:
  1130     00A7  28A4               	goto	l206
  1131     00A8                     u1640:
  1132     00A8                     l2040:
  1133                           
  1134                           ;PWMprueba1.c: 139:                 b ++;
  1135     00A8  3001               	movlw	1
  1136     00A9  00FF               	movwf	btemp+1
  1137     00AA  087F               	movf	btemp+1,w
  1138     00AB  1683               	bsf	3,5	;RP0=1, select bank1
  1139     00AC  1303               	bcf	3,6	;RP1=0, select bank1
  1140     00AD  07E2               	addwf	_b^(0+128),f
  1141     00AE                     l2042:
  1142                           
  1143                           ;PWMprueba1.c: 144:        char s[20];;PWMprueba1.c: 145:        char s2[20];;PWMprueba1
      +                          .c: 146:        char s3[20];;PWMprueba1.c: 147:         sprintf(s, "%u", rpm);
  1144     00AE  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1145     00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1146     00B0  00BA               	movwf	sprintf@f
  1147     00B1  1683               	bsf	3,5	;RP0=1, select bank1
  1148     00B2  1303               	bcf	3,6	;RP1=0, select bank1
  1149     00B3  0861               	movf	_rpm^(0+128),w
  1150     00B4  00A0               	movwf	??_main^(0+128)
  1151     00B5  01A1               	clrf	(??_main^(0+128)+1)
  1152     00B6  0820               	movf	??_main^(0+128),w
  1153     00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1154     00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1155     00B9  00BB               	movwf	?_sprintf+1
  1156     00BA  1683               	bsf	3,5	;RP0=1, select bank1
  1157     00BB  1303               	bcf	3,6	;RP1=0, select bank1
  1158     00BC  0821               	movf	(??_main+1)^(0+128),w
  1159     00BD  1283               	bcf	3,5	;RP0=0, select bank0
  1160     00BE  1303               	bcf	3,6	;RP1=0, select bank0
  1161     00BF  00BC               	movwf	?_sprintf+2
  1162     00C0  30A3               	movlw	(low (main@s| 0))& (0+255)
  1163     00C1  120A  118A  2213  120A  118A  	fcall	_sprintf
  1164     00C6                     l2044:
  1165                           
  1166                           ;PWMprueba1.c: 148:         sprintf(s2, "%u", a);
  1167     00C6  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1168     00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1169     00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1170     00C9  00BA               	movwf	sprintf@f
  1171     00CA  085F               	movf	_a,w
  1172     00CB  1683               	bsf	3,5	;RP0=1, select bank1
  1173     00CC  1303               	bcf	3,6	;RP1=0, select bank1
  1174     00CD  00A0               	movwf	??_main^(0+128)
  1175     00CE  01A1               	clrf	(??_main^(0+128)+1)
  1176     00CF  0820               	movf	??_main^(0+128),w
  1177     00D0  1283               	bcf	3,5	;RP0=0, select bank0
  1178     00D1  1303               	bcf	3,6	;RP1=0, select bank0
  1179     00D2  00BB               	movwf	?_sprintf+1
  1180     00D3  1683               	bsf	3,5	;RP0=1, select bank1
  1181     00D4  1303               	bcf	3,6	;RP1=0, select bank1
  1182     00D5  0821               	movf	(??_main+1)^(0+128),w
  1183     00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1184     00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1185     00D8  00BC               	movwf	?_sprintf+2
  1186     00D9  30B7               	movlw	(low (main@s2| 0))& (0+255)
  1187     00DA  120A  118A  2213  120A  118A  	fcall	_sprintf
  1188     00DF                     l2046:
  1189                           
  1190                           ;PWMprueba1.c: 149:         sprintf(s3, "%u", b);
  1191     00DF  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1192     00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1193     00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1194     00E2  00BA               	movwf	sprintf@f
  1195     00E3  1683               	bsf	3,5	;RP0=1, select bank1
  1196     00E4  1303               	bcf	3,6	;RP1=0, select bank1
  1197     00E5  0862               	movf	_b^(0+128),w
  1198     00E6  00A0               	movwf	??_main^(0+128)
  1199     00E7  01A1               	clrf	(??_main^(0+128)+1)
  1200     00E8  0820               	movf	??_main^(0+128),w
  1201     00E9  1283               	bcf	3,5	;RP0=0, select bank0
  1202     00EA  1303               	bcf	3,6	;RP1=0, select bank0
  1203     00EB  00BB               	movwf	?_sprintf+1
  1204     00EC  1683               	bsf	3,5	;RP0=1, select bank1
  1205     00ED  1303               	bcf	3,6	;RP1=0, select bank1
  1206     00EE  0821               	movf	(??_main+1)^(0+128),w
  1207     00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1208     00F0  1303               	bcf	3,6	;RP1=0, select bank0
  1209     00F1  00BC               	movwf	?_sprintf+2
  1210     00F2  30CB               	movlw	(low (main@s3| 0))& (0+255)
  1211     00F3  120A  118A  2213  120A  118A  	fcall	_sprintf
  1212     00F8                     l2048:
  1213                           
  1214                           ;PWMprueba1.c: 150:     Lcd_Set_Cursor(1,1);
  1215     00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1216     00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1217     00FA  01B2               	clrf	Lcd_Set_Cursor@b
  1218     00FB  0AB2               	incf	Lcd_Set_Cursor@b,f
  1219     00FC  3001               	movlw	1
  1220     00FD  120A  118A  24CF  120A  118A  	fcall	_Lcd_Set_Cursor
  1221     0102                     l2050:
  1222                           
  1223                           ;PWMprueba1.c: 151:     Lcd_Write_String(s);
  1224     0102  30A3               	movlw	(low (main@s| 0))& (0+255)
  1225     0103  120A  118A  265A  120A  118A  	fcall	_Lcd_Write_String
  1226     0108                     l2052:
  1227                           
  1228                           ;PWMprueba1.c: 152:     Lcd_Set_Cursor(1,4);
  1229     0108  3004               	movlw	4
  1230     0109  1283               	bcf	3,5	;RP0=0, select bank0
  1231     010A  1303               	bcf	3,6	;RP1=0, select bank0
  1232     010B  00B2               	movwf	Lcd_Set_Cursor@b
  1233     010C  3001               	movlw	1
  1234     010D  120A  118A  24CF  120A  118A  	fcall	_Lcd_Set_Cursor
  1235     0112                     l2054:
  1236                           
  1237                           ;PWMprueba1.c: 153:     Lcd_Write_String(s2);
  1238     0112  30B7               	movlw	(low (main@s2| 0))& (0+255)
  1239     0113  120A  118A  265A  120A  118A  	fcall	_Lcd_Write_String
  1240     0118                     l2056:
  1241                           
  1242                           ;PWMprueba1.c: 154:     Lcd_Set_Cursor(1,8);
  1243     0118  3008               	movlw	8
  1244     0119  1283               	bcf	3,5	;RP0=0, select bank0
  1245     011A  1303               	bcf	3,6	;RP1=0, select bank0
  1246     011B  00B2               	movwf	Lcd_Set_Cursor@b
  1247     011C  3001               	movlw	1
  1248     011D  120A  118A  24CF  120A  118A  	fcall	_Lcd_Set_Cursor
  1249     0122                     l2058:
  1250                           
  1251                           ;PWMprueba1.c: 155:     Lcd_Write_String(s3);
  1252     0122  30CB               	movlw	(low (main@s3| 0))& (0+255)
  1253     0123  120A  118A  265A  120A  118A  	fcall	_Lcd_Write_String
  1254     0128  2861               	goto	l2016
  1255     0129  120A  118A  2810   	ljmp	start
  1256     012C                     __end_of_main:
  1257                           
  1258                           	psect	text1
  1259     0213                     __ptext1:	
  1260 ;; *************** function _sprintf *****************
  1261 ;; Defined at:
  1262 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;  sp              1    wreg     PTR unsigned char 
  1265 ;;		 -> main@s3(20), main@s2(20), main@s(20), 
  1266 ;;  f               1   26[BANK0 ] PTR const unsigned char 
  1267 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;  sp              1   37[BANK0 ] PTR unsigned char 
  1270 ;;		 -> main@s3(20), main@s2(20), main@s(20), 
  1271 ;;  tmpval          4    0        struct .
  1272 ;;  val             2   34[BANK0 ] unsigned int 
  1273 ;;  cp              2    0        PTR const unsigned char 
  1274 ;;  len             2    0        unsigned int 
  1275 ;;  c               1   38[BANK0 ] unsigned char 
  1276 ;;  prec            1   36[BANK0 ] char 
  1277 ;;  ap              1   33[BANK0 ] PTR void [1]
  1278 ;;		 -> ?_sprintf(2), 
  1279 ;;  flag            1   32[BANK0 ] unsigned char 
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  2   26[BANK0 ] int 
  1282 ;; Registers used:
  1283 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1289 ;;      Params:         0       3       0       0       0
  1290 ;;      Locals:         0       7       0       0       0
  1291 ;;      Temps:          0       3       0       0       0
  1292 ;;      Totals:         0      13       0       0       0
  1293 ;;Total ram usage:       13 bytes
  1294 ;; Hardware stack levels used: 1
  1295 ;; Hardware stack levels required when called: 3
  1296 ;; This function calls:
  1297 ;;		___lwdiv
  1298 ;;		___lwmod
  1299 ;; This function is called by:
  1300 ;;		_main
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304     0213                     _sprintf:	
  1305                           ;psect for function _sprintf
  1306                           
  1307                           
  1308                           ;incstack = 0
  1309                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1310                           ;sprintf@sp stored from wreg
  1311     0213  1283               	bcf	3,5	;RP0=0, select bank0
  1312     0214  1303               	bcf	3,6	;RP1=0, select bank0
  1313     0215  00C5               	movwf	sprintf@sp
  1314     0216                     l1700:
  1315                           
  1316                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1317     0216  303B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1318     0217  00C1               	movwf	sprintf@ap
  1319                           
  1320                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1321     0218  2AC1               	goto	l1744
  1322     0219                     l1702:
  1323                           
  1324                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1325     0219  3025               	movlw	37
  1326     021A  0646               	xorwf	sprintf@c,w
  1327     021B  1903               	btfsc	3,2
  1328     021C  2A1E               	goto	u1121
  1329     021D  2A1F               	goto	u1120
  1330     021E                     u1121:
  1331     021E  2A29               	goto	l1708
  1332     021F                     u1120:
  1333     021F                     l1704:
  1334                           
  1335                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1336     021F  0845               	movf	sprintf@sp,w
  1337     0220  0084               	movwf	4
  1338     0221  0846               	movf	sprintf@c,w
  1339     0222  1383               	bcf	3,7	;select IRP bank0
  1340     0223  0080               	movwf	0
  1341     0224                     l1706:
  1342     0224  3001               	movlw	1
  1343     0225  00FF               	movwf	btemp+1
  1344     0226  087F               	movf	btemp+1,w
  1345     0227  07C5               	addwf	sprintf@sp,f
  1346                           
  1347                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  1348     0228  2AC1               	goto	l1744
  1349     0229                     l1708:
  1350                           
  1351                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1352     0229  01C0               	clrf	sprintf@flag
  1353                           
  1354                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1355     022A  2A30               	goto	l1714
  1356     022B                     l1710:
  1357                           
  1358                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1359     022B  30C0               	movlw	192
  1360     022C  00FF               	movwf	btemp+1
  1361     022D  087F               	movf	btemp+1,w
  1362     022E  04C0               	iorwf	sprintf@flag,f
  1363                           
  1364                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 845:    break;
  1365     022F  2A4A               	goto	l1716
  1366     0230                     l1714:
  1367     0230  3001               	movlw	1
  1368     0231  07BA               	addwf	sprintf@f,f
  1369     0232  30FF               	movlw	-1
  1370     0233  073A               	addwf	sprintf@f,w
  1371     0234  0084               	movwf	4
  1372     0235  120A  118A  26D1  120A  118A  	fcall	stringdir
  1373     023A  00C6               	movwf	sprintf@c
  1374     023B  00BD               	movwf	??_sprintf
  1375     023C  01BE               	clrf	??_sprintf+1
  1376                           
  1377                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1378                           ; Switch size 1, requested type "simple"
  1379                           ; Number of cases is 1, Range of values is 0 to 0
  1380                           ; switch strategies available:
  1381                           ; Name         Instructions Cycles
  1382                           ; simple_byte            4     3 (average)
  1383                           ; direct_byte           11     8 (fixed)
  1384                           ; jumptable            260     6 (fixed)
  1385                           ;	Chosen strategy is simple_byte
  1386     023D  083E               	movf	??_sprintf+1,w
  1387     023E  3A00               	xorlw	0	; case 0
  1388     023F  1903               	skipnz
  1389     0240  2A42               	goto	l2080
  1390     0241  2AC1               	goto	l1744
  1391     0242                     l2080:
  1392                           
  1393                           ; Switch size 1, requested type "simple"
  1394                           ; Number of cases is 2, Range of values is 0 to 117
  1395                           ; switch strategies available:
  1396                           ; Name         Instructions Cycles
  1397                           ; simple_byte            7     4 (average)
  1398                           ; jumptable            260     6 (fixed)
  1399                           ;	Chosen strategy is simple_byte
  1400     0242  083D               	movf	??_sprintf,w
  1401     0243  3A00               	xorlw	0	; case 0
  1402     0244  1903               	skipnz
  1403     0245  2AD1               	goto	l1746
  1404     0246  3A75               	xorlw	117	; case 117
  1405     0247  1903               	skipnz
  1406     0248  2A2B               	goto	l1710
  1407     0249  2AC1               	goto	l1744
  1408     024A                     l1716:
  1409                           
  1410                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1411     024A  0841               	movf	sprintf@ap,w
  1412     024B  0084               	movwf	4
  1413     024C  1383               	bcf	3,7	;select IRP bank0
  1414     024D  0800               	movf	0,w
  1415     024E  00C2               	movwf	sprintf@val
  1416     024F  0A84               	incf	4,f
  1417     0250  0800               	movf	0,w
  1418     0251  00C3               	movwf	sprintf@val+1
  1419     0252                     l1718:
  1420     0252  3002               	movlw	2
  1421     0253  00FF               	movwf	btemp+1
  1422     0254  087F               	movf	btemp+1,w
  1423     0255  07C1               	addwf	sprintf@ap,f
  1424     0256                     l1720:
  1425                           
  1426                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1427     0256  01C6               	clrf	sprintf@c
  1428     0257  0AC6               	incf	sprintf@c,f
  1429     0258                     l1726:
  1430                           
  1431                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1432     0258  0846               	movf	sprintf@c,w
  1433     0259  00BD               	movwf	??_sprintf
  1434     025A  073D               	addwf	??_sprintf,w
  1435     025B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1436     025C  0084               	movwf	4
  1437     025D  120A  118A  26D1  120A  118A  	fcall	stringdir
  1438     0262  00BE               	movwf	??_sprintf+1
  1439     0263  120A  118A  26D1  120A  118A  	fcall	stringdir
  1440     0268  00BF               	movwf	??_sprintf+2
  1441     0269  083F               	movf	??_sprintf+2,w
  1442     026A  0243               	subwf	sprintf@val+1,w
  1443     026B  1D03               	skipz
  1444     026C  2A6F               	goto	u1135
  1445     026D  083E               	movf	??_sprintf+1,w
  1446     026E  0242               	subwf	sprintf@val,w
  1447     026F                     u1135:
  1448     026F  1803               	skipnc
  1449     0270  2A72               	goto	u1131
  1450     0271  2A73               	goto	u1130
  1451     0272                     u1131:
  1452     0272  2A74               	goto	l1730
  1453     0273                     u1130:
  1454     0273  2A7E               	goto	l1734
  1455     0274                     l1730:
  1456     0274  3001               	movlw	1
  1457     0275  00FF               	movwf	btemp+1
  1458     0276  087F               	movf	btemp+1,w
  1459     0277  07C6               	addwf	sprintf@c,f
  1460     0278                     l1732:
  1461     0278  3005               	movlw	5
  1462     0279  0646               	xorwf	sprintf@c,w
  1463     027A  1D03               	btfss	3,2
  1464     027B  2A7D               	goto	u1141
  1465     027C  2A7E               	goto	u1140
  1466     027D                     u1141:
  1467     027D  2A58               	goto	l1726
  1468     027E                     u1140:
  1469     027E                     l1734:
  1470                           
  1471                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1472     027E  0846               	movf	sprintf@c,w
  1473     027F  00C4               	movwf	sprintf@prec
  1474                           
  1475                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1476     0280  2AB8               	goto	l1742
  1477     0281                     l1736:
  1478                           
  1479                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1480     0281  300A               	movlw	10
  1481     0282  00B5               	movwf	___lwmod@divisor
  1482     0283  3000               	movlw	0
  1483     0284  00B6               	movwf	___lwmod@divisor+1
  1484     0285  0844               	movf	sprintf@prec,w
  1485     0286  00BD               	movwf	??_sprintf
  1486     0287  073D               	addwf	??_sprintf,w
  1487     0288  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1488     0289  0084               	movwf	4
  1489     028A  120A  118A  26D1  120A  118A  	fcall	stringdir
  1490     028F  00AE               	movwf	___lwdiv@divisor
  1491     0290  120A  118A  26D1  120A  118A  	fcall	stringdir
  1492     0295  00AF               	movwf	___lwdiv@divisor+1
  1493     0296  0843               	movf	sprintf@val+1,w
  1494     0297  00B1               	movwf	___lwdiv@dividend+1
  1495     0298  0842               	movf	sprintf@val,w
  1496     0299  00B0               	movwf	___lwdiv@dividend
  1497     029A  120A  118A  251B  120A  118A  	fcall	___lwdiv
  1498     029F  1283               	bcf	3,5	;RP0=0, select bank0
  1499     02A0  1303               	bcf	3,6	;RP1=0, select bank0
  1500     02A1  082F               	movf	?___lwdiv+1,w
  1501     02A2  00B8               	movwf	___lwmod@dividend+1
  1502     02A3  082E               	movf	?___lwdiv,w
  1503     02A4  00B7               	movwf	___lwmod@dividend
  1504     02A5  120A  118A  25E5  120A  118A  	fcall	___lwmod
  1505     02AA  1283               	bcf	3,5	;RP0=0, select bank0
  1506     02AB  1303               	bcf	3,6	;RP1=0, select bank0
  1507     02AC  0835               	movf	?___lwmod,w
  1508     02AD  3E30               	addlw	48
  1509     02AE  00C6               	movwf	sprintf@c
  1510     02AF                     l1738:
  1511                           
  1512                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1513     02AF  0845               	movf	sprintf@sp,w
  1514     02B0  0084               	movwf	4
  1515     02B1  0846               	movf	sprintf@c,w
  1516     02B2  1383               	bcf	3,7	;select IRP bank0
  1517     02B3  0080               	movwf	0
  1518     02B4                     l1740:
  1519     02B4  3001               	movlw	1
  1520     02B5  00FF               	movwf	btemp+1
  1521     02B6  087F               	movf	btemp+1,w
  1522     02B7  07C5               	addwf	sprintf@sp,f
  1523     02B8                     l1742:
  1524                           
  1525                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1526     02B8  30FF               	movlw	255
  1527     02B9  00FF               	movwf	btemp+1
  1528     02BA  087F               	movf	btemp+1,w
  1529     02BB  07C4               	addwf	sprintf@prec,f
  1530     02BC  0A44               	incf	sprintf@prec,w
  1531     02BD  1D03               	btfss	3,2
  1532     02BE  2AC0               	goto	u1151
  1533     02BF  2AC1               	goto	u1150
  1534     02C0                     u1151:
  1535     02C0  2A81               	goto	l1736
  1536     02C1                     u1150:
  1537     02C1                     l1744:
  1538                           
  1539                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1540     02C1  3001               	movlw	1
  1541     02C2  07BA               	addwf	sprintf@f,f
  1542     02C3  30FF               	movlw	-1
  1543     02C4  073A               	addwf	sprintf@f,w
  1544     02C5  0084               	movwf	4
  1545     02C6  120A  118A  26D1  120A  118A  	fcall	stringdir
  1546     02CB  00C6               	movwf	sprintf@c
  1547     02CC  0846               	movf	sprintf@c,w
  1548     02CD  1D03               	btfss	3,2
  1549     02CE  2AD0               	goto	u1161
  1550     02CF  2AD1               	goto	u1160
  1551     02D0                     u1161:
  1552     02D0  2A19               	goto	l1702
  1553     02D1                     u1160:
  1554     02D1                     l1746:
  1555                           
  1556                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1557     02D1  0845               	movf	sprintf@sp,w
  1558     02D2  0084               	movwf	4
  1559     02D3  1383               	bcf	3,7	;select IRP bank0
  1560     02D4  0180               	clrf	0
  1561     02D5                     l376:
  1562     02D5  0008               	return
  1563     02D6                     __end_of_sprintf:
  1564                           
  1565                           	psect	text2
  1566     05E5                     __ptext2:	
  1567 ;; *************** function ___lwmod *****************
  1568 ;; Defined at:
  1569 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  divisor         2   21[BANK0 ] unsigned int 
  1572 ;;  dividend        2   23[BANK0 ] unsigned int 
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  counter         1   25[BANK0 ] unsigned char 
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  2   21[BANK0 ] unsigned int 
  1577 ;; Registers used:
  1578 ;;		wreg, status,2, status,0, btemp+1
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1584 ;;      Params:         0       4       0       0       0
  1585 ;;      Locals:         0       1       0       0       0
  1586 ;;      Temps:          0       0       0       0       0
  1587 ;;      Totals:         0       5       0       0       0
  1588 ;;Total ram usage:        5 bytes
  1589 ;; Hardware stack levels used: 1
  1590 ;; Hardware stack levels required when called: 2
  1591 ;; This function calls:
  1592 ;;		Nothing
  1593 ;; This function is called by:
  1594 ;;		_sprintf
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598     05E5                     ___lwmod:	
  1599                           ;psect for function ___lwmod
  1600                           
  1601     05E5                     l1576:	
  1602                           ;incstack = 0
  1603                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  1604                           
  1605     05E5  1283               	bcf	3,5	;RP0=0, select bank0
  1606     05E6  1303               	bcf	3,6	;RP1=0, select bank0
  1607     05E7  0835               	movf	___lwmod@divisor,w
  1608     05E8  0436               	iorwf	___lwmod@divisor+1,w
  1609     05E9  1903               	btfsc	3,2
  1610     05EA  2DEC               	goto	u1041
  1611     05EB  2DED               	goto	u1040
  1612     05EC                     u1041:
  1613     05EC  2E1C               	goto	l1594
  1614     05ED                     u1040:
  1615     05ED                     l1578:
  1616     05ED  01B9               	clrf	___lwmod@counter
  1617     05EE  0AB9               	incf	___lwmod@counter,f
  1618     05EF  2DFB               	goto	l1584
  1619     05F0                     l1580:
  1620     05F0  3001               	movlw	1
  1621     05F1                     u1055:
  1622     05F1  1003               	clrc
  1623     05F2  0DB5               	rlf	___lwmod@divisor,f
  1624     05F3  0DB6               	rlf	___lwmod@divisor+1,f
  1625     05F4  3EFF               	addlw	-1
  1626     05F5  1D03               	skipz
  1627     05F6  2DF1               	goto	u1055
  1628     05F7                     l1582:
  1629     05F7  3001               	movlw	1
  1630     05F8  00FF               	movwf	btemp+1
  1631     05F9  087F               	movf	btemp+1,w
  1632     05FA  07B9               	addwf	___lwmod@counter,f
  1633     05FB                     l1584:
  1634     05FB  1FB6               	btfss	___lwmod@divisor+1,7
  1635     05FC  2DFE               	goto	u1061
  1636     05FD  2DFF               	goto	u1060
  1637     05FE                     u1061:
  1638     05FE  2DF0               	goto	l1580
  1639     05FF                     u1060:
  1640     05FF                     l1586:
  1641     05FF  0836               	movf	___lwmod@divisor+1,w
  1642     0600  0238               	subwf	___lwmod@dividend+1,w
  1643     0601  1D03               	skipz
  1644     0602  2E05               	goto	u1075
  1645     0603  0835               	movf	___lwmod@divisor,w
  1646     0604  0237               	subwf	___lwmod@dividend,w
  1647     0605                     u1075:
  1648     0605  1C03               	skipc
  1649     0606  2E08               	goto	u1071
  1650     0607  2E09               	goto	u1070
  1651     0608                     u1071:
  1652     0608  2E0F               	goto	l1590
  1653     0609                     u1070:
  1654     0609                     l1588:
  1655     0609  0835               	movf	___lwmod@divisor,w
  1656     060A  02B7               	subwf	___lwmod@dividend,f
  1657     060B  0836               	movf	___lwmod@divisor+1,w
  1658     060C  1C03               	skipc
  1659     060D  03B8               	decf	___lwmod@dividend+1,f
  1660     060E  02B8               	subwf	___lwmod@dividend+1,f
  1661     060F                     l1590:
  1662     060F  3001               	movlw	1
  1663     0610                     u1085:
  1664     0610  1003               	clrc
  1665     0611  0CB6               	rrf	___lwmod@divisor+1,f
  1666     0612  0CB5               	rrf	___lwmod@divisor,f
  1667     0613  3EFF               	addlw	-1
  1668     0614  1D03               	skipz
  1669     0615  2E10               	goto	u1085
  1670     0616                     l1592:
  1671     0616  3001               	movlw	1
  1672     0617  02B9               	subwf	___lwmod@counter,f
  1673     0618  1D03               	btfss	3,2
  1674     0619  2E1B               	goto	u1091
  1675     061A  2E1C               	goto	u1090
  1676     061B                     u1091:
  1677     061B  2DFF               	goto	l1586
  1678     061C                     u1090:
  1679     061C                     l1594:
  1680     061C  0838               	movf	___lwmod@dividend+1,w
  1681     061D  00B6               	movwf	?___lwmod+1
  1682     061E  0837               	movf	___lwmod@dividend,w
  1683     061F  00B5               	movwf	?___lwmod
  1684     0620                     l662:
  1685     0620  0008               	return
  1686     0621                     __end_of___lwmod:
  1687                           
  1688                           	psect	text3
  1689     051B                     __ptext3:	
  1690 ;; *************** function ___lwdiv *****************
  1691 ;; Defined at:
  1692 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;  divisor         2   14[BANK0 ] unsigned int 
  1695 ;;  dividend        2   16[BANK0 ] unsigned int 
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;  quotient        2   18[BANK0 ] unsigned int 
  1698 ;;  counter         1   20[BANK0 ] unsigned char 
  1699 ;; Return value:  Size  Location     Type
  1700 ;;                  2   14[BANK0 ] unsigned int 
  1701 ;; Registers used:
  1702 ;;		wreg, status,2, status,0, btemp+1
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1708 ;;      Params:         0       4       0       0       0
  1709 ;;      Locals:         0       3       0       0       0
  1710 ;;      Temps:          0       0       0       0       0
  1711 ;;      Totals:         0       7       0       0       0
  1712 ;;Total ram usage:        7 bytes
  1713 ;; Hardware stack levels used: 1
  1714 ;; Hardware stack levels required when called: 2
  1715 ;; This function calls:
  1716 ;;		Nothing
  1717 ;; This function is called by:
  1718 ;;		_sprintf
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722     051B                     ___lwdiv:	
  1723                           ;psect for function ___lwdiv
  1724                           
  1725     051B                     l1550:	
  1726                           ;incstack = 0
  1727                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1728                           
  1729     051B  1283               	bcf	3,5	;RP0=0, select bank0
  1730     051C  1303               	bcf	3,6	;RP1=0, select bank0
  1731     051D  01B2               	clrf	___lwdiv@quotient
  1732     051E  01B3               	clrf	___lwdiv@quotient+1
  1733     051F                     l1552:
  1734     051F  082E               	movf	___lwdiv@divisor,w
  1735     0520  042F               	iorwf	___lwdiv@divisor+1,w
  1736     0521  1903               	btfsc	3,2
  1737     0522  2D24               	goto	u971
  1738     0523  2D25               	goto	u970
  1739     0524                     u971:
  1740     0524  2D5C               	goto	l1572
  1741     0525                     u970:
  1742     0525                     l1554:
  1743     0525  01B4               	clrf	___lwdiv@counter
  1744     0526  0AB4               	incf	___lwdiv@counter,f
  1745     0527  2D33               	goto	l1560
  1746     0528                     l1556:
  1747     0528  3001               	movlw	1
  1748     0529                     u985:
  1749     0529  1003               	clrc
  1750     052A  0DAE               	rlf	___lwdiv@divisor,f
  1751     052B  0DAF               	rlf	___lwdiv@divisor+1,f
  1752     052C  3EFF               	addlw	-1
  1753     052D  1D03               	skipz
  1754     052E  2D29               	goto	u985
  1755     052F                     l1558:
  1756     052F  3001               	movlw	1
  1757     0530  00FF               	movwf	btemp+1
  1758     0531  087F               	movf	btemp+1,w
  1759     0532  07B4               	addwf	___lwdiv@counter,f
  1760     0533                     l1560:
  1761     0533  1FAF               	btfss	___lwdiv@divisor+1,7
  1762     0534  2D36               	goto	u991
  1763     0535  2D37               	goto	u990
  1764     0536                     u991:
  1765     0536  2D28               	goto	l1556
  1766     0537                     u990:
  1767     0537                     l1562:
  1768     0537  3001               	movlw	1
  1769     0538                     u1005:
  1770     0538  1003               	clrc
  1771     0539  0DB2               	rlf	___lwdiv@quotient,f
  1772     053A  0DB3               	rlf	___lwdiv@quotient+1,f
  1773     053B  3EFF               	addlw	-1
  1774     053C  1D03               	skipz
  1775     053D  2D38               	goto	u1005
  1776     053E  082F               	movf	___lwdiv@divisor+1,w
  1777     053F  0231               	subwf	___lwdiv@dividend+1,w
  1778     0540  1D03               	skipz
  1779     0541  2D44               	goto	u1015
  1780     0542  082E               	movf	___lwdiv@divisor,w
  1781     0543  0230               	subwf	___lwdiv@dividend,w
  1782     0544                     u1015:
  1783     0544  1C03               	skipc
  1784     0545  2D47               	goto	u1011
  1785     0546  2D48               	goto	u1010
  1786     0547                     u1011:
  1787     0547  2D4F               	goto	l1568
  1788     0548                     u1010:
  1789     0548                     l1564:
  1790     0548  082E               	movf	___lwdiv@divisor,w
  1791     0549  02B0               	subwf	___lwdiv@dividend,f
  1792     054A  082F               	movf	___lwdiv@divisor+1,w
  1793     054B  1C03               	skipc
  1794     054C  03B1               	decf	___lwdiv@dividend+1,f
  1795     054D  02B1               	subwf	___lwdiv@dividend+1,f
  1796     054E                     l1566:
  1797     054E  1432               	bsf	___lwdiv@quotient,0
  1798     054F                     l1568:
  1799     054F  3001               	movlw	1
  1800     0550                     u1025:
  1801     0550  1003               	clrc
  1802     0551  0CAF               	rrf	___lwdiv@divisor+1,f
  1803     0552  0CAE               	rrf	___lwdiv@divisor,f
  1804     0553  3EFF               	addlw	-1
  1805     0554  1D03               	skipz
  1806     0555  2D50               	goto	u1025
  1807     0556                     l1570:
  1808     0556  3001               	movlw	1
  1809     0557  02B4               	subwf	___lwdiv@counter,f
  1810     0558  1D03               	btfss	3,2
  1811     0559  2D5B               	goto	u1031
  1812     055A  2D5C               	goto	u1030
  1813     055B                     u1031:
  1814     055B  2D37               	goto	l1562
  1815     055C                     u1030:
  1816     055C                     l1572:
  1817     055C  0833               	movf	___lwdiv@quotient+1,w
  1818     055D  00AF               	movwf	?___lwdiv+1
  1819     055E  0832               	movf	___lwdiv@quotient,w
  1820     055F  00AE               	movwf	?___lwdiv
  1821     0560                     l652:
  1822     0560  0008               	return
  1823     0561                     __end_of___lwdiv:
  1824                           
  1825                           	psect	text4
  1826     05A6                     __ptext4:	
  1827 ;; *************** function _setup *****************
  1828 ;; Defined at:
  1829 ;;		line 167 in file "PWMprueba1.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;		None
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;		None
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      void 
  1836 ;; Registers used:
  1837 ;;		wreg, status,2, status,0
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1843 ;;      Params:         0       0       0       0       0
  1844 ;;      Locals:         0       0       0       0       0
  1845 ;;      Temps:          0       1       0       0       0
  1846 ;;      Totals:         0       1       0       0       0
  1847 ;;Total ram usage:        1 bytes
  1848 ;; Hardware stack levels used: 1
  1849 ;; Hardware stack levels required when called: 2
  1850 ;; This function calls:
  1851 ;;		Nothing
  1852 ;; This function is called by:
  1853 ;;		_main
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857     05A6                     _setup:	
  1858                           ;psect for function _setup
  1859                           
  1860     05A6                     l1630:	
  1861                           ;incstack = 0
  1862                           ; Regs used in _setup: [wreg+status,2+status,0]
  1863                           
  1864                           
  1865                           ;PWMprueba1.c: 168:     ANSEL = 0b00000011;
  1866     05A6  3003               	movlw	3
  1867     05A7  1683               	bsf	3,5	;RP0=1, select bank3
  1868     05A8  1703               	bsf	3,6	;RP1=1, select bank3
  1869     05A9  0088               	movwf	8	;volatile
  1870     05AA                     l1632:
  1871                           
  1872                           ;PWMprueba1.c: 169:     ANSELH = 0;
  1873     05AA  0189               	clrf	9	;volatile
  1874     05AB                     l1634:
  1875                           
  1876                           ;PWMprueba1.c: 171:     TRISA = 0xFF;
  1877     05AB  30FF               	movlw	255
  1878     05AC  1683               	bsf	3,5	;RP0=1, select bank1
  1879     05AD  1303               	bcf	3,6	;RP1=0, select bank1
  1880     05AE  0085               	movwf	5	;volatile
  1881     05AF                     l1636:
  1882                           
  1883                           ;PWMprueba1.c: 172:     TRISB = 0b11111111;
  1884     05AF  30FF               	movlw	255
  1885     05B0  0086               	movwf	6	;volatile
  1886     05B1                     l1638:
  1887                           
  1888                           ;PWMprueba1.c: 173:     TRISD = 0;
  1889     05B1  0188               	clrf	8	;volatile
  1890     05B2                     l1640:
  1891                           
  1892                           ;PWMprueba1.c: 174:     OPTION_REGbits.nRBPU = 0;
  1893     05B2  1381               	bcf	1,7	;volatile
  1894                           
  1895                           ;PWMprueba1.c: 175:     WPUB = 0b1111;
  1896     05B3  300F               	movlw	15
  1897     05B4  0095               	movwf	21	;volatile
  1898     05B5                     l1642:
  1899                           
  1900                           ;PWMprueba1.c: 178:     PORTD = 0;
  1901     05B5  1283               	bcf	3,5	;RP0=0, select bank0
  1902     05B6  1303               	bcf	3,6	;RP1=0, select bank0
  1903     05B7  0188               	clrf	8	;volatile
  1904     05B8                     l1644:
  1905                           
  1906                           ;PWMprueba1.c: 179:     PORTE = 0;
  1907     05B8  0189               	clrf	9	;volatile
  1908     05B9                     l1646:
  1909                           
  1910                           ;PWMprueba1.c: 185:     OSCCONbits.IRCF = 0b0111;
  1911     05B9  3070               	movlw	112
  1912     05BA  1683               	bsf	3,5	;RP0=1, select bank1
  1913     05BB  1303               	bcf	3,6	;RP1=0, select bank1
  1914     05BC  048F               	iorwf	15,f	;volatile
  1915     05BD                     l1648:
  1916                           
  1917                           ;PWMprueba1.c: 186:     OSCCONbits.SCS = 1;
  1918     05BD  140F               	bsf	15,0	;volatile
  1919     05BE                     l1650:
  1920                           
  1921                           ;PWMprueba1.c: 189:     ADCON1bits.ADFM = 0;
  1922     05BE  139F               	bcf	31,7	;volatile
  1923     05BF                     l1652:
  1924                           
  1925                           ;PWMprueba1.c: 190:     ADCON1bits.VCFG0 = 0;
  1926     05BF  121F               	bcf	31,4	;volatile
  1927     05C0                     l1654:
  1928                           
  1929                           ;PWMprueba1.c: 191:     ADCON1bits.VCFG1 = 0;
  1930     05C0  129F               	bcf	31,5	;volatile
  1931     05C1                     l1656:
  1932                           
  1933                           ;PWMprueba1.c: 193:     ADCON0bits.ADCS = 0b01;
  1934     05C1  1283               	bcf	3,5	;RP0=0, select bank0
  1935     05C2  1303               	bcf	3,6	;RP1=0, select bank0
  1936     05C3  081F               	movf	31,w	;volatile
  1937     05C4  393F               	andlw	-193
  1938     05C5  3840               	iorlw	64
  1939     05C6  009F               	movwf	31	;volatile
  1940     05C7                     l1658:
  1941                           
  1942                           ;PWMprueba1.c: 194:     ADCON0bits.CHS = 0;
  1943     05C7  30C3               	movlw	-61
  1944     05C8  059F               	andwf	31,f	;volatile
  1945     05C9                     l1660:
  1946                           
  1947                           ;PWMprueba1.c: 195:     ADCON0bits.ADON= 1;
  1948     05C9  141F               	bsf	31,0	;volatile
  1949     05CA                     l1662:
  1950                           
  1951                           ;PWMprueba1.c: 196:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1952     05CA  3020               	movlw	32
  1953     05CB  1283               	bcf	3,5	;RP0=0, select bank0
  1954     05CC  1303               	bcf	3,6	;RP1=0, select bank0
  1955     05CD  00AE               	movwf	??_setup
  1956     05CE                     u1667:
  1957     05CE  0BAE               	decfsz	??_setup,f
  1958     05CF  2DCE               	goto	u1667
  1959     05D0  0000               	nop
  1960     05D1                     l1664:
  1961                           
  1962                           ;PWMprueba1.c: 198: OPTION_REGbits.T0CS = 0;
  1963     05D1  1683               	bsf	3,5	;RP0=1, select bank1
  1964     05D2  1303               	bcf	3,6	;RP1=0, select bank1
  1965     05D3  1281               	bcf	1,5	;volatile
  1966     05D4                     l1666:
  1967                           
  1968                           ;PWMprueba1.c: 199: OPTION_REGbits.T0SE = 0;
  1969     05D4  1201               	bcf	1,4	;volatile
  1970     05D5                     l1668:
  1971                           
  1972                           ;PWMprueba1.c: 200: OPTION_REGbits.PSA = 0;
  1973     05D5  1181               	bcf	1,3	;volatile
  1974     05D6                     l1670:
  1975                           
  1976                           ;PWMprueba1.c: 201: OPTION_REGbits.PS2 = 1;
  1977     05D6  1501               	bsf	1,2	;volatile
  1978     05D7                     l1672:
  1979                           
  1980                           ;PWMprueba1.c: 202: OPTION_REGbits.PS1 = 1;
  1981     05D7  1481               	bsf	1,1	;volatile
  1982     05D8                     l1674:
  1983                           
  1984                           ;PWMprueba1.c: 203: OPTION_REGbits.PS0 = 1;
  1985     05D8  1401               	bsf	1,0	;volatile
  1986     05D9                     l1676:
  1987                           
  1988                           ;PWMprueba1.c: 204: TMR0 = 0;
  1989     05D9  1283               	bcf	3,5	;RP0=0, select bank0
  1990     05DA  1303               	bcf	3,6	;RP1=0, select bank0
  1991     05DB  0181               	clrf	1	;volatile
  1992     05DC                     l1678:
  1993                           
  1994                           ;PWMprueba1.c: 208:     PIR1bits.ADIF = 0;
  1995     05DC  130C               	bcf	12,6	;volatile
  1996     05DD                     l1680:
  1997                           
  1998                           ;PWMprueba1.c: 209:     PIE1bits.ADIE = 1;
  1999     05DD  1683               	bsf	3,5	;RP0=1, select bank1
  2000     05DE  1303               	bcf	3,6	;RP1=0, select bank1
  2001     05DF  170C               	bsf	12,6	;volatile
  2002     05E0                     l1682:
  2003                           
  2004                           ;PWMprueba1.c: 211:     INTCONbits.RBIE = 0;
  2005     05E0  118B               	bcf	11,3	;volatile
  2006     05E1                     l1684:
  2007                           
  2008                           ;PWMprueba1.c: 212:     INTCONbits.RBIF = 1;
  2009     05E1  140B               	bsf	11,0	;volatile
  2010     05E2                     l1686:
  2011                           
  2012                           ;PWMprueba1.c: 214:     INTCONbits.PEIE = 1;
  2013     05E2  170B               	bsf	11,6	;volatile
  2014     05E3                     l1688:
  2015                           
  2016                           ;PWMprueba1.c: 215:     INTCONbits.GIE = 1;
  2017     05E3  178B               	bsf	11,7	;volatile
  2018     05E4                     l214:
  2019     05E4  0008               	return
  2020     05E5                     __end_of_setup:
  2021                           
  2022                           	psect	text5
  2023     0561                     __ptext5:	
  2024 ;; *************** function _PWM_init *****************
  2025 ;; Defined at:
  2026 ;;		line 11 in file "PWM.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;  chn1            2   24[BANK0 ] int 
  2029 ;;  chn2            2   26[BANK0 ] int 
  2030 ;;  periodo_ms      4   28[BANK0 ] float 
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;		None
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  1    wreg      void 
  2035 ;; Registers used:
  2036 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2042 ;;      Params:         0       8       0       0       0
  2043 ;;      Locals:         0       0       0       0       0
  2044 ;;      Temps:          0       0       0       0       0
  2045 ;;      Totals:         0       8       0       0       0
  2046 ;;Total ram usage:        8 bytes
  2047 ;; Hardware stack levels used: 1
  2048 ;; Hardware stack levels required when called: 3
  2049 ;; This function calls:
  2050 ;;		___fltol
  2051 ;; This function is called by:
  2052 ;;		_main
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056     0561                     _PWM_init:	
  2057                           ;psect for function _PWM_init
  2058                           
  2059     0561                     l1598:	
  2060                           ;incstack = 0
  2061                           ; Regs used in _PWM_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2062                           
  2063                           
  2064                           ;PWM.c: 13:     TRISCbits.TRISC1 = chn2;
  2065     0561  1283               	bcf	3,5	;RP0=0, select bank0
  2066     0562  1303               	bcf	3,6	;RP1=0, select bank0
  2067     0563  0C3A               	rrf	PWM_init@chn2,w
  2068     0564  1683               	bsf	3,5	;RP0=1, select bank1
  2069     0565  1303               	bcf	3,6	;RP1=0, select bank1
  2070     0566  1C03               	skipc
  2071     0567  1087               	bcf	7,1	;volatile
  2072     0568  1803               	skipnc
  2073     0569  1487               	bsf	7,1	;volatile
  2074                           
  2075                           ;PWM.c: 14:     TRISCbits.TRISC2 = chn1;
  2076     056A  1283               	bcf	3,5	;RP0=0, select bank0
  2077     056B  1303               	bcf	3,6	;RP1=0, select bank0
  2078     056C  0C38               	rrf	PWM_init@chn1,w
  2079     056D  1683               	bsf	3,5	;RP0=1, select bank1
  2080     056E  1303               	bcf	3,6	;RP1=0, select bank1
  2081     056F  1C03               	skipc
  2082     0570  1107               	bcf	7,2	;volatile
  2083     0571  1803               	skipnc
  2084     0572  1507               	bsf	7,2	;volatile
  2085     0573                     l1600:
  2086                           
  2087                           ;PWM.c: 16:     PR2 = periodo_ms;
  2088     0573  1283               	bcf	3,5	;RP0=0, select bank0
  2089     0574  1303               	bcf	3,6	;RP1=0, select bank0
  2090     0575  083F               	movf	PWM_init@periodo_ms+3,w
  2091     0576  00B1               	movwf	___fltol@f1+3
  2092     0577  083E               	movf	PWM_init@periodo_ms+2,w
  2093     0578  00B0               	movwf	___fltol@f1+2
  2094     0579  083D               	movf	PWM_init@periodo_ms+1,w
  2095     057A  00AF               	movwf	___fltol@f1+1
  2096     057B  083C               	movf	PWM_init@periodo_ms,w
  2097     057C  00AE               	movwf	___fltol@f1
  2098     057D  120A  118A  238E  120A  118A  	fcall	___fltol
  2099     0582  1283               	bcf	3,5	;RP0=0, select bank0
  2100     0583  1303               	bcf	3,6	;RP1=0, select bank0
  2101     0584  082E               	movf	?___fltol,w
  2102     0585  1683               	bsf	3,5	;RP0=1, select bank1
  2103     0586  1303               	bcf	3,6	;RP1=0, select bank1
  2104     0587  0092               	movwf	18	;volatile
  2105     0588                     l1602:
  2106                           
  2107                           ;PWM.c: 17:     CCP1CONbits.P1M =0;
  2108     0588  303F               	movlw	-193
  2109     0589  1283               	bcf	3,5	;RP0=0, select bank0
  2110     058A  1303               	bcf	3,6	;RP1=0, select bank0
  2111     058B  0597               	andwf	23,f	;volatile
  2112     058C                     l1604:
  2113                           
  2114                           ;PWM.c: 18:     CCP1CONbits.CCP1M =0b1100;
  2115     058C  0817               	movf	23,w	;volatile
  2116     058D  39F0               	andlw	-16
  2117     058E  380C               	iorlw	12
  2118     058F  0097               	movwf	23	;volatile
  2119     0590                     l1606:
  2120                           
  2121                           ;PWM.c: 20:     CCPR1L = 0x0f;
  2122     0590  300F               	movlw	15
  2123     0591  0095               	movwf	21	;volatile
  2124     0592                     l1608:
  2125                           
  2126                           ;PWM.c: 21:     CCP1CONbits.DC1B= 0;
  2127     0592  30CF               	movlw	-49
  2128     0593  0597               	andwf	23,f	;volatile
  2129     0594                     l1610:
  2130                           
  2131                           ;PWM.c: 23:     PIR1bits.TMR2IF =0;
  2132     0594  108C               	bcf	12,1	;volatile
  2133     0595                     l1612:
  2134                           
  2135                           ;PWM.c: 24:     T2CONbits.T2CKPS = 0b11;
  2136     0595  3003               	movlw	3
  2137     0596  0492               	iorwf	18,f	;volatile
  2138     0597                     l1614:
  2139                           
  2140                           ;PWM.c: 25:     T2CONbits.TMR2ON = 1;
  2141     0597  1512               	bsf	18,2	;volatile
  2142     0598                     l1616:
  2143                           
  2144                           ;PWM.c: 28:     CCP2CONbits.CCP2M = 0b1100;
  2145     0598  081D               	movf	29,w	;volatile
  2146     0599  39F0               	andlw	-16
  2147     059A  380C               	iorlw	12
  2148     059B  009D               	movwf	29	;volatile
  2149     059C                     l1618:
  2150                           
  2151                           ;PWM.c: 29:     CCPR2L = 0x0f;
  2152     059C  300F               	movlw	15
  2153     059D  009B               	movwf	27	;volatile
  2154     059E                     l1620:
  2155                           
  2156                           ;PWM.c: 30:     CCP2CONbits.DC2B0 = 0;
  2157     059E  121D               	bcf	29,4	;volatile
  2158     059F                     l1622:
  2159                           
  2160                           ;PWM.c: 31:     CCP2CONbits.DC2B1 = 0;
  2161     059F  129D               	bcf	29,5	;volatile
  2162     05A0                     l84:	
  2163                           ;PWM.c: 34:     while (PIR1bits.TMR2IF == 0);
  2164                           
  2165     05A0  1C8C               	btfss	12,1	;volatile
  2166     05A1  2DA3               	goto	u1101
  2167     05A2  2DA4               	goto	u1100
  2168     05A3                     u1101:
  2169     05A3  2DA0               	goto	l84
  2170     05A4                     u1100:
  2171     05A4                     l86:
  2172                           
  2173                           ;PWM.c: 35:     PIR1bits.TMR2IF = 0;
  2174     05A4  108C               	bcf	12,1	;volatile
  2175     05A5                     l87:
  2176     05A5  0008               	return
  2177     05A6                     __end_of_PWM_init:
  2178                           
  2179                           	psect	text6
  2180     038E                     __ptext6:	
  2181 ;; *************** function ___fltol *****************
  2182 ;; Defined at:
  2183 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fltol.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  f1              4   14[BANK0 ] void 
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  exp1            1   23[BANK0 ] unsigned char 
  2188 ;;  sign1           1   22[BANK0 ] unsigned char 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  4   14[BANK0 ] long 
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0, btemp+1
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2198 ;;      Params:         0       4       0       0       0
  2199 ;;      Locals:         0       2       0       0       0
  2200 ;;      Temps:          0       4       0       0       0
  2201 ;;      Totals:         0      10       0       0       0
  2202 ;;Total ram usage:       10 bytes
  2203 ;; Hardware stack levels used: 1
  2204 ;; Hardware stack levels required when called: 2
  2205 ;; This function calls:
  2206 ;;		Nothing
  2207 ;; This function is called by:
  2208 ;;		_PWM_init
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212     038E                     ___fltol:	
  2213                           ;psect for function ___fltol
  2214                           
  2215     038E                     l1512:	
  2216                           ;incstack = 0
  2217                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  2218                           
  2219     038E  1003               	clrc
  2220     038F  1283               	bcf	3,5	;RP0=0, select bank0
  2221     0390  1303               	bcf	3,6	;RP1=0, select bank0
  2222     0391  0D30               	rlf	___fltol@f1+2,w
  2223     0392  0D31               	rlf	___fltol@f1+3,w
  2224     0393  00B7               	movwf	___fltol@exp1
  2225     0394  0837               	movf	___fltol@exp1,w
  2226     0395  1D03               	btfss	3,2
  2227     0396  2B98               	goto	u871
  2228     0397  2B99               	goto	u870
  2229     0398                     u871:
  2230     0398  2BA2               	goto	l1518
  2231     0399                     u870:
  2232     0399                     l1514:
  2233     0399  3000               	movlw	0
  2234     039A  00B1               	movwf	?___fltol+3
  2235     039B  3000               	movlw	0
  2236     039C  00B0               	movwf	?___fltol+2
  2237     039D  3000               	movlw	0
  2238     039E  00AF               	movwf	?___fltol+1
  2239     039F  3000               	movlw	0
  2240     03A0  00AE               	movwf	?___fltol
  2241     03A1  2C05               	goto	l566
  2242     03A2                     l1518:
  2243     03A2  082E               	movf	___fltol@f1,w
  2244     03A3  00B2               	movwf	??___fltol
  2245     03A4  082F               	movf	___fltol@f1+1,w
  2246     03A5  00B3               	movwf	??___fltol+1
  2247     03A6  0830               	movf	___fltol@f1+2,w
  2248     03A7  00B4               	movwf	??___fltol+2
  2249     03A8  0831               	movf	___fltol@f1+3,w
  2250     03A9  00B5               	movwf	??___fltol+3
  2251     03AA  301F               	movlw	31
  2252     03AB                     u885:
  2253     03AB  1003               	clrc
  2254     03AC  0CB5               	rrf	??___fltol+3,f
  2255     03AD  0CB4               	rrf	??___fltol+2,f
  2256     03AE  0CB3               	rrf	??___fltol+1,f
  2257     03AF  0CB2               	rrf	??___fltol,f
  2258     03B0                     u880:
  2259     03B0  3EFF               	addlw	-1
  2260     03B1  1D03               	skipz
  2261     03B2  2BAB               	goto	u885
  2262     03B3  0832               	movf	??___fltol,w
  2263     03B4  00B6               	movwf	___fltol@sign1
  2264     03B5                     l1520:
  2265     03B5  17B0               	bsf	___fltol@f1+2,7
  2266     03B6                     l1522:
  2267     03B6  30FF               	movlw	255
  2268     03B7  05AE               	andwf	___fltol@f1,f
  2269     03B8  30FF               	movlw	255
  2270     03B9  05AF               	andwf	___fltol@f1+1,f
  2271     03BA  30FF               	movlw	255
  2272     03BB  05B0               	andwf	___fltol@f1+2,f
  2273     03BC  3000               	movlw	0
  2274     03BD  05B1               	andwf	___fltol@f1+3,f
  2275     03BE                     l1524:
  2276     03BE  3096               	movlw	150
  2277     03BF  02B7               	subwf	___fltol@exp1,f
  2278     03C0                     l1526:
  2279     03C0  1FB7               	btfss	___fltol@exp1,7
  2280     03C1  2BC3               	goto	u891
  2281     03C2  2BC4               	goto	u890
  2282     03C3                     u891:
  2283     03C3  2BDE               	goto	l1538
  2284     03C4                     u890:
  2285     03C4                     l1528:
  2286     03C4  0837               	movf	___fltol@exp1,w
  2287     03C5  3A80               	xorlw	128
  2288     03C6  3E97               	addlw	151
  2289     03C7  1803               	skipnc
  2290     03C8  2BCA               	goto	u901
  2291     03C9  2BCB               	goto	u900
  2292     03CA                     u901:
  2293     03CA  2BCC               	goto	l1534
  2294     03CB                     u900:
  2295     03CB  2B99               	goto	l1514
  2296     03CC                     l1534:
  2297     03CC  3001               	movlw	1
  2298     03CD                     u915:
  2299     03CD  1003               	clrc
  2300     03CE  0CB1               	rrf	___fltol@f1+3,f
  2301     03CF  0CB0               	rrf	___fltol@f1+2,f
  2302     03D0  0CAF               	rrf	___fltol@f1+1,f
  2303     03D1  0CAE               	rrf	___fltol@f1,f
  2304     03D2  3EFF               	addlw	-1
  2305     03D3  1D03               	skipz
  2306     03D4  2BCD               	goto	u915
  2307     03D5                     l1536:
  2308     03D5  3001               	movlw	1
  2309     03D6  00FF               	movwf	btemp+1
  2310     03D7  087F               	movf	btemp+1,w
  2311     03D8  07B7               	addwf	___fltol@exp1,f
  2312     03D9  1D03               	btfss	3,2
  2313     03DA  2BDC               	goto	u921
  2314     03DB  2BDD               	goto	u920
  2315     03DC                     u921:
  2316     03DC  2BCC               	goto	l1534
  2317     03DD                     u920:
  2318     03DD  2BF5               	goto	l1546
  2319     03DE                     l1538:
  2320     03DE  3020               	movlw	32
  2321     03DF  0237               	subwf	___fltol@exp1,w
  2322     03E0  1C03               	skipc
  2323     03E1  2BE3               	goto	u931
  2324     03E2  2BE4               	goto	u930
  2325     03E3                     u931:
  2326     03E3  2BF0               	goto	l573
  2327     03E4                     u930:
  2328     03E4  2B99               	goto	l1514
  2329     03E5                     l1544:
  2330     03E5  3001               	movlw	1
  2331     03E6  00B2               	movwf	??___fltol
  2332     03E7                     u945:
  2333     03E7  1003               	clrc
  2334     03E8  0DAE               	rlf	___fltol@f1,f
  2335     03E9  0DAF               	rlf	___fltol@f1+1,f
  2336     03EA  0DB0               	rlf	___fltol@f1+2,f
  2337     03EB  0DB1               	rlf	___fltol@f1+3,f
  2338     03EC  0BB2               	decfsz	??___fltol,f
  2339     03ED  2BE7               	goto	u945
  2340     03EE  3001               	movlw	1
  2341     03EF  02B7               	subwf	___fltol@exp1,f
  2342     03F0                     l573:
  2343     03F0  0837               	movf	___fltol@exp1,w
  2344     03F1  1D03               	btfss	3,2
  2345     03F2  2BF4               	goto	u951
  2346     03F3  2BF5               	goto	u950
  2347     03F4                     u951:
  2348     03F4  2BE5               	goto	l1544
  2349     03F5                     u950:
  2350     03F5                     l1546:
  2351     03F5  0836               	movf	___fltol@sign1,w
  2352     03F6  1903               	btfsc	3,2
  2353     03F7  2BF9               	goto	u961
  2354     03F8  2BFA               	goto	u960
  2355     03F9                     u961:
  2356     03F9  2C05               	goto	l576
  2357     03FA                     u960:
  2358     03FA                     l1548:
  2359     03FA  09AE               	comf	___fltol@f1,f
  2360     03FB  09AF               	comf	___fltol@f1+1,f
  2361     03FC  09B0               	comf	___fltol@f1+2,f
  2362     03FD  09B1               	comf	___fltol@f1+3,f
  2363     03FE  0AAE               	incf	___fltol@f1,f
  2364     03FF  1903               	skipnz
  2365     0400  0AAF               	incf	___fltol@f1+1,f
  2366     0401  1903               	skipnz
  2367     0402  0AB0               	incf	___fltol@f1+2,f
  2368     0403  1903               	skipnz
  2369     0404  0AB1               	incf	___fltol@f1+3,f
  2370     0405                     l576:
  2371     0405                     l566:
  2372     0405  0008               	return
  2373     0406                     __end_of___fltol:
  2374                           
  2375                           	psect	text7
  2376     065A                     __ptext7:	
  2377 ;; *************** function _Lcd_Write_String *****************
  2378 ;; Defined at:
  2379 ;;		line 98 in file "LCD.c"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;  a               1    wreg     PTR unsigned char 
  2382 ;;		 -> main@s3(20), main@s2(20), main@s(20), 
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;  a               1   22[BANK0 ] PTR unsigned char 
  2385 ;;		 -> main@s3(20), main@s2(20), main@s(20), 
  2386 ;;  i               2   20[BANK0 ] int 
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  1    wreg      void 
  2389 ;; Registers used:
  2390 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2396 ;;      Params:         0       0       0       0       0
  2397 ;;      Locals:         0       3       0       0       0
  2398 ;;      Temps:          0       1       0       0       0
  2399 ;;      Totals:         0       4       0       0       0
  2400 ;;Total ram usage:        4 bytes
  2401 ;; Hardware stack levels used: 1
  2402 ;; Hardware stack levels required when called: 4
  2403 ;; This function calls:
  2404 ;;		_Lcd_Write_Char
  2405 ;; This function is called by:
  2406 ;;		_main
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410     065A                     _Lcd_Write_String:	
  2411                           ;psect for function _Lcd_Write_String
  2412                           
  2413                           
  2414                           ;incstack = 0
  2415                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2416                           ;Lcd_Write_String@a stored from wreg
  2417     065A  1283               	bcf	3,5	;RP0=0, select bank0
  2418     065B  1303               	bcf	3,6	;RP1=0, select bank0
  2419     065C  00B6               	movwf	Lcd_Write_String@a
  2420     065D                     l1774:
  2421                           
  2422                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  2423     065D  01B4               	clrf	Lcd_Write_String@i
  2424     065E  01B5               	clrf	Lcd_Write_String@i+1
  2425     065F  2E73               	goto	l1780
  2426     0660                     l1776:
  2427                           
  2428                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  2429     0660  0834               	movf	Lcd_Write_String@i,w
  2430     0661  0736               	addwf	Lcd_Write_String@a,w
  2431     0662  00B3               	movwf	??_Lcd_Write_String
  2432     0663  0833               	movf	??_Lcd_Write_String,w
  2433     0664  0084               	movwf	4
  2434     0665  0800               	movf	0,w
  2435     0666  120A  118A  2621  120A  118A  	fcall	_Lcd_Write_Char
  2436     066B                     l1778:
  2437     066B  3001               	movlw	1
  2438     066C  1283               	bcf	3,5	;RP0=0, select bank0
  2439     066D  1303               	bcf	3,6	;RP1=0, select bank0
  2440     066E  07B4               	addwf	Lcd_Write_String@i,f
  2441     066F  1803               	skipnc
  2442     0670  0AB5               	incf	Lcd_Write_String@i+1,f
  2443     0671  3000               	movlw	0
  2444     0672  07B5               	addwf	Lcd_Write_String@i+1,f
  2445     0673                     l1780:
  2446     0673  0834               	movf	Lcd_Write_String@i,w
  2447     0674  0736               	addwf	Lcd_Write_String@a,w
  2448     0675  00B3               	movwf	??_Lcd_Write_String
  2449     0676  0833               	movf	??_Lcd_Write_String,w
  2450     0677  0084               	movwf	4
  2451     0678  1383               	bcf	3,7	;select IRP bank0
  2452     0679  0800               	movf	0,w
  2453     067A  1D03               	btfss	3,2
  2454     067B  2E7D               	goto	u1211
  2455     067C  2E7E               	goto	u1210
  2456     067D                     u1211:
  2457     067D  2E60               	goto	l1776
  2458     067E                     u1210:
  2459     067E                     l263:
  2460     067E  0008               	return
  2461     067F                     __end_of_Lcd_Write_String:
  2462                           
  2463                           	psect	text8
  2464     0621                     __ptext8:	
  2465 ;; *************** function _Lcd_Write_Char *****************
  2466 ;; Defined at:
  2467 ;;		line 83 in file "LCD.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  a               1    wreg     unsigned char 
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;  a               1   18[BANK0 ] unsigned char 
  2472 ;;  y               1   17[BANK0 ] unsigned char 
  2473 ;;  temp            1   16[BANK0 ] unsigned char 
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  1    wreg      void 
  2476 ;; Registers used:
  2477 ;;		wreg, status,2, status,0, pclath, cstack
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2483 ;;      Params:         0       0       0       0       0
  2484 ;;      Locals:         0       3       0       0       0
  2485 ;;      Temps:          0       1       0       0       0
  2486 ;;      Totals:         0       4       0       0       0
  2487 ;;Total ram usage:        4 bytes
  2488 ;; Hardware stack levels used: 1
  2489 ;; Hardware stack levels required when called: 3
  2490 ;; This function calls:
  2491 ;;		_Lcd_Port
  2492 ;; This function is called by:
  2493 ;;		_Lcd_Write_String
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497     0621                     _Lcd_Write_Char:	
  2498                           ;psect for function _Lcd_Write_Char
  2499                           
  2500                           
  2501                           ;incstack = 0
  2502                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2503                           ;Lcd_Write_Char@a stored from wreg
  2504     0621  1283               	bcf	3,5	;RP0=0, select bank0
  2505     0622  1303               	bcf	3,6	;RP1=0, select bank0
  2506     0623  00B2               	movwf	Lcd_Write_Char@a
  2507     0624                     l1492:
  2508                           
  2509                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  2510     0624  0832               	movf	Lcd_Write_Char@a,w
  2511     0625  390F               	andlw	15
  2512     0626  00B0               	movwf	Lcd_Write_Char@temp
  2513                           
  2514                           ;LCD.c: 86:     y = a & 0xF0;
  2515     0627  0832               	movf	Lcd_Write_Char@a,w
  2516     0628  39F0               	andlw	240
  2517     0629  00B1               	movwf	Lcd_Write_Char@y
  2518     062A                     l1494:
  2519                           
  2520                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  2521     062A  1508               	bsf	8,2	;volatile
  2522     062B                     l1496:
  2523                           
  2524                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  2525     062B  0831               	movf	Lcd_Write_Char@y,w
  2526     062C  00AF               	movwf	??_Lcd_Write_Char
  2527     062D  3004               	movlw	4
  2528     062E                     u865:
  2529     062E  1003               	clrc
  2530     062F  0CAF               	rrf	??_Lcd_Write_Char,f
  2531     0630  3EFF               	addlw	-1
  2532     0631  1D03               	skipz
  2533     0632  2E2E               	goto	u865
  2534     0633  082F               	movf	??_Lcd_Write_Char,w
  2535     0634  120A  118A  267F  120A  118A  	fcall	_Lcd_Port
  2536     0639                     l1498:
  2537                           
  2538                           ;LCD.c: 89:     RD3 = 1;
  2539     0639  1283               	bcf	3,5	;RP0=0, select bank0
  2540     063A  1303               	bcf	3,6	;RP1=0, select bank0
  2541     063B  1588               	bsf	8,3	;volatile
  2542     063C                     l1500:
  2543                           
  2544                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2545     063C  3019               	movlw	25
  2546     063D  1283               	bcf	3,5	;RP0=0, select bank0
  2547     063E  1303               	bcf	3,6	;RP1=0, select bank0
  2548     063F  00AF               	movwf	??_Lcd_Write_Char
  2549     0640                     u1677:
  2550     0640  0BAF               	decfsz	??_Lcd_Write_Char,f
  2551     0641  2E40               	goto	u1677
  2552     0642  2E43               	nop2
  2553     0643                     l1502:
  2554                           
  2555                           ;LCD.c: 91:     RD3 = 0;
  2556     0643  1283               	bcf	3,5	;RP0=0, select bank0
  2557     0644  1303               	bcf	3,6	;RP1=0, select bank0
  2558     0645  1188               	bcf	8,3	;volatile
  2559     0646                     l1504:
  2560                           
  2561                           ;LCD.c: 92:     Lcd_Port(temp);
  2562     0646  0830               	movf	Lcd_Write_Char@temp,w
  2563     0647  120A  118A  267F  120A  118A  	fcall	_Lcd_Port
  2564     064C                     l1506:
  2565                           
  2566                           ;LCD.c: 93:     RD3 = 1;
  2567     064C  1283               	bcf	3,5	;RP0=0, select bank0
  2568     064D  1303               	bcf	3,6	;RP1=0, select bank0
  2569     064E  1588               	bsf	8,3	;volatile
  2570     064F                     l1508:
  2571                           
  2572                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2573     064F  3019               	movlw	25
  2574     0650  1283               	bcf	3,5	;RP0=0, select bank0
  2575     0651  1303               	bcf	3,6	;RP1=0, select bank0
  2576     0652  00AF               	movwf	??_Lcd_Write_Char
  2577     0653                     u1687:
  2578     0653  0BAF               	decfsz	??_Lcd_Write_Char,f
  2579     0654  2E53               	goto	u1687
  2580     0655  2E56               	nop2
  2581     0656                     l1510:
  2582                           
  2583                           ;LCD.c: 95:     RD3 = 0;
  2584     0656  1283               	bcf	3,5	;RP0=0, select bank0
  2585     0657  1303               	bcf	3,6	;RP1=0, select bank0
  2586     0658  1188               	bcf	8,3	;volatile
  2587     0659                     l257:
  2588     0659  0008               	return
  2589     065A                     __end_of_Lcd_Write_Char:
  2590                           
  2591                           	psect	text9
  2592     04CF                     __ptext9:	
  2593 ;; *************** function _Lcd_Set_Cursor *****************
  2594 ;; Defined at:
  2595 ;;		line 48 in file "LCD.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;  a               1    wreg     unsigned char 
  2598 ;;  b               1   18[BANK0 ] unsigned char 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;  a               1   20[BANK0 ] unsigned char 
  2601 ;;  temp            1   23[BANK0 ] unsigned char 
  2602 ;;  y               1   22[BANK0 ] unsigned char 
  2603 ;;  z               1   21[BANK0 ] unsigned char 
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  1    wreg      void 
  2606 ;; Registers used:
  2607 ;;		wreg, status,2, status,0, pclath, cstack
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2613 ;;      Params:         0       1       0       0       0
  2614 ;;      Locals:         0       4       0       0       0
  2615 ;;      Temps:          0       1       0       0       0
  2616 ;;      Totals:         0       6       0       0       0
  2617 ;;Total ram usage:        6 bytes
  2618 ;; Hardware stack levels used: 1
  2619 ;; Hardware stack levels required when called: 4
  2620 ;; This function calls:
  2621 ;;		_Lcd_Cmd
  2622 ;; This function is called by:
  2623 ;;		_main
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627     04CF                     _Lcd_Set_Cursor:	
  2628                           ;psect for function _Lcd_Set_Cursor
  2629                           
  2630                           
  2631                           ;incstack = 0
  2632                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2633                           ;Lcd_Set_Cursor@a stored from wreg
  2634     04CF  1283               	bcf	3,5	;RP0=0, select bank0
  2635     04D0  1303               	bcf	3,6	;RP1=0, select bank0
  2636     04D1  00B4               	movwf	Lcd_Set_Cursor@a
  2637     04D2                     l1754:
  2638                           
  2639                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2640     04D2  0334               	decf	Lcd_Set_Cursor@a,w
  2641     04D3  1D03               	btfss	3,2
  2642     04D4  2CD6               	goto	u1171
  2643     04D5  2CD7               	goto	u1170
  2644     04D6                     u1171:
  2645     04D6  2CF6               	goto	l1764
  2646     04D7                     u1170:
  2647     04D7                     l1756:
  2648                           
  2649                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2650     04D7  0832               	movf	Lcd_Set_Cursor@b,w
  2651     04D8  3E7F               	addlw	127
  2652     04D9  00B7               	movwf	Lcd_Set_Cursor@temp
  2653                           
  2654                           ;LCD.c: 52:         z = temp >> 4;
  2655     04DA  0837               	movf	Lcd_Set_Cursor@temp,w
  2656     04DB  00B3               	movwf	??_Lcd_Set_Cursor
  2657     04DC  3004               	movlw	4
  2658     04DD                     u1185:
  2659     04DD  1003               	clrc
  2660     04DE  0CB3               	rrf	??_Lcd_Set_Cursor,f
  2661     04DF  3EFF               	addlw	-1
  2662     04E0  1D03               	skipz
  2663     04E1  2CDD               	goto	u1185
  2664     04E2  0833               	movf	??_Lcd_Set_Cursor,w
  2665     04E3  00B5               	movwf	Lcd_Set_Cursor@z
  2666     04E4                     l1758:
  2667                           
  2668                           ;LCD.c: 53:         y = temp & 0x0F;
  2669     04E4  0837               	movf	Lcd_Set_Cursor@temp,w
  2670     04E5  390F               	andlw	15
  2671     04E6  00B6               	movwf	Lcd_Set_Cursor@y
  2672     04E7                     l1760:
  2673                           
  2674                           ;LCD.c: 54:         Lcd_Cmd(z);
  2675     04E7  0835               	movf	Lcd_Set_Cursor@z,w
  2676     04E8  120A  118A  269F  120A  118A  	fcall	_Lcd_Cmd
  2677     04ED                     l1762:
  2678                           
  2679                           ;LCD.c: 55:         Lcd_Cmd(y);
  2680     04ED  1283               	bcf	3,5	;RP0=0, select bank0
  2681     04EE  1303               	bcf	3,6	;RP1=0, select bank0
  2682     04EF  0836               	movf	Lcd_Set_Cursor@y,w
  2683     04F0  120A  118A  269F  120A  118A  	fcall	_Lcd_Cmd
  2684                           
  2685                           ;LCD.c: 56:     } else if (a == 2) {
  2686     04F5  2D1A               	goto	l251
  2687     04F6                     l1764:
  2688     04F6  3002               	movlw	2
  2689     04F7  0634               	xorwf	Lcd_Set_Cursor@a,w
  2690     04F8  1D03               	btfss	3,2
  2691     04F9  2CFB               	goto	u1191
  2692     04FA  2CFC               	goto	u1190
  2693     04FB                     u1191:
  2694     04FB  2D1A               	goto	l251
  2695     04FC                     u1190:
  2696     04FC                     l1766:
  2697                           
  2698                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2699     04FC  0832               	movf	Lcd_Set_Cursor@b,w
  2700     04FD  3EBF               	addlw	191
  2701     04FE  00B7               	movwf	Lcd_Set_Cursor@temp
  2702                           
  2703                           ;LCD.c: 58:         z = temp >> 4;
  2704     04FF  0837               	movf	Lcd_Set_Cursor@temp,w
  2705     0500  00B3               	movwf	??_Lcd_Set_Cursor
  2706     0501  3004               	movlw	4
  2707     0502                     u1205:
  2708     0502  1003               	clrc
  2709     0503  0CB3               	rrf	??_Lcd_Set_Cursor,f
  2710     0504  3EFF               	addlw	-1
  2711     0505  1D03               	skipz
  2712     0506  2D02               	goto	u1205
  2713     0507  0833               	movf	??_Lcd_Set_Cursor,w
  2714     0508  00B5               	movwf	Lcd_Set_Cursor@z
  2715     0509                     l1768:
  2716                           
  2717                           ;LCD.c: 59:         y = temp & 0x0F;
  2718     0509  0837               	movf	Lcd_Set_Cursor@temp,w
  2719     050A  390F               	andlw	15
  2720     050B  00B6               	movwf	Lcd_Set_Cursor@y
  2721     050C                     l1770:
  2722                           
  2723                           ;LCD.c: 60:         Lcd_Cmd(z);
  2724     050C  0835               	movf	Lcd_Set_Cursor@z,w
  2725     050D  120A  118A  269F  120A  118A  	fcall	_Lcd_Cmd
  2726     0512                     l1772:
  2727                           
  2728                           ;LCD.c: 61:         Lcd_Cmd(y);
  2729     0512  1283               	bcf	3,5	;RP0=0, select bank0
  2730     0513  1303               	bcf	3,6	;RP1=0, select bank0
  2731     0514  0836               	movf	Lcd_Set_Cursor@y,w
  2732     0515  120A  118A  269F  120A  118A  	fcall	_Lcd_Cmd
  2733     051A                     l251:
  2734     051A  0008               	return
  2735     051B                     __end_of_Lcd_Set_Cursor:
  2736                           
  2737                           	psect	text10
  2738     046D                     __ptext10:	
  2739 ;; *************** function _Lcd_Init *****************
  2740 ;; Defined at:
  2741 ;;		line 65 in file "LCD.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;		None
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;		None
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		wreg, status,2, status,0, pclath, cstack
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2755 ;;      Params:         0       0       0       0       0
  2756 ;;      Locals:         0       0       0       0       0
  2757 ;;      Temps:          0       2       0       0       0
  2758 ;;      Totals:         0       2       0       0       0
  2759 ;;Total ram usage:        2 bytes
  2760 ;; Hardware stack levels used: 1
  2761 ;; Hardware stack levels required when called: 4
  2762 ;; This function calls:
  2763 ;;		_Lcd_Cmd
  2764 ;;		_Lcd_Port
  2765 ;; This function is called by:
  2766 ;;		_main
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770     046D                     _Lcd_Init:	
  2771                           ;psect for function _Lcd_Init
  2772                           
  2773     046D                     l1690:	
  2774                           ;incstack = 0
  2775                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2776                           
  2777                           
  2778                           ;LCD.c: 66:     Lcd_Port(0x00);
  2779     046D  3000               	movlw	0
  2780     046E  120A  118A  267F  120A  118A  	fcall	_Lcd_Port
  2781     0473                     l1692:
  2782                           
  2783                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2784     0473  3034               	movlw	52
  2785     0474  1283               	bcf	3,5	;RP0=0, select bank0
  2786     0475  1303               	bcf	3,6	;RP1=0, select bank0
  2787     0476  00B3               	movwf	??_Lcd_Init+1
  2788     0477  30F1               	movlw	241
  2789     0478  00B2               	movwf	??_Lcd_Init
  2790     0479                     u1697:
  2791     0479  0BB2               	decfsz	??_Lcd_Init,f
  2792     047A  2C79               	goto	u1697
  2793     047B  0BB3               	decfsz	??_Lcd_Init+1,f
  2794     047C  2C79               	goto	u1697
  2795     047D                     l1694:
  2796                           
  2797                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2798     047D  3003               	movlw	3
  2799     047E  120A  118A  269F  120A  118A  	fcall	_Lcd_Cmd
  2800                           
  2801                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2802     0483  300D               	movlw	13
  2803     0484  1283               	bcf	3,5	;RP0=0, select bank0
  2804     0485  1303               	bcf	3,6	;RP1=0, select bank0
  2805     0486  00B3               	movwf	??_Lcd_Init+1
  2806     0487  30FB               	movlw	251
  2807     0488  00B2               	movwf	??_Lcd_Init
  2808     0489                     u1707:
  2809     0489  0BB2               	decfsz	??_Lcd_Init,f
  2810     048A  2C89               	goto	u1707
  2811     048B  0BB3               	decfsz	??_Lcd_Init+1,f
  2812     048C  2C89               	goto	u1707
  2813     048D                     l1696:
  2814                           
  2815                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2816     048D  3003               	movlw	3
  2817     048E  120A  118A  269F  120A  118A  	fcall	_Lcd_Cmd
  2818     0493                     l1698:
  2819                           
  2820                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2821     0493  301D               	movlw	29
  2822     0494  1283               	bcf	3,5	;RP0=0, select bank0
  2823     0495  1303               	bcf	3,6	;RP1=0, select bank0
  2824     0496  00B3               	movwf	??_Lcd_Init+1
  2825     0497  3090               	movlw	144
  2826     0498  00B2               	movwf	??_Lcd_Init
  2827     0499                     u1717:
  2828     0499  0BB2               	decfsz	??_Lcd_Init,f
  2829     049A  2C99               	goto	u1717
  2830     049B  0BB3               	decfsz	??_Lcd_Init+1,f
  2831     049C  2C99               	goto	u1717
  2832     049D  0000               	nop
  2833                           
  2834                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2835     049E  3003               	movlw	3
  2836     049F  120A  118A  269F  120A  118A  	fcall	_Lcd_Cmd
  2837                           
  2838                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2839     04A4  3002               	movlw	2
  2840     04A5  120A  118A  269F  120A  118A  	fcall	_Lcd_Cmd
  2841                           
  2842                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  2843     04AA  3002               	movlw	2
  2844     04AB  120A  118A  269F  120A  118A  	fcall	_Lcd_Cmd
  2845                           
  2846                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  2847     04B0  3008               	movlw	8
  2848     04B1  120A  118A  269F  120A  118A  	fcall	_Lcd_Cmd
  2849                           
  2850                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  2851     04B6  3000               	movlw	0
  2852     04B7  120A  118A  269F  120A  118A  	fcall	_Lcd_Cmd
  2853                           
  2854                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  2855     04BC  300C               	movlw	12
  2856     04BD  120A  118A  269F  120A  118A  	fcall	_Lcd_Cmd
  2857                           
  2858                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  2859     04C2  3000               	movlw	0
  2860     04C3  120A  118A  269F  120A  118A  	fcall	_Lcd_Cmd
  2861                           
  2862                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  2863     04C8  3006               	movlw	6
  2864     04C9  120A  118A  269F  120A  118A  	fcall	_Lcd_Cmd
  2865     04CE                     l254:
  2866     04CE  0008               	return
  2867     04CF                     __end_of_Lcd_Init:
  2868                           
  2869                           	psect	text11
  2870     069F                     __ptext11:	
  2871 ;; *************** function _Lcd_Cmd *****************
  2872 ;; Defined at:
  2873 ;;		line 35 in file "LCD.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;  a               1    wreg     unsigned char 
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;  a               1   17[BANK0 ] unsigned char 
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  1    wreg      void 
  2880 ;; Registers used:
  2881 ;;		wreg, status,2, status,0, pclath, cstack
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2887 ;;      Params:         0       0       0       0       0
  2888 ;;      Locals:         0       1       0       0       0
  2889 ;;      Temps:          0       2       0       0       0
  2890 ;;      Totals:         0       3       0       0       0
  2891 ;;Total ram usage:        3 bytes
  2892 ;; Hardware stack levels used: 1
  2893 ;; Hardware stack levels required when called: 3
  2894 ;; This function calls:
  2895 ;;		_Lcd_Port
  2896 ;; This function is called by:
  2897 ;;		_Lcd_Set_Cursor
  2898 ;;		_Lcd_Init
  2899 ;;		_Lcd_Clear
  2900 ;;		_Lcd_Shift_Right
  2901 ;;		_Lcd_Shift_Left
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905     069F                     _Lcd_Cmd:	
  2906                           ;psect for function _Lcd_Cmd
  2907                           
  2908                           
  2909                           ;incstack = 0
  2910                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2911                           ;Lcd_Cmd@a stored from wreg
  2912     069F  1283               	bcf	3,5	;RP0=0, select bank0
  2913     06A0  1303               	bcf	3,6	;RP1=0, select bank0
  2914     06A1  00B1               	movwf	Lcd_Cmd@a
  2915     06A2                     l1482:
  2916                           
  2917                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  2918     06A2  1108               	bcf	8,2	;volatile
  2919     06A3                     l1484:
  2920                           
  2921                           ;LCD.c: 37:     Lcd_Port(a);
  2922     06A3  0831               	movf	Lcd_Cmd@a,w
  2923     06A4  120A  118A  267F  120A  118A  	fcall	_Lcd_Port
  2924     06A9                     l1486:
  2925                           
  2926                           ;LCD.c: 38:     RD3 = 1;
  2927     06A9  1283               	bcf	3,5	;RP0=0, select bank0
  2928     06AA  1303               	bcf	3,6	;RP1=0, select bank0
  2929     06AB  1588               	bsf	8,3	;volatile
  2930     06AC                     l1488:
  2931                           
  2932                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2933     06AC  300B               	movlw	11
  2934     06AD  1283               	bcf	3,5	;RP0=0, select bank0
  2935     06AE  1303               	bcf	3,6	;RP1=0, select bank0
  2936     06AF  00B0               	movwf	??_Lcd_Cmd+1
  2937     06B0  3061               	movlw	97
  2938     06B1  00AF               	movwf	??_Lcd_Cmd
  2939     06B2                     u1727:
  2940     06B2  0BAF               	decfsz	??_Lcd_Cmd,f
  2941     06B3  2EB2               	goto	u1727
  2942     06B4  0BB0               	decfsz	??_Lcd_Cmd+1,f
  2943     06B5  2EB2               	goto	u1727
  2944     06B6  2EB7               	nop2
  2945     06B7                     l1490:
  2946                           
  2947                           ;LCD.c: 40:     RD3 = 0;
  2948     06B7  1283               	bcf	3,5	;RP0=0, select bank0
  2949     06B8  1303               	bcf	3,6	;RP1=0, select bank0
  2950     06B9  1188               	bcf	8,3	;volatile
  2951     06BA                     l242:
  2952     06BA  0008               	return
  2953     06BB                     __end_of_Lcd_Cmd:
  2954                           
  2955                           	psect	text12
  2956     067F                     __ptext12:	
  2957 ;; *************** function _Lcd_Port *****************
  2958 ;; Defined at:
  2959 ;;		line 13 in file "LCD.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;  a               1    wreg     unsigned char 
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;  a               1   14[BANK0 ] unsigned char 
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  1    wreg      void 
  2966 ;; Registers used:
  2967 ;;		wreg
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2973 ;;      Params:         0       0       0       0       0
  2974 ;;      Locals:         0       1       0       0       0
  2975 ;;      Temps:          0       0       0       0       0
  2976 ;;      Totals:         0       1       0       0       0
  2977 ;;Total ram usage:        1 bytes
  2978 ;; Hardware stack levels used: 1
  2979 ;; Hardware stack levels required when called: 2
  2980 ;; This function calls:
  2981 ;;		Nothing
  2982 ;; This function is called by:
  2983 ;;		_Lcd_Cmd
  2984 ;;		_Lcd_Init
  2985 ;;		_Lcd_Write_Char
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989     067F                     _Lcd_Port:	
  2990                           ;psect for function _Lcd_Port
  2991                           
  2992                           
  2993                           ;incstack = 0
  2994                           ; Regs used in _Lcd_Port: [wreg]
  2995                           ;Lcd_Port@a stored from wreg
  2996     067F  1283               	bcf	3,5	;RP0=0, select bank0
  2997     0680  1303               	bcf	3,6	;RP1=0, select bank0
  2998     0681  00AE               	movwf	Lcd_Port@a
  2999     0682                     l1472:
  3000                           
  3001                           ;LCD.c: 14:     if (a & 1)
  3002     0682  1C2E               	btfss	Lcd_Port@a,0
  3003     0683  2E85               	goto	u821
  3004     0684  2E86               	goto	u820
  3005     0685                     u821:
  3006     0685  2E88               	goto	l231
  3007     0686                     u820:
  3008     0686                     l1474:
  3009                           
  3010                           ;LCD.c: 15:         RD4 = 1;
  3011     0686  1608               	bsf	8,4	;volatile
  3012     0687  2E89               	goto	l232
  3013     0688                     l231:	
  3014                           ;LCD.c: 16:     else
  3015                           
  3016                           
  3017                           ;LCD.c: 17:         RD4 = 0;
  3018     0688  1208               	bcf	8,4	;volatile
  3019     0689                     l232:
  3020                           
  3021                           ;LCD.c: 19:     if (a & 2)
  3022     0689  1CAE               	btfss	Lcd_Port@a,1
  3023     068A  2E8C               	goto	u831
  3024     068B  2E8D               	goto	u830
  3025     068C                     u831:
  3026     068C  2E8F               	goto	l233
  3027     068D                     u830:
  3028     068D                     l1476:
  3029                           
  3030                           ;LCD.c: 20:         RD5 = 1;
  3031     068D  1688               	bsf	8,5	;volatile
  3032     068E  2E90               	goto	l234
  3033     068F                     l233:	
  3034                           ;LCD.c: 21:     else
  3035                           
  3036                           
  3037                           ;LCD.c: 22:         RD5 = 0;
  3038     068F  1288               	bcf	8,5	;volatile
  3039     0690                     l234:
  3040                           
  3041                           ;LCD.c: 24:     if (a & 4)
  3042     0690  1D2E               	btfss	Lcd_Port@a,2
  3043     0691  2E93               	goto	u841
  3044     0692  2E94               	goto	u840
  3045     0693                     u841:
  3046     0693  2E96               	goto	l235
  3047     0694                     u840:
  3048     0694                     l1478:
  3049                           
  3050                           ;LCD.c: 25:         RD6 = 1;
  3051     0694  1708               	bsf	8,6	;volatile
  3052     0695  2E97               	goto	l236
  3053     0696                     l235:	
  3054                           ;LCD.c: 26:     else
  3055                           
  3056                           
  3057                           ;LCD.c: 27:         RD6 = 0;
  3058     0696  1308               	bcf	8,6	;volatile
  3059     0697                     l236:
  3060                           
  3061                           ;LCD.c: 29:     if (a & 8)
  3062     0697  1DAE               	btfss	Lcd_Port@a,3
  3063     0698  2E9A               	goto	u851
  3064     0699  2E9B               	goto	u850
  3065     069A                     u851:
  3066     069A  2E9D               	goto	l237
  3067     069B                     u850:
  3068     069B                     l1480:
  3069                           
  3070                           ;LCD.c: 30:         RD7 = 1;
  3071     069B  1788               	bsf	8,7	;volatile
  3072     069C  2E9E               	goto	l239
  3073     069D                     l237:	
  3074                           ;LCD.c: 31:     else
  3075                           
  3076                           
  3077                           ;LCD.c: 32:         RD7 = 0;
  3078     069D  1388               	bcf	8,7	;volatile
  3079     069E                     l239:
  3080     069E  0008               	return
  3081     069F                     __end_of_Lcd_Port:
  3082                           
  3083                           	psect	text13
  3084     012C                     __ptext13:	
  3085 ;; *************** function _isr *****************
  3086 ;; Defined at:
  3087 ;;		line 59 in file "PWMprueba1.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;		None
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;		None
  3092 ;; Return value:  Size  Location     Type
  3093 ;;                  1    wreg      void 
  3094 ;; Registers used:
  3095 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3101 ;;      Params:         0       0       0       0       0
  3102 ;;      Locals:         0       0       0       0       0
  3103 ;;      Temps:          0       7       0       0       0
  3104 ;;      Totals:         0       7       0       0       0
  3105 ;;Total ram usage:        7 bytes
  3106 ;; Hardware stack levels used: 1
  3107 ;; Hardware stack levels required when called: 1
  3108 ;; This function calls:
  3109 ;;		_PWM_duty
  3110 ;;		___awdiv
  3111 ;;		___xxtofl
  3112 ;; This function is called by:
  3113 ;;		Interrupt level 1
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117     012C                     _isr:	
  3118                           ;psect for function _isr
  3119                           
  3120     012C                     i1l1874:
  3121                           
  3122                           ;PWMprueba1.c: 63:    if(PIR1bits.ADIF){
  3123     012C  1F0C               	btfss	12,6	;volatile
  3124     012D  292F               	goto	u146_21
  3125     012E  2930               	goto	u146_20
  3126     012F                     u146_21:
  3127     012F  29C8               	goto	i1l1894
  3128     0130                     u146_20:
  3129     0130                     i1l1876:
  3130                           
  3131                           ;PWMprueba1.c: 65:        if (ADCON0bits.CHS ==1){
  3132     0130  0C1F               	rrf	31,w	;volatile
  3133     0131  00A7               	movwf	??_isr
  3134     0132  0C27               	rrf	??_isr,w
  3135     0133  390F               	andlw	15
  3136     0134  3A01               	xorlw	1
  3137     0135  1D03               	skipz
  3138     0136  2938               	goto	u147_21
  3139     0137  2939               	goto	u147_20
  3140     0138                     u147_21:
  3141     0138  2968               	goto	i1l1882
  3142     0139                     u147_20:
  3143     0139                     i1l1878:
  3144                           
  3145                           ;PWMprueba1.c: 66:              PWM_duty(0,ADRESH);
  3146     0139  3000               	movlw	0
  3147     013A  00A0               	movwf	PWM_duty@chn
  3148     013B  00A1               	movwf	PWM_duty@chn+1
  3149     013C  081E               	movf	30,w	;volatile
  3150     013D  00A7               	movwf	??_isr
  3151     013E  01A8               	clrf	??_isr+1
  3152     013F  01A9               	clrf	??_isr+2
  3153     0140  01AA               	clrf	??_isr+3
  3154     0141  082A               	movf	??_isr+3,w
  3155     0142  00F3               	movwf	___xxtofl@val+3
  3156     0143  0829               	movf	??_isr+2,w
  3157     0144  00F2               	movwf	___xxtofl@val+2
  3158     0145  0828               	movf	??_isr+1,w
  3159     0146  00F1               	movwf	___xxtofl@val+1
  3160     0147  0827               	movf	??_isr,w
  3161     0148  00F0               	movwf	___xxtofl@val
  3162     0149  3000               	movlw	0
  3163     014A  120A  118A  22D6  120A  118A  	fcall	___xxtofl
  3164     014F  0873               	movf	?___xxtofl+3,w
  3165     0150  1283               	bcf	3,5	;RP0=0, select bank0
  3166     0151  1303               	bcf	3,6	;RP1=0, select bank0
  3167     0152  00A5               	movwf	PWM_duty@duty+3
  3168     0153  0872               	movf	?___xxtofl+2,w
  3169     0154  00A4               	movwf	PWM_duty@duty+2
  3170     0155  0871               	movf	?___xxtofl+1,w
  3171     0156  00A3               	movwf	PWM_duty@duty+1
  3172     0157  0870               	movf	?___xxtofl,w
  3173     0158  00A2               	movwf	PWM_duty@duty
  3174     0159  120A  118A  26BB  120A  118A  	fcall	_PWM_duty
  3175     015E                     i1l1880:
  3176                           
  3177                           ;PWMprueba1.c: 67:               valpot0 = ADRESH;
  3178     015E  1283               	bcf	3,5	;RP0=0, select bank0
  3179     015F  1303               	bcf	3,6	;RP1=0, select bank0
  3180     0160  081E               	movf	30,w	;volatile
  3181     0161  00A7               	movwf	??_isr
  3182     0162  01A8               	clrf	??_isr+1
  3183     0163  0827               	movf	??_isr,w
  3184     0164  00D5               	movwf	_valpot0
  3185     0165  0828               	movf	??_isr+1,w
  3186     0166  00D6               	movwf	_valpot0+1
  3187                           
  3188                           ;PWMprueba1.c: 69:         }
  3189     0167  29C7               	goto	i1l1892
  3190     0168                     i1l1882:
  3191     0168  0C1F               	rrf	31,w	;volatile
  3192     0169  00A7               	movwf	??_isr
  3193     016A  0C27               	rrf	??_isr,w
  3194     016B  390F               	andlw	15
  3195     016C  3A00               	xorlw	0
  3196     016D  1D03               	skipz
  3197     016E  2970               	goto	u148_21
  3198     016F  2971               	goto	u148_20
  3199     0170                     u148_21:
  3200     0170  29A1               	goto	i1l1888
  3201     0171                     u148_20:
  3202     0171                     i1l1884:
  3203                           
  3204                           ;PWMprueba1.c: 71:             PWM_duty(1 ,ADRESH);
  3205     0171  3001               	movlw	1
  3206     0172  00A0               	movwf	PWM_duty@chn
  3207     0173  3000               	movlw	0
  3208     0174  00A1               	movwf	PWM_duty@chn+1
  3209     0175  081E               	movf	30,w	;volatile
  3210     0176  00A7               	movwf	??_isr
  3211     0177  01A8               	clrf	??_isr+1
  3212     0178  01A9               	clrf	??_isr+2
  3213     0179  01AA               	clrf	??_isr+3
  3214     017A  082A               	movf	??_isr+3,w
  3215     017B  00F3               	movwf	___xxtofl@val+3
  3216     017C  0829               	movf	??_isr+2,w
  3217     017D  00F2               	movwf	___xxtofl@val+2
  3218     017E  0828               	movf	??_isr+1,w
  3219     017F  00F1               	movwf	___xxtofl@val+1
  3220     0180  0827               	movf	??_isr,w
  3221     0181  00F0               	movwf	___xxtofl@val
  3222     0182  3000               	movlw	0
  3223     0183  120A  118A  22D6  120A  118A  	fcall	___xxtofl
  3224     0188  0873               	movf	?___xxtofl+3,w
  3225     0189  1283               	bcf	3,5	;RP0=0, select bank0
  3226     018A  1303               	bcf	3,6	;RP1=0, select bank0
  3227     018B  00A5               	movwf	PWM_duty@duty+3
  3228     018C  0872               	movf	?___xxtofl+2,w
  3229     018D  00A4               	movwf	PWM_duty@duty+2
  3230     018E  0871               	movf	?___xxtofl+1,w
  3231     018F  00A3               	movwf	PWM_duty@duty+1
  3232     0190  0870               	movf	?___xxtofl,w
  3233     0191  00A2               	movwf	PWM_duty@duty
  3234     0192  120A  118A  26BB  120A  118A  	fcall	_PWM_duty
  3235     0197                     i1l1886:
  3236                           
  3237                           ;PWMprueba1.c: 72:              valpot1 = ADRESH;
  3238     0197  1283               	bcf	3,5	;RP0=0, select bank0
  3239     0198  1303               	bcf	3,6	;RP1=0, select bank0
  3240     0199  081E               	movf	30,w	;volatile
  3241     019A  00A7               	movwf	??_isr
  3242     019B  01A8               	clrf	??_isr+1
  3243     019C  0827               	movf	??_isr,w
  3244     019D  00D3               	movwf	_valpot1
  3245     019E  0828               	movf	??_isr+1,w
  3246     019F  00D4               	movwf	_valpot1+1
  3247                           
  3248                           ;PWMprueba1.c: 73:         }
  3249     01A0  29C7               	goto	i1l1892
  3250     01A1                     i1l1888:
  3251     01A1  0C1F               	rrf	31,w	;volatile
  3252     01A2  00A7               	movwf	??_isr
  3253     01A3  0C27               	rrf	??_isr,w
  3254     01A4  390F               	andlw	15
  3255     01A5  3A02               	xorlw	2
  3256     01A6  1D03               	skipz
  3257     01A7  29A9               	goto	u149_21
  3258     01A8  29AA               	goto	u149_20
  3259     01A9                     u149_21:
  3260     01A9  29C7               	goto	i1l1892
  3261     01AA                     u149_20:
  3262     01AA                     i1l1890:
  3263                           
  3264                           ;PWMprueba1.c: 75:             val = ADRESH;
  3265     01AA  081E               	movf	30,w	;volatile
  3266     01AB  00A7               	movwf	??_isr
  3267     01AC  01A8               	clrf	??_isr+1
  3268     01AD  01A9               	clrf	??_isr+2
  3269     01AE  01AA               	clrf	??_isr+3
  3270     01AF  082A               	movf	??_isr+3,w
  3271     01B0  00F3               	movwf	___xxtofl@val+3
  3272     01B1  0829               	movf	??_isr+2,w
  3273     01B2  00F2               	movwf	___xxtofl@val+2
  3274     01B3  0828               	movf	??_isr+1,w
  3275     01B4  00F1               	movwf	___xxtofl@val+1
  3276     01B5  0827               	movf	??_isr,w
  3277     01B6  00F0               	movwf	___xxtofl@val
  3278     01B7  3000               	movlw	0
  3279     01B8  120A  118A  22D6  120A  118A  	fcall	___xxtofl
  3280     01BD  0873               	movf	?___xxtofl+3,w
  3281     01BE  1283               	bcf	3,5	;RP0=0, select bank0
  3282     01BF  1303               	bcf	3,6	;RP1=0, select bank0
  3283     01C0  00CA               	movwf	_val+3
  3284     01C1  0872               	movf	?___xxtofl+2,w
  3285     01C2  00C9               	movwf	_val+2
  3286     01C3  0871               	movf	?___xxtofl+1,w
  3287     01C4  00C8               	movwf	_val+1
  3288     01C5  0870               	movf	?___xxtofl,w
  3289     01C6  00C7               	movwf	_val
  3290     01C7                     i1l1892:
  3291                           
  3292                           ;PWMprueba1.c: 76:             PIR1bits.ADIF =0;
  3293     01C7  130C               	bcf	12,6	;volatile
  3294     01C8                     i1l1894:
  3295                           
  3296                           ;PWMprueba1.c: 79:    if (INTCONbits.T0IF){
  3297     01C8  1D0B               	btfss	11,2	;volatile
  3298     01C9  29CB               	goto	u150_21
  3299     01CA  29CC               	goto	u150_20
  3300     01CB                     u150_21:
  3301     01CB  2A0A               	goto	i1l192
  3302     01CC                     u150_20:
  3303     01CC                     i1l1896:
  3304                           
  3305                           ;PWMprueba1.c: 82:         if (c<=100){
  3306     01CC  0850               	movf	_c+1,w
  3307     01CD  3A80               	xorlw	128
  3308     01CE  00FF               	movwf	btemp+1
  3309     01CF  3080               	movlw	128
  3310     01D0  027F               	subwf	btemp+1,w
  3311     01D1  1D03               	skipz
  3312     01D2  29D5               	goto	u151_25
  3313     01D3  3065               	movlw	101
  3314     01D4  024F               	subwf	_c,w
  3315     01D5                     u151_25:
  3316     01D5  1803               	skipnc
  3317     01D6  29D8               	goto	u151_21
  3318     01D7  29D9               	goto	u151_20
  3319     01D8                     u151_21:
  3320     01D8  29E1               	goto	i1l1900
  3321     01D9                     u151_20:
  3322     01D9                     i1l1898:
  3323                           
  3324                           ;PWMprueba1.c: 83:            c ++;
  3325     01D9  3001               	movlw	1
  3326     01DA  1283               	bcf	3,5	;RP0=0, select bank0
  3327     01DB  1303               	bcf	3,6	;RP1=0, select bank0
  3328     01DC  07CF               	addwf	_c,f
  3329     01DD  1803               	skipnc
  3330     01DE  0AD0               	incf	_c+1,f
  3331     01DF  3000               	movlw	0
  3332     01E0  07D0               	addwf	_c+1,f
  3333     01E1                     i1l1900:
  3334                           
  3335                           ;PWMprueba1.c: 87:         if (c==100){
  3336     01E1  3064               	movlw	100
  3337     01E2  1283               	bcf	3,5	;RP0=0, select bank0
  3338     01E3  1303               	bcf	3,6	;RP1=0, select bank0
  3339     01E4  064F               	xorwf	_c,w
  3340     01E5  0450               	iorwf	_c+1,w
  3341     01E6  1D03               	btfss	3,2
  3342     01E7  29E9               	goto	u152_21
  3343     01E8  29EA               	goto	u152_20
  3344     01E9                     u152_21:
  3345     01E9  2A08               	goto	i1l1910
  3346     01EA                     u152_20:
  3347     01EA                     i1l1902:
  3348                           
  3349                           ;PWMprueba1.c: 88:             rpm = a/2;
  3350     01EA  3002               	movlw	2
  3351     01EB  00F0               	movwf	___awdiv@divisor
  3352     01EC  3000               	movlw	0
  3353     01ED  00F1               	movwf	___awdiv@divisor+1
  3354     01EE  085F               	movf	_a,w
  3355     01EF  00A7               	movwf	??_isr
  3356     01F0  01A8               	clrf	??_isr+1
  3357     01F1  0827               	movf	??_isr,w
  3358     01F2  00F2               	movwf	___awdiv@dividend
  3359     01F3  0828               	movf	??_isr+1,w
  3360     01F4  00F3               	movwf	___awdiv@dividend+1
  3361     01F5  120A  118A  2406  120A  118A  	fcall	___awdiv
  3362     01FA  0870               	movf	?___awdiv,w
  3363     01FB  1683               	bsf	3,5	;RP0=1, select bank1
  3364     01FC  1303               	bcf	3,6	;RP1=0, select bank1
  3365     01FD  00E1               	movwf	_rpm^(0+128)
  3366     01FE                     i1l1904:
  3367                           
  3368                           ;PWMprueba1.c: 89:             a= 0;
  3369     01FE  1283               	bcf	3,5	;RP0=0, select bank0
  3370     01FF  1303               	bcf	3,6	;RP1=0, select bank0
  3371     0200  01DF               	clrf	_a
  3372     0201                     i1l1906:
  3373                           
  3374                           ;PWMprueba1.c: 90:             b= 0;
  3375     0201  1683               	bsf	3,5	;RP0=1, select bank1
  3376     0202  1303               	bcf	3,6	;RP1=0, select bank1
  3377     0203  01E2               	clrf	_b^(0+128)
  3378     0204                     i1l1908:
  3379                           
  3380                           ;PWMprueba1.c: 91:             c=0;
  3381     0204  1283               	bcf	3,5	;RP0=0, select bank0
  3382     0205  1303               	bcf	3,6	;RP1=0, select bank0
  3383     0206  01CF               	clrf	_c
  3384     0207  01D0               	clrf	_c+1
  3385     0208                     i1l1910:
  3386                           
  3387                           ;PWMprueba1.c: 93:         INTCONbits.T0IF = 0;
  3388     0208  110B               	bcf	11,2	;volatile
  3389     0209                     i1l1912:
  3390                           
  3391                           ;PWMprueba1.c: 94:         TMR0 = 0;
  3392     0209  0181               	clrf	1	;volatile
  3393     020A                     i1l192:
  3394     020A  082D               	movf	??_isr+6,w
  3395     020B  00FF               	movwf	btemp+1
  3396     020C  082C               	movf	??_isr+5,w
  3397     020D  008A               	movwf	10
  3398     020E  0E2B               	swapf	??_isr+4,w
  3399     020F  0083               	movwf	3
  3400     0210  0EFE               	swapf	btemp,f
  3401     0211  0E7E               	swapf	btemp,w
  3402     0212  0009               	retfie
  3403     0213                     __end_of_isr:
  3404                           
  3405                           	psect	intentry
  3406     0004                     __pintentry:	
  3407                           ;incstack = 0
  3408                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3409                           
  3410     0004                     interrupt_function:
  3411     007E                     saved_w	set	btemp
  3412     0004  00FE               	movwf	btemp
  3413     0005  0E03               	swapf	3,w
  3414     0006  1283               	bcf	3,5	;RP0=0, select bank0
  3415     0007  1303               	bcf	3,6	;RP1=0, select bank0
  3416     0008  00AB               	movwf	??_isr+4
  3417     0009  080A               	movf	10,w
  3418     000A  00AC               	movwf	??_isr+5
  3419     000B  087F               	movf	btemp+1,w
  3420     000C  00AD               	movwf	??_isr+6
  3421     000D  120A  118A  292C   	ljmp	_isr
  3422                           
  3423                           	psect	text14
  3424     02D6                     __ptext14:	
  3425 ;; *************** function ___xxtofl *****************
  3426 ;; Defined at:
  3427 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\xxtofl.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;  sign            1    wreg     unsigned char 
  3430 ;;  val             4    0[COMMON] long 
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;  sign            1    8[COMMON] unsigned char 
  3433 ;;  arg             4   10[COMMON] unsigned long 
  3434 ;;  exp             1    9[COMMON] unsigned char 
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  4    0[COMMON] unsigned char 
  3437 ;; Registers used:
  3438 ;;		wreg, status,2, status,0, btemp+1
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3444 ;;      Params:         4       0       0       0       0
  3445 ;;      Locals:         6       0       0       0       0
  3446 ;;      Temps:          4       0       0       0       0
  3447 ;;      Totals:        14       0       0       0       0
  3448 ;;Total ram usage:       14 bytes
  3449 ;; Hardware stack levels used: 1
  3450 ;; This function calls:
  3451 ;;		Nothing
  3452 ;; This function is called by:
  3453 ;;		_isr
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457     02D6                     ___xxtofl:	
  3458                           ;psect for function ___xxtofl
  3459                           
  3460                           
  3461                           ;incstack = 0
  3462                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  3463                           ;___xxtofl@sign stored from wreg
  3464     02D6  00F8               	movwf	___xxtofl@sign
  3465     02D7                     i1l1826:
  3466     02D7  0878               	movf	___xxtofl@sign,w
  3467     02D8  1903               	btfsc	3,2
  3468     02D9  2ADB               	goto	u132_21
  3469     02DA  2ADC               	goto	u132_20
  3470     02DB                     u132_21:
  3471     02DB  2AF0               	goto	i1l1832
  3472     02DC                     u132_20:
  3473     02DC                     i1l1828:
  3474     02DC  1FF3               	btfss	___xxtofl@val+3,7
  3475     02DD  2ADF               	goto	u133_21
  3476     02DE  2AE0               	goto	u133_20
  3477     02DF                     u133_21:
  3478     02DF  2AF0               	goto	i1l1832
  3479     02E0                     u133_20:
  3480     02E0                     i1l1830:
  3481     02E0  0970               	comf	___xxtofl@val,w
  3482     02E1  00FA               	movwf	___xxtofl@arg
  3483     02E2  0971               	comf	___xxtofl@val+1,w
  3484     02E3  00FB               	movwf	___xxtofl@arg+1
  3485     02E4  0972               	comf	___xxtofl@val+2,w
  3486     02E5  00FC               	movwf	___xxtofl@arg+2
  3487     02E6  0973               	comf	___xxtofl@val+3,w
  3488     02E7  00FD               	movwf	___xxtofl@arg+3
  3489     02E8  0AFA               	incf	___xxtofl@arg,f
  3490     02E9  1903               	skipnz
  3491     02EA  0AFB               	incf	___xxtofl@arg+1,f
  3492     02EB  1903               	skipnz
  3493     02EC  0AFC               	incf	___xxtofl@arg+2,f
  3494     02ED  1903               	skipnz
  3495     02EE  0AFD               	incf	___xxtofl@arg+3,f
  3496     02EF  2AF8               	goto	i1l813
  3497     02F0                     i1l1832:
  3498     02F0  0873               	movf	___xxtofl@val+3,w
  3499     02F1  00FD               	movwf	___xxtofl@arg+3
  3500     02F2  0872               	movf	___xxtofl@val+2,w
  3501     02F3  00FC               	movwf	___xxtofl@arg+2
  3502     02F4  0871               	movf	___xxtofl@val+1,w
  3503     02F5  00FB               	movwf	___xxtofl@arg+1
  3504     02F6  0870               	movf	___xxtofl@val,w
  3505     02F7  00FA               	movwf	___xxtofl@arg
  3506     02F8                     i1l813:
  3507     02F8  0873               	movf	___xxtofl@val+3,w
  3508     02F9  0472               	iorwf	___xxtofl@val+2,w
  3509     02FA  0471               	iorwf	___xxtofl@val+1,w
  3510     02FB  0470               	iorwf	___xxtofl@val,w
  3511     02FC  1D03               	skipz
  3512     02FD  2AFF               	goto	u134_21
  3513     02FE  2B00               	goto	u134_20
  3514     02FF                     u134_21:
  3515     02FF  2B09               	goto	i1l1838
  3516     0300                     u134_20:
  3517     0300                     i1l1834:
  3518     0300  3000               	movlw	0
  3519     0301  00F3               	movwf	?___xxtofl+3
  3520     0302  3000               	movlw	0
  3521     0303  00F2               	movwf	?___xxtofl+2
  3522     0304  3000               	movlw	0
  3523     0305  00F1               	movwf	?___xxtofl+1
  3524     0306  3000               	movlw	0
  3525     0307  00F0               	movwf	?___xxtofl
  3526     0308  2B8D               	goto	i1l815
  3527     0309                     i1l1838:
  3528     0309  3096               	movlw	150
  3529     030A  00F9               	movwf	___xxtofl@exp
  3530     030B  2B19               	goto	i1l1844
  3531     030C                     i1l1840:
  3532     030C  3001               	movlw	1
  3533     030D  00FF               	movwf	btemp+1
  3534     030E  087F               	movf	btemp+1,w
  3535     030F  07F9               	addwf	___xxtofl@exp,f
  3536     0310                     i1l1842:
  3537     0310  3001               	movlw	1
  3538     0311                     u135_25:
  3539     0311  1003               	clrc
  3540     0312  0CFD               	rrf	___xxtofl@arg+3,f
  3541     0313  0CFC               	rrf	___xxtofl@arg+2,f
  3542     0314  0CFB               	rrf	___xxtofl@arg+1,f
  3543     0315  0CFA               	rrf	___xxtofl@arg,f
  3544     0316  3EFF               	addlw	-1
  3545     0317  1D03               	skipz
  3546     0318  2B11               	goto	u135_25
  3547     0319                     i1l1844:
  3548     0319  30FE               	movlw	254
  3549     031A  057D               	andwf	___xxtofl@arg+3,w
  3550     031B  1D03               	btfss	3,2
  3551     031C  2B1E               	goto	u136_21
  3552     031D  2B1F               	goto	u136_20
  3553     031E                     u136_21:
  3554     031E  2B0C               	goto	i1l1840
  3555     031F                     u136_20:
  3556     031F  2B3B               	goto	i1l1852
  3557     0320                     i1l1846:
  3558     0320  3001               	movlw	1
  3559     0321  00FF               	movwf	btemp+1
  3560     0322  087F               	movf	btemp+1,w
  3561     0323  07F9               	addwf	___xxtofl@exp,f
  3562     0324                     i1l1848:
  3563     0324  3001               	movlw	1
  3564     0325  07FA               	addwf	___xxtofl@arg,f
  3565     0326  3000               	movlw	0
  3566     0327  1803               	skipnc
  3567     0328  3001               	movlw	1
  3568     0329  07FB               	addwf	___xxtofl@arg+1,f
  3569     032A  3000               	movlw	0
  3570     032B  1803               	skipnc
  3571     032C  3001               	movlw	1
  3572     032D  07FC               	addwf	___xxtofl@arg+2,f
  3573     032E  3000               	movlw	0
  3574     032F  1803               	skipnc
  3575     0330  3001               	movlw	1
  3576     0331  07FD               	addwf	___xxtofl@arg+3,f
  3577     0332                     i1l1850:
  3578     0332  3001               	movlw	1
  3579     0333                     u137_25:
  3580     0333  1003               	clrc
  3581     0334  0CFD               	rrf	___xxtofl@arg+3,f
  3582     0335  0CFC               	rrf	___xxtofl@arg+2,f
  3583     0336  0CFB               	rrf	___xxtofl@arg+1,f
  3584     0337  0CFA               	rrf	___xxtofl@arg,f
  3585     0338  3EFF               	addlw	-1
  3586     0339  1D03               	skipz
  3587     033A  2B33               	goto	u137_25
  3588     033B                     i1l1852:
  3589     033B  30FF               	movlw	255
  3590     033C  057D               	andwf	___xxtofl@arg+3,w
  3591     033D  1D03               	btfss	3,2
  3592     033E  2B40               	goto	u138_21
  3593     033F  2B41               	goto	u138_20
  3594     0340                     u138_21:
  3595     0340  2B20               	goto	i1l1846
  3596     0341                     u138_20:
  3597     0341  2B4D               	goto	i1l1856
  3598     0342                     i1l1854:
  3599     0342  3001               	movlw	1
  3600     0343  02F9               	subwf	___xxtofl@exp,f
  3601     0344  3001               	movlw	1
  3602     0345  00F4               	movwf	??___xxtofl
  3603     0346                     u139_25:
  3604     0346  1003               	clrc
  3605     0347  0DFA               	rlf	___xxtofl@arg,f
  3606     0348  0DFB               	rlf	___xxtofl@arg+1,f
  3607     0349  0DFC               	rlf	___xxtofl@arg+2,f
  3608     034A  0DFD               	rlf	___xxtofl@arg+3,f
  3609     034B  0BF4               	decfsz	??___xxtofl,f
  3610     034C  2B46               	goto	u139_25
  3611     034D                     i1l1856:
  3612     034D  1BFC               	btfsc	___xxtofl@arg+2,7
  3613     034E  2B50               	goto	u140_21
  3614     034F  2B51               	goto	u140_20
  3615     0350                     u140_21:
  3616     0350  2B57               	goto	i1l826
  3617     0351                     u140_20:
  3618     0351                     i1l1858:
  3619     0351  3002               	movlw	2
  3620     0352  0279               	subwf	___xxtofl@exp,w
  3621     0353  1803               	skipnc
  3622     0354  2B56               	goto	u141_21
  3623     0355  2B57               	goto	u141_20
  3624     0356                     u141_21:
  3625     0356  2B42               	goto	i1l1854
  3626     0357                     u141_20:
  3627     0357                     i1l826:
  3628     0357  1879               	btfsc	___xxtofl@exp,0
  3629     0358  2B5A               	goto	u142_21
  3630     0359  2B5B               	goto	u142_20
  3631     035A                     u142_21:
  3632     035A  2B63               	goto	i1l827
  3633     035B                     u142_20:
  3634     035B                     i1l1860:
  3635     035B  30FF               	movlw	255
  3636     035C  05FA               	andwf	___xxtofl@arg,f
  3637     035D  30FF               	movlw	255
  3638     035E  05FB               	andwf	___xxtofl@arg+1,f
  3639     035F  307F               	movlw	127
  3640     0360  05FC               	andwf	___xxtofl@arg+2,f
  3641     0361  30FF               	movlw	255
  3642     0362  05FD               	andwf	___xxtofl@arg+3,f
  3643     0363                     i1l827:
  3644     0363  1003               	clrc
  3645     0364  0CF9               	rrf	___xxtofl@exp,f
  3646     0365                     i1l1862:
  3647     0365  0879               	movf	___xxtofl@exp,w
  3648     0366  00F4               	movwf	??___xxtofl
  3649     0367  01F5               	clrf	??___xxtofl+1
  3650     0368  01F6               	clrf	??___xxtofl+2
  3651     0369  01F7               	clrf	??___xxtofl+3
  3652     036A  3018               	movlw	24
  3653     036B                     u143_25:
  3654     036B  1003               	clrc
  3655     036C  0DF4               	rlf	??___xxtofl,f
  3656     036D  0DF5               	rlf	??___xxtofl+1,f
  3657     036E  0DF6               	rlf	??___xxtofl+2,f
  3658     036F  0DF7               	rlf	??___xxtofl+3,f
  3659     0370                     u143_20:
  3660     0370  3EFF               	addlw	-1
  3661     0371  1D03               	skipz
  3662     0372  2B6B               	goto	u143_25
  3663     0373  0874               	movf	??___xxtofl,w
  3664     0374  04FA               	iorwf	___xxtofl@arg,f
  3665     0375  0875               	movf	??___xxtofl+1,w
  3666     0376  04FB               	iorwf	___xxtofl@arg+1,f
  3667     0377  0876               	movf	??___xxtofl+2,w
  3668     0378  04FC               	iorwf	___xxtofl@arg+2,f
  3669     0379  0877               	movf	??___xxtofl+3,w
  3670     037A  04FD               	iorwf	___xxtofl@arg+3,f
  3671     037B                     i1l1864:
  3672     037B  0878               	movf	___xxtofl@sign,w
  3673     037C  1903               	btfsc	3,2
  3674     037D  2B7F               	goto	u144_21
  3675     037E  2B80               	goto	u144_20
  3676     037F                     u144_21:
  3677     037F  2B85               	goto	i1l1870
  3678     0380                     u144_20:
  3679     0380                     i1l1866:
  3680     0380  1FF3               	btfss	___xxtofl@val+3,7
  3681     0381  2B83               	goto	u145_21
  3682     0382  2B84               	goto	u145_20
  3683     0383                     u145_21:
  3684     0383  2B85               	goto	i1l1870
  3685     0384                     u145_20:
  3686     0384                     i1l1868:
  3687     0384  17FD               	bsf	___xxtofl@arg+3,7
  3688     0385                     i1l1870:
  3689     0385  087D               	movf	___xxtofl@arg+3,w
  3690     0386  00F3               	movwf	?___xxtofl+3
  3691     0387  087C               	movf	___xxtofl@arg+2,w
  3692     0388  00F2               	movwf	?___xxtofl+2
  3693     0389  087B               	movf	___xxtofl@arg+1,w
  3694     038A  00F1               	movwf	?___xxtofl+1
  3695     038B  087A               	movf	___xxtofl@arg,w
  3696     038C  00F0               	movwf	?___xxtofl
  3697     038D                     i1l815:
  3698     038D  0008               	return
  3699     038E                     __end_of___xxtofl:
  3700                           
  3701                           	psect	text15
  3702     0406                     __ptext15:	
  3703 ;; *************** function ___awdiv *****************
  3704 ;; Defined at:
  3705 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;  divisor         2    0[COMMON] int 
  3708 ;;  dividend        2    2[COMMON] int 
  3709 ;; Auto vars:     Size  Location     Type
  3710 ;;  quotient        2    6[COMMON] int 
  3711 ;;  sign            1    5[COMMON] unsigned char 
  3712 ;;  counter         1    4[COMMON] unsigned char 
  3713 ;; Return value:  Size  Location     Type
  3714 ;;                  2    0[COMMON] int 
  3715 ;; Registers used:
  3716 ;;		wreg, status,2, status,0, btemp+1
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3722 ;;      Params:         4       0       0       0       0
  3723 ;;      Locals:         4       0       0       0       0
  3724 ;;      Temps:          0       0       0       0       0
  3725 ;;      Totals:         8       0       0       0       0
  3726 ;;Total ram usage:        8 bytes
  3727 ;; Hardware stack levels used: 1
  3728 ;; This function calls:
  3729 ;;		Nothing
  3730 ;; This function is called by:
  3731 ;;		_isr
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735     0406                     ___awdiv:	
  3736                           ;psect for function ___awdiv
  3737                           
  3738     0406                     i1l1782:	
  3739                           ;incstack = 0
  3740                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  3741                           
  3742     0406  01F5               	clrf	___awdiv@sign
  3743     0407                     i1l1784:
  3744     0407  1FF1               	btfss	___awdiv@divisor+1,7
  3745     0408  2C0A               	goto	u122_21
  3746     0409  2C0B               	goto	u122_20
  3747     040A                     u122_21:
  3748     040A  2C12               	goto	i1l1790
  3749     040B                     u122_20:
  3750     040B                     i1l1786:
  3751     040B  09F0               	comf	___awdiv@divisor,f
  3752     040C  09F1               	comf	___awdiv@divisor+1,f
  3753     040D  0AF0               	incf	___awdiv@divisor,f
  3754     040E  1903               	skipnz
  3755     040F  0AF1               	incf	___awdiv@divisor+1,f
  3756     0410                     i1l1788:
  3757     0410  01F5               	clrf	___awdiv@sign
  3758     0411  0AF5               	incf	___awdiv@sign,f
  3759     0412                     i1l1790:
  3760     0412  1FF3               	btfss	___awdiv@dividend+1,7
  3761     0413  2C15               	goto	u123_21
  3762     0414  2C16               	goto	u123_20
  3763     0415                     u123_21:
  3764     0415  2C1F               	goto	i1l1796
  3765     0416                     u123_20:
  3766     0416                     i1l1792:
  3767     0416  09F2               	comf	___awdiv@dividend,f
  3768     0417  09F3               	comf	___awdiv@dividend+1,f
  3769     0418  0AF2               	incf	___awdiv@dividend,f
  3770     0419  1903               	skipnz
  3771     041A  0AF3               	incf	___awdiv@dividend+1,f
  3772     041B                     i1l1794:
  3773     041B  3001               	movlw	1
  3774     041C  00FF               	movwf	btemp+1
  3775     041D  087F               	movf	btemp+1,w
  3776     041E  06F5               	xorwf	___awdiv@sign,f
  3777     041F                     i1l1796:
  3778     041F  01F6               	clrf	___awdiv@quotient
  3779     0420  01F7               	clrf	___awdiv@quotient+1
  3780     0421                     i1l1798:
  3781     0421  0870               	movf	___awdiv@divisor,w
  3782     0422  0471               	iorwf	___awdiv@divisor+1,w
  3783     0423  1903               	btfsc	3,2
  3784     0424  2C26               	goto	u124_21
  3785     0425  2C27               	goto	u124_20
  3786     0426                     u124_21:
  3787     0426  2C5E               	goto	i1l1818
  3788     0427                     u124_20:
  3789     0427                     i1l1800:
  3790     0427  01F4               	clrf	___awdiv@counter
  3791     0428  0AF4               	incf	___awdiv@counter,f
  3792     0429  2C35               	goto	i1l1806
  3793     042A                     i1l1802:
  3794     042A  3001               	movlw	1
  3795     042B                     u125_25:
  3796     042B  1003               	clrc
  3797     042C  0DF0               	rlf	___awdiv@divisor,f
  3798     042D  0DF1               	rlf	___awdiv@divisor+1,f
  3799     042E  3EFF               	addlw	-1
  3800     042F  1D03               	skipz
  3801     0430  2C2B               	goto	u125_25
  3802     0431                     i1l1804:
  3803     0431  3001               	movlw	1
  3804     0432  00FF               	movwf	btemp+1
  3805     0433  087F               	movf	btemp+1,w
  3806     0434  07F4               	addwf	___awdiv@counter,f
  3807     0435                     i1l1806:
  3808     0435  1FF1               	btfss	___awdiv@divisor+1,7
  3809     0436  2C38               	goto	u126_21
  3810     0437  2C39               	goto	u126_20
  3811     0438                     u126_21:
  3812     0438  2C2A               	goto	i1l1802
  3813     0439                     u126_20:
  3814     0439                     i1l1808:
  3815     0439  3001               	movlw	1
  3816     043A                     u127_25:
  3817     043A  1003               	clrc
  3818     043B  0DF6               	rlf	___awdiv@quotient,f
  3819     043C  0DF7               	rlf	___awdiv@quotient+1,f
  3820     043D  3EFF               	addlw	-1
  3821     043E  1D03               	skipz
  3822     043F  2C3A               	goto	u127_25
  3823     0440  0871               	movf	___awdiv@divisor+1,w
  3824     0441  0273               	subwf	___awdiv@dividend+1,w
  3825     0442  1D03               	skipz
  3826     0443  2C46               	goto	u128_25
  3827     0444  0870               	movf	___awdiv@divisor,w
  3828     0445  0272               	subwf	___awdiv@dividend,w
  3829     0446                     u128_25:
  3830     0446  1C03               	skipc
  3831     0447  2C49               	goto	u128_21
  3832     0448  2C4A               	goto	u128_20
  3833     0449                     u128_21:
  3834     0449  2C51               	goto	i1l1814
  3835     044A                     u128_20:
  3836     044A                     i1l1810:
  3837     044A  0870               	movf	___awdiv@divisor,w
  3838     044B  02F2               	subwf	___awdiv@dividend,f
  3839     044C  0871               	movf	___awdiv@divisor+1,w
  3840     044D  1C03               	skipc
  3841     044E  03F3               	decf	___awdiv@dividend+1,f
  3842     044F  02F3               	subwf	___awdiv@dividend+1,f
  3843     0450                     i1l1812:
  3844     0450  1476               	bsf	___awdiv@quotient,0
  3845     0451                     i1l1814:
  3846     0451  3001               	movlw	1
  3847     0452                     u129_25:
  3848     0452  1003               	clrc
  3849     0453  0CF1               	rrf	___awdiv@divisor+1,f
  3850     0454  0CF0               	rrf	___awdiv@divisor,f
  3851     0455  3EFF               	addlw	-1
  3852     0456  1D03               	skipz
  3853     0457  2C52               	goto	u129_25
  3854     0458                     i1l1816:
  3855     0458  3001               	movlw	1
  3856     0459  02F4               	subwf	___awdiv@counter,f
  3857     045A  1D03               	btfss	3,2
  3858     045B  2C5D               	goto	u130_21
  3859     045C  2C5E               	goto	u130_20
  3860     045D                     u130_21:
  3861     045D  2C39               	goto	i1l1808
  3862     045E                     u130_20:
  3863     045E                     i1l1818:
  3864     045E  0875               	movf	___awdiv@sign,w
  3865     045F  1903               	btfsc	3,2
  3866     0460  2C62               	goto	u131_21
  3867     0461  2C63               	goto	u131_20
  3868     0462                     u131_21:
  3869     0462  2C68               	goto	i1l1822
  3870     0463                     u131_20:
  3871     0463                     i1l1820:
  3872     0463  09F6               	comf	___awdiv@quotient,f
  3873     0464  09F7               	comf	___awdiv@quotient+1,f
  3874     0465  0AF6               	incf	___awdiv@quotient,f
  3875     0466  1903               	skipnz
  3876     0467  0AF7               	incf	___awdiv@quotient+1,f
  3877     0468                     i1l1822:
  3878     0468  0877               	movf	___awdiv@quotient+1,w
  3879     0469  00F1               	movwf	?___awdiv+1
  3880     046A  0876               	movf	___awdiv@quotient,w
  3881     046B  00F0               	movwf	?___awdiv
  3882     046C                     i1l533:
  3883     046C  0008               	return
  3884     046D                     __end_of___awdiv:
  3885                           
  3886                           	psect	text16
  3887     06BB                     __ptext16:	
  3888 ;; *************** function _PWM_duty *****************
  3889 ;; Defined at:
  3890 ;;		line 46 in file "PWM.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;  chn             2    0[BANK0 ] int 
  3893 ;;  duty            4    2[BANK0 ] float 
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;		None
  3896 ;; Return value:  Size  Location     Type
  3897 ;;                  1    wreg      void 
  3898 ;; Registers used:
  3899 ;;		wreg, status,2, status,0
  3900 ;; Tracked objects:
  3901 ;;		On entry : 0/0
  3902 ;;		On exit  : 0/0
  3903 ;;		Unchanged: 0/0
  3904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3905 ;;      Params:         0       6       0       0       0
  3906 ;;      Locals:         0       0       0       0       0
  3907 ;;      Temps:          0       1       0       0       0
  3908 ;;      Totals:         0       7       0       0       0
  3909 ;;Total ram usage:        7 bytes
  3910 ;; Hardware stack levels used: 1
  3911 ;; This function calls:
  3912 ;;		Nothing
  3913 ;; This function is called by:
  3914 ;;		_isr
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918     06BB                     _PWM_duty:	
  3919                           ;psect for function _PWM_duty
  3920                           
  3921     06BB                     i1l1624:	
  3922                           ;incstack = 0
  3923                           ; Regs used in _PWM_duty: [wreg+status,2+status,0]
  3924                           
  3925                           
  3926                           ;PWM.c: 47:       if (chn==0)
  3927     06BB  1283               	bcf	3,5	;RP0=0, select bank0
  3928     06BC  1303               	bcf	3,6	;RP1=0, select bank0
  3929     06BD  0820               	movf	PWM_duty@chn,w
  3930     06BE  0421               	iorwf	PWM_duty@chn+1,w
  3931     06BF  1D03               	btfss	3,2
  3932     06C0  2EC2               	goto	u111_21
  3933     06C1  2EC3               	goto	u111_20
  3934     06C2                     u111_21:
  3935     06C2  2ECA               	goto	i1l1628
  3936     06C3                     u111_20:
  3937     06C3                     i1l1626:
  3938                           
  3939                           ;PWM.c: 48:           CCPR1L = (ADRESH>>1)+128;
  3940     06C3  081E               	movf	30,w	;volatile
  3941     06C4  00A6               	movwf	??_PWM_duty
  3942     06C5  1003               	clrc
  3943     06C6  0C26               	rrf	??_PWM_duty,w
  3944     06C7  3E80               	addlw	128
  3945     06C8  0095               	movwf	21	;volatile
  3946     06C9  2ED0               	goto	i1l92
  3947     06CA                     i1l1628:
  3948                           
  3949                           ;PWM.c: 51:           CCPR2L = (ADRESH>>1)+128;
  3950     06CA  081E               	movf	30,w	;volatile
  3951     06CB  00A6               	movwf	??_PWM_duty
  3952     06CC  1003               	clrc
  3953     06CD  0C26               	rrf	??_PWM_duty,w
  3954     06CE  3E80               	addlw	128
  3955     06CF  009B               	movwf	27	;volatile
  3956     06D0                     i1l92:
  3957     06D0  0008               	return
  3958     06D1                     __end_of_PWM_duty:
  3959     007E                     btemp	set	126	;btemp
  3960     007E                     wtemp0	set	126
  3961                           
  3962                           	psect	config
  3963                           
  3964                           ;Config register CONFIG1 @ 0x2007
  3965                           ;	Oscillator Selection bits
  3966                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  3967                           ;	Watchdog Timer Enable bit
  3968                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3969                           ;	Power-up Timer Enable bit
  3970                           ;	PWRTE = OFF, PWRT disabled
  3971                           ;	RE3/MCLR pin function select bit
  3972                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3973                           ;	Code Protection bit
  3974                           ;	CP = OFF, Program memory code protection is disabled
  3975                           ;	Data Code Protection bit
  3976                           ;	CPD = OFF, Data memory code protection is disabled
  3977                           ;	Brown Out Reset Selection bits
  3978                           ;	BOREN = OFF, BOR disabled
  3979                           ;	Internal External Switchover bit
  3980                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3981                           ;	Fail-Safe Clock Monitor Enabled bit
  3982                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3983                           ;	Low Voltage Programming Enable bit
  3984                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3985                           ;	In-Circuit Debugger Mode bit
  3986                           ;	DEBUG = 0x1, unprogrammed default
  3987     2007                     	org	8199
  3988     2007  20D5               	dw	8405
  3989                           
  3990                           ;Config register CONFIG2 @ 0x2008
  3991                           ;	Brown-out Reset Selection bit
  3992                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3993                           ;	Flash Program Memory Self Write Enable bits
  3994                           ;	WRT = OFF, Write protection off
  3995     2008                     	org	8200
  3996     2008  3FFF               	dw	16383

Data Sizes:
    Strings     3
    Constant    10
    Data        0
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     39      64
    BANK1            80     63      67
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@s3(BANK1[20]), main@s2(BANK1[20]), main@s(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> main@s3(BANK1[20]), main@s2(BANK1[20]), main@s(BANK1[20]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___xxtofl
    _PWM_duty->___xxtofl

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _PWM_init->___fltol
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in BANK0

    _isr->_PWM_duty

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                72    72      0    3369
                                              0 BANK1     63    63      0
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           _PWM_init
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1339
                                             26 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                             21 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                             14 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             8     0      8     599
                                             24 BANK0      8     0      8
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                             14 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     367
                                             19 BANK0      4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                             15 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     608
                                             18 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                             18 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                             15 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  7     7      0    1328
                                              7 BANK0      7     7      0
                           _PWM_duty
                            ___awdiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (5) _PWM_duty                                             7     1      6     326
                                              0 BANK0      7     1      6
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _PWM_init
     ___fltol
   _setup
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)
   _PWM_duty
     ___xxtofl (ARG)
   ___awdiv
   ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      91       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     27      40       5       80.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     3F      43       7       83.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      91      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Aug 21 15:12:51 2023

                       _a 005F                         _b 00E2                         _c 004F  
                       _i 00DF                         pc 0002                        l84 05A0  
                      l86 05A4                        l87 05A5              ___awdiv@sign 0075  
                      fsr 0004                       l202 0098                       l214 05E4  
                     l206 00A4                       l231 0688                       l232 0689  
                     l233 068F                       l234 0690                       l242 06BA  
                     l235 0696                       l251 051A                       l236 0697  
                     l237 069D                       l254 04CE                       l239 069E  
                     l263 067E                       l257 0659                       l198 0092  
                     l376 02D5                       l652 0560                       l573 03F0  
                     l566 0405                       l662 0620                       l576 0405  
                     _GIE 005F                       _RB0 0030                       _RB1 0031  
                     _RD3 0043                       _RD4 0044                       _RD5 0045  
                     _RD6 0046                       _RD7 0047                       _PR2 0092  
                     u820 0686                       u900 03CB                       u821 0685  
                     u901 03CA                       u830 068D                       u831 068C  
                     u840 0694                       u920 03DD                       u841 0693  
                     u921 03DC                       u850 069B                       u930 03E4  
                     u851 069A                       u931 03E3                       u915 03CD  
                     u950 03F5                       u870 0399                       u951 03F4  
                     u871 0398                       u960 03FA                       u880 03B0  
                     u865 062E                       u961 03F9                       u945 03E7  
                     u890 03C4                       u970 0525                       u891 03C3  
                     u971 0524                       u885 03AB                       u990 0537  
                     u991 0536                       u985 0529                       _chn 0059  
                     _isr 012C                       _val 0047                       _rpm 00E1  
                     fsr0 0004                       indf 0000              ___fltol@exp1 0037  
                    l2000 0026                      l2010 0055                      l2002 002B  
                    l2012 005A                      l2004 002F                      l2030 0085  
                    l2014 005D                      l2006 0044                      l2040 00A8  
                    l2024 006B                      l2016 0061                      l2008 0047  
                    l2050 0102                      l2042 00AE                      l2034 009C  
                    l2026 007C                      l2018 0067                      l1500 063C  
                    l2052 0108                      l2044 00C6                      l2036 00A0  
                    l2028 007D                      l1510 0656                      l1502 0643  
                    l2054 0112                      l2046 00DF                      l1504 0646  
                    l1520 03B5                      l1512 038E                      l1600 0573  
                    l2080 0242                      l2056 0118                      l2048 00F8  
                    l1506 064C                      l1522 03B6                      l1514 0399  
                    l1610 0594                      l1602 0588                      l2058 0122  
                    l1508 064F                      l1524 03BE                      l1620 059E  
                    l1612 0595                      l1604 058C                      l1700 0216  
                    l1534 03CC                      l1526 03C0                      l1518 03A2  
                    l1622 059F                      l1614 0597                      l1606 0590  
                    l1630 05A6                      l1550 051B                      l1710 022B  
                    l1702 0219                      l1480 069B                      l1472 0682  
                    l1544 03E5                      l1536 03D5                      l1528 03C4  
                    l1616 0598                      l1608 0592                      l1640 05B2  
                    l1632 05AA                      l1560 0533                      l1552 051F  
                    l1720 0256                      l1704 021F                      l1474 0686  
                    l1490 06B7                      l1482 06A2                      l1546 03F5  
                    l1538 03DE                      l1618 059C                      l1650 05BE  
                    l1642 05B5                      l1634 05AB                      l1570 0556  
                    l1562 0537                      l1554 0525                      l1730 0274  
                    l1714 0230                      l1706 0224                      l1476 068D  
                    l1484 06A3                      l1492 0624                      l1548 03FA  
                    l1660 05C9                      l1652 05BF                      l1644 05B8  
                    l1636 05AF                      l1564 0548                      l1556 0528  
                    l1572 055C                      l1580 05F0                      l1740 02B4  
                    l1732 0278                      l1716 024A                      l1708 0229  
                    l1478 0694                      l1486 06A9                      l1494 062A  
                    l1670 05D6                      l1662 05CA                      l1654 05C0  
                    l1646 05B9                      l1638 05B1                      l1566 054E  
                    l1558 052F                      l1590 060F                      l1582 05F7  
                    l1742 02B8                      l1734 027E                      l1726 0258  
                    l1718 0252                      l1488 06AC                      l1760 04E7  
                    l1496 062B                      l1680 05DD                      l1672 05D7  
                    l1664 05D1                      l1656 05C1                      l1648 05BD  
                    l1568 054F                      l1592 0616                      l1584 05FB  
                    l1576 05E5                      l1736 0281                      l1744 02C1  
                    l1690 046D                      l1770 050C                      l1762 04ED  
                    l1754 04D2                      l1498 0639                      l1682 05E0  
                    l1674 05D8                      l1666 05D4                      l1658 05C7  
                    l1586 05FF                      l1578 05ED                      l1594 061C  
                    l1738 02AF                      l1746 02D1                      l1692 0473  
                    l1772 0512                      l1756 04D7                      l1764 04F6  
                    l1780 0673                      l1684 05E1                      l1676 05D9  
                    l1668 05D5                      l1588 0609                      l1694 047D  
                    l1766 04FC                      l1758 04E4                      l1774 065D  
                    l1598 0561                      l1686 05E2                      l1678 05DC  
                    l1696 048D                      l1768 0509                      l1776 0660  
                    l1688 05E3                      l1698 0493                      l1778 066B  
                    ?_isr 0070                      STR_1 06E1                      STR_2 06E1  
                    STR_3 06E1                      u1010 0548                      u1011 0547  
                    u1100 05A4                      u1101 05A3                      u1005 0538  
                    u1030 055C                      u1031 055B                      u1015 0544  
                    u1040 05ED                      u1120 021F                      u1025 0550  
                    u1041 05EC                      u1121 021E                      u1210 067E  
                    u1130 0273                      u1211 067D                      u1131 0272  
                    u1060 05FF                      u1140 027E                      u1205 0502  
                    u1061 05FE                      u1141 027D                      u1070 0609  
                    u1150 02C1                      u1071 0608                      u1055 05F1  
                    u1151 02C0                      u1135 026F                      u1160 02D1  
                    u1161 02D0                      u1170 04D7                      u1090 061C  
                    u1171 04D6                      u1091 061B                      u1075 0605  
                    u1085 0610                      u1190 04FC                      u1191 04FB  
                    u1600 0092                      u1185 04DD                      u1601 0091  
                    u1610 0098                      u1611 0097                      u1620 009C  
                    u1621 009B                      u1605 008E                      u1630 00A4  
                    u1631 00A3                      u1640 00A8                      u1641 00A7  
                    u1707 0489                      u1717 0499                      u1590 0067  
                    u1727 06B2                      u1591 0066                      u1657 004F  
                    u1667 05CE                      u1677 0640                      u1687 0653  
                    u1697 0479                      _PEIE 005E                      i1l92 06D0  
                    _TMR0 0001                      _WPUB 0095                      _chn1 005D  
                    _chn2 005B         ?_Lcd_Write_String 0070                      _main 0026  
                    btemp 007E                      start 0010        ??_Lcd_Write_String 0033  
         __end_of_Lcd_Cmd 06BB                     ??_isr 0027             ___fltol@sign1 0036  
                   ?_main 0070           __end_of___awdiv 046D           __end_of___fltol 0406  
                   _ANSEL 0188           ___awdiv@divisor 0070           __end_of___lwdiv 0561  
                   i1l192 020A           __end_of___lwmod 0621                     i1l533 046C  
                   i1l813 02F8                     i1l815 038D                     i1l826 0357  
                   i1l827 0363           ___awdiv@counter 0074                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISD 0088                     _SSPIE 0463                     _SSPIF 0063  
         __end_of_dpowers 06E1                     _setup 05A6                     main@s 00A3  
                   pclath 000A          __end_of_PWM_init 05A6          __end_of_PWM_duty 06D1  
                   status 0003                     wtemp0 007E           __end_of_sprintf 02D6  
        __end_of_Lcd_Init 04CF          __end_of_Lcd_Port 069F           __initialization 0013  
            __end_of_main 012C                    ??_main 00A0                    _ADRESH 001E  
                  _CCPR1L 0015                    _CCPR2L 001B          ___awdiv@dividend 0072  
                  ?_setup 0070                    _ANSELH 0189                    u111_20 06C3  
                  u111_21 06C2                    i1l1624 06BB                    i1l1800 0427  
                  i1l1626 06C3                    i1l1810 044A                    i1l1802 042A  
                  i1l1628 06CA                    i1l1820 0463                    i1l1812 0450  
                  i1l1804 0431                    i1l1900 01E1                    i1l1822 0468  
                  i1l1814 0451                    i1l1806 0435                    i1l1830 02E0  
                  i1l1902 01EA                    i1l1910 0208                    u130_20 045E  
                  i1l1816 0458                    i1l1808 0439                    u122_20 040B  
                  i1l1840 030C                    i1l1832 02F0                    i1l1912 0209  
                  i1l1904 01FE                    u130_21 045D                    u122_21 040A  
                  i1l1818 045E                    i1l1850 0332                    i1l1842 0310  
                  i1l1834 0300                    i1l1826 02D7                    i1l1906 0201  
                  i1l1860 035B                    i1l1852 033B                    i1l1844 0319  
                  i1l1828 02DC                    i1l1908 0204                    i1l1790 0412  
                  i1l1782 0406                    i1l1870 0385                    i1l1862 0365  
                  i1l1854 0342                    i1l1846 0320                    i1l1838 0309  
                  u131_20 0463                    i1l1792 0416                    u123_20 0416  
                  i1l1784 0407                    i1l1864 037B                    i1l1856 034D  
                  i1l1848 0324                    i1l1880 015E                    u131_21 0462  
                  u123_21 0415                    i1l1794 041B                    i1l1786 040B  
                  i1l1866 0380                    i1l1858 0351                    i1l1890 01AA  
                  i1l1882 0168                    i1l1874 012C                    i1l1796 041F  
                  i1l1788 0410                    i1l1868 0384                    i1l1884 0171  
                  i1l1892 01C7                    i1l1876 0130                    i1l1798 0421  
                  i1l1886 0197                    i1l1878 0139                    i1l1894 01C8  
                  u124_20 0427                    u140_20 0351                    u132_20 02DC  
                  i1l1896 01CC                    i1l1888 01A1                    u124_21 0426  
                  u140_21 0350                    u132_21 02DB                    i1l1898 01D9  
                  u141_20 0357                    u133_20 02E0                    u141_21 0356  
                  u133_21 02DF                    u125_25 042B                    u126_20 0439  
                  u142_20 035B                    u134_20 0300                    u150_20 01CC  
                  u126_21 0438                    u142_21 035A                    u134_21 02FF  
                  u150_21 01CB                    u143_20 0370                    u151_20 01D9  
                  u151_21 01D8                    u127_25 043A                    u143_25 036B  
                  u135_25 0311                    u151_25 01D5                    u128_20 044A  
                  u144_20 0380                    u136_20 031F                    u152_20 01EA  
                  u128_21 0449                    u144_21 037F                    u136_21 031E  
                  u152_21 01E9                    u128_25 0446                    u145_20 0384  
                  u145_21 0383                    u129_25 0452                    u137_25 0333  
                  u138_20 0341                    u146_20 0130                    u138_21 0340  
                  u146_21 012F                    u147_20 0139                    u147_21 0138  
                  u139_25 0346                    u148_20 0171                    u148_21 0170  
                  u149_20 01AA                    u149_21 01A9                    _OSCCON 008F  
               ??_Lcd_Cmd 002F                    _SSPADD 0093                    _TRISC3 043B  
                  _TRISC4 043C                    _SSPCON 0014                    _SSPBUF 0013  
        __end_of___xxtofl 038E                 ??___awdiv 0074                 ??___fltol 0032  
               ??___lwdiv 0032                 ??___lwmod 0039          ___awdiv@quotient 0076  
                  _valadr 0057                    main@s2 00B7                    main@s3 00CB  
                  saved_w 007E                 ??_sprintf 003D           Lcd_Set_Cursor@a 0034  
         Lcd_Set_Cursor@b 0032           Lcd_Set_Cursor@y 0036           Lcd_Set_Cursor@z 0035  
            ___xxtofl@arg 007A              ___xxtofl@exp 0079              ___xxtofl@val 0070  
 __end_of__initialization 0022                ___fltol@f1 002E            __pcstackCOMMON 0070  
           __end_of_setup 05E5                 ?_PWM_init 0038                 ?_PWM_duty 0020  
          _Lcd_Set_Cursor 04CF            _OPTION_REGbits 0081                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070                   ??_setup 002E                __pbssBANK0 0047  
              __pbssBANK1 00DF                __pmaintext 0026                __pintentry 0004  
  __end_of_Lcd_Set_Cursor 051B        PWM_init@periodo_ms 003C                ??_PWM_init 0040  
              ??_PWM_duty 0026                 ?___xxtofl 0070              PWM_init@chn1 0038  
            PWM_init@chn2 003A                ??_Lcd_Init 0032                ??_Lcd_Port 002E  
            PWM_duty@duty 0022                   _SSPCON2 0091                   _SSPSTAT 0094  
              __stringtab 06D1            _Lcd_Write_Char 0621                   _Lcd_Cmd 069F  
                 ___awdiv 0406                   ___fltol 038E                   ___lwdiv 051B  
                 ___lwmod 05E5           ?_Lcd_Set_Cursor 0032                   __ptext1 0213  
                 __ptext2 05E5                   __ptext3 051B                   __ptext4 05A6  
                 __ptext5 0561                   __ptext6 038E                   __ptext7 065A  
                 __ptext8 0621                   __ptext9 04CF                   _dpowers 06D7  
               _T2CONbits 0012                ??___xxtofl 0074                   _valpot0 0055  
                 _valpot1 0053                   _valprom 0051                   _sprintf 0213  
                 clrloop0 06E5    __end_of_Lcd_Write_Char 065A      end_of_initialization 0022  
              _periodo_ms 004B                 Lcd_Port@a 002E                 _PORTBbits 0006  
               _PORTDbits 0008             ___xxtofl@sign 0078                 _TRISCbits 0087  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0036         Lcd_Write_String@i 0034  
             _CCP1CONbits 0017               _CCP2CONbits 001D          _Lcd_Write_String 065A  
     start_initialization 0013               __end_of_isr 0213           Lcd_Write_Char@a 0032  
         Lcd_Write_Char@y 0031                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A0                  ?_Lcd_Cmd 0070               sprintf@flag 0040  
             sprintf@prec 0044          ___lwdiv@dividend 0030          ??_Lcd_Set_Cursor 0033  
                ?___awdiv 0070                  ?___fltol 002E                  ?___lwdiv 002E  
                ?___lwmod 0035                 __pstrings 06D1               PWM_duty@chn 0020  
        ___lwdiv@quotient 0032                  ?_sprintf 003A         interrupt_function 0004  
               clear_ram0 06E4                  _PIE1bits 008C                  Lcd_Cmd@a 0031  
                _PIR1bits 000C                _ADCON0bits 001F               __stringbase 06D6  
              _ADCON1bits 009F                  _PWM_init 0561                  _PWM_duty 06BB  
        ??_Lcd_Write_Char 002F                  _Lcd_Init 046D                  _Lcd_Port 067F  
__end_of_Lcd_Write_String 067F        __end_of__stringtab 06D7                sprintf@val 0042  
                ___xxtofl 02D6           ___lwdiv@divisor 002E           ___lwdiv@counter 0034  
                __ptext10 046D                  __ptext11 069F                  __ptext12 067F  
                __ptext13 012C                  __ptext14 02D6                  __ptext15 0406  
                __ptext16 06BB                _INTCONbits 000B        Lcd_Write_Char@temp 0030  
                intlevel1 0000                 sprintf@ap 0041                 sprintf@sp 0045  
        ___lwmod@dividend 0037                 stringcode 06D1                _OSCCONbits 008F  
      Lcd_Set_Cursor@temp 0037                  sprintf@c 0046                  sprintf@f 003A  
         ___lwmod@divisor 0035           ___lwmod@counter 0039                  stringdir 06D1  
                stringtab 06D1               _SSPCON2bits 0091  
