

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Aug 21 16:07:34 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32     0000                     
    33                           ; Generated 22/03/2023 GMT
    34                           ; 
    35                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67     0000                     	;# 
    68     0001                     	;# 
    69     0002                     	;# 
    70     0003                     	;# 
    71     0004                     	;# 
    72     0005                     	;# 
    73     0006                     	;# 
    74     0007                     	;# 
    75     0008                     	;# 
    76     0009                     	;# 
    77     000A                     	;# 
    78     000B                     	;# 
    79     000C                     	;# 
    80     000D                     	;# 
    81     000E                     	;# 
    82     000E                     	;# 
    83     000F                     	;# 
    84     0010                     	;# 
    85     0011                     	;# 
    86     0012                     	;# 
    87     0013                     	;# 
    88     0014                     	;# 
    89     0015                     	;# 
    90     0015                     	;# 
    91     0016                     	;# 
    92     0017                     	;# 
    93     0018                     	;# 
    94     0019                     	;# 
    95     001A                     	;# 
    96     001B                     	;# 
    97     001B                     	;# 
    98     001C                     	;# 
    99     001D                     	;# 
   100     001E                     	;# 
   101     001F                     	;# 
   102     0081                     	;# 
   103     0085                     	;# 
   104     0086                     	;# 
   105     0087                     	;# 
   106     0088                     	;# 
   107     0089                     	;# 
   108     008C                     	;# 
   109     008D                     	;# 
   110     008E                     	;# 
   111     008F                     	;# 
   112     0090                     	;# 
   113     0091                     	;# 
   114     0092                     	;# 
   115     0093                     	;# 
   116     0093                     	;# 
   117     0093                     	;# 
   118     0094                     	;# 
   119     0095                     	;# 
   120     0096                     	;# 
   121     0097                     	;# 
   122     0098                     	;# 
   123     0099                     	;# 
   124     009A                     	;# 
   125     009B                     	;# 
   126     009C                     	;# 
   127     009D                     	;# 
   128     009E                     	;# 
   129     009F                     	;# 
   130     0105                     	;# 
   131     0107                     	;# 
   132     0108                     	;# 
   133     0109                     	;# 
   134     010C                     	;# 
   135     010C                     	;# 
   136     010D                     	;# 
   137     010E                     	;# 
   138     010F                     	;# 
   139     0185                     	;# 
   140     0187                     	;# 
   141     0188                     	;# 
   142     0189                     	;# 
   143     018C                     	;# 
   144     018D                     	;# 
   145     0000                     	;# 
   146     0001                     	;# 
   147     0002                     	;# 
   148     0003                     	;# 
   149     0004                     	;# 
   150     0005                     	;# 
   151     0006                     	;# 
   152     0007                     	;# 
   153     0008                     	;# 
   154     0009                     	;# 
   155     000A                     	;# 
   156     000B                     	;# 
   157     000C                     	;# 
   158     000D                     	;# 
   159     000E                     	;# 
   160     000E                     	;# 
   161     000F                     	;# 
   162     0010                     	;# 
   163     0011                     	;# 
   164     0012                     	;# 
   165     0013                     	;# 
   166     0014                     	;# 
   167     0015                     	;# 
   168     0015                     	;# 
   169     0016                     	;# 
   170     0017                     	;# 
   171     0018                     	;# 
   172     0019                     	;# 
   173     001A                     	;# 
   174     001B                     	;# 
   175     001B                     	;# 
   176     001C                     	;# 
   177     001D                     	;# 
   178     001E                     	;# 
   179     001F                     	;# 
   180     0081                     	;# 
   181     0085                     	;# 
   182     0086                     	;# 
   183     0087                     	;# 
   184     0088                     	;# 
   185     0089                     	;# 
   186     008C                     	;# 
   187     008D                     	;# 
   188     008E                     	;# 
   189     008F                     	;# 
   190     0090                     	;# 
   191     0091                     	;# 
   192     0092                     	;# 
   193     0093                     	;# 
   194     0093                     	;# 
   195     0093                     	;# 
   196     0094                     	;# 
   197     0095                     	;# 
   198     0096                     	;# 
   199     0097                     	;# 
   200     0098                     	;# 
   201     0099                     	;# 
   202     009A                     	;# 
   203     009B                     	;# 
   204     009C                     	;# 
   205     009D                     	;# 
   206     009E                     	;# 
   207     009F                     	;# 
   208     0105                     	;# 
   209     0107                     	;# 
   210     0108                     	;# 
   211     0109                     	;# 
   212     010C                     	;# 
   213     010C                     	;# 
   214     010D                     	;# 
   215     010E                     	;# 
   216     010F                     	;# 
   217     0185                     	;# 
   218     0187                     	;# 
   219     0188                     	;# 
   220     0189                     	;# 
   221     018C                     	;# 
   222     018D                     	;# 
   223     0000                     	;# 
   224     0001                     	;# 
   225     0002                     	;# 
   226     0003                     	;# 
   227     0004                     	;# 
   228     0005                     	;# 
   229     0006                     	;# 
   230     0007                     	;# 
   231     0008                     	;# 
   232     0009                     	;# 
   233     000A                     	;# 
   234     000B                     	;# 
   235     000C                     	;# 
   236     000D                     	;# 
   237     000E                     	;# 
   238     000E                     	;# 
   239     000F                     	;# 
   240     0010                     	;# 
   241     0011                     	;# 
   242     0012                     	;# 
   243     0013                     	;# 
   244     0014                     	;# 
   245     0015                     	;# 
   246     0015                     	;# 
   247     0016                     	;# 
   248     0017                     	;# 
   249     0018                     	;# 
   250     0019                     	;# 
   251     001A                     	;# 
   252     001B                     	;# 
   253     001B                     	;# 
   254     001C                     	;# 
   255     001D                     	;# 
   256     001E                     	;# 
   257     001F                     	;# 
   258     0081                     	;# 
   259     0085                     	;# 
   260     0086                     	;# 
   261     0087                     	;# 
   262     0088                     	;# 
   263     0089                     	;# 
   264     008C                     	;# 
   265     008D                     	;# 
   266     008E                     	;# 
   267     008F                     	;# 
   268     0090                     	;# 
   269     0091                     	;# 
   270     0092                     	;# 
   271     0093                     	;# 
   272     0093                     	;# 
   273     0093                     	;# 
   274     0094                     	;# 
   275     0095                     	;# 
   276     0096                     	;# 
   277     0097                     	;# 
   278     0098                     	;# 
   279     0099                     	;# 
   280     009A                     	;# 
   281     009B                     	;# 
   282     009C                     	;# 
   283     009D                     	;# 
   284     009E                     	;# 
   285     009F                     	;# 
   286     0105                     	;# 
   287     0107                     	;# 
   288     0108                     	;# 
   289     0109                     	;# 
   290     010C                     	;# 
   291     010C                     	;# 
   292     010D                     	;# 
   293     010E                     	;# 
   294     010F                     	;# 
   295     0185                     	;# 
   296     0187                     	;# 
   297     0188                     	;# 
   298     0189                     	;# 
   299     018C                     	;# 
   300     018D                     	;# 
   301     0000                     	;# 
   302     0001                     	;# 
   303     0002                     	;# 
   304     0003                     	;# 
   305     0004                     	;# 
   306     0005                     	;# 
   307     0006                     	;# 
   308     0007                     	;# 
   309     0008                     	;# 
   310     0009                     	;# 
   311     000A                     	;# 
   312     000B                     	;# 
   313     000C                     	;# 
   314     000D                     	;# 
   315     000E                     	;# 
   316     000E                     	;# 
   317     000F                     	;# 
   318     0010                     	;# 
   319     0011                     	;# 
   320     0012                     	;# 
   321     0013                     	;# 
   322     0014                     	;# 
   323     0015                     	;# 
   324     0015                     	;# 
   325     0016                     	;# 
   326     0017                     	;# 
   327     0018                     	;# 
   328     0019                     	;# 
   329     001A                     	;# 
   330     001B                     	;# 
   331     001B                     	;# 
   332     001C                     	;# 
   333     001D                     	;# 
   334     001E                     	;# 
   335     001F                     	;# 
   336     0081                     	;# 
   337     0085                     	;# 
   338     0086                     	;# 
   339     0087                     	;# 
   340     0088                     	;# 
   341     0089                     	;# 
   342     008C                     	;# 
   343     008D                     	;# 
   344     008E                     	;# 
   345     008F                     	;# 
   346     0090                     	;# 
   347     0091                     	;# 
   348     0092                     	;# 
   349     0093                     	;# 
   350     0093                     	;# 
   351     0093                     	;# 
   352     0094                     	;# 
   353     0095                     	;# 
   354     0096                     	;# 
   355     0097                     	;# 
   356     0098                     	;# 
   357     0099                     	;# 
   358     009A                     	;# 
   359     009B                     	;# 
   360     009C                     	;# 
   361     009D                     	;# 
   362     009E                     	;# 
   363     009F                     	;# 
   364     0105                     	;# 
   365     0107                     	;# 
   366     0108                     	;# 
   367     0109                     	;# 
   368     010C                     	;# 
   369     010C                     	;# 
   370     010D                     	;# 
   371     010E                     	;# 
   372     010F                     	;# 
   373     0185                     	;# 
   374     0187                     	;# 
   375     0188                     	;# 
   376     0189                     	;# 
   377     018C                     	;# 
   378     018D                     	;# 
   379     0000                     	;# 
   380     0001                     	;# 
   381     0002                     	;# 
   382     0003                     	;# 
   383     0004                     	;# 
   384     0005                     	;# 
   385     0006                     	;# 
   386     0007                     	;# 
   387     0008                     	;# 
   388     0009                     	;# 
   389     000A                     	;# 
   390     000B                     	;# 
   391     000C                     	;# 
   392     000D                     	;# 
   393     000E                     	;# 
   394     000E                     	;# 
   395     000F                     	;# 
   396     0010                     	;# 
   397     0011                     	;# 
   398     0012                     	;# 
   399     0013                     	;# 
   400     0014                     	;# 
   401     0015                     	;# 
   402     0015                     	;# 
   403     0016                     	;# 
   404     0017                     	;# 
   405     0018                     	;# 
   406     0019                     	;# 
   407     001A                     	;# 
   408     001B                     	;# 
   409     001B                     	;# 
   410     001C                     	;# 
   411     001D                     	;# 
   412     001E                     	;# 
   413     001F                     	;# 
   414     0081                     	;# 
   415     0085                     	;# 
   416     0086                     	;# 
   417     0087                     	;# 
   418     0088                     	;# 
   419     0089                     	;# 
   420     008C                     	;# 
   421     008D                     	;# 
   422     008E                     	;# 
   423     008F                     	;# 
   424     0090                     	;# 
   425     0091                     	;# 
   426     0092                     	;# 
   427     0093                     	;# 
   428     0093                     	;# 
   429     0093                     	;# 
   430     0094                     	;# 
   431     0095                     	;# 
   432     0096                     	;# 
   433     0097                     	;# 
   434     0098                     	;# 
   435     0099                     	;# 
   436     009A                     	;# 
   437     009B                     	;# 
   438     009C                     	;# 
   439     009D                     	;# 
   440     009E                     	;# 
   441     009F                     	;# 
   442     0105                     	;# 
   443     0107                     	;# 
   444     0108                     	;# 
   445     0109                     	;# 
   446     010C                     	;# 
   447     010C                     	;# 
   448     010D                     	;# 
   449     010E                     	;# 
   450     010F                     	;# 
   451     0185                     	;# 
   452     0187                     	;# 
   453     0188                     	;# 
   454     0189                     	;# 
   455     018C                     	;# 
   456     018D                     	;# 
   457                           
   458                           	psect	strings
   459     06E5                     __pstrings:
   460     06E5                     stringtab:
   461     06E5                     __stringtab:
   462     06E5                     stringcode:	
   463                           ;	String table - string pointers are 1 byte each
   464                           
   465     06E5                     stringdir:
   466     06E5  3006               	movlw	high stringdir
   467     06E6  008A               	movwf	10
   468     06E7  0804               	movf	4,w
   469     06E8  0A84               	incf	4,f
   470     06E9  0782               	addwf	2,f
   471     06EA                     __stringbase:
   472     06EA  3400               	retlw	0
   473     06EB                     __end_of__stringtab:
   474     06EB                     _dpowers:
   475     06EB  3401               	retlw	1
   476     06EC  3400               	retlw	0
   477     06ED  340A               	retlw	10
   478     06EE  3400               	retlw	0
   479     06EF  3464               	retlw	100
   480     06F0  3400               	retlw	0
   481     06F1  34E8               	retlw	232
   482     06F2  3403               	retlw	3
   483     06F3  3410               	retlw	16
   484     06F4  3427               	retlw	39
   485     06F5                     __end_of_dpowers:
   486     0009                     _PORTE	set	9
   487     0008                     _PORTD	set	8
   488     0009                     _PORTEbits	set	9
   489     0006                     _PORTBbits	set	6
   490     0001                     _TMR0	set	1
   491     000B                     _INTCONbits	set	11
   492     001F                     _ADCON0bits	set	31
   493     0008                     _PORTDbits	set	8
   494     001E                     _ADRESH	set	30
   495     001B                     _CCPR2L	set	27
   496     001D                     _CCP2CONbits	set	29
   497     0012                     _T2CONbits	set	18
   498     000C                     _PIR1bits	set	12
   499     0015                     _CCPR1L	set	21
   500     0017                     _CCP1CONbits	set	23
   501     0013                     _SSPBUF	set	19
   502     0014                     _SSPCON	set	20
   503     0033                     _RB3	set	51
   504     0032                     _RB2	set	50
   505     0043                     _RD3	set	67
   506     0047                     _RD7	set	71
   507     0046                     _RD6	set	70
   508     0045                     _RD5	set	69
   509     0044                     _RD4	set	68
   510     0063                     _SSPIF	set	99
   511     005E                     _PEIE	set	94
   512     005F                     _GIE	set	95
   513     008C                     _PIE1bits	set	140
   514     009F                     _ADCON1bits	set	159
   515     008F                     _OSCCONbits	set	143
   516     0095                     _WPUB	set	149
   517     0089                     _TRISE	set	137
   518     0081                     _OPTION_REGbits	set	129
   519     0088                     _TRISD	set	136
   520     0086                     _TRISB	set	134
   521     0085                     _TRISA	set	133
   522     008F                     _OSCCON	set	143
   523     0092                     _PR2	set	146
   524     0091                     _SSPCON2bits	set	145
   525     0087                     _TRISCbits	set	135
   526     0094                     _SSPSTAT	set	148
   527     0093                     _SSPADD	set	147
   528     0091                     _SSPCON2	set	145
   529     0463                     _SSPIE	set	1123
   530     043C                     _TRISC4	set	1084
   531     043B                     _TRISC3	set	1083
   532     0189                     _ANSELH	set	393
   533     0188                     _ANSEL	set	392
   534     06F5                     STR_1:
   535     06F5  3425               	retlw	37	;'%'
   536     06F6  3475               	retlw	117	;'u'
   537     06F7  3400               	retlw	0
   538     06F5                     
   539                           	psect	cinit
   540     0013                     start_initialization:	
   541                           ; #config settings
   542                           
   543     0013                     __initialization:
   544                           
   545                           ; Clear objects allocated to BANK0
   546     0013  1383               	bcf	3,7	;select IRP bank0
   547     0014  3047               	movlw	low __pbssBANK0
   548     0015  0084               	movwf	4
   549     0016  3060               	movlw	low (__pbssBANK0+25)
   550     0017  120A  118A  26F8  120A  118A  	fcall	clear_ram0
   551                           
   552                           ; Clear objects allocated to BANK1
   553     001C  1683               	bsf	3,5	;RP0=1, select bank1
   554     001D  1303               	bcf	3,6	;RP1=0, select bank1
   555     001E  01DF               	clrf	__pbssBANK1& (0+127)
   556     001F  01E0               	clrf	(__pbssBANK1+1)& (0+127)
   557     0020  01E1               	clrf	(__pbssBANK1+2)& (0+127)
   558     0021  01E2               	clrf	(__pbssBANK1+3)& (0+127)
   559     0022                     end_of_initialization:	
   560                           ;End of C runtime variable initialization code
   561                           
   562     0022                     __end_of__initialization:
   563     0022  0183               	clrf	3
   564     0023  120A  118A  2826   	ljmp	_main	;jump to C main() function
   565                           
   566                           	psect	bssBANK0
   567     0047                     __pbssBANK0:
   568     0047                     _val:
   569     0047                     	ds	4
   570     004B                     _periodo_ms:
   571     004B                     	ds	4
   572     004F                     _c:
   573     004F                     	ds	2
   574     0051                     _valprom:
   575     0051                     	ds	2
   576     0053                     _valpot1:
   577     0053                     	ds	2
   578     0055                     _valpot0:
   579     0055                     	ds	2
   580     0057                     _valadr:
   581     0057                     	ds	2
   582     0059                     _chn:
   583     0059                     	ds	2
   584     005B                     _chn2:
   585     005B                     	ds	2
   586     005D                     _chn1:
   587     005D                     	ds	2
   588     005F                     _a:
   589     005F                     	ds	1
   590                           
   591                           	psect	bssBANK1
   592     00DF                     __pbssBANK1:
   593     00DF                     _i:
   594     00DF                     	ds	2
   595     00E1                     _rpm:
   596     00E1                     	ds	1
   597     00E2                     _b:
   598     00E2                     	ds	1
   599                           
   600                           	psect	clrtext
   601     06F8                     clear_ram0:	
   602                           ;	Called with FSR containing the base address, and
   603                           ;	W with the last address+1
   604                           
   605     06F8  0064               	clrwdt	;clear the watchdog before getting into this loop
   606     06F9                     clrloop0:
   607     06F9  0180               	clrf	0	;clear RAM location pointed to by FSR
   608     06FA  0A84               	incf	4,f	;increment pointer
   609     06FB  0604               	xorwf	4,w	;XOR with final address
   610     06FC  1903               	btfsc	3,2	;have we reached the end yet?
   611     06FD  3400               	retlw	0	;all done for this memory range, return
   612     06FE  0604               	xorwf	4,w	;XOR again to restore value
   613     06FF  2EF9               	goto	clrloop0	;do the next byte
   614                           
   615                           	psect	cstackBANK1
   616     00A0                     __pcstackBANK1:
   617     00A0                     ??_main:
   618                           
   619                           ; 1 bytes @ 0x0
   620     00A0                     	ds	3
   621     00A3                     main@s:
   622                           
   623                           ; 20 bytes @ 0x3
   624     00A3                     	ds	20
   625     00B7                     main@s2:
   626                           
   627                           ; 20 bytes @ 0x17
   628     00B7                     	ds	20
   629     00CB                     main@s3:
   630                           
   631                           ; 20 bytes @ 0x2B
   632     00CB                     	ds	20
   633                           
   634                           	psect	cstackCOMMON
   635     0070                     __pcstackCOMMON:
   636     0070                     ?_setup:
   637     0070                     ?_Lcd_Port:	
   638                           ; 1 bytes @ 0x0
   639                           
   640     0070                     ?_Lcd_Cmd:	
   641                           ; 1 bytes @ 0x0
   642                           
   643     0070                     ?_Lcd_Init:	
   644                           ; 1 bytes @ 0x0
   645                           
   646     0070                     ?_Lcd_Write_Char:	
   647                           ; 1 bytes @ 0x0
   648                           
   649     0070                     ?_Lcd_Write_String:	
   650                           ; 1 bytes @ 0x0
   651                           
   652     0070                     ?_isr:	
   653                           ; 1 bytes @ 0x0
   654                           
   655     0070                     ?_main:	
   656                           ; 1 bytes @ 0x0
   657                           
   658     0070                     ?___awdiv:	
   659                           ; 1 bytes @ 0x0
   660                           
   661     0070                     ?___xxtofl:	
   662                           ; 2 bytes @ 0x0
   663                           
   664     0070                     ___awdiv@divisor:	
   665                           ; 4 bytes @ 0x0
   666                           
   667     0070                     ___xxtofl@val:	
   668                           ; 2 bytes @ 0x0
   669                           
   670                           
   671                           ; 4 bytes @ 0x0
   672     0070                     	ds	2
   673     0072                     ___awdiv@dividend:
   674                           
   675                           ; 2 bytes @ 0x2
   676     0072                     	ds	2
   677     0074                     ??___awdiv:
   678     0074                     ??___xxtofl:	
   679                           ; 1 bytes @ 0x4
   680                           
   681     0074                     ___awdiv@counter:	
   682                           ; 1 bytes @ 0x4
   683                           
   684                           
   685                           ; 1 bytes @ 0x4
   686     0074                     	ds	1
   687     0075                     ___awdiv@sign:
   688                           
   689                           ; 1 bytes @ 0x5
   690     0075                     	ds	1
   691     0076                     ___awdiv@quotient:
   692                           
   693                           ; 2 bytes @ 0x6
   694     0076                     	ds	2
   695     0078                     ___xxtofl@sign:
   696                           
   697                           ; 1 bytes @ 0x8
   698     0078                     	ds	1
   699     0079                     ___xxtofl@exp:
   700                           
   701                           ; 1 bytes @ 0x9
   702     0079                     	ds	1
   703     007A                     ___xxtofl@arg:
   704                           
   705                           ; 4 bytes @ 0xA
   706     007A                     	ds	4
   707                           
   708                           	psect	cstackBANK0
   709     0020                     __pcstackBANK0:
   710     0020                     ?_PWM_duty:
   711     0020                     PWM_duty@chn:	
   712                           ; 1 bytes @ 0x0
   713                           
   714                           
   715                           ; 2 bytes @ 0x0
   716     0020                     	ds	2
   717     0022                     PWM_duty@duty:
   718                           
   719                           ; 4 bytes @ 0x2
   720     0022                     	ds	4
   721     0026                     ??_PWM_duty:
   722                           
   723                           ; 1 bytes @ 0x6
   724     0026                     	ds	1
   725     0027                     ??_isr:
   726                           
   727                           ; 1 bytes @ 0x7
   728     0027                     	ds	7
   729     002E                     ??_setup:
   730     002E                     ??_Lcd_Port:	
   731                           ; 1 bytes @ 0xE
   732                           
   733     002E                     ?___lwdiv:	
   734                           ; 1 bytes @ 0xE
   735                           
   736     002E                     ?___fltol:	
   737                           ; 2 bytes @ 0xE
   738                           
   739     002E                     Lcd_Port@a:	
   740                           ; 4 bytes @ 0xE
   741                           
   742     002E                     ___lwdiv@divisor:	
   743                           ; 1 bytes @ 0xE
   744                           
   745     002E                     ___fltol@f1:	
   746                           ; 2 bytes @ 0xE
   747                           
   748                           
   749                           ; 4 bytes @ 0xE
   750     002E                     	ds	1
   751     002F                     ??_Lcd_Cmd:
   752     002F                     ??_Lcd_Write_Char:	
   753                           ; 1 bytes @ 0xF
   754                           
   755                           
   756                           ; 1 bytes @ 0xF
   757     002F                     	ds	1
   758     0030                     Lcd_Write_Char@temp:
   759     0030                     ___lwdiv@dividend:	
   760                           ; 1 bytes @ 0x10
   761                           
   762                           
   763                           ; 2 bytes @ 0x10
   764     0030                     	ds	1
   765     0031                     Lcd_Cmd@a:
   766     0031                     Lcd_Write_Char@y:	
   767                           ; 1 bytes @ 0x11
   768                           
   769                           
   770                           ; 1 bytes @ 0x11
   771     0031                     	ds	1
   772     0032                     ?_Lcd_Set_Cursor:
   773     0032                     ??_Lcd_Init:	
   774                           ; 1 bytes @ 0x12
   775                           
   776     0032                     ??___fltol:	
   777                           ; 1 bytes @ 0x12
   778                           
   779     0032                     ??___lwdiv:	
   780                           ; 1 bytes @ 0x12
   781                           
   782     0032                     Lcd_Set_Cursor@b:	
   783                           ; 1 bytes @ 0x12
   784                           
   785     0032                     Lcd_Write_Char@a:	
   786                           ; 1 bytes @ 0x12
   787                           
   788     0032                     ___lwdiv@quotient:	
   789                           ; 1 bytes @ 0x12
   790                           
   791                           
   792                           ; 2 bytes @ 0x12
   793     0032                     	ds	1
   794     0033                     ??_Lcd_Set_Cursor:
   795     0033                     ??_Lcd_Write_String:	
   796                           ; 1 bytes @ 0x13
   797                           
   798                           
   799                           ; 1 bytes @ 0x13
   800     0033                     	ds	1
   801     0034                     Lcd_Set_Cursor@a:
   802     0034                     ___lwdiv@counter:	
   803                           ; 1 bytes @ 0x14
   804                           
   805     0034                     Lcd_Write_String@i:	
   806                           ; 1 bytes @ 0x14
   807                           
   808                           
   809                           ; 2 bytes @ 0x14
   810     0034                     	ds	1
   811     0035                     ?___lwmod:
   812     0035                     Lcd_Set_Cursor@z:	
   813                           ; 2 bytes @ 0x15
   814                           
   815     0035                     ___lwmod@divisor:	
   816                           ; 1 bytes @ 0x15
   817                           
   818                           
   819                           ; 2 bytes @ 0x15
   820     0035                     	ds	1
   821     0036                     Lcd_Set_Cursor@y:
   822     0036                     Lcd_Write_String@a:	
   823                           ; 1 bytes @ 0x16
   824                           
   825     0036                     ___fltol@sign1:	
   826                           ; 1 bytes @ 0x16
   827                           
   828                           
   829                           ; 1 bytes @ 0x16
   830     0036                     	ds	1
   831     0037                     Lcd_Set_Cursor@temp:
   832     0037                     ___fltol@exp1:	
   833                           ; 1 bytes @ 0x17
   834                           
   835     0037                     ___lwmod@dividend:	
   836                           ; 1 bytes @ 0x17
   837                           
   838                           
   839                           ; 2 bytes @ 0x17
   840     0037                     	ds	1
   841     0038                     ?_PWM_init:
   842     0038                     PWM_init@chn1:	
   843                           ; 1 bytes @ 0x18
   844                           
   845                           
   846                           ; 2 bytes @ 0x18
   847     0038                     	ds	1
   848     0039                     ??___lwmod:
   849     0039                     ___lwmod@counter:	
   850                           ; 1 bytes @ 0x19
   851                           
   852                           
   853                           ; 1 bytes @ 0x19
   854     0039                     	ds	1
   855     003A                     ?_sprintf:
   856     003A                     sprintf@f:	
   857                           ; 2 bytes @ 0x1A
   858                           
   859     003A                     PWM_init@chn2:	
   860                           ; 1 bytes @ 0x1A
   861                           
   862                           
   863                           ; 2 bytes @ 0x1A
   864     003A                     	ds	2
   865     003C                     PWM_init@periodo_ms:
   866                           
   867                           ; 4 bytes @ 0x1C
   868     003C                     	ds	1
   869     003D                     ??_sprintf:
   870                           
   871                           ; 1 bytes @ 0x1D
   872     003D                     	ds	3
   873     0040                     ??_PWM_init:
   874     0040                     sprintf@flag:	
   875                           ; 1 bytes @ 0x20
   876                           
   877                           
   878                           ; 1 bytes @ 0x20
   879     0040                     	ds	1
   880     0041                     sprintf@ap:
   881                           
   882                           ; 1 bytes @ 0x21
   883     0041                     	ds	1
   884     0042                     sprintf@val:
   885                           
   886                           ; 2 bytes @ 0x22
   887     0042                     	ds	2
   888     0044                     sprintf@prec:
   889                           
   890                           ; 1 bytes @ 0x24
   891     0044                     	ds	1
   892     0045                     sprintf@sp:
   893                           
   894                           ; 1 bytes @ 0x25
   895     0045                     	ds	1
   896     0046                     sprintf@c:
   897                           
   898                           ; 1 bytes @ 0x26
   899     0046                     	ds	1
   900                           
   901                           	psect	maintext
   902     0026                     __pmaintext:	
   903 ;;
   904 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   905 ;;
   906 ;; *************** function _main *****************
   907 ;; Defined at:
   908 ;;		line 98 in file "Slave1prueba.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;		None
   911 ;; Auto vars:     Size  Location     Type
   912 ;;  s3             20   43[BANK1 ] unsigned char [20]
   913 ;;  s2             20   23[BANK1 ] unsigned char [20]
   914 ;;  s              20    3[BANK1 ] unsigned char [20]
   915 ;;  text            9    0        unsigned char [9]
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      void 
   918 ;; Registers used:
   919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   920 ;; Tracked objects:
   921 ;;		On entry : B00/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   925 ;;      Params:         0       0       0       0       0
   926 ;;      Locals:         0       0      60       0       0
   927 ;;      Temps:          0       0       3       0       0
   928 ;;      Totals:         0       0      63       0       0
   929 ;;Total ram usage:       63 bytes
   930 ;; Hardware stack levels required when called: 5
   931 ;; This function calls:
   932 ;;		_Lcd_Init
   933 ;;		_Lcd_Set_Cursor
   934 ;;		_Lcd_Write_String
   935 ;;		_PWM_init
   936 ;;		_setup
   937 ;;		_sprintf
   938 ;; This function is called by:
   939 ;;		Startup code after reset
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943     0026                     _main:	
   944                           ;psect for function _main
   945                           
   946     0026                     l2012:	
   947                           ;incstack = 0
   948                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   949                           
   950                           
   951                           ;Slave1prueba.c: 100:     setup();
   952     0026  120A  118A  25B9  120A  118A  	fcall	_setup
   953     002B                     l2014:
   954                           
   955                           ;Slave1prueba.c: 101:     OSCCON = 0x70;
   956     002B  3070               	movlw	112
   957     002C  1683               	bsf	3,5	;RP0=1, select bank1
   958     002D  1303               	bcf	3,6	;RP1=0, select bank1
   959     002E  008F               	movwf	15	;volatile
   960     002F                     l2016:
   961                           
   962                           ;Slave1prueba.c: 102:      PWM_init (0,0,255);
   963     002F  3000               	movlw	0
   964     0030  1283               	bcf	3,5	;RP0=0, select bank0
   965     0031  1303               	bcf	3,6	;RP1=0, select bank0
   966     0032  00B8               	movwf	PWM_init@chn1
   967     0033  00B9               	movwf	PWM_init@chn1+1
   968     0034  3000               	movlw	0
   969     0035  00BA               	movwf	PWM_init@chn2
   970     0036  00BB               	movwf	PWM_init@chn2+1
   971     0037  3043               	movlw	67
   972     0038  00BF               	movwf	PWM_init@periodo_ms+3
   973     0039  307F               	movlw	127
   974     003A  00BE               	movwf	PWM_init@periodo_ms+2
   975     003B  3000               	movlw	0
   976     003C  00BD               	movwf	PWM_init@periodo_ms+1
   977     003D  3000               	movlw	0
   978     003E  00BC               	movwf	PWM_init@periodo_ms
   979     003F  120A  118A  2574  120A  118A  	fcall	_PWM_init
   980     0044                     l2018:
   981                           
   982                           ;Slave1prueba.c: 103:     ADCON0bits.GO =1;
   983     0044  1283               	bcf	3,5	;RP0=0, select bank0
   984     0045  1303               	bcf	3,6	;RP1=0, select bank0
   985     0046  149F               	bsf	31,1	;volatile
   986     0047                     l2020:
   987                           
   988                           ;Slave1prueba.c: 105:   _delay((unsigned long)((500)*(8000000/4000.0)));
   989     0047  3006               	movlw	6
   990     0048  1683               	bsf	3,5	;RP0=1, select bank1
   991     0049  1303               	bcf	3,6	;RP1=0, select bank1
   992     004A  00A2               	movwf	(??_main^(0+128)+2)
   993     004B  3013               	movlw	19
   994     004C  00A1               	movwf	(??_main^(0+128)+1)
   995     004D  30AD               	movlw	173
   996     004E  00A0               	movwf	??_main^(0+128)
   997     004F                     u1777:
   998     004F  0BA0               	decfsz	??_main^(0+128),f
   999     0050  284F               	goto	u1777
  1000     0051  0BA1               	decfsz	(??_main^(0+128)+1),f
  1001     0052  284F               	goto	u1777
  1002     0053  0BA2               	decfsz	(??_main^(0+128)+2),f
  1003     0054  284F               	goto	u1777
  1004     0055                     l2022:
  1005                           
  1006                           ;Slave1prueba.c: 108:  Lcd_Init();
  1007     0055  120A  118A  2480  120A  118A  	fcall	_Lcd_Init
  1008     005A                     l2024:
  1009                           
  1010                           ;Slave1prueba.c: 109:  ADCON0bits.GO =1;
  1011     005A  1283               	bcf	3,5	;RP0=0, select bank0
  1012     005B  1303               	bcf	3,6	;RP1=0, select bank0
  1013     005C  149F               	bsf	31,1	;volatile
  1014     005D                     l2026:
  1015                           
  1016                           ;Slave1prueba.c: 110:  char text[9];;Slave1prueba.c: 111:     i=0;
  1017     005D  1683               	bsf	3,5	;RP0=1, select bank1
  1018     005E  1303               	bcf	3,6	;RP1=0, select bank1
  1019     005F  01DF               	clrf	_i^(0+128)
  1020     0060  01E0               	clrf	(_i+1)^(0+128)
  1021     0061                     l2028:
  1022                           
  1023                           ;Slave1prueba.c: 114:     {;Slave1prueba.c: 116:        if (ADCON0bits.GO ==0){
  1024     0061  1283               	bcf	3,5	;RP0=0, select bank0
  1025     0062  1303               	bcf	3,6	;RP1=0, select bank0
  1026     0063  189F               	btfsc	31,1	;volatile
  1027     0064  2866               	goto	u1671
  1028     0065  2867               	goto	u1670
  1029     0066                     u1671:
  1030     0066  2892               	goto	l257
  1031     0067                     u1670:
  1032     0067                     l2030:
  1033                           
  1034                           ;Slave1prueba.c: 117:            for (i=0;i<=2;i++){
  1035     0067  1683               	bsf	3,5	;RP0=1, select bank1
  1036     0068  1303               	bcf	3,6	;RP1=0, select bank1
  1037     0069  01DF               	clrf	_i^(0+128)
  1038     006A  01E0               	clrf	(_i+1)^(0+128)
  1039     006B                     l2036:
  1040                           
  1041                           ;Slave1prueba.c: 118:            ADCON0bits.CHS = i;
  1042     006B  1683               	bsf	3,5	;RP0=1, select bank1
  1043     006C  1303               	bcf	3,6	;RP1=0, select bank1
  1044     006D  085F               	movf	_i^(0+128),w
  1045     006E  00A0               	movwf	??_main^(0+128)
  1046     006F  0DA0               	rlf	??_main^(0+128),f
  1047     0070  0DA0               	rlf	??_main^(0+128),f
  1048     0071  1283               	bcf	3,5	;RP0=0, select bank0
  1049     0072  1303               	bcf	3,6	;RP1=0, select bank0
  1050     0073  081F               	movf	31,w	;volatile
  1051     0074  1683               	bsf	3,5	;RP0=1, select bank1
  1052     0075  1303               	bcf	3,6	;RP1=0, select bank1
  1053     0076  0620               	xorwf	??_main^(0+128),w
  1054     0077  39C3               	andlw	-61
  1055     0078  0620               	xorwf	??_main^(0+128),w
  1056     0079  1283               	bcf	3,5	;RP0=0, select bank0
  1057     007A  1303               	bcf	3,6	;RP1=0, select bank0
  1058     007B  009F               	movwf	31	;volatile
  1059     007C                     l2038:
  1060                           
  1061                           ;Slave1prueba.c: 119:            ADCON0bits.GO =1;
  1062     007C  149F               	bsf	31,1	;volatile
  1063     007D                     l2040:
  1064                           
  1065                           ;Slave1prueba.c: 121:            }
  1066     007D  3001               	movlw	1
  1067     007E  1683               	bsf	3,5	;RP0=1, select bank1
  1068     007F  1303               	bcf	3,6	;RP1=0, select bank1
  1069     0080  07DF               	addwf	_i^(0+128),f
  1070     0081  1803               	skipnc
  1071     0082  0AE0               	incf	(_i+1)^(0+128),f
  1072     0083  3000               	movlw	0
  1073     0084  07E0               	addwf	(_i+1)^(0+128),f
  1074     0085                     l2042:
  1075     0085  0860               	movf	(_i+1)^(0+128),w
  1076     0086  3A80               	xorlw	128
  1077     0087  00FF               	movwf	btemp+1
  1078     0088  3080               	movlw	128
  1079     0089  027F               	subwf	btemp+1,w
  1080     008A  1D03               	skipz
  1081     008B  288E               	goto	u1685
  1082     008C  3003               	movlw	3
  1083     008D  025F               	subwf	_i^(0+128),w
  1084     008E                     u1685:
  1085     008E  1C03               	skipc
  1086     008F  2891               	goto	u1681
  1087     0090  2892               	goto	u1680
  1088     0091                     u1681:
  1089     0091  286B               	goto	l2036
  1090     0092                     u1680:
  1091     0092                     l257:	
  1092                           ;Slave1prueba.c: 124:        }
  1093                           
  1094                           
  1095                           ;Slave1prueba.c: 126:        if (!PORTBbits.RB0){
  1096     0092  1283               	bcf	3,5	;RP0=0, select bank0
  1097     0093  1303               	bcf	3,6	;RP1=0, select bank0
  1098     0094  1806               	btfsc	6,0	;volatile
  1099     0095  2897               	goto	u1691
  1100     0096  2898               	goto	u1690
  1101     0097                     u1691:
  1102     0097  289C               	goto	l2046
  1103     0098                     u1690:
  1104     0098                     l2044:
  1105                           
  1106                           ;Slave1prueba.c: 128:                 a ++;
  1107     0098  3001               	movlw	1
  1108     0099  00FF               	movwf	btemp+1
  1109     009A  087F               	movf	btemp+1,w
  1110     009B  07DF               	addwf	_a,f
  1111     009C                     l2046:
  1112                           
  1113                           ;Slave1prueba.c: 131:     if (!PORTBbits.RB1){
  1114     009C  1886               	btfsc	6,1	;volatile
  1115     009D  289F               	goto	u1701
  1116     009E  28A0               	goto	u1700
  1117     009F                     u1701:
  1118     009F  28A6               	goto	l2050
  1119     00A0                     u1700:
  1120     00A0                     l2048:
  1121                           
  1122                           ;Slave1prueba.c: 133:                 b ++;
  1123     00A0  3001               	movlw	1
  1124     00A1  00FF               	movwf	btemp+1
  1125     00A2  087F               	movf	btemp+1,w
  1126     00A3  1683               	bsf	3,5	;RP0=1, select bank1
  1127     00A4  1303               	bcf	3,6	;RP1=0, select bank1
  1128     00A5  07E2               	addwf	_b^(0+128),f
  1129     00A6                     l2050:
  1130                           
  1131                           ;Slave1prueba.c: 137:        if (!PORTBbits.RB2){
  1132     00A6  1283               	bcf	3,5	;RP0=0, select bank0
  1133     00A7  1906               	btfsc	6,2	;volatile
  1134     00A8  28AA               	goto	u1711
  1135     00A9  28AB               	goto	u1710
  1136     00AA                     u1711:
  1137     00AA  28B0               	goto	l262
  1138     00AB                     u1710:
  1139     00AB                     l263:
  1140     00AB  1D06               	btfss	6,2	;volatile
  1141     00AC  28AE               	goto	u1721
  1142     00AD  28AF               	goto	u1720
  1143     00AE                     u1721:
  1144     00AE  28AB               	goto	l263
  1145     00AF                     u1720:
  1146     00AF                     l265:
  1147                           
  1148                           ;Slave1prueba.c: 139:              PORTEbits.RE0 = 1;
  1149     00AF  1409               	bsf	9,0	;volatile
  1150     00B0                     l262:	
  1151                           ;Slave1prueba.c: 141:         }
  1152                           
  1153                           
  1154                           ;Slave1prueba.c: 142:         if (!PORTBbits.RB3){
  1155     00B0  1986               	btfsc	6,3	;volatile
  1156     00B1  28B3               	goto	u1731
  1157     00B2  28B4               	goto	u1730
  1158     00B3                     u1731:
  1159     00B3  28C2               	goto	l2060
  1160     00B4                     u1730:
  1161     00B4                     l267:
  1162     00B4  1D86               	btfss	6,3	;volatile
  1163     00B5  28B7               	goto	u1741
  1164     00B6  28B8               	goto	u1740
  1165     00B7                     u1741:
  1166     00B7  28B4               	goto	l267
  1167     00B8                     u1740:
  1168     00B8                     l269:
  1169                           
  1170                           ;Slave1prueba.c: 144:            if( PORTEbits.RE1 == 0){
  1171     00B8  1889               	btfsc	9,1	;volatile
  1172     00B9  28BB               	goto	u1751
  1173     00BA  28BC               	goto	u1750
  1174     00BB                     u1751:
  1175     00BB  28BD               	goto	l270
  1176     00BC                     u1750:
  1177     00BC                     l2056:
  1178                           
  1179                           ;Slave1prueba.c: 145:              PORTEbits.RE1 = 1;
  1180     00BC  1489               	bsf	9,1	;volatile
  1181     00BD                     l270:	
  1182                           ;Slave1prueba.c: 146:            }
  1183                           
  1184                           
  1185                           ;Slave1prueba.c: 147:            if( PORTEbits.RE1 == 1){
  1186     00BD  1C89               	btfss	9,1	;volatile
  1187     00BE  28C0               	goto	u1761
  1188     00BF  28C1               	goto	u1760
  1189     00C0                     u1761:
  1190     00C0  28C2               	goto	l2060
  1191     00C1                     u1760:
  1192     00C1                     l2058:
  1193                           
  1194                           ;Slave1prueba.c: 148:              PORTEbits.RE1 = 0;
  1195     00C1  1089               	bcf	9,1	;volatile
  1196     00C2                     l2060:
  1197                           
  1198                           ;Slave1prueba.c: 154:        char s[20];;Slave1prueba.c: 155:        char s2[20];;Slave1
      +                          prueba.c: 156:        char s3[20];;Slave1prueba.c: 157:         sprintf(s, "%u", rpm);
  1199     00C2  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1200     00C3  00BA               	movwf	sprintf@f
  1201     00C4  1683               	bsf	3,5	;RP0=1, select bank1
  1202     00C5  1303               	bcf	3,6	;RP1=0, select bank1
  1203     00C6  0861               	movf	_rpm^(0+128),w
  1204     00C7  00A0               	movwf	??_main^(0+128)
  1205     00C8  01A1               	clrf	(??_main^(0+128)+1)
  1206     00C9  0820               	movf	??_main^(0+128),w
  1207     00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1208     00CB  1303               	bcf	3,6	;RP1=0, select bank0
  1209     00CC  00BB               	movwf	?_sprintf+1
  1210     00CD  1683               	bsf	3,5	;RP0=1, select bank1
  1211     00CE  1303               	bcf	3,6	;RP1=0, select bank1
  1212     00CF  0821               	movf	(??_main+1)^(0+128),w
  1213     00D0  1283               	bcf	3,5	;RP0=0, select bank0
  1214     00D1  1303               	bcf	3,6	;RP1=0, select bank0
  1215     00D2  00BC               	movwf	?_sprintf+2
  1216     00D3  30A3               	movlw	(low (main@s| 0))& (0+255)
  1217     00D4  120A  118A  2226  120A  118A  	fcall	_sprintf
  1218                           
  1219                           ;Slave1prueba.c: 158:         sprintf(s2, "%u", a);
  1220     00D9  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1221     00DA  1283               	bcf	3,5	;RP0=0, select bank0
  1222     00DB  1303               	bcf	3,6	;RP1=0, select bank0
  1223     00DC  00BA               	movwf	sprintf@f
  1224     00DD  085F               	movf	_a,w
  1225     00DE  1683               	bsf	3,5	;RP0=1, select bank1
  1226     00DF  1303               	bcf	3,6	;RP1=0, select bank1
  1227     00E0  00A0               	movwf	??_main^(0+128)
  1228     00E1  01A1               	clrf	(??_main^(0+128)+1)
  1229     00E2  0820               	movf	??_main^(0+128),w
  1230     00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1231     00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1232     00E5  00BB               	movwf	?_sprintf+1
  1233     00E6  1683               	bsf	3,5	;RP0=1, select bank1
  1234     00E7  1303               	bcf	3,6	;RP1=0, select bank1
  1235     00E8  0821               	movf	(??_main+1)^(0+128),w
  1236     00E9  1283               	bcf	3,5	;RP0=0, select bank0
  1237     00EA  1303               	bcf	3,6	;RP1=0, select bank0
  1238     00EB  00BC               	movwf	?_sprintf+2
  1239     00EC  30B7               	movlw	(low (main@s2| 0))& (0+255)
  1240     00ED  120A  118A  2226  120A  118A  	fcall	_sprintf
  1241                           
  1242                           ;Slave1prueba.c: 159:         sprintf(s3, "%u", b);
  1243     00F2  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1244     00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1245     00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1246     00F5  00BA               	movwf	sprintf@f
  1247     00F6  1683               	bsf	3,5	;RP0=1, select bank1
  1248     00F7  1303               	bcf	3,6	;RP1=0, select bank1
  1249     00F8  0862               	movf	_b^(0+128),w
  1250     00F9  00A0               	movwf	??_main^(0+128)
  1251     00FA  01A1               	clrf	(??_main^(0+128)+1)
  1252     00FB  0820               	movf	??_main^(0+128),w
  1253     00FC  1283               	bcf	3,5	;RP0=0, select bank0
  1254     00FD  1303               	bcf	3,6	;RP1=0, select bank0
  1255     00FE  00BB               	movwf	?_sprintf+1
  1256     00FF  1683               	bsf	3,5	;RP0=1, select bank1
  1257     0100  1303               	bcf	3,6	;RP1=0, select bank1
  1258     0101  0821               	movf	(??_main+1)^(0+128),w
  1259     0102  1283               	bcf	3,5	;RP0=0, select bank0
  1260     0103  1303               	bcf	3,6	;RP1=0, select bank0
  1261     0104  00BC               	movwf	?_sprintf+2
  1262     0105  30CB               	movlw	(low (main@s3| 0))& (0+255)
  1263     0106  120A  118A  2226  120A  118A  	fcall	_sprintf
  1264     010B                     l2062:
  1265                           
  1266                           ;Slave1prueba.c: 160:     Lcd_Set_Cursor(1,1);
  1267     010B  1283               	bcf	3,5	;RP0=0, select bank0
  1268     010C  1303               	bcf	3,6	;RP1=0, select bank0
  1269     010D  01B2               	clrf	Lcd_Set_Cursor@b
  1270     010E  0AB2               	incf	Lcd_Set_Cursor@b,f
  1271     010F  3001               	movlw	1
  1272     0110  120A  118A  24E2  120A  118A  	fcall	_Lcd_Set_Cursor
  1273     0115                     l2064:
  1274                           
  1275                           ;Slave1prueba.c: 161:     Lcd_Write_String(s);
  1276     0115  30A3               	movlw	(low (main@s| 0))& (0+255)
  1277     0116  120A  118A  266E  120A  118A  	fcall	_Lcd_Write_String
  1278     011B                     l2066:
  1279                           
  1280                           ;Slave1prueba.c: 162:     Lcd_Set_Cursor(1,4);
  1281     011B  3004               	movlw	4
  1282     011C  1283               	bcf	3,5	;RP0=0, select bank0
  1283     011D  1303               	bcf	3,6	;RP1=0, select bank0
  1284     011E  00B2               	movwf	Lcd_Set_Cursor@b
  1285     011F  3001               	movlw	1
  1286     0120  120A  118A  24E2  120A  118A  	fcall	_Lcd_Set_Cursor
  1287     0125                     l2068:
  1288                           
  1289                           ;Slave1prueba.c: 163:     Lcd_Write_String(s2);
  1290     0125  30B7               	movlw	(low (main@s2| 0))& (0+255)
  1291     0126  120A  118A  266E  120A  118A  	fcall	_Lcd_Write_String
  1292     012B                     l2070:
  1293                           
  1294                           ;Slave1prueba.c: 164:     Lcd_Set_Cursor(1,8);
  1295     012B  3008               	movlw	8
  1296     012C  1283               	bcf	3,5	;RP0=0, select bank0
  1297     012D  1303               	bcf	3,6	;RP1=0, select bank0
  1298     012E  00B2               	movwf	Lcd_Set_Cursor@b
  1299     012F  3001               	movlw	1
  1300     0130  120A  118A  24E2  120A  118A  	fcall	_Lcd_Set_Cursor
  1301     0135                     l2072:
  1302                           
  1303                           ;Slave1prueba.c: 165:     Lcd_Write_String(s3);
  1304     0135  30CB               	movlw	(low (main@s3| 0))& (0+255)
  1305     0136  120A  118A  266E  120A  118A  	fcall	_Lcd_Write_String
  1306     013B  2861               	goto	l2028
  1307     013C  120A  118A  2810   	ljmp	start
  1308     013F                     __end_of_main:
  1309                           
  1310                           	psect	text1
  1311     0226                     __ptext1:	
  1312 ;; *************** function _sprintf *****************
  1313 ;; Defined at:
  1314 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;  sp              1    wreg     PTR unsigned char 
  1317 ;;		 -> main@s3(20), main@s2(20), main@s(20), 
  1318 ;;  f               1   26[BANK0 ] PTR const unsigned char 
  1319 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;  sp              1   37[BANK0 ] PTR unsigned char 
  1322 ;;		 -> main@s3(20), main@s2(20), main@s(20), 
  1323 ;;  tmpval          4    0        struct .
  1324 ;;  val             2   34[BANK0 ] unsigned int 
  1325 ;;  cp              2    0        PTR const unsigned char 
  1326 ;;  len             2    0        unsigned int 
  1327 ;;  c               1   38[BANK0 ] unsigned char 
  1328 ;;  prec            1   36[BANK0 ] char 
  1329 ;;  ap              1   33[BANK0 ] PTR void [1]
  1330 ;;		 -> ?_sprintf(2), 
  1331 ;;  flag            1   32[BANK0 ] unsigned char 
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  2   26[BANK0 ] int 
  1334 ;; Registers used:
  1335 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1341 ;;      Params:         0       3       0       0       0
  1342 ;;      Locals:         0       7       0       0       0
  1343 ;;      Temps:          0       3       0       0       0
  1344 ;;      Totals:         0      13       0       0       0
  1345 ;;Total ram usage:       13 bytes
  1346 ;; Hardware stack levels used: 1
  1347 ;; Hardware stack levels required when called: 3
  1348 ;; This function calls:
  1349 ;;		___lwdiv
  1350 ;;		___lwmod
  1351 ;; This function is called by:
  1352 ;;		_main
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356     0226                     _sprintf:	
  1357                           ;psect for function _sprintf
  1358                           
  1359                           
  1360                           ;incstack = 0
  1361                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1362                           ;sprintf@sp stored from wreg
  1363     0226  1283               	bcf	3,5	;RP0=0, select bank0
  1364     0227  1303               	bcf	3,6	;RP1=0, select bank0
  1365     0228  00C5               	movwf	sprintf@sp
  1366     0229                     l1738:
  1367                           
  1368                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1369     0229  303B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1370     022A  00C1               	movwf	sprintf@ap
  1371                           
  1372                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1373     022B  2AD4               	goto	l1782
  1374     022C                     l1740:
  1375                           
  1376                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1377     022C  3025               	movlw	37
  1378     022D  0646               	xorwf	sprintf@c,w
  1379     022E  1903               	btfsc	3,2
  1380     022F  2A31               	goto	u1211
  1381     0230  2A32               	goto	u1210
  1382     0231                     u1211:
  1383     0231  2A3C               	goto	l1746
  1384     0232                     u1210:
  1385     0232                     l1742:
  1386                           
  1387                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1388     0232  0845               	movf	sprintf@sp,w
  1389     0233  0084               	movwf	4
  1390     0234  0846               	movf	sprintf@c,w
  1391     0235  1383               	bcf	3,7	;select IRP bank0
  1392     0236  0080               	movwf	0
  1393     0237                     l1744:
  1394     0237  3001               	movlw	1
  1395     0238  00FF               	movwf	btemp+1
  1396     0239  087F               	movf	btemp+1,w
  1397     023A  07C5               	addwf	sprintf@sp,f
  1398                           
  1399                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  1400     023B  2AD4               	goto	l1782
  1401     023C                     l1746:
  1402                           
  1403                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1404     023C  01C0               	clrf	sprintf@flag
  1405                           
  1406                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1407     023D  2A43               	goto	l1752
  1408     023E                     l1748:
  1409                           
  1410                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1411     023E  30C0               	movlw	192
  1412     023F  00FF               	movwf	btemp+1
  1413     0240  087F               	movf	btemp+1,w
  1414     0241  04C0               	iorwf	sprintf@flag,f
  1415                           
  1416                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 845:    break;
  1417     0242  2A5D               	goto	l1754
  1418     0243                     l1752:
  1419     0243  3001               	movlw	1
  1420     0244  07BA               	addwf	sprintf@f,f
  1421     0245  30FF               	movlw	-1
  1422     0246  073A               	addwf	sprintf@f,w
  1423     0247  0084               	movwf	4
  1424     0248  120A  118A  26E5  120A  118A  	fcall	stringdir
  1425     024D  00C6               	movwf	sprintf@c
  1426     024E  00BD               	movwf	??_sprintf
  1427     024F  01BE               	clrf	??_sprintf+1
  1428                           
  1429                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1430                           ; Switch size 1, requested type "simple"
  1431                           ; Number of cases is 1, Range of values is 0 to 0
  1432                           ; switch strategies available:
  1433                           ; Name         Instructions Cycles
  1434                           ; simple_byte            4     3 (average)
  1435                           ; direct_byte           11     8 (fixed)
  1436                           ; jumptable            260     6 (fixed)
  1437                           ;	Chosen strategy is simple_byte
  1438     0250  083E               	movf	??_sprintf+1,w
  1439     0251  3A00               	xorlw	0	; case 0
  1440     0252  1903               	skipnz
  1441     0253  2A55               	goto	l2094
  1442     0254  2AD4               	goto	l1782
  1443     0255                     l2094:
  1444                           
  1445                           ; Switch size 1, requested type "simple"
  1446                           ; Number of cases is 2, Range of values is 0 to 117
  1447                           ; switch strategies available:
  1448                           ; Name         Instructions Cycles
  1449                           ; simple_byte            7     4 (average)
  1450                           ; jumptable            260     6 (fixed)
  1451                           ;	Chosen strategy is simple_byte
  1452     0255  083D               	movf	??_sprintf,w
  1453     0256  3A00               	xorlw	0	; case 0
  1454     0257  1903               	skipnz
  1455     0258  2AE4               	goto	l1784
  1456     0259  3A75               	xorlw	117	; case 117
  1457     025A  1903               	skipnz
  1458     025B  2A3E               	goto	l1748
  1459     025C  2AD4               	goto	l1782
  1460     025D                     l1754:
  1461                           
  1462                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1463     025D  0841               	movf	sprintf@ap,w
  1464     025E  0084               	movwf	4
  1465     025F  1383               	bcf	3,7	;select IRP bank0
  1466     0260  0800               	movf	0,w
  1467     0261  00C2               	movwf	sprintf@val
  1468     0262  0A84               	incf	4,f
  1469     0263  0800               	movf	0,w
  1470     0264  00C3               	movwf	sprintf@val+1
  1471     0265                     l1756:
  1472     0265  3002               	movlw	2
  1473     0266  00FF               	movwf	btemp+1
  1474     0267  087F               	movf	btemp+1,w
  1475     0268  07C1               	addwf	sprintf@ap,f
  1476     0269                     l1758:
  1477                           
  1478                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1479     0269  01C6               	clrf	sprintf@c
  1480     026A  0AC6               	incf	sprintf@c,f
  1481     026B                     l1764:
  1482                           
  1483                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1484     026B  0846               	movf	sprintf@c,w
  1485     026C  00BD               	movwf	??_sprintf
  1486     026D  073D               	addwf	??_sprintf,w
  1487     026E  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1488     026F  0084               	movwf	4
  1489     0270  120A  118A  26E5  120A  118A  	fcall	stringdir
  1490     0275  00BE               	movwf	??_sprintf+1
  1491     0276  120A  118A  26E5  120A  118A  	fcall	stringdir
  1492     027B  00BF               	movwf	??_sprintf+2
  1493     027C  083F               	movf	??_sprintf+2,w
  1494     027D  0243               	subwf	sprintf@val+1,w
  1495     027E  1D03               	skipz
  1496     027F  2A82               	goto	u1225
  1497     0280  083E               	movf	??_sprintf+1,w
  1498     0281  0242               	subwf	sprintf@val,w
  1499     0282                     u1225:
  1500     0282  1803               	skipnc
  1501     0283  2A85               	goto	u1221
  1502     0284  2A86               	goto	u1220
  1503     0285                     u1221:
  1504     0285  2A87               	goto	l1768
  1505     0286                     u1220:
  1506     0286  2A91               	goto	l1772
  1507     0287                     l1768:
  1508     0287  3001               	movlw	1
  1509     0288  00FF               	movwf	btemp+1
  1510     0289  087F               	movf	btemp+1,w
  1511     028A  07C6               	addwf	sprintf@c,f
  1512     028B                     l1770:
  1513     028B  3005               	movlw	5
  1514     028C  0646               	xorwf	sprintf@c,w
  1515     028D  1D03               	btfss	3,2
  1516     028E  2A90               	goto	u1231
  1517     028F  2A91               	goto	u1230
  1518     0290                     u1231:
  1519     0290  2A6B               	goto	l1764
  1520     0291                     u1230:
  1521     0291                     l1772:
  1522                           
  1523                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1524     0291  0846               	movf	sprintf@c,w
  1525     0292  00C4               	movwf	sprintf@prec
  1526                           
  1527                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1528     0293  2ACB               	goto	l1780
  1529     0294                     l1774:
  1530                           
  1531                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1532     0294  300A               	movlw	10
  1533     0295  00B5               	movwf	___lwmod@divisor
  1534     0296  3000               	movlw	0
  1535     0297  00B6               	movwf	___lwmod@divisor+1
  1536     0298  0844               	movf	sprintf@prec,w
  1537     0299  00BD               	movwf	??_sprintf
  1538     029A  073D               	addwf	??_sprintf,w
  1539     029B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1540     029C  0084               	movwf	4
  1541     029D  120A  118A  26E5  120A  118A  	fcall	stringdir
  1542     02A2  00AE               	movwf	___lwdiv@divisor
  1543     02A3  120A  118A  26E5  120A  118A  	fcall	stringdir
  1544     02A8  00AF               	movwf	___lwdiv@divisor+1
  1545     02A9  0843               	movf	sprintf@val+1,w
  1546     02AA  00B1               	movwf	___lwdiv@dividend+1
  1547     02AB  0842               	movf	sprintf@val,w
  1548     02AC  00B0               	movwf	___lwdiv@dividend
  1549     02AD  120A  118A  252E  120A  118A  	fcall	___lwdiv
  1550     02B2  1283               	bcf	3,5	;RP0=0, select bank0
  1551     02B3  1303               	bcf	3,6	;RP1=0, select bank0
  1552     02B4  082F               	movf	?___lwdiv+1,w
  1553     02B5  00B8               	movwf	___lwmod@dividend+1
  1554     02B6  082E               	movf	?___lwdiv,w
  1555     02B7  00B7               	movwf	___lwmod@dividend
  1556     02B8  120A  118A  25F9  120A  118A  	fcall	___lwmod
  1557     02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1558     02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1559     02BF  0835               	movf	?___lwmod,w
  1560     02C0  3E30               	addlw	48
  1561     02C1  00C6               	movwf	sprintf@c
  1562     02C2                     l1776:
  1563                           
  1564                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1565     02C2  0845               	movf	sprintf@sp,w
  1566     02C3  0084               	movwf	4
  1567     02C4  0846               	movf	sprintf@c,w
  1568     02C5  1383               	bcf	3,7	;select IRP bank0
  1569     02C6  0080               	movwf	0
  1570     02C7                     l1778:
  1571     02C7  3001               	movlw	1
  1572     02C8  00FF               	movwf	btemp+1
  1573     02C9  087F               	movf	btemp+1,w
  1574     02CA  07C5               	addwf	sprintf@sp,f
  1575     02CB                     l1780:
  1576                           
  1577                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1578     02CB  30FF               	movlw	255
  1579     02CC  00FF               	movwf	btemp+1
  1580     02CD  087F               	movf	btemp+1,w
  1581     02CE  07C4               	addwf	sprintf@prec,f
  1582     02CF  0A44               	incf	sprintf@prec,w
  1583     02D0  1D03               	btfss	3,2
  1584     02D1  2AD3               	goto	u1241
  1585     02D2  2AD4               	goto	u1240
  1586     02D3                     u1241:
  1587     02D3  2A94               	goto	l1774
  1588     02D4                     u1240:
  1589     02D4                     l1782:
  1590                           
  1591                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1592     02D4  3001               	movlw	1
  1593     02D5  07BA               	addwf	sprintf@f,f
  1594     02D6  30FF               	movlw	-1
  1595     02D7  073A               	addwf	sprintf@f,w
  1596     02D8  0084               	movwf	4
  1597     02D9  120A  118A  26E5  120A  118A  	fcall	stringdir
  1598     02DE  00C6               	movwf	sprintf@c
  1599     02DF  0846               	movf	sprintf@c,w
  1600     02E0  1D03               	btfss	3,2
  1601     02E1  2AE3               	goto	u1251
  1602     02E2  2AE4               	goto	u1250
  1603     02E3                     u1251:
  1604     02E3  2A2C               	goto	l1740
  1605     02E4                     u1250:
  1606     02E4                     l1784:
  1607                           
  1608                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1609     02E4  0845               	movf	sprintf@sp,w
  1610     02E5  0084               	movwf	4
  1611     02E6  1383               	bcf	3,7	;select IRP bank0
  1612     02E7  0180               	clrf	0
  1613     02E8                     l384:
  1614     02E8  0008               	return
  1615     02E9                     __end_of_sprintf:
  1616                           
  1617                           	psect	text2
  1618     05F9                     __ptext2:	
  1619 ;; *************** function ___lwmod *****************
  1620 ;; Defined at:
  1621 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  divisor         2   21[BANK0 ] unsigned int 
  1624 ;;  dividend        2   23[BANK0 ] unsigned int 
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;  counter         1   25[BANK0 ] unsigned char 
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  2   21[BANK0 ] unsigned int 
  1629 ;; Registers used:
  1630 ;;		wreg, status,2, status,0, btemp+1
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1636 ;;      Params:         0       4       0       0       0
  1637 ;;      Locals:         0       1       0       0       0
  1638 ;;      Temps:          0       0       0       0       0
  1639 ;;      Totals:         0       5       0       0       0
  1640 ;;Total ram usage:        5 bytes
  1641 ;; Hardware stack levels used: 1
  1642 ;; Hardware stack levels required when called: 2
  1643 ;; This function calls:
  1644 ;;		Nothing
  1645 ;; This function is called by:
  1646 ;;		_sprintf
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650     05F9                     ___lwmod:	
  1651                           ;psect for function ___lwmod
  1652                           
  1653     05F9                     l1586:	
  1654                           ;incstack = 0
  1655                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  1656                           
  1657     05F9  1283               	bcf	3,5	;RP0=0, select bank0
  1658     05FA  1303               	bcf	3,6	;RP1=0, select bank0
  1659     05FB  0835               	movf	___lwmod@divisor,w
  1660     05FC  0436               	iorwf	___lwmod@divisor+1,w
  1661     05FD  1903               	btfsc	3,2
  1662     05FE  2E00               	goto	u1081
  1663     05FF  2E01               	goto	u1080
  1664     0600                     u1081:
  1665     0600  2E30               	goto	l1604
  1666     0601                     u1080:
  1667     0601                     l1588:
  1668     0601  01B9               	clrf	___lwmod@counter
  1669     0602  0AB9               	incf	___lwmod@counter,f
  1670     0603  2E0F               	goto	l1594
  1671     0604                     l1590:
  1672     0604  3001               	movlw	1
  1673     0605                     u1095:
  1674     0605  1003               	clrc
  1675     0606  0DB5               	rlf	___lwmod@divisor,f
  1676     0607  0DB6               	rlf	___lwmod@divisor+1,f
  1677     0608  3EFF               	addlw	-1
  1678     0609  1D03               	skipz
  1679     060A  2E05               	goto	u1095
  1680     060B                     l1592:
  1681     060B  3001               	movlw	1
  1682     060C  00FF               	movwf	btemp+1
  1683     060D  087F               	movf	btemp+1,w
  1684     060E  07B9               	addwf	___lwmod@counter,f
  1685     060F                     l1594:
  1686     060F  1FB6               	btfss	___lwmod@divisor+1,7
  1687     0610  2E12               	goto	u1101
  1688     0611  2E13               	goto	u1100
  1689     0612                     u1101:
  1690     0612  2E04               	goto	l1590
  1691     0613                     u1100:
  1692     0613                     l1596:
  1693     0613  0836               	movf	___lwmod@divisor+1,w
  1694     0614  0238               	subwf	___lwmod@dividend+1,w
  1695     0615  1D03               	skipz
  1696     0616  2E19               	goto	u1115
  1697     0617  0835               	movf	___lwmod@divisor,w
  1698     0618  0237               	subwf	___lwmod@dividend,w
  1699     0619                     u1115:
  1700     0619  1C03               	skipc
  1701     061A  2E1C               	goto	u1111
  1702     061B  2E1D               	goto	u1110
  1703     061C                     u1111:
  1704     061C  2E23               	goto	l1600
  1705     061D                     u1110:
  1706     061D                     l1598:
  1707     061D  0835               	movf	___lwmod@divisor,w
  1708     061E  02B7               	subwf	___lwmod@dividend,f
  1709     061F  0836               	movf	___lwmod@divisor+1,w
  1710     0620  1C03               	skipc
  1711     0621  03B8               	decf	___lwmod@dividend+1,f
  1712     0622  02B8               	subwf	___lwmod@dividend+1,f
  1713     0623                     l1600:
  1714     0623  3001               	movlw	1
  1715     0624                     u1125:
  1716     0624  1003               	clrc
  1717     0625  0CB6               	rrf	___lwmod@divisor+1,f
  1718     0626  0CB5               	rrf	___lwmod@divisor,f
  1719     0627  3EFF               	addlw	-1
  1720     0628  1D03               	skipz
  1721     0629  2E24               	goto	u1125
  1722     062A                     l1602:
  1723     062A  3001               	movlw	1
  1724     062B  02B9               	subwf	___lwmod@counter,f
  1725     062C  1D03               	btfss	3,2
  1726     062D  2E2F               	goto	u1131
  1727     062E  2E30               	goto	u1130
  1728     062F                     u1131:
  1729     062F  2E13               	goto	l1596
  1730     0630                     u1130:
  1731     0630                     l1604:
  1732     0630  0838               	movf	___lwmod@dividend+1,w
  1733     0631  00B6               	movwf	?___lwmod+1
  1734     0632  0837               	movf	___lwmod@dividend,w
  1735     0633  00B5               	movwf	?___lwmod
  1736     0634                     l670:
  1737     0634  0008               	return
  1738     0635                     __end_of___lwmod:
  1739                           
  1740                           	psect	text3
  1741     052E                     __ptext3:	
  1742 ;; *************** function ___lwdiv *****************
  1743 ;; Defined at:
  1744 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  divisor         2   14[BANK0 ] unsigned int 
  1747 ;;  dividend        2   16[BANK0 ] unsigned int 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  quotient        2   18[BANK0 ] unsigned int 
  1750 ;;  counter         1   20[BANK0 ] unsigned char 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  2   14[BANK0 ] unsigned int 
  1753 ;; Registers used:
  1754 ;;		wreg, status,2, status,0, btemp+1
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1760 ;;      Params:         0       4       0       0       0
  1761 ;;      Locals:         0       3       0       0       0
  1762 ;;      Temps:          0       0       0       0       0
  1763 ;;      Totals:         0       7       0       0       0
  1764 ;;Total ram usage:        7 bytes
  1765 ;; Hardware stack levels used: 1
  1766 ;; Hardware stack levels required when called: 2
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_sprintf
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774     052E                     ___lwdiv:	
  1775                           ;psect for function ___lwdiv
  1776                           
  1777     052E                     l1560:	
  1778                           ;incstack = 0
  1779                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1780                           
  1781     052E  1283               	bcf	3,5	;RP0=0, select bank0
  1782     052F  1303               	bcf	3,6	;RP1=0, select bank0
  1783     0530  01B2               	clrf	___lwdiv@quotient
  1784     0531  01B3               	clrf	___lwdiv@quotient+1
  1785     0532                     l1562:
  1786     0532  082E               	movf	___lwdiv@divisor,w
  1787     0533  042F               	iorwf	___lwdiv@divisor+1,w
  1788     0534  1903               	btfsc	3,2
  1789     0535  2D37               	goto	u1011
  1790     0536  2D38               	goto	u1010
  1791     0537                     u1011:
  1792     0537  2D6F               	goto	l1582
  1793     0538                     u1010:
  1794     0538                     l1564:
  1795     0538  01B4               	clrf	___lwdiv@counter
  1796     0539  0AB4               	incf	___lwdiv@counter,f
  1797     053A  2D46               	goto	l1570
  1798     053B                     l1566:
  1799     053B  3001               	movlw	1
  1800     053C                     u1025:
  1801     053C  1003               	clrc
  1802     053D  0DAE               	rlf	___lwdiv@divisor,f
  1803     053E  0DAF               	rlf	___lwdiv@divisor+1,f
  1804     053F  3EFF               	addlw	-1
  1805     0540  1D03               	skipz
  1806     0541  2D3C               	goto	u1025
  1807     0542                     l1568:
  1808     0542  3001               	movlw	1
  1809     0543  00FF               	movwf	btemp+1
  1810     0544  087F               	movf	btemp+1,w
  1811     0545  07B4               	addwf	___lwdiv@counter,f
  1812     0546                     l1570:
  1813     0546  1FAF               	btfss	___lwdiv@divisor+1,7
  1814     0547  2D49               	goto	u1031
  1815     0548  2D4A               	goto	u1030
  1816     0549                     u1031:
  1817     0549  2D3B               	goto	l1566
  1818     054A                     u1030:
  1819     054A                     l1572:
  1820     054A  3001               	movlw	1
  1821     054B                     u1045:
  1822     054B  1003               	clrc
  1823     054C  0DB2               	rlf	___lwdiv@quotient,f
  1824     054D  0DB3               	rlf	___lwdiv@quotient+1,f
  1825     054E  3EFF               	addlw	-1
  1826     054F  1D03               	skipz
  1827     0550  2D4B               	goto	u1045
  1828     0551  082F               	movf	___lwdiv@divisor+1,w
  1829     0552  0231               	subwf	___lwdiv@dividend+1,w
  1830     0553  1D03               	skipz
  1831     0554  2D57               	goto	u1055
  1832     0555  082E               	movf	___lwdiv@divisor,w
  1833     0556  0230               	subwf	___lwdiv@dividend,w
  1834     0557                     u1055:
  1835     0557  1C03               	skipc
  1836     0558  2D5A               	goto	u1051
  1837     0559  2D5B               	goto	u1050
  1838     055A                     u1051:
  1839     055A  2D62               	goto	l1578
  1840     055B                     u1050:
  1841     055B                     l1574:
  1842     055B  082E               	movf	___lwdiv@divisor,w
  1843     055C  02B0               	subwf	___lwdiv@dividend,f
  1844     055D  082F               	movf	___lwdiv@divisor+1,w
  1845     055E  1C03               	skipc
  1846     055F  03B1               	decf	___lwdiv@dividend+1,f
  1847     0560  02B1               	subwf	___lwdiv@dividend+1,f
  1848     0561                     l1576:
  1849     0561  1432               	bsf	___lwdiv@quotient,0
  1850     0562                     l1578:
  1851     0562  3001               	movlw	1
  1852     0563                     u1065:
  1853     0563  1003               	clrc
  1854     0564  0CAF               	rrf	___lwdiv@divisor+1,f
  1855     0565  0CAE               	rrf	___lwdiv@divisor,f
  1856     0566  3EFF               	addlw	-1
  1857     0567  1D03               	skipz
  1858     0568  2D63               	goto	u1065
  1859     0569                     l1580:
  1860     0569  3001               	movlw	1
  1861     056A  02B4               	subwf	___lwdiv@counter,f
  1862     056B  1D03               	btfss	3,2
  1863     056C  2D6E               	goto	u1071
  1864     056D  2D6F               	goto	u1070
  1865     056E                     u1071:
  1866     056E  2D4A               	goto	l1572
  1867     056F                     u1070:
  1868     056F                     l1582:
  1869     056F  0833               	movf	___lwdiv@quotient+1,w
  1870     0570  00AF               	movwf	?___lwdiv+1
  1871     0571  0832               	movf	___lwdiv@quotient,w
  1872     0572  00AE               	movwf	?___lwdiv
  1873     0573                     l660:
  1874     0573  0008               	return
  1875     0574                     __end_of___lwdiv:
  1876                           
  1877                           	psect	text4
  1878     05B9                     __ptext4:	
  1879 ;; *************** function _setup *****************
  1880 ;; Defined at:
  1881 ;;		line 177 in file "Slave1prueba.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;		None
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;		None
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  1    wreg      void 
  1888 ;; Registers used:
  1889 ;;		wreg, status,2, status,0
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1895 ;;      Params:         0       0       0       0       0
  1896 ;;      Locals:         0       0       0       0       0
  1897 ;;      Temps:          0       1       0       0       0
  1898 ;;      Totals:         0       1       0       0       0
  1899 ;;Total ram usage:        1 bytes
  1900 ;; Hardware stack levels used: 1
  1901 ;; Hardware stack levels required when called: 2
  1902 ;; This function calls:
  1903 ;;		Nothing
  1904 ;; This function is called by:
  1905 ;;		_main
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909     05B9                     _setup:	
  1910                           ;psect for function _setup
  1911                           
  1912     05B9                     l1678:	
  1913                           ;incstack = 0
  1914                           ; Regs used in _setup: [wreg+status,2+status,0]
  1915                           
  1916                           
  1917                           ;Slave1prueba.c: 178:     ANSEL = 0b00000011;
  1918     05B9  3003               	movlw	3
  1919     05BA  1683               	bsf	3,5	;RP0=1, select bank3
  1920     05BB  1703               	bsf	3,6	;RP1=1, select bank3
  1921     05BC  0088               	movwf	8	;volatile
  1922     05BD                     l1680:
  1923                           
  1924                           ;Slave1prueba.c: 179:     ANSELH = 0;
  1925     05BD  0189               	clrf	9	;volatile
  1926     05BE                     l1682:
  1927                           
  1928                           ;Slave1prueba.c: 181:     TRISA = 0xFF;
  1929     05BE  30FF               	movlw	255
  1930     05BF  1683               	bsf	3,5	;RP0=1, select bank1
  1931     05C0  1303               	bcf	3,6	;RP1=0, select bank1
  1932     05C1  0085               	movwf	5	;volatile
  1933     05C2                     l1684:
  1934                           
  1935                           ;Slave1prueba.c: 182:     TRISB = 0b11111111;
  1936     05C2  30FF               	movlw	255
  1937     05C3  0086               	movwf	6	;volatile
  1938     05C4                     l1686:
  1939                           
  1940                           ;Slave1prueba.c: 183:     TRISD = 0;
  1941     05C4  0188               	clrf	8	;volatile
  1942     05C5                     l1688:
  1943                           
  1944                           ;Slave1prueba.c: 184:     OPTION_REGbits.nRBPU = 0;
  1945     05C5  1381               	bcf	1,7	;volatile
  1946     05C6                     l1690:
  1947                           
  1948                           ;Slave1prueba.c: 185:     TRISE = 0;
  1949     05C6  0189               	clrf	9	;volatile
  1950     05C7                     l1692:
  1951                           
  1952                           ;Slave1prueba.c: 188:     WPUB = 0b1111;
  1953     05C7  300F               	movlw	15
  1954     05C8  0095               	movwf	21	;volatile
  1955                           
  1956                           ;Slave1prueba.c: 191:     PORTD = 0;
  1957     05C9  1283               	bcf	3,5	;RP0=0, select bank0
  1958     05CA  1303               	bcf	3,6	;RP1=0, select bank0
  1959     05CB  0188               	clrf	8	;volatile
  1960                           
  1961                           ;Slave1prueba.c: 192:     PORTE = 0;
  1962     05CC  0189               	clrf	9	;volatile
  1963     05CD                     l1694:
  1964                           
  1965                           ;Slave1prueba.c: 198:     OSCCONbits.IRCF = 0b0111;
  1966     05CD  3070               	movlw	112
  1967     05CE  1683               	bsf	3,5	;RP0=1, select bank1
  1968     05CF  1303               	bcf	3,6	;RP1=0, select bank1
  1969     05D0  048F               	iorwf	15,f	;volatile
  1970     05D1                     l1696:
  1971                           
  1972                           ;Slave1prueba.c: 199:     OSCCONbits.SCS = 1;
  1973     05D1  140F               	bsf	15,0	;volatile
  1974     05D2                     l1698:
  1975                           
  1976                           ;Slave1prueba.c: 202:     ADCON1bits.ADFM = 0;
  1977     05D2  139F               	bcf	31,7	;volatile
  1978     05D3                     l1700:
  1979                           
  1980                           ;Slave1prueba.c: 203:     ADCON1bits.VCFG0 = 0;
  1981     05D3  121F               	bcf	31,4	;volatile
  1982     05D4                     l1702:
  1983                           
  1984                           ;Slave1prueba.c: 204:     ADCON1bits.VCFG1 = 0;
  1985     05D4  129F               	bcf	31,5	;volatile
  1986     05D5                     l1704:
  1987                           
  1988                           ;Slave1prueba.c: 206:     ADCON0bits.ADCS = 0b01;
  1989     05D5  1283               	bcf	3,5	;RP0=0, select bank0
  1990     05D6  1303               	bcf	3,6	;RP1=0, select bank0
  1991     05D7  081F               	movf	31,w	;volatile
  1992     05D8  393F               	andlw	-193
  1993     05D9  3840               	iorlw	64
  1994     05DA  009F               	movwf	31	;volatile
  1995     05DB                     l1706:
  1996                           
  1997                           ;Slave1prueba.c: 207:     ADCON0bits.CHS = 0;
  1998     05DB  30C3               	movlw	-61
  1999     05DC  059F               	andwf	31,f	;volatile
  2000     05DD                     l1708:
  2001                           
  2002                           ;Slave1prueba.c: 208:     ADCON0bits.ADON= 1;
  2003     05DD  141F               	bsf	31,0	;volatile
  2004     05DE                     l1710:
  2005                           
  2006                           ;Slave1prueba.c: 209:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  2007     05DE  3020               	movlw	32
  2008     05DF  1283               	bcf	3,5	;RP0=0, select bank0
  2009     05E0  1303               	bcf	3,6	;RP1=0, select bank0
  2010     05E1  00AE               	movwf	??_setup
  2011     05E2                     u1787:
  2012     05E2  0BAE               	decfsz	??_setup,f
  2013     05E3  2DE2               	goto	u1787
  2014     05E4  0000               	nop
  2015     05E5                     l1712:
  2016                           
  2017                           ;Slave1prueba.c: 211: OPTION_REGbits.T0CS = 0;
  2018     05E5  1683               	bsf	3,5	;RP0=1, select bank1
  2019     05E6  1303               	bcf	3,6	;RP1=0, select bank1
  2020     05E7  1281               	bcf	1,5	;volatile
  2021     05E8                     l1714:
  2022                           
  2023                           ;Slave1prueba.c: 212: OPTION_REGbits.T0SE = 0;
  2024     05E8  1201               	bcf	1,4	;volatile
  2025     05E9                     l1716:
  2026                           
  2027                           ;Slave1prueba.c: 213: OPTION_REGbits.PSA = 0;
  2028     05E9  1181               	bcf	1,3	;volatile
  2029     05EA                     l1718:
  2030                           
  2031                           ;Slave1prueba.c: 214: OPTION_REGbits.PS2 = 1;
  2032     05EA  1501               	bsf	1,2	;volatile
  2033     05EB                     l1720:
  2034                           
  2035                           ;Slave1prueba.c: 215: OPTION_REGbits.PS1 = 1;
  2036     05EB  1481               	bsf	1,1	;volatile
  2037     05EC                     l1722:
  2038                           
  2039                           ;Slave1prueba.c: 216: OPTION_REGbits.PS0 = 1;
  2040     05EC  1401               	bsf	1,0	;volatile
  2041     05ED                     l1724:
  2042                           
  2043                           ;Slave1prueba.c: 217: TMR0 = 0;
  2044     05ED  1283               	bcf	3,5	;RP0=0, select bank0
  2045     05EE  1303               	bcf	3,6	;RP1=0, select bank0
  2046     05EF  0181               	clrf	1	;volatile
  2047     05F0                     l1726:
  2048                           
  2049                           ;Slave1prueba.c: 221:     PIR1bits.ADIF = 0;
  2050     05F0  130C               	bcf	12,6	;volatile
  2051     05F1                     l1728:
  2052                           
  2053                           ;Slave1prueba.c: 222:     PIE1bits.ADIE = 1;
  2054     05F1  1683               	bsf	3,5	;RP0=1, select bank1
  2055     05F2  1303               	bcf	3,6	;RP1=0, select bank1
  2056     05F3  170C               	bsf	12,6	;volatile
  2057     05F4                     l1730:
  2058                           
  2059                           ;Slave1prueba.c: 224:     INTCONbits.RBIE = 0;
  2060     05F4  118B               	bcf	11,3	;volatile
  2061     05F5                     l1732:
  2062                           
  2063                           ;Slave1prueba.c: 225:     INTCONbits.RBIF = 1;
  2064     05F5  140B               	bsf	11,0	;volatile
  2065     05F6                     l1734:
  2066                           
  2067                           ;Slave1prueba.c: 227:     INTCONbits.PEIE = 1;
  2068     05F6  170B               	bsf	11,6	;volatile
  2069     05F7                     l1736:
  2070                           
  2071                           ;Slave1prueba.c: 228:     INTCONbits.GIE = 1;
  2072     05F7  178B               	bsf	11,7	;volatile
  2073     05F8                     l277:
  2074     05F8  0008               	return
  2075     05F9                     __end_of_setup:
  2076                           
  2077                           	psect	text5
  2078     0574                     __ptext5:	
  2079 ;; *************** function _PWM_init *****************
  2080 ;; Defined at:
  2081 ;;		line 11 in file "PWM.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;  chn1            2   24[BANK0 ] int 
  2084 ;;  chn2            2   26[BANK0 ] int 
  2085 ;;  periodo_ms      4   28[BANK0 ] float 
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;		None
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  1    wreg      void 
  2090 ;; Registers used:
  2091 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2097 ;;      Params:         0       8       0       0       0
  2098 ;;      Locals:         0       0       0       0       0
  2099 ;;      Temps:          0       0       0       0       0
  2100 ;;      Totals:         0       8       0       0       0
  2101 ;;Total ram usage:        8 bytes
  2102 ;; Hardware stack levels used: 1
  2103 ;; Hardware stack levels required when called: 3
  2104 ;; This function calls:
  2105 ;;		___fltol
  2106 ;; This function is called by:
  2107 ;;		_main
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111     0574                     _PWM_init:	
  2112                           ;psect for function _PWM_init
  2113                           
  2114     0574                     l1608:	
  2115                           ;incstack = 0
  2116                           ; Regs used in _PWM_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2117                           
  2118                           
  2119                           ;PWM.c: 13:     TRISCbits.TRISC1 = chn2;
  2120     0574  1283               	bcf	3,5	;RP0=0, select bank0
  2121     0575  1303               	bcf	3,6	;RP1=0, select bank0
  2122     0576  0C3A               	rrf	PWM_init@chn2,w
  2123     0577  1683               	bsf	3,5	;RP0=1, select bank1
  2124     0578  1303               	bcf	3,6	;RP1=0, select bank1
  2125     0579  1C03               	skipc
  2126     057A  1087               	bcf	7,1	;volatile
  2127     057B  1803               	skipnc
  2128     057C  1487               	bsf	7,1	;volatile
  2129                           
  2130                           ;PWM.c: 14:     TRISCbits.TRISC2 = chn1;
  2131     057D  1283               	bcf	3,5	;RP0=0, select bank0
  2132     057E  1303               	bcf	3,6	;RP1=0, select bank0
  2133     057F  0C38               	rrf	PWM_init@chn1,w
  2134     0580  1683               	bsf	3,5	;RP0=1, select bank1
  2135     0581  1303               	bcf	3,6	;RP1=0, select bank1
  2136     0582  1C03               	skipc
  2137     0583  1107               	bcf	7,2	;volatile
  2138     0584  1803               	skipnc
  2139     0585  1507               	bsf	7,2	;volatile
  2140     0586                     l1610:
  2141                           
  2142                           ;PWM.c: 16:     PR2 = periodo_ms;
  2143     0586  1283               	bcf	3,5	;RP0=0, select bank0
  2144     0587  1303               	bcf	3,6	;RP1=0, select bank0
  2145     0588  083F               	movf	PWM_init@periodo_ms+3,w
  2146     0589  00B1               	movwf	___fltol@f1+3
  2147     058A  083E               	movf	PWM_init@periodo_ms+2,w
  2148     058B  00B0               	movwf	___fltol@f1+2
  2149     058C  083D               	movf	PWM_init@periodo_ms+1,w
  2150     058D  00AF               	movwf	___fltol@f1+1
  2151     058E  083C               	movf	PWM_init@periodo_ms,w
  2152     058F  00AE               	movwf	___fltol@f1
  2153     0590  120A  118A  23A1  120A  118A  	fcall	___fltol
  2154     0595  1283               	bcf	3,5	;RP0=0, select bank0
  2155     0596  1303               	bcf	3,6	;RP1=0, select bank0
  2156     0597  082E               	movf	?___fltol,w
  2157     0598  1683               	bsf	3,5	;RP0=1, select bank1
  2158     0599  1303               	bcf	3,6	;RP1=0, select bank1
  2159     059A  0092               	movwf	18	;volatile
  2160     059B                     l1612:
  2161                           
  2162                           ;PWM.c: 17:     CCP1CONbits.P1M =0;
  2163     059B  303F               	movlw	-193
  2164     059C  1283               	bcf	3,5	;RP0=0, select bank0
  2165     059D  1303               	bcf	3,6	;RP1=0, select bank0
  2166     059E  0597               	andwf	23,f	;volatile
  2167     059F                     l1614:
  2168                           
  2169                           ;PWM.c: 18:     CCP1CONbits.CCP1M =0b1100;
  2170     059F  0817               	movf	23,w	;volatile
  2171     05A0  39F0               	andlw	-16
  2172     05A1  380C               	iorlw	12
  2173     05A2  0097               	movwf	23	;volatile
  2174     05A3                     l1616:
  2175                           
  2176                           ;PWM.c: 20:     CCPR1L = 0x0f;
  2177     05A3  300F               	movlw	15
  2178     05A4  0095               	movwf	21	;volatile
  2179     05A5                     l1618:
  2180                           
  2181                           ;PWM.c: 21:     CCP1CONbits.DC1B= 0;
  2182     05A5  30CF               	movlw	-49
  2183     05A6  0597               	andwf	23,f	;volatile
  2184     05A7                     l1620:
  2185                           
  2186                           ;PWM.c: 23:     PIR1bits.TMR2IF =0;
  2187     05A7  108C               	bcf	12,1	;volatile
  2188     05A8                     l1622:
  2189                           
  2190                           ;PWM.c: 24:     T2CONbits.T2CKPS = 0b11;
  2191     05A8  3003               	movlw	3
  2192     05A9  0492               	iorwf	18,f	;volatile
  2193     05AA                     l1624:
  2194                           
  2195                           ;PWM.c: 25:     T2CONbits.TMR2ON = 1;
  2196     05AA  1512               	bsf	18,2	;volatile
  2197     05AB                     l1626:
  2198                           
  2199                           ;PWM.c: 28:     CCP2CONbits.CCP2M = 0b1100;
  2200     05AB  081D               	movf	29,w	;volatile
  2201     05AC  39F0               	andlw	-16
  2202     05AD  380C               	iorlw	12
  2203     05AE  009D               	movwf	29	;volatile
  2204     05AF                     l1628:
  2205                           
  2206                           ;PWM.c: 29:     CCPR2L = 0x0f;
  2207     05AF  300F               	movlw	15
  2208     05B0  009B               	movwf	27	;volatile
  2209     05B1                     l1630:
  2210                           
  2211                           ;PWM.c: 30:     CCP2CONbits.DC2B0 = 0;
  2212     05B1  121D               	bcf	29,4	;volatile
  2213     05B2                     l1632:
  2214                           
  2215                           ;PWM.c: 31:     CCP2CONbits.DC2B1 = 0;
  2216     05B2  129D               	bcf	29,5	;volatile
  2217     05B3                     l84:	
  2218                           ;PWM.c: 34:     while (PIR1bits.TMR2IF == 0);
  2219                           
  2220     05B3  1C8C               	btfss	12,1	;volatile
  2221     05B4  2DB6               	goto	u1141
  2222     05B5  2DB7               	goto	u1140
  2223     05B6                     u1141:
  2224     05B6  2DB3               	goto	l84
  2225     05B7                     u1140:
  2226     05B7                     l86:
  2227                           
  2228                           ;PWM.c: 35:     PIR1bits.TMR2IF = 0;
  2229     05B7  108C               	bcf	12,1	;volatile
  2230     05B8                     l87:
  2231     05B8  0008               	return
  2232     05B9                     __end_of_PWM_init:
  2233                           
  2234                           	psect	text6
  2235     03A1                     __ptext6:	
  2236 ;; *************** function ___fltol *****************
  2237 ;; Defined at:
  2238 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fltol.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;  f1              4   14[BANK0 ] void 
  2241 ;; Auto vars:     Size  Location     Type
  2242 ;;  exp1            1   23[BANK0 ] unsigned char 
  2243 ;;  sign1           1   22[BANK0 ] unsigned char 
  2244 ;; Return value:  Size  Location     Type
  2245 ;;                  4   14[BANK0 ] long 
  2246 ;; Registers used:
  2247 ;;		wreg, status,2, status,0, btemp+1
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2253 ;;      Params:         0       4       0       0       0
  2254 ;;      Locals:         0       2       0       0       0
  2255 ;;      Temps:          0       4       0       0       0
  2256 ;;      Totals:         0      10       0       0       0
  2257 ;;Total ram usage:       10 bytes
  2258 ;; Hardware stack levels used: 1
  2259 ;; Hardware stack levels required when called: 2
  2260 ;; This function calls:
  2261 ;;		Nothing
  2262 ;; This function is called by:
  2263 ;;		_PWM_init
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267     03A1                     ___fltol:	
  2268                           ;psect for function ___fltol
  2269                           
  2270     03A1                     l1522:	
  2271                           ;incstack = 0
  2272                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  2273                           
  2274     03A1  1003               	clrc
  2275     03A2  1283               	bcf	3,5	;RP0=0, select bank0
  2276     03A3  1303               	bcf	3,6	;RP1=0, select bank0
  2277     03A4  0D30               	rlf	___fltol@f1+2,w
  2278     03A5  0D31               	rlf	___fltol@f1+3,w
  2279     03A6  00B7               	movwf	___fltol@exp1
  2280     03A7  0837               	movf	___fltol@exp1,w
  2281     03A8  1D03               	btfss	3,2
  2282     03A9  2BAB               	goto	u911
  2283     03AA  2BAC               	goto	u910
  2284     03AB                     u911:
  2285     03AB  2BB5               	goto	l1528
  2286     03AC                     u910:
  2287     03AC                     l1524:
  2288     03AC  3000               	movlw	0
  2289     03AD  00B1               	movwf	?___fltol+3
  2290     03AE  3000               	movlw	0
  2291     03AF  00B0               	movwf	?___fltol+2
  2292     03B0  3000               	movlw	0
  2293     03B1  00AF               	movwf	?___fltol+1
  2294     03B2  3000               	movlw	0
  2295     03B3  00AE               	movwf	?___fltol
  2296     03B4  2C18               	goto	l574
  2297     03B5                     l1528:
  2298     03B5  082E               	movf	___fltol@f1,w
  2299     03B6  00B2               	movwf	??___fltol
  2300     03B7  082F               	movf	___fltol@f1+1,w
  2301     03B8  00B3               	movwf	??___fltol+1
  2302     03B9  0830               	movf	___fltol@f1+2,w
  2303     03BA  00B4               	movwf	??___fltol+2
  2304     03BB  0831               	movf	___fltol@f1+3,w
  2305     03BC  00B5               	movwf	??___fltol+3
  2306     03BD  301F               	movlw	31
  2307     03BE                     u925:
  2308     03BE  1003               	clrc
  2309     03BF  0CB5               	rrf	??___fltol+3,f
  2310     03C0  0CB4               	rrf	??___fltol+2,f
  2311     03C1  0CB3               	rrf	??___fltol+1,f
  2312     03C2  0CB2               	rrf	??___fltol,f
  2313     03C3                     u920:
  2314     03C3  3EFF               	addlw	-1
  2315     03C4  1D03               	skipz
  2316     03C5  2BBE               	goto	u925
  2317     03C6  0832               	movf	??___fltol,w
  2318     03C7  00B6               	movwf	___fltol@sign1
  2319     03C8                     l1530:
  2320     03C8  17B0               	bsf	___fltol@f1+2,7
  2321     03C9                     l1532:
  2322     03C9  30FF               	movlw	255
  2323     03CA  05AE               	andwf	___fltol@f1,f
  2324     03CB  30FF               	movlw	255
  2325     03CC  05AF               	andwf	___fltol@f1+1,f
  2326     03CD  30FF               	movlw	255
  2327     03CE  05B0               	andwf	___fltol@f1+2,f
  2328     03CF  3000               	movlw	0
  2329     03D0  05B1               	andwf	___fltol@f1+3,f
  2330     03D1                     l1534:
  2331     03D1  3096               	movlw	150
  2332     03D2  02B7               	subwf	___fltol@exp1,f
  2333     03D3                     l1536:
  2334     03D3  1FB7               	btfss	___fltol@exp1,7
  2335     03D4  2BD6               	goto	u931
  2336     03D5  2BD7               	goto	u930
  2337     03D6                     u931:
  2338     03D6  2BF1               	goto	l1548
  2339     03D7                     u930:
  2340     03D7                     l1538:
  2341     03D7  0837               	movf	___fltol@exp1,w
  2342     03D8  3A80               	xorlw	128
  2343     03D9  3E97               	addlw	151
  2344     03DA  1803               	skipnc
  2345     03DB  2BDD               	goto	u941
  2346     03DC  2BDE               	goto	u940
  2347     03DD                     u941:
  2348     03DD  2BDF               	goto	l1544
  2349     03DE                     u940:
  2350     03DE  2BAC               	goto	l1524
  2351     03DF                     l1544:
  2352     03DF  3001               	movlw	1
  2353     03E0                     u955:
  2354     03E0  1003               	clrc
  2355     03E1  0CB1               	rrf	___fltol@f1+3,f
  2356     03E2  0CB0               	rrf	___fltol@f1+2,f
  2357     03E3  0CAF               	rrf	___fltol@f1+1,f
  2358     03E4  0CAE               	rrf	___fltol@f1,f
  2359     03E5  3EFF               	addlw	-1
  2360     03E6  1D03               	skipz
  2361     03E7  2BE0               	goto	u955
  2362     03E8                     l1546:
  2363     03E8  3001               	movlw	1
  2364     03E9  00FF               	movwf	btemp+1
  2365     03EA  087F               	movf	btemp+1,w
  2366     03EB  07B7               	addwf	___fltol@exp1,f
  2367     03EC  1D03               	btfss	3,2
  2368     03ED  2BEF               	goto	u961
  2369     03EE  2BF0               	goto	u960
  2370     03EF                     u961:
  2371     03EF  2BDF               	goto	l1544
  2372     03F0                     u960:
  2373     03F0  2C08               	goto	l1556
  2374     03F1                     l1548:
  2375     03F1  3020               	movlw	32
  2376     03F2  0237               	subwf	___fltol@exp1,w
  2377     03F3  1C03               	skipc
  2378     03F4  2BF6               	goto	u971
  2379     03F5  2BF7               	goto	u970
  2380     03F6                     u971:
  2381     03F6  2C03               	goto	l581
  2382     03F7                     u970:
  2383     03F7  2BAC               	goto	l1524
  2384     03F8                     l1554:
  2385     03F8  3001               	movlw	1
  2386     03F9  00B2               	movwf	??___fltol
  2387     03FA                     u985:
  2388     03FA  1003               	clrc
  2389     03FB  0DAE               	rlf	___fltol@f1,f
  2390     03FC  0DAF               	rlf	___fltol@f1+1,f
  2391     03FD  0DB0               	rlf	___fltol@f1+2,f
  2392     03FE  0DB1               	rlf	___fltol@f1+3,f
  2393     03FF  0BB2               	decfsz	??___fltol,f
  2394     0400  2BFA               	goto	u985
  2395     0401  3001               	movlw	1
  2396     0402  02B7               	subwf	___fltol@exp1,f
  2397     0403                     l581:
  2398     0403  0837               	movf	___fltol@exp1,w
  2399     0404  1D03               	btfss	3,2
  2400     0405  2C07               	goto	u991
  2401     0406  2C08               	goto	u990
  2402     0407                     u991:
  2403     0407  2BF8               	goto	l1554
  2404     0408                     u990:
  2405     0408                     l1556:
  2406     0408  0836               	movf	___fltol@sign1,w
  2407     0409  1903               	btfsc	3,2
  2408     040A  2C0C               	goto	u1001
  2409     040B  2C0D               	goto	u1000
  2410     040C                     u1001:
  2411     040C  2C18               	goto	l584
  2412     040D                     u1000:
  2413     040D                     l1558:
  2414     040D  09AE               	comf	___fltol@f1,f
  2415     040E  09AF               	comf	___fltol@f1+1,f
  2416     040F  09B0               	comf	___fltol@f1+2,f
  2417     0410  09B1               	comf	___fltol@f1+3,f
  2418     0411  0AAE               	incf	___fltol@f1,f
  2419     0412  1903               	skipnz
  2420     0413  0AAF               	incf	___fltol@f1+1,f
  2421     0414  1903               	skipnz
  2422     0415  0AB0               	incf	___fltol@f1+2,f
  2423     0416  1903               	skipnz
  2424     0417  0AB1               	incf	___fltol@f1+3,f
  2425     0418                     l584:
  2426     0418                     l574:
  2427     0418  0008               	return
  2428     0419                     __end_of___fltol:
  2429                           
  2430                           	psect	text7
  2431     066E                     __ptext7:	
  2432 ;; *************** function _Lcd_Write_String *****************
  2433 ;; Defined at:
  2434 ;;		line 98 in file "LCD.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;  a               1    wreg     PTR unsigned char 
  2437 ;;		 -> main@s3(20), main@s2(20), main@s(20), 
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;  a               1   22[BANK0 ] PTR unsigned char 
  2440 ;;		 -> main@s3(20), main@s2(20), main@s(20), 
  2441 ;;  i               2   20[BANK0 ] int 
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  1    wreg      void 
  2444 ;; Registers used:
  2445 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2451 ;;      Params:         0       0       0       0       0
  2452 ;;      Locals:         0       3       0       0       0
  2453 ;;      Temps:          0       1       0       0       0
  2454 ;;      Totals:         0       4       0       0       0
  2455 ;;Total ram usage:        4 bytes
  2456 ;; Hardware stack levels used: 1
  2457 ;; Hardware stack levels required when called: 4
  2458 ;; This function calls:
  2459 ;;		_Lcd_Write_Char
  2460 ;; This function is called by:
  2461 ;;		_main
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465     066E                     _Lcd_Write_String:	
  2466                           ;psect for function _Lcd_Write_String
  2467                           
  2468                           
  2469                           ;incstack = 0
  2470                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2471                           ;Lcd_Write_String@a stored from wreg
  2472     066E  1283               	bcf	3,5	;RP0=0, select bank0
  2473     066F  1303               	bcf	3,6	;RP1=0, select bank0
  2474     0670  00B6               	movwf	Lcd_Write_String@a
  2475     0671                     l1670:
  2476                           
  2477                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  2478     0671  01B4               	clrf	Lcd_Write_String@i
  2479     0672  01B5               	clrf	Lcd_Write_String@i+1
  2480     0673  2E87               	goto	l1676
  2481     0674                     l1672:
  2482                           
  2483                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  2484     0674  0834               	movf	Lcd_Write_String@i,w
  2485     0675  0736               	addwf	Lcd_Write_String@a,w
  2486     0676  00B3               	movwf	??_Lcd_Write_String
  2487     0677  0833               	movf	??_Lcd_Write_String,w
  2488     0678  0084               	movwf	4
  2489     0679  0800               	movf	0,w
  2490     067A  120A  118A  2635  120A  118A  	fcall	_Lcd_Write_Char
  2491     067F                     l1674:
  2492     067F  3001               	movlw	1
  2493     0680  1283               	bcf	3,5	;RP0=0, select bank0
  2494     0681  1303               	bcf	3,6	;RP1=0, select bank0
  2495     0682  07B4               	addwf	Lcd_Write_String@i,f
  2496     0683  1803               	skipnc
  2497     0684  0AB5               	incf	Lcd_Write_String@i+1,f
  2498     0685  3000               	movlw	0
  2499     0686  07B5               	addwf	Lcd_Write_String@i+1,f
  2500     0687                     l1676:
  2501     0687  0834               	movf	Lcd_Write_String@i,w
  2502     0688  0736               	addwf	Lcd_Write_String@a,w
  2503     0689  00B3               	movwf	??_Lcd_Write_String
  2504     068A  0833               	movf	??_Lcd_Write_String,w
  2505     068B  0084               	movwf	4
  2506     068C  1383               	bcf	3,7	;select IRP bank0
  2507     068D  0800               	movf	0,w
  2508     068E  1D03               	btfss	3,2
  2509     068F  2E91               	goto	u1201
  2510     0690  2E92               	goto	u1200
  2511     0691                     u1201:
  2512     0691  2E74               	goto	l1672
  2513     0692                     u1200:
  2514     0692                     l141:
  2515     0692  0008               	return
  2516     0693                     __end_of_Lcd_Write_String:
  2517                           
  2518                           	psect	text8
  2519     0635                     __ptext8:	
  2520 ;; *************** function _Lcd_Write_Char *****************
  2521 ;; Defined at:
  2522 ;;		line 83 in file "LCD.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;  a               1    wreg     unsigned char 
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;  a               1   18[BANK0 ] unsigned char 
  2527 ;;  y               1   17[BANK0 ] unsigned char 
  2528 ;;  temp            1   16[BANK0 ] unsigned char 
  2529 ;; Return value:  Size  Location     Type
  2530 ;;                  1    wreg      void 
  2531 ;; Registers used:
  2532 ;;		wreg, status,2, status,0, pclath, cstack
  2533 ;; Tracked objects:
  2534 ;;		On entry : 0/0
  2535 ;;		On exit  : 0/0
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2538 ;;      Params:         0       0       0       0       0
  2539 ;;      Locals:         0       3       0       0       0
  2540 ;;      Temps:          0       1       0       0       0
  2541 ;;      Totals:         0       4       0       0       0
  2542 ;;Total ram usage:        4 bytes
  2543 ;; Hardware stack levels used: 1
  2544 ;; Hardware stack levels required when called: 3
  2545 ;; This function calls:
  2546 ;;		_Lcd_Port
  2547 ;; This function is called by:
  2548 ;;		_Lcd_Write_String
  2549 ;; This function uses a non-reentrant model
  2550 ;;
  2551                           
  2552     0635                     _Lcd_Write_Char:	
  2553                           ;psect for function _Lcd_Write_Char
  2554                           
  2555                           
  2556                           ;incstack = 0
  2557                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2558                           ;Lcd_Write_Char@a stored from wreg
  2559     0635  1283               	bcf	3,5	;RP0=0, select bank0
  2560     0636  1303               	bcf	3,6	;RP1=0, select bank0
  2561     0637  00B2               	movwf	Lcd_Write_Char@a
  2562     0638                     l1502:
  2563                           
  2564                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  2565     0638  0832               	movf	Lcd_Write_Char@a,w
  2566     0639  390F               	andlw	15
  2567     063A  00B0               	movwf	Lcd_Write_Char@temp
  2568                           
  2569                           ;LCD.c: 86:     y = a & 0xF0;
  2570     063B  0832               	movf	Lcd_Write_Char@a,w
  2571     063C  39F0               	andlw	240
  2572     063D  00B1               	movwf	Lcd_Write_Char@y
  2573     063E                     l1504:
  2574                           
  2575                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  2576     063E  1508               	bsf	8,2	;volatile
  2577     063F                     l1506:
  2578                           
  2579                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  2580     063F  0831               	movf	Lcd_Write_Char@y,w
  2581     0640  00AF               	movwf	??_Lcd_Write_Char
  2582     0641  3004               	movlw	4
  2583     0642                     u905:
  2584     0642  1003               	clrc
  2585     0643  0CAF               	rrf	??_Lcd_Write_Char,f
  2586     0644  3EFF               	addlw	-1
  2587     0645  1D03               	skipz
  2588     0646  2E42               	goto	u905
  2589     0647  082F               	movf	??_Lcd_Write_Char,w
  2590     0648  120A  118A  2693  120A  118A  	fcall	_Lcd_Port
  2591     064D                     l1508:
  2592                           
  2593                           ;LCD.c: 89:     RD3 = 1;
  2594     064D  1283               	bcf	3,5	;RP0=0, select bank0
  2595     064E  1303               	bcf	3,6	;RP1=0, select bank0
  2596     064F  1588               	bsf	8,3	;volatile
  2597     0650                     l1510:
  2598                           
  2599                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2600     0650  3019               	movlw	25
  2601     0651  1283               	bcf	3,5	;RP0=0, select bank0
  2602     0652  1303               	bcf	3,6	;RP1=0, select bank0
  2603     0653  00AF               	movwf	??_Lcd_Write_Char
  2604     0654                     u1797:
  2605     0654  0BAF               	decfsz	??_Lcd_Write_Char,f
  2606     0655  2E54               	goto	u1797
  2607     0656  2E57               	nop2
  2608     0657                     l1512:
  2609                           
  2610                           ;LCD.c: 91:     RD3 = 0;
  2611     0657  1283               	bcf	3,5	;RP0=0, select bank0
  2612     0658  1303               	bcf	3,6	;RP1=0, select bank0
  2613     0659  1188               	bcf	8,3	;volatile
  2614     065A                     l1514:
  2615                           
  2616                           ;LCD.c: 92:     Lcd_Port(temp);
  2617     065A  0830               	movf	Lcd_Write_Char@temp,w
  2618     065B  120A  118A  2693  120A  118A  	fcall	_Lcd_Port
  2619     0660                     l1516:
  2620                           
  2621                           ;LCD.c: 93:     RD3 = 1;
  2622     0660  1283               	bcf	3,5	;RP0=0, select bank0
  2623     0661  1303               	bcf	3,6	;RP1=0, select bank0
  2624     0662  1588               	bsf	8,3	;volatile
  2625     0663                     l1518:
  2626                           
  2627                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2628     0663  3019               	movlw	25
  2629     0664  1283               	bcf	3,5	;RP0=0, select bank0
  2630     0665  1303               	bcf	3,6	;RP1=0, select bank0
  2631     0666  00AF               	movwf	??_Lcd_Write_Char
  2632     0667                     u1807:
  2633     0667  0BAF               	decfsz	??_Lcd_Write_Char,f
  2634     0668  2E67               	goto	u1807
  2635     0669  2E6A               	nop2
  2636     066A                     l1520:
  2637                           
  2638                           ;LCD.c: 95:     RD3 = 0;
  2639     066A  1283               	bcf	3,5	;RP0=0, select bank0
  2640     066B  1303               	bcf	3,6	;RP1=0, select bank0
  2641     066C  1188               	bcf	8,3	;volatile
  2642     066D                     l135:
  2643     066D  0008               	return
  2644     066E                     __end_of_Lcd_Write_Char:
  2645                           
  2646                           	psect	text9
  2647     04E2                     __ptext9:	
  2648 ;; *************** function _Lcd_Set_Cursor *****************
  2649 ;; Defined at:
  2650 ;;		line 48 in file "LCD.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;  a               1    wreg     unsigned char 
  2653 ;;  b               1   18[BANK0 ] unsigned char 
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;  a               1   20[BANK0 ] unsigned char 
  2656 ;;  temp            1   23[BANK0 ] unsigned char 
  2657 ;;  y               1   22[BANK0 ] unsigned char 
  2658 ;;  z               1   21[BANK0 ] unsigned char 
  2659 ;; Return value:  Size  Location     Type
  2660 ;;                  1    wreg      void 
  2661 ;; Registers used:
  2662 ;;		wreg, status,2, status,0, pclath, cstack
  2663 ;; Tracked objects:
  2664 ;;		On entry : 0/0
  2665 ;;		On exit  : 0/0
  2666 ;;		Unchanged: 0/0
  2667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2668 ;;      Params:         0       1       0       0       0
  2669 ;;      Locals:         0       4       0       0       0
  2670 ;;      Temps:          0       1       0       0       0
  2671 ;;      Totals:         0       6       0       0       0
  2672 ;;Total ram usage:        6 bytes
  2673 ;; Hardware stack levels used: 1
  2674 ;; Hardware stack levels required when called: 4
  2675 ;; This function calls:
  2676 ;;		_Lcd_Cmd
  2677 ;; This function is called by:
  2678 ;;		_main
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682     04E2                     _Lcd_Set_Cursor:	
  2683                           ;psect for function _Lcd_Set_Cursor
  2684                           
  2685                           
  2686                           ;incstack = 0
  2687                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2688                           ;Lcd_Set_Cursor@a stored from wreg
  2689     04E2  1283               	bcf	3,5	;RP0=0, select bank0
  2690     04E3  1303               	bcf	3,6	;RP1=0, select bank0
  2691     04E4  00B4               	movwf	Lcd_Set_Cursor@a
  2692     04E5                     l1640:
  2693                           
  2694                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2695     04E5  0334               	decf	Lcd_Set_Cursor@a,w
  2696     04E6  1D03               	btfss	3,2
  2697     04E7  2CE9               	goto	u1161
  2698     04E8  2CEA               	goto	u1160
  2699     04E9                     u1161:
  2700     04E9  2D09               	goto	l1650
  2701     04EA                     u1160:
  2702     04EA                     l1642:
  2703                           
  2704                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2705     04EA  0832               	movf	Lcd_Set_Cursor@b,w
  2706     04EB  3E7F               	addlw	127
  2707     04EC  00B7               	movwf	Lcd_Set_Cursor@temp
  2708                           
  2709                           ;LCD.c: 52:         z = temp >> 4;
  2710     04ED  0837               	movf	Lcd_Set_Cursor@temp,w
  2711     04EE  00B3               	movwf	??_Lcd_Set_Cursor
  2712     04EF  3004               	movlw	4
  2713     04F0                     u1175:
  2714     04F0  1003               	clrc
  2715     04F1  0CB3               	rrf	??_Lcd_Set_Cursor,f
  2716     04F2  3EFF               	addlw	-1
  2717     04F3  1D03               	skipz
  2718     04F4  2CF0               	goto	u1175
  2719     04F5  0833               	movf	??_Lcd_Set_Cursor,w
  2720     04F6  00B5               	movwf	Lcd_Set_Cursor@z
  2721     04F7                     l1644:
  2722                           
  2723                           ;LCD.c: 53:         y = temp & 0x0F;
  2724     04F7  0837               	movf	Lcd_Set_Cursor@temp,w
  2725     04F8  390F               	andlw	15
  2726     04F9  00B6               	movwf	Lcd_Set_Cursor@y
  2727     04FA                     l1646:
  2728                           
  2729                           ;LCD.c: 54:         Lcd_Cmd(z);
  2730     04FA  0835               	movf	Lcd_Set_Cursor@z,w
  2731     04FB  120A  118A  26B3  120A  118A  	fcall	_Lcd_Cmd
  2732     0500                     l1648:
  2733                           
  2734                           ;LCD.c: 55:         Lcd_Cmd(y);
  2735     0500  1283               	bcf	3,5	;RP0=0, select bank0
  2736     0501  1303               	bcf	3,6	;RP1=0, select bank0
  2737     0502  0836               	movf	Lcd_Set_Cursor@y,w
  2738     0503  120A  118A  26B3  120A  118A  	fcall	_Lcd_Cmd
  2739                           
  2740                           ;LCD.c: 56:     } else if (a == 2) {
  2741     0508  2D2D               	goto	l129
  2742     0509                     l1650:
  2743     0509  3002               	movlw	2
  2744     050A  0634               	xorwf	Lcd_Set_Cursor@a,w
  2745     050B  1D03               	btfss	3,2
  2746     050C  2D0E               	goto	u1181
  2747     050D  2D0F               	goto	u1180
  2748     050E                     u1181:
  2749     050E  2D2D               	goto	l129
  2750     050F                     u1180:
  2751     050F                     l1652:
  2752                           
  2753                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2754     050F  0832               	movf	Lcd_Set_Cursor@b,w
  2755     0510  3EBF               	addlw	191
  2756     0511  00B7               	movwf	Lcd_Set_Cursor@temp
  2757                           
  2758                           ;LCD.c: 58:         z = temp >> 4;
  2759     0512  0837               	movf	Lcd_Set_Cursor@temp,w
  2760     0513  00B3               	movwf	??_Lcd_Set_Cursor
  2761     0514  3004               	movlw	4
  2762     0515                     u1195:
  2763     0515  1003               	clrc
  2764     0516  0CB3               	rrf	??_Lcd_Set_Cursor,f
  2765     0517  3EFF               	addlw	-1
  2766     0518  1D03               	skipz
  2767     0519  2D15               	goto	u1195
  2768     051A  0833               	movf	??_Lcd_Set_Cursor,w
  2769     051B  00B5               	movwf	Lcd_Set_Cursor@z
  2770     051C                     l1654:
  2771                           
  2772                           ;LCD.c: 59:         y = temp & 0x0F;
  2773     051C  0837               	movf	Lcd_Set_Cursor@temp,w
  2774     051D  390F               	andlw	15
  2775     051E  00B6               	movwf	Lcd_Set_Cursor@y
  2776     051F                     l1656:
  2777                           
  2778                           ;LCD.c: 60:         Lcd_Cmd(z);
  2779     051F  0835               	movf	Lcd_Set_Cursor@z,w
  2780     0520  120A  118A  26B3  120A  118A  	fcall	_Lcd_Cmd
  2781     0525                     l1658:
  2782                           
  2783                           ;LCD.c: 61:         Lcd_Cmd(y);
  2784     0525  1283               	bcf	3,5	;RP0=0, select bank0
  2785     0526  1303               	bcf	3,6	;RP1=0, select bank0
  2786     0527  0836               	movf	Lcd_Set_Cursor@y,w
  2787     0528  120A  118A  26B3  120A  118A  	fcall	_Lcd_Cmd
  2788     052D                     l129:
  2789     052D  0008               	return
  2790     052E                     __end_of_Lcd_Set_Cursor:
  2791                           
  2792                           	psect	text10
  2793     0480                     __ptext10:	
  2794 ;; *************** function _Lcd_Init *****************
  2795 ;; Defined at:
  2796 ;;		line 65 in file "LCD.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;		None
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;		None
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      void 
  2803 ;; Registers used:
  2804 ;;		wreg, status,2, status,0, pclath, cstack
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2810 ;;      Params:         0       0       0       0       0
  2811 ;;      Locals:         0       0       0       0       0
  2812 ;;      Temps:          0       2       0       0       0
  2813 ;;      Totals:         0       2       0       0       0
  2814 ;;Total ram usage:        2 bytes
  2815 ;; Hardware stack levels used: 1
  2816 ;; Hardware stack levels required when called: 4
  2817 ;; This function calls:
  2818 ;;		_Lcd_Cmd
  2819 ;;		_Lcd_Port
  2820 ;; This function is called by:
  2821 ;;		_main
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825     0480                     _Lcd_Init:	
  2826                           ;psect for function _Lcd_Init
  2827                           
  2828     0480                     l1660:	
  2829                           ;incstack = 0
  2830                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2831                           
  2832                           
  2833                           ;LCD.c: 66:     Lcd_Port(0x00);
  2834     0480  3000               	movlw	0
  2835     0481  120A  118A  2693  120A  118A  	fcall	_Lcd_Port
  2836     0486                     l1662:
  2837                           
  2838                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2839     0486  3034               	movlw	52
  2840     0487  1283               	bcf	3,5	;RP0=0, select bank0
  2841     0488  1303               	bcf	3,6	;RP1=0, select bank0
  2842     0489  00B3               	movwf	??_Lcd_Init+1
  2843     048A  30F1               	movlw	241
  2844     048B  00B2               	movwf	??_Lcd_Init
  2845     048C                     u1817:
  2846     048C  0BB2               	decfsz	??_Lcd_Init,f
  2847     048D  2C8C               	goto	u1817
  2848     048E  0BB3               	decfsz	??_Lcd_Init+1,f
  2849     048F  2C8C               	goto	u1817
  2850     0490                     l1664:
  2851                           
  2852                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2853     0490  3003               	movlw	3
  2854     0491  120A  118A  26B3  120A  118A  	fcall	_Lcd_Cmd
  2855                           
  2856                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2857     0496  300D               	movlw	13
  2858     0497  1283               	bcf	3,5	;RP0=0, select bank0
  2859     0498  1303               	bcf	3,6	;RP1=0, select bank0
  2860     0499  00B3               	movwf	??_Lcd_Init+1
  2861     049A  30FB               	movlw	251
  2862     049B  00B2               	movwf	??_Lcd_Init
  2863     049C                     u1827:
  2864     049C  0BB2               	decfsz	??_Lcd_Init,f
  2865     049D  2C9C               	goto	u1827
  2866     049E  0BB3               	decfsz	??_Lcd_Init+1,f
  2867     049F  2C9C               	goto	u1827
  2868     04A0                     l1666:
  2869                           
  2870                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2871     04A0  3003               	movlw	3
  2872     04A1  120A  118A  26B3  120A  118A  	fcall	_Lcd_Cmd
  2873     04A6                     l1668:
  2874                           
  2875                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2876     04A6  301D               	movlw	29
  2877     04A7  1283               	bcf	3,5	;RP0=0, select bank0
  2878     04A8  1303               	bcf	3,6	;RP1=0, select bank0
  2879     04A9  00B3               	movwf	??_Lcd_Init+1
  2880     04AA  3090               	movlw	144
  2881     04AB  00B2               	movwf	??_Lcd_Init
  2882     04AC                     u1837:
  2883     04AC  0BB2               	decfsz	??_Lcd_Init,f
  2884     04AD  2CAC               	goto	u1837
  2885     04AE  0BB3               	decfsz	??_Lcd_Init+1,f
  2886     04AF  2CAC               	goto	u1837
  2887     04B0  0000               	nop
  2888                           
  2889                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2890     04B1  3003               	movlw	3
  2891     04B2  120A  118A  26B3  120A  118A  	fcall	_Lcd_Cmd
  2892                           
  2893                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2894     04B7  3002               	movlw	2
  2895     04B8  120A  118A  26B3  120A  118A  	fcall	_Lcd_Cmd
  2896                           
  2897                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  2898     04BD  3002               	movlw	2
  2899     04BE  120A  118A  26B3  120A  118A  	fcall	_Lcd_Cmd
  2900                           
  2901                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  2902     04C3  3008               	movlw	8
  2903     04C4  120A  118A  26B3  120A  118A  	fcall	_Lcd_Cmd
  2904                           
  2905                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  2906     04C9  3000               	movlw	0
  2907     04CA  120A  118A  26B3  120A  118A  	fcall	_Lcd_Cmd
  2908                           
  2909                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  2910     04CF  300C               	movlw	12
  2911     04D0  120A  118A  26B3  120A  118A  	fcall	_Lcd_Cmd
  2912                           
  2913                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  2914     04D5  3000               	movlw	0
  2915     04D6  120A  118A  26B3  120A  118A  	fcall	_Lcd_Cmd
  2916                           
  2917                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  2918     04DB  3006               	movlw	6
  2919     04DC  120A  118A  26B3  120A  118A  	fcall	_Lcd_Cmd
  2920     04E1                     l132:
  2921     04E1  0008               	return
  2922     04E2                     __end_of_Lcd_Init:
  2923                           
  2924                           	psect	text11
  2925     06B3                     __ptext11:	
  2926 ;; *************** function _Lcd_Cmd *****************
  2927 ;; Defined at:
  2928 ;;		line 35 in file "LCD.c"
  2929 ;; Parameters:    Size  Location     Type
  2930 ;;  a               1    wreg     unsigned char 
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;  a               1   17[BANK0 ] unsigned char 
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  1    wreg      void 
  2935 ;; Registers used:
  2936 ;;		wreg, status,2, status,0, pclath, cstack
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2942 ;;      Params:         0       0       0       0       0
  2943 ;;      Locals:         0       1       0       0       0
  2944 ;;      Temps:          0       2       0       0       0
  2945 ;;      Totals:         0       3       0       0       0
  2946 ;;Total ram usage:        3 bytes
  2947 ;; Hardware stack levels used: 1
  2948 ;; Hardware stack levels required when called: 3
  2949 ;; This function calls:
  2950 ;;		_Lcd_Port
  2951 ;; This function is called by:
  2952 ;;		_Lcd_Set_Cursor
  2953 ;;		_Lcd_Init
  2954 ;;		_Lcd_Clear
  2955 ;;		_Lcd_Shift_Right
  2956 ;;		_Lcd_Shift_Left
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960     06B3                     _Lcd_Cmd:	
  2961                           ;psect for function _Lcd_Cmd
  2962                           
  2963                           
  2964                           ;incstack = 0
  2965                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2966                           ;Lcd_Cmd@a stored from wreg
  2967     06B3  1283               	bcf	3,5	;RP0=0, select bank0
  2968     06B4  1303               	bcf	3,6	;RP1=0, select bank0
  2969     06B5  00B1               	movwf	Lcd_Cmd@a
  2970     06B6                     l1492:
  2971                           
  2972                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  2973     06B6  1108               	bcf	8,2	;volatile
  2974     06B7                     l1494:
  2975                           
  2976                           ;LCD.c: 37:     Lcd_Port(a);
  2977     06B7  0831               	movf	Lcd_Cmd@a,w
  2978     06B8  120A  118A  2693  120A  118A  	fcall	_Lcd_Port
  2979     06BD                     l1496:
  2980                           
  2981                           ;LCD.c: 38:     RD3 = 1;
  2982     06BD  1283               	bcf	3,5	;RP0=0, select bank0
  2983     06BE  1303               	bcf	3,6	;RP1=0, select bank0
  2984     06BF  1588               	bsf	8,3	;volatile
  2985     06C0                     l1498:
  2986                           
  2987                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2988     06C0  300B               	movlw	11
  2989     06C1  1283               	bcf	3,5	;RP0=0, select bank0
  2990     06C2  1303               	bcf	3,6	;RP1=0, select bank0
  2991     06C3  00B0               	movwf	??_Lcd_Cmd+1
  2992     06C4  3061               	movlw	97
  2993     06C5  00AF               	movwf	??_Lcd_Cmd
  2994     06C6                     u1847:
  2995     06C6  0BAF               	decfsz	??_Lcd_Cmd,f
  2996     06C7  2EC6               	goto	u1847
  2997     06C8  0BB0               	decfsz	??_Lcd_Cmd+1,f
  2998     06C9  2EC6               	goto	u1847
  2999     06CA  2ECB               	nop2
  3000     06CB                     l1500:
  3001                           
  3002                           ;LCD.c: 40:     RD3 = 0;
  3003     06CB  1283               	bcf	3,5	;RP0=0, select bank0
  3004     06CC  1303               	bcf	3,6	;RP1=0, select bank0
  3005     06CD  1188               	bcf	8,3	;volatile
  3006     06CE                     l120:
  3007     06CE  0008               	return
  3008     06CF                     __end_of_Lcd_Cmd:
  3009                           
  3010                           	psect	text12
  3011     0693                     __ptext12:	
  3012 ;; *************** function _Lcd_Port *****************
  3013 ;; Defined at:
  3014 ;;		line 13 in file "LCD.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  a               1    wreg     unsigned char 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  a               1   14[BANK0 ] unsigned char 
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  1    wreg      void 
  3021 ;; Registers used:
  3022 ;;		wreg
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3028 ;;      Params:         0       0       0       0       0
  3029 ;;      Locals:         0       1       0       0       0
  3030 ;;      Temps:          0       0       0       0       0
  3031 ;;      Totals:         0       1       0       0       0
  3032 ;;Total ram usage:        1 bytes
  3033 ;; Hardware stack levels used: 1
  3034 ;; Hardware stack levels required when called: 2
  3035 ;; This function calls:
  3036 ;;		Nothing
  3037 ;; This function is called by:
  3038 ;;		_Lcd_Cmd
  3039 ;;		_Lcd_Init
  3040 ;;		_Lcd_Write_Char
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044     0693                     _Lcd_Port:	
  3045                           ;psect for function _Lcd_Port
  3046                           
  3047                           
  3048                           ;incstack = 0
  3049                           ; Regs used in _Lcd_Port: [wreg]
  3050                           ;Lcd_Port@a stored from wreg
  3051     0693  1283               	bcf	3,5	;RP0=0, select bank0
  3052     0694  1303               	bcf	3,6	;RP1=0, select bank0
  3053     0695  00AE               	movwf	Lcd_Port@a
  3054     0696                     l1482:
  3055                           
  3056                           ;LCD.c: 14:     if (a & 1)
  3057     0696  1C2E               	btfss	Lcd_Port@a,0
  3058     0697  2E99               	goto	u861
  3059     0698  2E9A               	goto	u860
  3060     0699                     u861:
  3061     0699  2E9C               	goto	l109
  3062     069A                     u860:
  3063     069A                     l1484:
  3064                           
  3065                           ;LCD.c: 15:         RD4 = 1;
  3066     069A  1608               	bsf	8,4	;volatile
  3067     069B  2E9D               	goto	l110
  3068     069C                     l109:	
  3069                           ;LCD.c: 16:     else
  3070                           
  3071                           
  3072                           ;LCD.c: 17:         RD4 = 0;
  3073     069C  1208               	bcf	8,4	;volatile
  3074     069D                     l110:
  3075                           
  3076                           ;LCD.c: 19:     if (a & 2)
  3077     069D  1CAE               	btfss	Lcd_Port@a,1
  3078     069E  2EA0               	goto	u871
  3079     069F  2EA1               	goto	u870
  3080     06A0                     u871:
  3081     06A0  2EA3               	goto	l111
  3082     06A1                     u870:
  3083     06A1                     l1486:
  3084                           
  3085                           ;LCD.c: 20:         RD5 = 1;
  3086     06A1  1688               	bsf	8,5	;volatile
  3087     06A2  2EA4               	goto	l112
  3088     06A3                     l111:	
  3089                           ;LCD.c: 21:     else
  3090                           
  3091                           
  3092                           ;LCD.c: 22:         RD5 = 0;
  3093     06A3  1288               	bcf	8,5	;volatile
  3094     06A4                     l112:
  3095                           
  3096                           ;LCD.c: 24:     if (a & 4)
  3097     06A4  1D2E               	btfss	Lcd_Port@a,2
  3098     06A5  2EA7               	goto	u881
  3099     06A6  2EA8               	goto	u880
  3100     06A7                     u881:
  3101     06A7  2EAA               	goto	l113
  3102     06A8                     u880:
  3103     06A8                     l1488:
  3104                           
  3105                           ;LCD.c: 25:         RD6 = 1;
  3106     06A8  1708               	bsf	8,6	;volatile
  3107     06A9  2EAB               	goto	l114
  3108     06AA                     l113:	
  3109                           ;LCD.c: 26:     else
  3110                           
  3111                           
  3112                           ;LCD.c: 27:         RD6 = 0;
  3113     06AA  1308               	bcf	8,6	;volatile
  3114     06AB                     l114:
  3115                           
  3116                           ;LCD.c: 29:     if (a & 8)
  3117     06AB  1DAE               	btfss	Lcd_Port@a,3
  3118     06AC  2EAE               	goto	u891
  3119     06AD  2EAF               	goto	u890
  3120     06AE                     u891:
  3121     06AE  2EB1               	goto	l115
  3122     06AF                     u890:
  3123     06AF                     l1490:
  3124                           
  3125                           ;LCD.c: 30:         RD7 = 1;
  3126     06AF  1788               	bsf	8,7	;volatile
  3127     06B0  2EB2               	goto	l117
  3128     06B1                     l115:	
  3129                           ;LCD.c: 31:     else
  3130                           
  3131                           
  3132                           ;LCD.c: 32:         RD7 = 0;
  3133     06B1  1388               	bcf	8,7	;volatile
  3134     06B2                     l117:
  3135     06B2  0008               	return
  3136     06B3                     __end_of_Lcd_Port:
  3137                           
  3138                           	psect	text13
  3139     013F                     __ptext13:	
  3140 ;; *************** function _isr *****************
  3141 ;; Defined at:
  3142 ;;		line 53 in file "Slave1prueba.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;		None
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;		None
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  1    wreg      void 
  3149 ;; Registers used:
  3150 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3156 ;;      Params:         0       0       0       0       0
  3157 ;;      Locals:         0       0       0       0       0
  3158 ;;      Temps:          0       7       0       0       0
  3159 ;;      Totals:         0       7       0       0       0
  3160 ;;Total ram usage:        7 bytes
  3161 ;; Hardware stack levels used: 1
  3162 ;; Hardware stack levels required when called: 1
  3163 ;; This function calls:
  3164 ;;		_PWM_duty
  3165 ;;		___awdiv
  3166 ;;		___xxtofl
  3167 ;; This function is called by:
  3168 ;;		Interrupt level 1
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172     013F                     _isr:	
  3173                           ;psect for function _isr
  3174                           
  3175     013F                     i1l1890:
  3176                           
  3177                           ;Slave1prueba.c: 57:    if(PIR1bits.ADIF){
  3178     013F  1F0C               	btfss	12,6	;volatile
  3179     0140  2942               	goto	u150_21
  3180     0141  2943               	goto	u150_20
  3181     0142                     u150_21:
  3182     0142  29DB               	goto	i1l1910
  3183     0143                     u150_20:
  3184     0143                     i1l1892:
  3185                           
  3186                           ;Slave1prueba.c: 59:        if (ADCON0bits.CHS ==1){
  3187     0143  0C1F               	rrf	31,w	;volatile
  3188     0144  00A7               	movwf	??_isr
  3189     0145  0C27               	rrf	??_isr,w
  3190     0146  390F               	andlw	15
  3191     0147  3A01               	xorlw	1
  3192     0148  1D03               	skipz
  3193     0149  294B               	goto	u151_21
  3194     014A  294C               	goto	u151_20
  3195     014B                     u151_21:
  3196     014B  297B               	goto	i1l1898
  3197     014C                     u151_20:
  3198     014C                     i1l1894:
  3199                           
  3200                           ;Slave1prueba.c: 60:              PWM_duty(0,ADRESH);
  3201     014C  3000               	movlw	0
  3202     014D  00A0               	movwf	PWM_duty@chn
  3203     014E  00A1               	movwf	PWM_duty@chn+1
  3204     014F  081E               	movf	30,w	;volatile
  3205     0150  00A7               	movwf	??_isr
  3206     0151  01A8               	clrf	??_isr+1
  3207     0152  01A9               	clrf	??_isr+2
  3208     0153  01AA               	clrf	??_isr+3
  3209     0154  082A               	movf	??_isr+3,w
  3210     0155  00F3               	movwf	___xxtofl@val+3
  3211     0156  0829               	movf	??_isr+2,w
  3212     0157  00F2               	movwf	___xxtofl@val+2
  3213     0158  0828               	movf	??_isr+1,w
  3214     0159  00F1               	movwf	___xxtofl@val+1
  3215     015A  0827               	movf	??_isr,w
  3216     015B  00F0               	movwf	___xxtofl@val
  3217     015C  3000               	movlw	0
  3218     015D  120A  118A  22E9  120A  118A  	fcall	___xxtofl
  3219     0162  0873               	movf	?___xxtofl+3,w
  3220     0163  1283               	bcf	3,5	;RP0=0, select bank0
  3221     0164  1303               	bcf	3,6	;RP1=0, select bank0
  3222     0165  00A5               	movwf	PWM_duty@duty+3
  3223     0166  0872               	movf	?___xxtofl+2,w
  3224     0167  00A4               	movwf	PWM_duty@duty+2
  3225     0168  0871               	movf	?___xxtofl+1,w
  3226     0169  00A3               	movwf	PWM_duty@duty+1
  3227     016A  0870               	movf	?___xxtofl,w
  3228     016B  00A2               	movwf	PWM_duty@duty
  3229     016C  120A  118A  26CF  120A  118A  	fcall	_PWM_duty
  3230     0171                     i1l1896:
  3231                           
  3232                           ;Slave1prueba.c: 61:               valpot0 = ADRESH;
  3233     0171  1283               	bcf	3,5	;RP0=0, select bank0
  3234     0172  1303               	bcf	3,6	;RP1=0, select bank0
  3235     0173  081E               	movf	30,w	;volatile
  3236     0174  00A7               	movwf	??_isr
  3237     0175  01A8               	clrf	??_isr+1
  3238     0176  0827               	movf	??_isr,w
  3239     0177  00D5               	movwf	_valpot0
  3240     0178  0828               	movf	??_isr+1,w
  3241     0179  00D6               	movwf	_valpot0+1
  3242                           
  3243                           ;Slave1prueba.c: 63:         }
  3244     017A  29DA               	goto	i1l1908
  3245     017B                     i1l1898:
  3246     017B  0C1F               	rrf	31,w	;volatile
  3247     017C  00A7               	movwf	??_isr
  3248     017D  0C27               	rrf	??_isr,w
  3249     017E  390F               	andlw	15
  3250     017F  3A00               	xorlw	0
  3251     0180  1D03               	skipz
  3252     0181  2983               	goto	u152_21
  3253     0182  2984               	goto	u152_20
  3254     0183                     u152_21:
  3255     0183  29B4               	goto	i1l1904
  3256     0184                     u152_20:
  3257     0184                     i1l1900:
  3258                           
  3259                           ;Slave1prueba.c: 65:             PWM_duty(1 ,ADRESH);
  3260     0184  3001               	movlw	1
  3261     0185  00A0               	movwf	PWM_duty@chn
  3262     0186  3000               	movlw	0
  3263     0187  00A1               	movwf	PWM_duty@chn+1
  3264     0188  081E               	movf	30,w	;volatile
  3265     0189  00A7               	movwf	??_isr
  3266     018A  01A8               	clrf	??_isr+1
  3267     018B  01A9               	clrf	??_isr+2
  3268     018C  01AA               	clrf	??_isr+3
  3269     018D  082A               	movf	??_isr+3,w
  3270     018E  00F3               	movwf	___xxtofl@val+3
  3271     018F  0829               	movf	??_isr+2,w
  3272     0190  00F2               	movwf	___xxtofl@val+2
  3273     0191  0828               	movf	??_isr+1,w
  3274     0192  00F1               	movwf	___xxtofl@val+1
  3275     0193  0827               	movf	??_isr,w
  3276     0194  00F0               	movwf	___xxtofl@val
  3277     0195  3000               	movlw	0
  3278     0196  120A  118A  22E9  120A  118A  	fcall	___xxtofl
  3279     019B  0873               	movf	?___xxtofl+3,w
  3280     019C  1283               	bcf	3,5	;RP0=0, select bank0
  3281     019D  1303               	bcf	3,6	;RP1=0, select bank0
  3282     019E  00A5               	movwf	PWM_duty@duty+3
  3283     019F  0872               	movf	?___xxtofl+2,w
  3284     01A0  00A4               	movwf	PWM_duty@duty+2
  3285     01A1  0871               	movf	?___xxtofl+1,w
  3286     01A2  00A3               	movwf	PWM_duty@duty+1
  3287     01A3  0870               	movf	?___xxtofl,w
  3288     01A4  00A2               	movwf	PWM_duty@duty
  3289     01A5  120A  118A  26CF  120A  118A  	fcall	_PWM_duty
  3290     01AA                     i1l1902:
  3291                           
  3292                           ;Slave1prueba.c: 66:              valpot1 = ADRESH;
  3293     01AA  1283               	bcf	3,5	;RP0=0, select bank0
  3294     01AB  1303               	bcf	3,6	;RP1=0, select bank0
  3295     01AC  081E               	movf	30,w	;volatile
  3296     01AD  00A7               	movwf	??_isr
  3297     01AE  01A8               	clrf	??_isr+1
  3298     01AF  0827               	movf	??_isr,w
  3299     01B0  00D3               	movwf	_valpot1
  3300     01B1  0828               	movf	??_isr+1,w
  3301     01B2  00D4               	movwf	_valpot1+1
  3302                           
  3303                           ;Slave1prueba.c: 67:         }
  3304     01B3  29DA               	goto	i1l1908
  3305     01B4                     i1l1904:
  3306     01B4  0C1F               	rrf	31,w	;volatile
  3307     01B5  00A7               	movwf	??_isr
  3308     01B6  0C27               	rrf	??_isr,w
  3309     01B7  390F               	andlw	15
  3310     01B8  3A02               	xorlw	2
  3311     01B9  1D03               	skipz
  3312     01BA  29BC               	goto	u153_21
  3313     01BB  29BD               	goto	u153_20
  3314     01BC                     u153_21:
  3315     01BC  29DA               	goto	i1l1908
  3316     01BD                     u153_20:
  3317     01BD                     i1l1906:
  3318                           
  3319                           ;Slave1prueba.c: 69:             val = ADRESH;
  3320     01BD  081E               	movf	30,w	;volatile
  3321     01BE  00A7               	movwf	??_isr
  3322     01BF  01A8               	clrf	??_isr+1
  3323     01C0  01A9               	clrf	??_isr+2
  3324     01C1  01AA               	clrf	??_isr+3
  3325     01C2  082A               	movf	??_isr+3,w
  3326     01C3  00F3               	movwf	___xxtofl@val+3
  3327     01C4  0829               	movf	??_isr+2,w
  3328     01C5  00F2               	movwf	___xxtofl@val+2
  3329     01C6  0828               	movf	??_isr+1,w
  3330     01C7  00F1               	movwf	___xxtofl@val+1
  3331     01C8  0827               	movf	??_isr,w
  3332     01C9  00F0               	movwf	___xxtofl@val
  3333     01CA  3000               	movlw	0
  3334     01CB  120A  118A  22E9  120A  118A  	fcall	___xxtofl
  3335     01D0  0873               	movf	?___xxtofl+3,w
  3336     01D1  1283               	bcf	3,5	;RP0=0, select bank0
  3337     01D2  1303               	bcf	3,6	;RP1=0, select bank0
  3338     01D3  00CA               	movwf	_val+3
  3339     01D4  0872               	movf	?___xxtofl+2,w
  3340     01D5  00C9               	movwf	_val+2
  3341     01D6  0871               	movf	?___xxtofl+1,w
  3342     01D7  00C8               	movwf	_val+1
  3343     01D8  0870               	movf	?___xxtofl,w
  3344     01D9  00C7               	movwf	_val
  3345     01DA                     i1l1908:
  3346                           
  3347                           ;Slave1prueba.c: 70:             PIR1bits.ADIF =0;
  3348     01DA  130C               	bcf	12,6	;volatile
  3349     01DB                     i1l1910:
  3350                           
  3351                           ;Slave1prueba.c: 73:    if (INTCONbits.T0IF){
  3352     01DB  1D0B               	btfss	11,2	;volatile
  3353     01DC  29DE               	goto	u154_21
  3354     01DD  29DF               	goto	u154_20
  3355     01DE                     u154_21:
  3356     01DE  2A1D               	goto	i1l251
  3357     01DF                     u154_20:
  3358     01DF                     i1l1912:
  3359                           
  3360                           ;Slave1prueba.c: 76:         if (c<=100){
  3361     01DF  0850               	movf	_c+1,w
  3362     01E0  3A80               	xorlw	128
  3363     01E1  00FF               	movwf	btemp+1
  3364     01E2  3080               	movlw	128
  3365     01E3  027F               	subwf	btemp+1,w
  3366     01E4  1D03               	skipz
  3367     01E5  29E8               	goto	u155_25
  3368     01E6  3065               	movlw	101
  3369     01E7  024F               	subwf	_c,w
  3370     01E8                     u155_25:
  3371     01E8  1803               	skipnc
  3372     01E9  29EB               	goto	u155_21
  3373     01EA  29EC               	goto	u155_20
  3374     01EB                     u155_21:
  3375     01EB  29F4               	goto	i1l1916
  3376     01EC                     u155_20:
  3377     01EC                     i1l1914:
  3378                           
  3379                           ;Slave1prueba.c: 77:            c ++;
  3380     01EC  3001               	movlw	1
  3381     01ED  1283               	bcf	3,5	;RP0=0, select bank0
  3382     01EE  1303               	bcf	3,6	;RP1=0, select bank0
  3383     01EF  07CF               	addwf	_c,f
  3384     01F0  1803               	skipnc
  3385     01F1  0AD0               	incf	_c+1,f
  3386     01F2  3000               	movlw	0
  3387     01F3  07D0               	addwf	_c+1,f
  3388     01F4                     i1l1916:
  3389                           
  3390                           ;Slave1prueba.c: 81:         if (c==100){
  3391     01F4  3064               	movlw	100
  3392     01F5  1283               	bcf	3,5	;RP0=0, select bank0
  3393     01F6  1303               	bcf	3,6	;RP1=0, select bank0
  3394     01F7  064F               	xorwf	_c,w
  3395     01F8  0450               	iorwf	_c+1,w
  3396     01F9  1D03               	btfss	3,2
  3397     01FA  29FC               	goto	u156_21
  3398     01FB  29FD               	goto	u156_20
  3399     01FC                     u156_21:
  3400     01FC  2A1B               	goto	i1l1926
  3401     01FD                     u156_20:
  3402     01FD                     i1l1918:
  3403                           
  3404                           ;Slave1prueba.c: 82:             rpm = a/2;
  3405     01FD  3002               	movlw	2
  3406     01FE  00F0               	movwf	___awdiv@divisor
  3407     01FF  3000               	movlw	0
  3408     0200  00F1               	movwf	___awdiv@divisor+1
  3409     0201  085F               	movf	_a,w
  3410     0202  00A7               	movwf	??_isr
  3411     0203  01A8               	clrf	??_isr+1
  3412     0204  0827               	movf	??_isr,w
  3413     0205  00F2               	movwf	___awdiv@dividend
  3414     0206  0828               	movf	??_isr+1,w
  3415     0207  00F3               	movwf	___awdiv@dividend+1
  3416     0208  120A  118A  2419  120A  118A  	fcall	___awdiv
  3417     020D  0870               	movf	?___awdiv,w
  3418     020E  1683               	bsf	3,5	;RP0=1, select bank1
  3419     020F  1303               	bcf	3,6	;RP1=0, select bank1
  3420     0210  00E1               	movwf	_rpm^(0+128)
  3421     0211                     i1l1920:
  3422                           
  3423                           ;Slave1prueba.c: 83:             a= 0;
  3424     0211  1283               	bcf	3,5	;RP0=0, select bank0
  3425     0212  1303               	bcf	3,6	;RP1=0, select bank0
  3426     0213  01DF               	clrf	_a
  3427     0214                     i1l1922:
  3428                           
  3429                           ;Slave1prueba.c: 84:             b= 0;
  3430     0214  1683               	bsf	3,5	;RP0=1, select bank1
  3431     0215  1303               	bcf	3,6	;RP1=0, select bank1
  3432     0216  01E2               	clrf	_b^(0+128)
  3433     0217                     i1l1924:
  3434                           
  3435                           ;Slave1prueba.c: 85:             c=0;
  3436     0217  1283               	bcf	3,5	;RP0=0, select bank0
  3437     0218  1303               	bcf	3,6	;RP1=0, select bank0
  3438     0219  01CF               	clrf	_c
  3439     021A  01D0               	clrf	_c+1
  3440     021B                     i1l1926:
  3441                           
  3442                           ;Slave1prueba.c: 87:         INTCONbits.T0IF = 0;
  3443     021B  110B               	bcf	11,2	;volatile
  3444     021C                     i1l1928:
  3445                           
  3446                           ;Slave1prueba.c: 88:         TMR0 = 0;
  3447     021C  0181               	clrf	1	;volatile
  3448     021D                     i1l251:
  3449     021D  082D               	movf	??_isr+6,w
  3450     021E  00FF               	movwf	btemp+1
  3451     021F  082C               	movf	??_isr+5,w
  3452     0220  008A               	movwf	10
  3453     0221  0E2B               	swapf	??_isr+4,w
  3454     0222  0083               	movwf	3
  3455     0223  0EFE               	swapf	btemp,f
  3456     0224  0E7E               	swapf	btemp,w
  3457     0225  0009               	retfie
  3458     0226                     __end_of_isr:
  3459                           
  3460                           	psect	intentry
  3461     0004                     __pintentry:	
  3462                           ;incstack = 0
  3463                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3464                           
  3465     0004                     interrupt_function:
  3466     007E                     saved_w	set	btemp
  3467     0004  00FE               	movwf	btemp
  3468     0005  0E03               	swapf	3,w
  3469     0006  1283               	bcf	3,5	;RP0=0, select bank0
  3470     0007  1303               	bcf	3,6	;RP1=0, select bank0
  3471     0008  00AB               	movwf	??_isr+4
  3472     0009  080A               	movf	10,w
  3473     000A  00AC               	movwf	??_isr+5
  3474     000B  087F               	movf	btemp+1,w
  3475     000C  00AD               	movwf	??_isr+6
  3476     000D  120A  118A  293F   	ljmp	_isr
  3477                           
  3478                           	psect	text14
  3479     02E9                     __ptext14:	
  3480 ;; *************** function ___xxtofl *****************
  3481 ;; Defined at:
  3482 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\xxtofl.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;  sign            1    wreg     unsigned char 
  3485 ;;  val             4    0[COMMON] long 
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;  sign            1    8[COMMON] unsigned char 
  3488 ;;  arg             4   10[COMMON] unsigned long 
  3489 ;;  exp             1    9[COMMON] unsigned char 
  3490 ;; Return value:  Size  Location     Type
  3491 ;;                  4    0[COMMON] unsigned char 
  3492 ;; Registers used:
  3493 ;;		wreg, status,2, status,0, btemp+1
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 0/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3499 ;;      Params:         4       0       0       0       0
  3500 ;;      Locals:         6       0       0       0       0
  3501 ;;      Temps:          4       0       0       0       0
  3502 ;;      Totals:        14       0       0       0       0
  3503 ;;Total ram usage:       14 bytes
  3504 ;; Hardware stack levels used: 1
  3505 ;; This function calls:
  3506 ;;		Nothing
  3507 ;; This function is called by:
  3508 ;;		_isr
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512     02E9                     ___xxtofl:	
  3513                           ;psect for function ___xxtofl
  3514                           
  3515                           
  3516                           ;incstack = 0
  3517                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  3518                           ;___xxtofl@sign stored from wreg
  3519     02E9  00F8               	movwf	___xxtofl@sign
  3520     02EA                     i1l1836:
  3521     02EA  0878               	movf	___xxtofl@sign,w
  3522     02EB  1903               	btfsc	3,2
  3523     02EC  2AEE               	goto	u136_21
  3524     02ED  2AEF               	goto	u136_20
  3525     02EE                     u136_21:
  3526     02EE  2B03               	goto	i1l1842
  3527     02EF                     u136_20:
  3528     02EF                     i1l1838:
  3529     02EF  1FF3               	btfss	___xxtofl@val+3,7
  3530     02F0  2AF2               	goto	u137_21
  3531     02F1  2AF3               	goto	u137_20
  3532     02F2                     u137_21:
  3533     02F2  2B03               	goto	i1l1842
  3534     02F3                     u137_20:
  3535     02F3                     i1l1840:
  3536     02F3  0970               	comf	___xxtofl@val,w
  3537     02F4  00FA               	movwf	___xxtofl@arg
  3538     02F5  0971               	comf	___xxtofl@val+1,w
  3539     02F6  00FB               	movwf	___xxtofl@arg+1
  3540     02F7  0972               	comf	___xxtofl@val+2,w
  3541     02F8  00FC               	movwf	___xxtofl@arg+2
  3542     02F9  0973               	comf	___xxtofl@val+3,w
  3543     02FA  00FD               	movwf	___xxtofl@arg+3
  3544     02FB  0AFA               	incf	___xxtofl@arg,f
  3545     02FC  1903               	skipnz
  3546     02FD  0AFB               	incf	___xxtofl@arg+1,f
  3547     02FE  1903               	skipnz
  3548     02FF  0AFC               	incf	___xxtofl@arg+2,f
  3549     0300  1903               	skipnz
  3550     0301  0AFD               	incf	___xxtofl@arg+3,f
  3551     0302  2B0B               	goto	i1l821
  3552     0303                     i1l1842:
  3553     0303  0873               	movf	___xxtofl@val+3,w
  3554     0304  00FD               	movwf	___xxtofl@arg+3
  3555     0305  0872               	movf	___xxtofl@val+2,w
  3556     0306  00FC               	movwf	___xxtofl@arg+2
  3557     0307  0871               	movf	___xxtofl@val+1,w
  3558     0308  00FB               	movwf	___xxtofl@arg+1
  3559     0309  0870               	movf	___xxtofl@val,w
  3560     030A  00FA               	movwf	___xxtofl@arg
  3561     030B                     i1l821:
  3562     030B  0873               	movf	___xxtofl@val+3,w
  3563     030C  0472               	iorwf	___xxtofl@val+2,w
  3564     030D  0471               	iorwf	___xxtofl@val+1,w
  3565     030E  0470               	iorwf	___xxtofl@val,w
  3566     030F  1D03               	skipz
  3567     0310  2B12               	goto	u138_21
  3568     0311  2B13               	goto	u138_20
  3569     0312                     u138_21:
  3570     0312  2B1C               	goto	i1l1848
  3571     0313                     u138_20:
  3572     0313                     i1l1844:
  3573     0313  3000               	movlw	0
  3574     0314  00F3               	movwf	?___xxtofl+3
  3575     0315  3000               	movlw	0
  3576     0316  00F2               	movwf	?___xxtofl+2
  3577     0317  3000               	movlw	0
  3578     0318  00F1               	movwf	?___xxtofl+1
  3579     0319  3000               	movlw	0
  3580     031A  00F0               	movwf	?___xxtofl
  3581     031B  2BA0               	goto	i1l823
  3582     031C                     i1l1848:
  3583     031C  3096               	movlw	150
  3584     031D  00F9               	movwf	___xxtofl@exp
  3585     031E  2B2C               	goto	i1l1854
  3586     031F                     i1l1850:
  3587     031F  3001               	movlw	1
  3588     0320  00FF               	movwf	btemp+1
  3589     0321  087F               	movf	btemp+1,w
  3590     0322  07F9               	addwf	___xxtofl@exp,f
  3591     0323                     i1l1852:
  3592     0323  3001               	movlw	1
  3593     0324                     u139_25:
  3594     0324  1003               	clrc
  3595     0325  0CFD               	rrf	___xxtofl@arg+3,f
  3596     0326  0CFC               	rrf	___xxtofl@arg+2,f
  3597     0327  0CFB               	rrf	___xxtofl@arg+1,f
  3598     0328  0CFA               	rrf	___xxtofl@arg,f
  3599     0329  3EFF               	addlw	-1
  3600     032A  1D03               	skipz
  3601     032B  2B24               	goto	u139_25
  3602     032C                     i1l1854:
  3603     032C  30FE               	movlw	254
  3604     032D  057D               	andwf	___xxtofl@arg+3,w
  3605     032E  1D03               	btfss	3,2
  3606     032F  2B31               	goto	u140_21
  3607     0330  2B32               	goto	u140_20
  3608     0331                     u140_21:
  3609     0331  2B1F               	goto	i1l1850
  3610     0332                     u140_20:
  3611     0332  2B4E               	goto	i1l1862
  3612     0333                     i1l1856:
  3613     0333  3001               	movlw	1
  3614     0334  00FF               	movwf	btemp+1
  3615     0335  087F               	movf	btemp+1,w
  3616     0336  07F9               	addwf	___xxtofl@exp,f
  3617     0337                     i1l1858:
  3618     0337  3001               	movlw	1
  3619     0338  07FA               	addwf	___xxtofl@arg,f
  3620     0339  3000               	movlw	0
  3621     033A  1803               	skipnc
  3622     033B  3001               	movlw	1
  3623     033C  07FB               	addwf	___xxtofl@arg+1,f
  3624     033D  3000               	movlw	0
  3625     033E  1803               	skipnc
  3626     033F  3001               	movlw	1
  3627     0340  07FC               	addwf	___xxtofl@arg+2,f
  3628     0341  3000               	movlw	0
  3629     0342  1803               	skipnc
  3630     0343  3001               	movlw	1
  3631     0344  07FD               	addwf	___xxtofl@arg+3,f
  3632     0345                     i1l1860:
  3633     0345  3001               	movlw	1
  3634     0346                     u141_25:
  3635     0346  1003               	clrc
  3636     0347  0CFD               	rrf	___xxtofl@arg+3,f
  3637     0348  0CFC               	rrf	___xxtofl@arg+2,f
  3638     0349  0CFB               	rrf	___xxtofl@arg+1,f
  3639     034A  0CFA               	rrf	___xxtofl@arg,f
  3640     034B  3EFF               	addlw	-1
  3641     034C  1D03               	skipz
  3642     034D  2B46               	goto	u141_25
  3643     034E                     i1l1862:
  3644     034E  30FF               	movlw	255
  3645     034F  057D               	andwf	___xxtofl@arg+3,w
  3646     0350  1D03               	btfss	3,2
  3647     0351  2B53               	goto	u142_21
  3648     0352  2B54               	goto	u142_20
  3649     0353                     u142_21:
  3650     0353  2B33               	goto	i1l1856
  3651     0354                     u142_20:
  3652     0354  2B60               	goto	i1l1866
  3653     0355                     i1l1864:
  3654     0355  3001               	movlw	1
  3655     0356  02F9               	subwf	___xxtofl@exp,f
  3656     0357  3001               	movlw	1
  3657     0358  00F4               	movwf	??___xxtofl
  3658     0359                     u143_25:
  3659     0359  1003               	clrc
  3660     035A  0DFA               	rlf	___xxtofl@arg,f
  3661     035B  0DFB               	rlf	___xxtofl@arg+1,f
  3662     035C  0DFC               	rlf	___xxtofl@arg+2,f
  3663     035D  0DFD               	rlf	___xxtofl@arg+3,f
  3664     035E  0BF4               	decfsz	??___xxtofl,f
  3665     035F  2B59               	goto	u143_25
  3666     0360                     i1l1866:
  3667     0360  1BFC               	btfsc	___xxtofl@arg+2,7
  3668     0361  2B63               	goto	u144_21
  3669     0362  2B64               	goto	u144_20
  3670     0363                     u144_21:
  3671     0363  2B6A               	goto	i1l834
  3672     0364                     u144_20:
  3673     0364                     i1l1868:
  3674     0364  3002               	movlw	2
  3675     0365  0279               	subwf	___xxtofl@exp,w
  3676     0366  1803               	skipnc
  3677     0367  2B69               	goto	u145_21
  3678     0368  2B6A               	goto	u145_20
  3679     0369                     u145_21:
  3680     0369  2B55               	goto	i1l1864
  3681     036A                     u145_20:
  3682     036A                     i1l834:
  3683     036A  1879               	btfsc	___xxtofl@exp,0
  3684     036B  2B6D               	goto	u146_21
  3685     036C  2B6E               	goto	u146_20
  3686     036D                     u146_21:
  3687     036D  2B76               	goto	i1l835
  3688     036E                     u146_20:
  3689     036E                     i1l1870:
  3690     036E  30FF               	movlw	255
  3691     036F  05FA               	andwf	___xxtofl@arg,f
  3692     0370  30FF               	movlw	255
  3693     0371  05FB               	andwf	___xxtofl@arg+1,f
  3694     0372  307F               	movlw	127
  3695     0373  05FC               	andwf	___xxtofl@arg+2,f
  3696     0374  30FF               	movlw	255
  3697     0375  05FD               	andwf	___xxtofl@arg+3,f
  3698     0376                     i1l835:
  3699     0376  1003               	clrc
  3700     0377  0CF9               	rrf	___xxtofl@exp,f
  3701     0378                     i1l1872:
  3702     0378  0879               	movf	___xxtofl@exp,w
  3703     0379  00F4               	movwf	??___xxtofl
  3704     037A  01F5               	clrf	??___xxtofl+1
  3705     037B  01F6               	clrf	??___xxtofl+2
  3706     037C  01F7               	clrf	??___xxtofl+3
  3707     037D  3018               	movlw	24
  3708     037E                     u147_25:
  3709     037E  1003               	clrc
  3710     037F  0DF4               	rlf	??___xxtofl,f
  3711     0380  0DF5               	rlf	??___xxtofl+1,f
  3712     0381  0DF6               	rlf	??___xxtofl+2,f
  3713     0382  0DF7               	rlf	??___xxtofl+3,f
  3714     0383                     u147_20:
  3715     0383  3EFF               	addlw	-1
  3716     0384  1D03               	skipz
  3717     0385  2B7E               	goto	u147_25
  3718     0386  0874               	movf	??___xxtofl,w
  3719     0387  04FA               	iorwf	___xxtofl@arg,f
  3720     0388  0875               	movf	??___xxtofl+1,w
  3721     0389  04FB               	iorwf	___xxtofl@arg+1,f
  3722     038A  0876               	movf	??___xxtofl+2,w
  3723     038B  04FC               	iorwf	___xxtofl@arg+2,f
  3724     038C  0877               	movf	??___xxtofl+3,w
  3725     038D  04FD               	iorwf	___xxtofl@arg+3,f
  3726     038E                     i1l1874:
  3727     038E  0878               	movf	___xxtofl@sign,w
  3728     038F  1903               	btfsc	3,2
  3729     0390  2B92               	goto	u148_21
  3730     0391  2B93               	goto	u148_20
  3731     0392                     u148_21:
  3732     0392  2B98               	goto	i1l1880
  3733     0393                     u148_20:
  3734     0393                     i1l1876:
  3735     0393  1FF3               	btfss	___xxtofl@val+3,7
  3736     0394  2B96               	goto	u149_21
  3737     0395  2B97               	goto	u149_20
  3738     0396                     u149_21:
  3739     0396  2B98               	goto	i1l1880
  3740     0397                     u149_20:
  3741     0397                     i1l1878:
  3742     0397  17FD               	bsf	___xxtofl@arg+3,7
  3743     0398                     i1l1880:
  3744     0398  087D               	movf	___xxtofl@arg+3,w
  3745     0399  00F3               	movwf	?___xxtofl+3
  3746     039A  087C               	movf	___xxtofl@arg+2,w
  3747     039B  00F2               	movwf	?___xxtofl+2
  3748     039C  087B               	movf	___xxtofl@arg+1,w
  3749     039D  00F1               	movwf	?___xxtofl+1
  3750     039E  087A               	movf	___xxtofl@arg,w
  3751     039F  00F0               	movwf	?___xxtofl
  3752     03A0                     i1l823:
  3753     03A0  0008               	return
  3754     03A1                     __end_of___xxtofl:
  3755                           
  3756                           	psect	text15
  3757     0419                     __ptext15:	
  3758 ;; *************** function ___awdiv *****************
  3759 ;; Defined at:
  3760 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;  divisor         2    0[COMMON] int 
  3763 ;;  dividend        2    2[COMMON] int 
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;  quotient        2    6[COMMON] int 
  3766 ;;  sign            1    5[COMMON] unsigned char 
  3767 ;;  counter         1    4[COMMON] unsigned char 
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  2    0[COMMON] int 
  3770 ;; Registers used:
  3771 ;;		wreg, status,2, status,0, btemp+1
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3777 ;;      Params:         4       0       0       0       0
  3778 ;;      Locals:         4       0       0       0       0
  3779 ;;      Temps:          0       0       0       0       0
  3780 ;;      Totals:         8       0       0       0       0
  3781 ;;Total ram usage:        8 bytes
  3782 ;; Hardware stack levels used: 1
  3783 ;; This function calls:
  3784 ;;		Nothing
  3785 ;; This function is called by:
  3786 ;;		_isr
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790     0419                     ___awdiv:	
  3791                           ;psect for function ___awdiv
  3792                           
  3793     0419                     i1l1792:	
  3794                           ;incstack = 0
  3795                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  3796                           
  3797     0419  01F5               	clrf	___awdiv@sign
  3798     041A                     i1l1794:
  3799     041A  1FF1               	btfss	___awdiv@divisor+1,7
  3800     041B  2C1D               	goto	u126_21
  3801     041C  2C1E               	goto	u126_20
  3802     041D                     u126_21:
  3803     041D  2C25               	goto	i1l1800
  3804     041E                     u126_20:
  3805     041E                     i1l1796:
  3806     041E  09F0               	comf	___awdiv@divisor,f
  3807     041F  09F1               	comf	___awdiv@divisor+1,f
  3808     0420  0AF0               	incf	___awdiv@divisor,f
  3809     0421  1903               	skipnz
  3810     0422  0AF1               	incf	___awdiv@divisor+1,f
  3811     0423                     i1l1798:
  3812     0423  01F5               	clrf	___awdiv@sign
  3813     0424  0AF5               	incf	___awdiv@sign,f
  3814     0425                     i1l1800:
  3815     0425  1FF3               	btfss	___awdiv@dividend+1,7
  3816     0426  2C28               	goto	u127_21
  3817     0427  2C29               	goto	u127_20
  3818     0428                     u127_21:
  3819     0428  2C32               	goto	i1l1806
  3820     0429                     u127_20:
  3821     0429                     i1l1802:
  3822     0429  09F2               	comf	___awdiv@dividend,f
  3823     042A  09F3               	comf	___awdiv@dividend+1,f
  3824     042B  0AF2               	incf	___awdiv@dividend,f
  3825     042C  1903               	skipnz
  3826     042D  0AF3               	incf	___awdiv@dividend+1,f
  3827     042E                     i1l1804:
  3828     042E  3001               	movlw	1
  3829     042F  00FF               	movwf	btemp+1
  3830     0430  087F               	movf	btemp+1,w
  3831     0431  06F5               	xorwf	___awdiv@sign,f
  3832     0432                     i1l1806:
  3833     0432  01F6               	clrf	___awdiv@quotient
  3834     0433  01F7               	clrf	___awdiv@quotient+1
  3835     0434                     i1l1808:
  3836     0434  0870               	movf	___awdiv@divisor,w
  3837     0435  0471               	iorwf	___awdiv@divisor+1,w
  3838     0436  1903               	btfsc	3,2
  3839     0437  2C39               	goto	u128_21
  3840     0438  2C3A               	goto	u128_20
  3841     0439                     u128_21:
  3842     0439  2C71               	goto	i1l1828
  3843     043A                     u128_20:
  3844     043A                     i1l1810:
  3845     043A  01F4               	clrf	___awdiv@counter
  3846     043B  0AF4               	incf	___awdiv@counter,f
  3847     043C  2C48               	goto	i1l1816
  3848     043D                     i1l1812:
  3849     043D  3001               	movlw	1
  3850     043E                     u129_25:
  3851     043E  1003               	clrc
  3852     043F  0DF0               	rlf	___awdiv@divisor,f
  3853     0440  0DF1               	rlf	___awdiv@divisor+1,f
  3854     0441  3EFF               	addlw	-1
  3855     0442  1D03               	skipz
  3856     0443  2C3E               	goto	u129_25
  3857     0444                     i1l1814:
  3858     0444  3001               	movlw	1
  3859     0445  00FF               	movwf	btemp+1
  3860     0446  087F               	movf	btemp+1,w
  3861     0447  07F4               	addwf	___awdiv@counter,f
  3862     0448                     i1l1816:
  3863     0448  1FF1               	btfss	___awdiv@divisor+1,7
  3864     0449  2C4B               	goto	u130_21
  3865     044A  2C4C               	goto	u130_20
  3866     044B                     u130_21:
  3867     044B  2C3D               	goto	i1l1812
  3868     044C                     u130_20:
  3869     044C                     i1l1818:
  3870     044C  3001               	movlw	1
  3871     044D                     u131_25:
  3872     044D  1003               	clrc
  3873     044E  0DF6               	rlf	___awdiv@quotient,f
  3874     044F  0DF7               	rlf	___awdiv@quotient+1,f
  3875     0450  3EFF               	addlw	-1
  3876     0451  1D03               	skipz
  3877     0452  2C4D               	goto	u131_25
  3878     0453  0871               	movf	___awdiv@divisor+1,w
  3879     0454  0273               	subwf	___awdiv@dividend+1,w
  3880     0455  1D03               	skipz
  3881     0456  2C59               	goto	u132_25
  3882     0457  0870               	movf	___awdiv@divisor,w
  3883     0458  0272               	subwf	___awdiv@dividend,w
  3884     0459                     u132_25:
  3885     0459  1C03               	skipc
  3886     045A  2C5C               	goto	u132_21
  3887     045B  2C5D               	goto	u132_20
  3888     045C                     u132_21:
  3889     045C  2C64               	goto	i1l1824
  3890     045D                     u132_20:
  3891     045D                     i1l1820:
  3892     045D  0870               	movf	___awdiv@divisor,w
  3893     045E  02F2               	subwf	___awdiv@dividend,f
  3894     045F  0871               	movf	___awdiv@divisor+1,w
  3895     0460  1C03               	skipc
  3896     0461  03F3               	decf	___awdiv@dividend+1,f
  3897     0462  02F3               	subwf	___awdiv@dividend+1,f
  3898     0463                     i1l1822:
  3899     0463  1476               	bsf	___awdiv@quotient,0
  3900     0464                     i1l1824:
  3901     0464  3001               	movlw	1
  3902     0465                     u133_25:
  3903     0465  1003               	clrc
  3904     0466  0CF1               	rrf	___awdiv@divisor+1,f
  3905     0467  0CF0               	rrf	___awdiv@divisor,f
  3906     0468  3EFF               	addlw	-1
  3907     0469  1D03               	skipz
  3908     046A  2C65               	goto	u133_25
  3909     046B                     i1l1826:
  3910     046B  3001               	movlw	1
  3911     046C  02F4               	subwf	___awdiv@counter,f
  3912     046D  1D03               	btfss	3,2
  3913     046E  2C70               	goto	u134_21
  3914     046F  2C71               	goto	u134_20
  3915     0470                     u134_21:
  3916     0470  2C4C               	goto	i1l1818
  3917     0471                     u134_20:
  3918     0471                     i1l1828:
  3919     0471  0875               	movf	___awdiv@sign,w
  3920     0472  1903               	btfsc	3,2
  3921     0473  2C75               	goto	u135_21
  3922     0474  2C76               	goto	u135_20
  3923     0475                     u135_21:
  3924     0475  2C7B               	goto	i1l1832
  3925     0476                     u135_20:
  3926     0476                     i1l1830:
  3927     0476  09F6               	comf	___awdiv@quotient,f
  3928     0477  09F7               	comf	___awdiv@quotient+1,f
  3929     0478  0AF6               	incf	___awdiv@quotient,f
  3930     0479  1903               	skipnz
  3931     047A  0AF7               	incf	___awdiv@quotient+1,f
  3932     047B                     i1l1832:
  3933     047B  0877               	movf	___awdiv@quotient+1,w
  3934     047C  00F1               	movwf	?___awdiv+1
  3935     047D  0876               	movf	___awdiv@quotient,w
  3936     047E  00F0               	movwf	?___awdiv
  3937     047F                     i1l541:
  3938     047F  0008               	return
  3939     0480                     __end_of___awdiv:
  3940                           
  3941                           	psect	text16
  3942     06CF                     __ptext16:	
  3943 ;; *************** function _PWM_duty *****************
  3944 ;; Defined at:
  3945 ;;		line 46 in file "PWM.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;  chn             2    0[BANK0 ] int 
  3948 ;;  duty            4    2[BANK0 ] float 
  3949 ;; Auto vars:     Size  Location     Type
  3950 ;;		None
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  1    wreg      void 
  3953 ;; Registers used:
  3954 ;;		wreg, status,2, status,0
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3960 ;;      Params:         0       6       0       0       0
  3961 ;;      Locals:         0       0       0       0       0
  3962 ;;      Temps:          0       1       0       0       0
  3963 ;;      Totals:         0       7       0       0       0
  3964 ;;Total ram usage:        7 bytes
  3965 ;; Hardware stack levels used: 1
  3966 ;; This function calls:
  3967 ;;		Nothing
  3968 ;; This function is called by:
  3969 ;;		_isr
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973     06CF                     _PWM_duty:	
  3974                           ;psect for function _PWM_duty
  3975                           
  3976     06CF                     i1l1634:	
  3977                           ;incstack = 0
  3978                           ; Regs used in _PWM_duty: [wreg+status,2+status,0]
  3979                           
  3980                           
  3981                           ;PWM.c: 47:       if (chn==0)
  3982     06CF  1283               	bcf	3,5	;RP0=0, select bank0
  3983     06D0  1303               	bcf	3,6	;RP1=0, select bank0
  3984     06D1  0820               	movf	PWM_duty@chn,w
  3985     06D2  0421               	iorwf	PWM_duty@chn+1,w
  3986     06D3  1D03               	btfss	3,2
  3987     06D4  2ED6               	goto	u115_21
  3988     06D5  2ED7               	goto	u115_20
  3989     06D6                     u115_21:
  3990     06D6  2EDE               	goto	i1l1638
  3991     06D7                     u115_20:
  3992     06D7                     i1l1636:
  3993                           
  3994                           ;PWM.c: 48:           CCPR1L = (ADRESH>>1)+128;
  3995     06D7  081E               	movf	30,w	;volatile
  3996     06D8  00A6               	movwf	??_PWM_duty
  3997     06D9  1003               	clrc
  3998     06DA  0C26               	rrf	??_PWM_duty,w
  3999     06DB  3E80               	addlw	128
  4000     06DC  0095               	movwf	21	;volatile
  4001     06DD  2EE4               	goto	i1l92
  4002     06DE                     i1l1638:
  4003                           
  4004                           ;PWM.c: 51:           CCPR2L = (ADRESH>>1)+128;
  4005     06DE  081E               	movf	30,w	;volatile
  4006     06DF  00A6               	movwf	??_PWM_duty
  4007     06E0  1003               	clrc
  4008     06E1  0C26               	rrf	??_PWM_duty,w
  4009     06E2  3E80               	addlw	128
  4010     06E3  009B               	movwf	27	;volatile
  4011     06E4                     i1l92:
  4012     06E4  0008               	return
  4013     06E5                     __end_of_PWM_duty:
  4014     007E                     btemp	set	126	;btemp
  4015     007E                     wtemp0	set	126
  4016                           
  4017                           	psect	config
  4018                           
  4019                           ;Config register CONFIG1 @ 0x2007
  4020                           ;	Oscillator Selection bits
  4021                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  4022                           ;	Watchdog Timer Enable bit
  4023                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4024                           ;	Power-up Timer Enable bit
  4025                           ;	PWRTE = OFF, PWRT disabled
  4026                           ;	RE3/MCLR pin function select bit
  4027                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4028                           ;	Code Protection bit
  4029                           ;	CP = OFF, Program memory code protection is disabled
  4030                           ;	Data Code Protection bit
  4031                           ;	CPD = OFF, Data memory code protection is disabled
  4032                           ;	Brown Out Reset Selection bits
  4033                           ;	BOREN = OFF, BOR disabled
  4034                           ;	Internal External Switchover bit
  4035                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4036                           ;	Fail-Safe Clock Monitor Enabled bit
  4037                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4038                           ;	Low Voltage Programming Enable bit
  4039                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4040                           ;	In-Circuit Debugger Mode bit
  4041                           ;	DEBUG = 0x1, unprogrammed default
  4042     2007                     	org	8199
  4043     2007  20D5               	dw	8405
  4044                           
  4045                           ;Config register CONFIG2 @ 0x2008
  4046                           ;	Brown-out Reset Selection bit
  4047                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4048                           ;	Flash Program Memory Self Write Enable bits
  4049                           ;	WRT = OFF, Write protection off
  4050     2008                     	org	8200
  4051     2008  3FFF               	dw	16383

Data Sizes:
    Strings     3
    Constant    10
    Data        0
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     39      64
    BANK1            80     63      67
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@s3(BANK1[20]), main@s2(BANK1[20]), main@s(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> main@s3(BANK1[20]), main@s2(BANK1[20]), main@s(BANK1[20]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___xxtofl
    _PWM_duty->___xxtofl

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _PWM_init->___fltol
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in BANK0

    _isr->_PWM_duty

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                72    72      0    3369
                                              0 BANK1     63    63      0
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           _PWM_init
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1339
                                             26 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                             21 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                             14 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             8     0      8     599
                                             24 BANK0      8     0      8
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                             14 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     367
                                             19 BANK0      4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                             15 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     608
                                             18 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                             18 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                             15 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  7     7      0    1328
                                              7 BANK0      7     7      0
                           _PWM_duty
                            ___awdiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (5) _PWM_duty                                             7     1      6     326
                                              0 BANK0      7     1      6
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _PWM_init
     ___fltol
   _setup
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)
   _PWM_duty
     ___xxtofl (ARG)
   ___awdiv
   ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      91       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     27      40       5       80.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     3F      43       7       83.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      91      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Aug 21 16:07:34 2023

                       _a 005F                         _b 00E2                         _c 004F  
                       _i 00DF                         pc 0002                        l84 05B3  
                      l86 05B7                        l87 05B8              ___awdiv@sign 0075  
                      fsr 0004                       l110 069D                       l111 06A3  
                     l112 06A4                       l120 06CE                       l113 06AA  
                     l114 06AB                       l115 06B1                       l132 04E1  
                     l117 06B2                       l109 069C                       l141 0692  
                     l135 066D                       l129 052D                       l270 00BD  
                     l262 00B0                       l263 00AB                       l265 00AF  
                     l257 0092                       l267 00B4                       l277 05F8  
                     l269 00B8                       l384 02E8                       l660 0573  
                     l581 0403                       l574 0418                       l670 0634  
                     l584 0418                       _GIE 005F                       _RB2 0032  
                     _RB3 0033                       _RD3 0043                       _RD4 0044  
                     _RD5 0045                       _RD6 0046                       _RD7 0047  
                     _PR2 0092                       u910 03AC                       u911 03AB  
                     u920 03C3                       u905 0642                       u930 03D7  
                     u931 03D6                       u860 069A                       u940 03DE  
                     u861 0699                       u941 03DD                       u925 03BE  
                     u870 06A1                       u871 06A0                       u880 06A8  
                     u960 03F0                       u881 06A7                       u961 03EF  
                     u890 06AF                       u970 03F7                       u891 06AE  
                     u971 03F6                       u955 03E0                       u990 0408  
                     u991 0407                       u985 03FA                       _chn 0059  
                     _isr 013F                       _val 0047                       _rpm 00E1  
                     fsr0 0004                       indf 0000              ___fltol@exp1 0037  
                    l2020 0047                      l2012 0026                      l2030 0067  
                    l2022 0055                      l2014 002B                      l2040 007D  
                    l2024 005A                      l2016 002F                      l2050 00A6  
                    l2042 0085                      l2026 005D                      l2018 0044  
                    l1500 06CB                      l2060 00C2                      l2044 0098  
                    l2036 006B                      l2028 0061                      l1510 0650  
                    l1502 0638                      l2070 012B                      l2062 010B  
                    l2046 009C                      l2038 007C                      l1520 066A  
                    l1512 0657                      l1504 063E                      l1600 0623  
                    l2072 0135                      l2064 0115                      l2056 00BC  
                    l2048 00A0                      l1514 065A                      l1506 063F  
                    l1530 03C8                      l1522 03A1                      l1610 0586  
                    l1602 062A                      l2066 011B                      l2058 00C1  
                    l1516 0660                      l1508 064D                      l1532 03C9  
                    l1524 03AC                      l1620 05A7                      l1612 059B  
                    l1700 05D3                      l1604 0630                      l2068 0125  
                    l1518 0663                      l1534 03D1                      l1630 05B1  
                    l1622 05A8                      l1614 059F                      l1710 05DE  
                    l1702 05D4                      l2094 0255                      l1640 04E5  
                    l1544 03DF                      l1536 03D3                      l1528 03B5  
                    l1632 05B2                      l1624 05AA                      l1616 05A3  
                    l1608 0574                      l1720 05EB                      l1712 05E5  
                    l1704 05D5                      l1560 052E                      l1490 06AF  
                    l1482 0696                      l1642 04EA                      l1650 0509  
                    l1554 03F8                      l1546 03E8                      l1538 03D7  
                    l1626 05AB                      l1618 05A5                      l1730 05F4  
                    l1722 05EC                      l1714 05E8                      l1706 05DB  
                    l1570 0546                      l1562 0532                      l1484 069A  
                    l1492 06B6                      l1660 0480                      l1652 050F  
                    l1644 04F7                      l1556 0408                      l1548 03F1  
                    l1628 05AF                      l1732 05F5                      l1724 05ED  
                    l1716 05E9                      l1708 05DD                      l1580 0569  
                    l1572 054A                      l1564 0538                      l1740 022C  
                    l1486 06A1                      l1494 06B7                      l1662 0486  
                    l1654 051C                      l1646 04FA                      l1670 0671  
                    l1558 040D                      l1734 05F6                      l1726 05F0  
                    l1718 05EA                      l1574 055B                      l1566 053B  
                    l1582 056F                      l1590 0604                      l1742 0232  
                    l1488 06A8                      l1496 06BD                      l1664 0490  
                    l1656 051F                      l1648 0500                      l1672 0674  
                    l1736 05F7                      l1728 05F1                      l1680 05BD  
                    l1576 0561                      l1568 0542                      l1592 060B  
                    l1752 0243                      l1744 0237                      l1498 06C0  
                    l1666 04A0                      l1658 0525                      l1674 067F  
                    l1690 05C6                      l1682 05BE                      l1578 0562  
                    l1594 060F                      l1586 05F9                      l1770 028B  
                    l1754 025D                      l1746 023C                      l1738 0229  
                    l1668 04A6                      l1676 0687                      l1692 05C7  
                    l1684 05C2                      l1596 0613                      l1588 0601  
                    l1780 02CB                      l1772 0291                      l1764 026B  
                    l1756 0265                      l1748 023E                      l1694 05CD  
                    l1686 05C4                      l1678 05B9                      l1598 061D  
                    l1774 0294                      l1758 0269                      l1782 02D4  
                    l1696 05D1                      l1688 05C5                      l1776 02C2  
                    l1768 0287                      l1784 02E4                      l1698 05D2  
                    l1778 02C7                      ?_isr 0070                      STR_1 06F5  
                    STR_2 06F5                      STR_3 06F5                      u1000 040D  
                    u1001 040C                      u1010 0538                      u1011 0537  
                    u1100 0613                      u1101 0612                      u1030 054A  
                    u1110 061D                      u1031 0549                      u1111 061C  
                    u1200 0692                      u1201 0691                      u1025 053C  
                    u1050 055B                      u1130 0630                      u1210 0232  
                    u1051 055A                      u1131 062F                      u1115 0619  
                    u1211 0231                      u1140 05B7                      u1220 0286  
                    u1141 05B6                      u1045 054B                      u1125 0624  
                    u1221 0285                      u1070 056F                      u1230 0291  
                    u1071 056E                      u1055 0557                      u1231 0290  
                    u1160 04EA                      u1080 0601                      u1240 02D4  
                    u1161 04E9                      u1065 0563                      u1081 0600  
                    u1241 02D3                      u1225 0282                      u1250 02E4  
                    u1251 02E3                      u1180 050F                      u1181 050E  
                    u1175 04F0                      u1095 0605                      u1195 0515  
                    u1700 00A0                      u1701 009F                      u1710 00AB  
                    u1711 00AA                      u1720 00AF                      u1721 00AE  
                    u1730 00B4                      u1731 00B3                      u1740 00B8  
                    u1741 00B7                      u1750 00BC                      u1670 0067  
                    u1807 0667                      u1751 00BB                      u1671 0066  
                    u1760 00C1                      u1680 0092                      u1817 048C  
                    u1761 00C0                      u1681 0091                      u1690 0098  
                    u1827 049C                      u1691 0097                      u1837 04AC  
                    u1685 008E                      u1847 06C6                      u1777 004F  
                    u1787 05E2                      _PEIE 005E                      u1797 0654  
                    i1l92 06E4                      _TMR0 0001                      _WPUB 0095  
                    _chn1 005D                      _chn2 005B         ?_Lcd_Write_String 0070  
                    _main 0026                      btemp 007E                      start 0010  
      ??_Lcd_Write_String 0033           __end_of_Lcd_Cmd 06CF                     ??_isr 0027  
           ___fltol@sign1 0036                     ?_main 0070           __end_of___awdiv 0480  
         __end_of___fltol 0419                     _ANSEL 0188           ___awdiv@divisor 0070  
         __end_of___lwdiv 0574                     i1l251 021D           __end_of___lwmod 0635  
                   i1l541 047F                     i1l821 030B                     i1l823 03A0  
                   i1l834 036A                     i1l835 0376           ___awdiv@counter 0074  
                   _PORTD 0008                     _PORTE 0009                     _TRISA 0085  
                   _TRISB 0086                     _TRISD 0088                     _SSPIE 0463  
                   _TRISE 0089                     _SSPIF 0063           __end_of_dpowers 06F5  
                   _setup 05B9                     main@s 00A3                     pclath 000A  
        __end_of_PWM_init 05B9          __end_of_PWM_duty 06E5                     status 0003  
                   wtemp0 007E           __end_of_sprintf 02E9          __end_of_Lcd_Init 04E2  
        __end_of_Lcd_Port 06B3           __initialization 0013              __end_of_main 013F  
                  ??_main 00A0                    _ADRESH 001E                    _CCPR1L 0015  
                  _CCPR2L 001B          ___awdiv@dividend 0072                    ?_setup 0070  
                  _ANSELH 0189                    i1l1800 0425                    i1l1634 06CF  
                  i1l1810 043A                    i1l1802 0429                    i1l1636 06D7  
                  i1l1820 045D                    i1l1812 043D                    i1l1804 042E  
                  i1l1900 0184                    i1l1638 06DE                    i1l1830 0476  
                  i1l1822 0463                    i1l1814 0444                    i1l1806 0432  
                  i1l1902 01AA                    i1l1910 01DB                    i1l1832 047B  
                  i1l1824 0464                    u130_20 044C                    i1l1816 0448  
                  i1l1808 0434                    i1l1840 02F3                    i1l1920 0211  
                  i1l1912 01DF                    i1l1904 01B4                    u130_21 044B  
                  i1l1826 046B                    i1l1818 044C                    i1l1850 031F  
                  i1l1842 0303                    i1l1922 0214                    i1l1914 01EC  
                  i1l1906 01BD                    i1l1828 0471                    i1l1860 0345  
                  i1l1852 0323                    i1l1844 0313                    i1l1836 02EA  
                  i1l1924 0217                    i1l1916 01F4                    i1l1908 01DA  
                  i1l1870 036E                    i1l1862 034E                    i1l1854 032C  
                  i1l1838 02EF                    i1l1918 01FD                    i1l1926 021B  
                  u115_20 06D7                    i1l1792 0419                    i1l1880 0398  
                  i1l1872 0378                    i1l1864 0355                    i1l1856 0333  
                  i1l1848 031C                    i1l1928 021C                    u115_21 06D6  
                  i1l1794 041A                    i1l1874 038E                    i1l1866 0360  
                  i1l1858 0337                    i1l1890 013F                    i1l1796 041E  
                  i1l1876 0393                    i1l1868 0364                    i1l1892 0143  
                  u131_25 044D                    i1l1798 0423                    i1l1878 0397  
                  i1l1894 014C                    u132_20 045D                    u140_20 0332  
                  i1l1896 0171                    u132_21 045C                    u140_21 0331  
                  i1l1898 017B                    u132_25 0459                    u133_25 0465  
                  u141_25 0346                    u134_20 0471                    u126_20 041E  
                  u142_20 0354                    u150_20 0143                    u134_21 0470  
                  u126_21 041D                    u142_21 0353                    u150_21 0142  
                  u135_20 0476                    u127_20 0429                    u151_20 014C  
                  u135_21 0475                    u127_21 0428                    u151_21 014B  
                  u143_25 0359                    u128_20 043A                    u144_20 0364  
                  u136_20 02EF                    u152_20 0184                    u128_21 0439  
                  u144_21 0363                    u136_21 02EE                    u152_21 0183  
                  u145_20 036A                    u137_20 02F3                    u153_20 01BD  
                  u145_21 0369                    u137_21 02F2                    u153_21 01BC  
                  u129_25 043E                    u146_20 036E                    u138_20 0313  
                  u154_20 01DF                    u146_21 036D                    u138_21 0312  
                  u154_21 01DE                    u147_20 0383                    u155_20 01EC  
                  u155_21 01EB                    u147_25 037E                    u139_25 0324  
                  u155_25 01E8                    u148_20 0393                    u156_20 01FD  
                  u148_21 0392                    u156_21 01FC                    u149_20 0397  
                  u149_21 0396                    _OSCCON 008F                 ??_Lcd_Cmd 002F  
                  _SSPADD 0093                    _TRISC3 043B                    _TRISC4 043C  
                  _SSPCON 0014                    _SSPBUF 0013          __end_of___xxtofl 03A1  
               ??___awdiv 0074                 ??___fltol 0032                 ??___lwdiv 0032  
               ??___lwmod 0039          ___awdiv@quotient 0076                    _valadr 0057  
                  main@s2 00B7                    main@s3 00CB                    saved_w 007E  
               ??_sprintf 003D           Lcd_Set_Cursor@a 0034           Lcd_Set_Cursor@b 0032  
         Lcd_Set_Cursor@y 0036           Lcd_Set_Cursor@z 0035              ___xxtofl@arg 007A  
            ___xxtofl@exp 0079              ___xxtofl@val 0070   __end_of__initialization 0022  
              ___fltol@f1 002E            __pcstackCOMMON 0070             __end_of_setup 05F9  
               ?_PWM_init 0038                 ?_PWM_duty 0020            _Lcd_Set_Cursor 04E2  
          _OPTION_REGbits 0081                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
                 ??_setup 002E                __pbssBANK0 0047                __pbssBANK1 00DF  
              __pmaintext 0026                __pintentry 0004    __end_of_Lcd_Set_Cursor 052E  
      PWM_init@periodo_ms 003C                ??_PWM_init 0040                ??_PWM_duty 0026  
               ?___xxtofl 0070              PWM_init@chn1 0038              PWM_init@chn2 003A  
              ??_Lcd_Init 0032                ??_Lcd_Port 002E              PWM_duty@duty 0022  
                 _SSPCON2 0091                   _SSPSTAT 0094                __stringtab 06E5  
          _Lcd_Write_Char 0635                   _Lcd_Cmd 06B3                   ___awdiv 0419  
                 ___fltol 03A1                   ___lwdiv 052E                   ___lwmod 05F9  
         ?_Lcd_Set_Cursor 0032                   __ptext1 0226                   __ptext2 05F9  
                 __ptext3 052E                   __ptext4 05B9                   __ptext5 0574  
                 __ptext6 03A1                   __ptext7 066E                   __ptext8 0635  
                 __ptext9 04E2                   _dpowers 06EB                 _T2CONbits 0012  
              ??___xxtofl 0074                   _valpot0 0055                   _valpot1 0053  
                 _valprom 0051                   _sprintf 0226                   clrloop0 06F9  
  __end_of_Lcd_Write_Char 066E      end_of_initialization 0022                _periodo_ms 004B  
               Lcd_Port@a 002E                 _PORTBbits 0006                 _PORTDbits 0008  
               _PORTEbits 0009             ___xxtofl@sign 0078                 _TRISCbits 0087  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0036         Lcd_Write_String@i 0034  
             _CCP1CONbits 0017               _CCP2CONbits 001D          _Lcd_Write_String 066E  
     start_initialization 0013               __end_of_isr 0226           Lcd_Write_Char@a 0032  
         Lcd_Write_Char@y 0031                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A0                  ?_Lcd_Cmd 0070               sprintf@flag 0040  
             sprintf@prec 0044          ___lwdiv@dividend 0030          ??_Lcd_Set_Cursor 0033  
                ?___awdiv 0070                  ?___fltol 002E                  ?___lwdiv 002E  
                ?___lwmod 0035                 __pstrings 06E5               PWM_duty@chn 0020  
        ___lwdiv@quotient 0032                  ?_sprintf 003A         interrupt_function 0004  
               clear_ram0 06F8                  _PIE1bits 008C                  Lcd_Cmd@a 0031  
                _PIR1bits 000C                _ADCON0bits 001F               __stringbase 06EA  
              _ADCON1bits 009F                  _PWM_init 0574                  _PWM_duty 06CF  
        ??_Lcd_Write_Char 002F                  _Lcd_Init 0480                  _Lcd_Port 0693  
__end_of_Lcd_Write_String 0693        __end_of__stringtab 06EB                sprintf@val 0042  
                ___xxtofl 02E9           ___lwdiv@divisor 002E           ___lwdiv@counter 0034  
                __ptext10 0480                  __ptext11 06B3                  __ptext12 0693  
                __ptext13 013F                  __ptext14 02E9                  __ptext15 0419  
                __ptext16 06CF                _INTCONbits 000B        Lcd_Write_Char@temp 0030  
                intlevel1 0000                 sprintf@ap 0041                 sprintf@sp 0045  
        ___lwmod@dividend 0037                 stringcode 06E5                _OSCCONbits 008F  
      Lcd_Set_Cursor@temp 0037                  sprintf@c 0046                  sprintf@f 003A  
         ___lwmod@divisor 0035           ___lwmod@counter 0039                  stringdir 06E5  
                stringtab 06E5               _SSPCON2bits 0091  
