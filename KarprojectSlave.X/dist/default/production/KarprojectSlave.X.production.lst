

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Aug 22 15:58:30 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26     0000                     
    27                           ; Generated 22/03/2023 GMT
    28                           ; 
    29                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61     0000                     	;# 
    62     0001                     	;# 
    63     0002                     	;# 
    64     0003                     	;# 
    65     0004                     	;# 
    66     0005                     	;# 
    67     0006                     	;# 
    68     0007                     	;# 
    69     0008                     	;# 
    70     0009                     	;# 
    71     000A                     	;# 
    72     000B                     	;# 
    73     000C                     	;# 
    74     000D                     	;# 
    75     000E                     	;# 
    76     000E                     	;# 
    77     000F                     	;# 
    78     0010                     	;# 
    79     0011                     	;# 
    80     0012                     	;# 
    81     0013                     	;# 
    82     0014                     	;# 
    83     0015                     	;# 
    84     0015                     	;# 
    85     0016                     	;# 
    86     0017                     	;# 
    87     0018                     	;# 
    88     0019                     	;# 
    89     001A                     	;# 
    90     001B                     	;# 
    91     001B                     	;# 
    92     001C                     	;# 
    93     001D                     	;# 
    94     001E                     	;# 
    95     001F                     	;# 
    96     0081                     	;# 
    97     0085                     	;# 
    98     0086                     	;# 
    99     0087                     	;# 
   100     0088                     	;# 
   101     0089                     	;# 
   102     008C                     	;# 
   103     008D                     	;# 
   104     008E                     	;# 
   105     008F                     	;# 
   106     0090                     	;# 
   107     0091                     	;# 
   108     0092                     	;# 
   109     0093                     	;# 
   110     0093                     	;# 
   111     0093                     	;# 
   112     0094                     	;# 
   113     0095                     	;# 
   114     0096                     	;# 
   115     0097                     	;# 
   116     0098                     	;# 
   117     0099                     	;# 
   118     009A                     	;# 
   119     009B                     	;# 
   120     009C                     	;# 
   121     009D                     	;# 
   122     009E                     	;# 
   123     009F                     	;# 
   124     0105                     	;# 
   125     0107                     	;# 
   126     0108                     	;# 
   127     0109                     	;# 
   128     010C                     	;# 
   129     010C                     	;# 
   130     010D                     	;# 
   131     010E                     	;# 
   132     010F                     	;# 
   133     0185                     	;# 
   134     0187                     	;# 
   135     0188                     	;# 
   136     0189                     	;# 
   137     018C                     	;# 
   138     018D                     	;# 
   139     0000                     	;# 
   140     0001                     	;# 
   141     0002                     	;# 
   142     0003                     	;# 
   143     0004                     	;# 
   144     0005                     	;# 
   145     0006                     	;# 
   146     0007                     	;# 
   147     0008                     	;# 
   148     0009                     	;# 
   149     000A                     	;# 
   150     000B                     	;# 
   151     000C                     	;# 
   152     000D                     	;# 
   153     000E                     	;# 
   154     000E                     	;# 
   155     000F                     	;# 
   156     0010                     	;# 
   157     0011                     	;# 
   158     0012                     	;# 
   159     0013                     	;# 
   160     0014                     	;# 
   161     0015                     	;# 
   162     0015                     	;# 
   163     0016                     	;# 
   164     0017                     	;# 
   165     0018                     	;# 
   166     0019                     	;# 
   167     001A                     	;# 
   168     001B                     	;# 
   169     001B                     	;# 
   170     001C                     	;# 
   171     001D                     	;# 
   172     001E                     	;# 
   173     001F                     	;# 
   174     0081                     	;# 
   175     0085                     	;# 
   176     0086                     	;# 
   177     0087                     	;# 
   178     0088                     	;# 
   179     0089                     	;# 
   180     008C                     	;# 
   181     008D                     	;# 
   182     008E                     	;# 
   183     008F                     	;# 
   184     0090                     	;# 
   185     0091                     	;# 
   186     0092                     	;# 
   187     0093                     	;# 
   188     0093                     	;# 
   189     0093                     	;# 
   190     0094                     	;# 
   191     0095                     	;# 
   192     0096                     	;# 
   193     0097                     	;# 
   194     0098                     	;# 
   195     0099                     	;# 
   196     009A                     	;# 
   197     009B                     	;# 
   198     009C                     	;# 
   199     009D                     	;# 
   200     009E                     	;# 
   201     009F                     	;# 
   202     0105                     	;# 
   203     0107                     	;# 
   204     0108                     	;# 
   205     0109                     	;# 
   206     010C                     	;# 
   207     010C                     	;# 
   208     010D                     	;# 
   209     010E                     	;# 
   210     010F                     	;# 
   211     0185                     	;# 
   212     0187                     	;# 
   213     0188                     	;# 
   214     0189                     	;# 
   215     018C                     	;# 
   216     018D                     	;# 
   217     0000                     	;# 
   218     0001                     	;# 
   219     0002                     	;# 
   220     0003                     	;# 
   221     0004                     	;# 
   222     0005                     	;# 
   223     0006                     	;# 
   224     0007                     	;# 
   225     0008                     	;# 
   226     0009                     	;# 
   227     000A                     	;# 
   228     000B                     	;# 
   229     000C                     	;# 
   230     000D                     	;# 
   231     000E                     	;# 
   232     000E                     	;# 
   233     000F                     	;# 
   234     0010                     	;# 
   235     0011                     	;# 
   236     0012                     	;# 
   237     0013                     	;# 
   238     0014                     	;# 
   239     0015                     	;# 
   240     0015                     	;# 
   241     0016                     	;# 
   242     0017                     	;# 
   243     0018                     	;# 
   244     0019                     	;# 
   245     001A                     	;# 
   246     001B                     	;# 
   247     001B                     	;# 
   248     001C                     	;# 
   249     001D                     	;# 
   250     001E                     	;# 
   251     001F                     	;# 
   252     0081                     	;# 
   253     0085                     	;# 
   254     0086                     	;# 
   255     0087                     	;# 
   256     0088                     	;# 
   257     0089                     	;# 
   258     008C                     	;# 
   259     008D                     	;# 
   260     008E                     	;# 
   261     008F                     	;# 
   262     0090                     	;# 
   263     0091                     	;# 
   264     0092                     	;# 
   265     0093                     	;# 
   266     0093                     	;# 
   267     0093                     	;# 
   268     0094                     	;# 
   269     0095                     	;# 
   270     0096                     	;# 
   271     0097                     	;# 
   272     0098                     	;# 
   273     0099                     	;# 
   274     009A                     	;# 
   275     009B                     	;# 
   276     009C                     	;# 
   277     009D                     	;# 
   278     009E                     	;# 
   279     009F                     	;# 
   280     0105                     	;# 
   281     0107                     	;# 
   282     0108                     	;# 
   283     0109                     	;# 
   284     010C                     	;# 
   285     010C                     	;# 
   286     010D                     	;# 
   287     010E                     	;# 
   288     010F                     	;# 
   289     0185                     	;# 
   290     0187                     	;# 
   291     0188                     	;# 
   292     0189                     	;# 
   293     018C                     	;# 
   294     018D                     	;# 
   295     0000                     	;# 
   296     0001                     	;# 
   297     0002                     	;# 
   298     0003                     	;# 
   299     0004                     	;# 
   300     0005                     	;# 
   301     0006                     	;# 
   302     0007                     	;# 
   303     0008                     	;# 
   304     0009                     	;# 
   305     000A                     	;# 
   306     000B                     	;# 
   307     000C                     	;# 
   308     000D                     	;# 
   309     000E                     	;# 
   310     000E                     	;# 
   311     000F                     	;# 
   312     0010                     	;# 
   313     0011                     	;# 
   314     0012                     	;# 
   315     0013                     	;# 
   316     0014                     	;# 
   317     0015                     	;# 
   318     0015                     	;# 
   319     0016                     	;# 
   320     0017                     	;# 
   321     0018                     	;# 
   322     0019                     	;# 
   323     001A                     	;# 
   324     001B                     	;# 
   325     001B                     	;# 
   326     001C                     	;# 
   327     001D                     	;# 
   328     001E                     	;# 
   329     001F                     	;# 
   330     0081                     	;# 
   331     0085                     	;# 
   332     0086                     	;# 
   333     0087                     	;# 
   334     0088                     	;# 
   335     0089                     	;# 
   336     008C                     	;# 
   337     008D                     	;# 
   338     008E                     	;# 
   339     008F                     	;# 
   340     0090                     	;# 
   341     0091                     	;# 
   342     0092                     	;# 
   343     0093                     	;# 
   344     0093                     	;# 
   345     0093                     	;# 
   346     0094                     	;# 
   347     0095                     	;# 
   348     0096                     	;# 
   349     0097                     	;# 
   350     0098                     	;# 
   351     0099                     	;# 
   352     009A                     	;# 
   353     009B                     	;# 
   354     009C                     	;# 
   355     009D                     	;# 
   356     009E                     	;# 
   357     009F                     	;# 
   358     0105                     	;# 
   359     0107                     	;# 
   360     0108                     	;# 
   361     0109                     	;# 
   362     010C                     	;# 
   363     010C                     	;# 
   364     010D                     	;# 
   365     010E                     	;# 
   366     010F                     	;# 
   367     0185                     	;# 
   368     0187                     	;# 
   369     0188                     	;# 
   370     0189                     	;# 
   371     018C                     	;# 
   372     018D                     	;# 
   373     0000                     	;# 
   374     0001                     	;# 
   375     0002                     	;# 
   376     0003                     	;# 
   377     0004                     	;# 
   378     0005                     	;# 
   379     0006                     	;# 
   380     0007                     	;# 
   381     0008                     	;# 
   382     0009                     	;# 
   383     000A                     	;# 
   384     000B                     	;# 
   385     000C                     	;# 
   386     000D                     	;# 
   387     000E                     	;# 
   388     000E                     	;# 
   389     000F                     	;# 
   390     0010                     	;# 
   391     0011                     	;# 
   392     0012                     	;# 
   393     0013                     	;# 
   394     0014                     	;# 
   395     0015                     	;# 
   396     0015                     	;# 
   397     0016                     	;# 
   398     0017                     	;# 
   399     0018                     	;# 
   400     0019                     	;# 
   401     001A                     	;# 
   402     001B                     	;# 
   403     001B                     	;# 
   404     001C                     	;# 
   405     001D                     	;# 
   406     001E                     	;# 
   407     001F                     	;# 
   408     0081                     	;# 
   409     0085                     	;# 
   410     0086                     	;# 
   411     0087                     	;# 
   412     0088                     	;# 
   413     0089                     	;# 
   414     008C                     	;# 
   415     008D                     	;# 
   416     008E                     	;# 
   417     008F                     	;# 
   418     0090                     	;# 
   419     0091                     	;# 
   420     0092                     	;# 
   421     0093                     	;# 
   422     0093                     	;# 
   423     0093                     	;# 
   424     0094                     	;# 
   425     0095                     	;# 
   426     0096                     	;# 
   427     0097                     	;# 
   428     0098                     	;# 
   429     0099                     	;# 
   430     009A                     	;# 
   431     009B                     	;# 
   432     009C                     	;# 
   433     009D                     	;# 
   434     009E                     	;# 
   435     009F                     	;# 
   436     0105                     	;# 
   437     0107                     	;# 
   438     0108                     	;# 
   439     0109                     	;# 
   440     010C                     	;# 
   441     010C                     	;# 
   442     010D                     	;# 
   443     010E                     	;# 
   444     010F                     	;# 
   445     0185                     	;# 
   446     0187                     	;# 
   447     0188                     	;# 
   448     0189                     	;# 
   449     018C                     	;# 
   450     018D                     	;# 
   451                           
   452                           	psect	idataCOMMON
   453     022C                     __pidataCOMMON:
   454                           
   455                           ;initializer for _y
   456     022C  345E               	retlw	94
   457                           
   458                           ;initializer for _x
   459     022D  3464               	retlw	100
   460                           
   461                           ;initializer for _z
   462     022E  3402               	retlw	2
   463                           
   464                           	psect	idataBANK0
   465     021D                     __pidataBANK0:
   466                           
   467                           ;initializer for _lec
   468     021D  3476               	retlw	118
   469     021E  3461               	retlw	97
   470     021F  3472               	retlw	114
   471     0220  346C               	retlw	108
   472     0221  343A               	retlw	58
   473     0222  3420               	retlw	32
   474     0223  3430               	retlw	48
   475     0224  3430               	retlw	48
   476     0225  343A               	retlw	58
   477     0226  3430               	retlw	48
   478     0227  3430               	retlw	48
   479     0228  343A               	retlw	58
   480     0229  3430               	retlw	48
   481     022A  3430               	retlw	48
   482     022B  3400               	retlw	0
   483     0006                     _PORTB	set	6
   484     0008                     _PORTD	set	8
   485     0014                     _SSPCONbits	set	20
   486     0008                     _PORTDbits	set	8
   487     001E                     _ADRESH	set	30
   488     001B                     _CCPR2L	set	27
   489     001D                     _CCP2CONbits	set	29
   490     0012                     _T2CONbits	set	18
   491     000C                     _PIR1bits	set	12
   492     0015                     _CCPR1L	set	21
   493     0017                     _CCP1CONbits	set	23
   494     0013                     _SSPBUF	set	19
   495     0014                     _SSPCON	set	20
   496     0043                     _RD3	set	67
   497     0047                     _RD7	set	71
   498     0046                     _RD6	set	70
   499     0045                     _RD5	set	69
   500     0044                     _RD4	set	68
   501     0063                     _SSPIF	set	99
   502     005E                     _PEIE	set	94
   503     005F                     _GIE	set	95
   504     0088                     _TRISD	set	136
   505     0086                     _TRISB	set	134
   506     0094                     _SSPSTATbits	set	148
   507     0092                     _PR2	set	146
   508     0091                     _SSPCON2bits	set	145
   509     0087                     _TRISCbits	set	135
   510     0094                     _SSPSTAT	set	148
   511     0093                     _SSPADD	set	147
   512     0091                     _SSPCON2	set	145
   513     04A0                     _BF	set	1184
   514     0463                     _SSPIE	set	1123
   515     043C                     _TRISC4	set	1084
   516     043B                     _TRISC3	set	1083
   517     0189                     _ANSELH	set	393
   518     0188                     _ANSEL	set	392
   519                           
   520                           	psect	cinit
   521     000F                     start_initialization:	
   522                           ; #config settings
   523                           
   524     000F                     __initialization:
   525                           
   526                           ; Initialize objects allocated to BANK0
   527     000F  1383               	bcf	3,7	;select IRP bank0
   528     0010  302F               	movlw	low (__pdataBANK0+15)
   529     0011  00FD               	movwf	btemp+-1
   530     0012  3002               	movlw	high __pidataBANK0
   531     0013  00FE               	movwf	btemp
   532     0014  301D               	movlw	low __pidataBANK0
   533     0015  00FF               	movwf	btemp+1
   534     0016  3020               	movlw	low __pdataBANK0
   535     0017  0084               	movwf	4
   536     0018  120A  118A  21FB  120A  118A  	fcall	init_ram0
   537                           
   538                           ; Initialize objects allocated to COMMON
   539     001D  120A  118A  222C  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   540     0022  00F6               	movwf	__pdataCOMMON& (0+127)
   541     0023  120A  118A  222D  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   542     0028  00F7               	movwf	(__pdataCOMMON+1)& (0+127)
   543     0029  120A  118A  222E  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   544     002E  00F8               	movwf	(__pdataCOMMON+2)& (0+127)
   545                           
   546                           ; Clear objects allocated to BANK0
   547     002F  01AF               	clrf	__pbssBANK0& (0+127)
   548     0030  01B0               	clrf	(__pbssBANK0+1)& (0+127)
   549     0031  01B1               	clrf	(__pbssBANK0+2)& (0+127)
   550     0032  01B2               	clrf	(__pbssBANK0+3)& (0+127)
   551     0033  01B3               	clrf	(__pbssBANK0+4)& (0+127)
   552     0034  01B4               	clrf	(__pbssBANK0+5)& (0+127)
   553     0035  01B5               	clrf	(__pbssBANK0+6)& (0+127)
   554     0036  01B6               	clrf	(__pbssBANK0+7)& (0+127)
   555     0037  01B7               	clrf	(__pbssBANK0+8)& (0+127)
   556     0038  01B8               	clrf	(__pbssBANK0+9)& (0+127)
   557                           
   558                           ; Clear objects allocated to COMMON
   559     0039  01F9               	clrf	__pbssCOMMON& (0+127)
   560     003A  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   561     003B                     end_of_initialization:	
   562                           ;End of C runtime variable initialization code
   563                           
   564     003B                     __end_of__initialization:
   565     003B  0183               	clrf	3
   566     003C  120A  118A  297F   	ljmp	_main	;jump to C main() function
   567                           
   568                           	psect	bssCOMMON
   569     0079                     __pbssCOMMON:
   570     0079                     _state:
   571     0079                     	ds	1
   572     007A                     _dato:
   573     007A                     	ds	1
   574                           
   575                           	psect	dataCOMMON
   576     0076                     __pdataCOMMON:
   577     0076                     _y:
   578     0076                     	ds	1
   579     0077                     _x:
   580     0077                     	ds	1
   581     0078                     _z:
   582     0078                     	ds	1
   583                           
   584                           	psect	bssBANK0
   585     002F                     __pbssBANK0:
   586     002F                     _periodo_ms:
   587     002F                     	ds	4
   588     0033                     _chn:
   589     0033                     	ds	2
   590     0035                     _chn2:
   591     0035                     	ds	2
   592     0037                     _chn1:
   593     0037                     	ds	2
   594                           
   595                           	psect	dataBANK0
   596     0020                     __pdataBANK0:
   597     0020                     _lec:
   598     0020                     	ds	15
   599                           
   600                           	psect	inittext
   601     01F7                     init_fetch0:	
   602                           ;	Called with low address in FSR and high address in W
   603                           
   604     01F7  087E               	movf	btemp,w
   605     01F8  008A               	movwf	10
   606     01F9  087F               	movf	btemp+1,w
   607     01FA  0082               	movwf	2
   608     01FB                     init_ram0:	
   609                           ;Called with:
   610                           ;	high address of idata address in btemp 
   611                           ;	low address of idata address in btemp+1 
   612                           ;	low address of data in FSR
   613                           ;	high address + 1 of data in btemp-1
   614                           
   615     01FB  120A  118A  21F7  120A  118A  	fcall	init_fetch0
   616     0200  0080               	movwf	0
   617     0201  0A84               	incf	4,f
   618     0202  0804               	movf	4,w
   619     0203  067D               	xorwf	btemp+-1,w
   620     0204  1903               	btfsc	3,2
   621     0205  3400               	retlw	0
   622     0206  0AFF               	incf	btemp+1,f
   623     0207  1903               	btfsc	3,2
   624     0208  0AFE               	incf	btemp,f
   625     0209  29FB               	goto	init_ram0
   626                           
   627                           	psect	cstackCOMMON
   628     0070                     __pcstackCOMMON:
   629     0070                     ?_setup:
   630     0070                     ?_I2C_Slave_Init:	
   631                           ; 1 bytes @ 0x0
   632                           
   633     0070                     ?_Lcd_Port:	
   634                           ; 1 bytes @ 0x0
   635                           
   636     0070                     ?_Lcd_Cmd:	
   637                           ; 1 bytes @ 0x0
   638                           
   639     0070                     ?_Lcd_Init:	
   640                           ; 1 bytes @ 0x0
   641                           
   642     0070                     ?_Lcd_Write_Char:	
   643                           ; 1 bytes @ 0x0
   644                           
   645     0070                     ?_isr:	
   646                           ; 1 bytes @ 0x0
   647                           
   648     0070                     ??_isr:	
   649                           ; 1 bytes @ 0x0
   650                           
   651     0070                     ?_main:	
   652                           ; 1 bytes @ 0x0
   653                           
   654                           
   655                           ; 1 bytes @ 0x0
   656     0070                     	ds	3
   657     0073                     ??_I2C_Slave_Init:
   658     0073                     ??_Lcd_Port:	
   659                           ; 1 bytes @ 0x3
   660                           
   661     0073                     I2C_Slave_Init@address:	
   662                           ; 1 bytes @ 0x3
   663                           
   664     0073                     Lcd_Port@a:	
   665                           ; 1 bytes @ 0x3
   666                           
   667                           
   668                           ; 1 bytes @ 0x3
   669     0073                     	ds	1
   670     0074                     ??_setup:
   671     0074                     ??_Lcd_Cmd:	
   672                           ; 1 bytes @ 0x4
   673                           
   674     0074                     ??_Lcd_Write_Char:	
   675                           ; 1 bytes @ 0x4
   676                           
   677                           
   678                           ; 1 bytes @ 0x4
   679     0074                     	ds	2
   680     0076                     ??_main:
   681                           
   682                           	psect	cstackBANK0
   683     0039                     __pcstackBANK0:	
   684                           ; 1 bytes @ 0x6
   685                           
   686     0039                     Lcd_Cmd@a:
   687     0039                     Lcd_Write_Char@temp:	
   688                           ; 1 bytes @ 0x0
   689                           
   690                           
   691                           ; 1 bytes @ 0x0
   692     0039                     	ds	1
   693     003A                     ?_Lcd_Set_Cursor:
   694     003A                     ??_Lcd_Init:	
   695                           ; 1 bytes @ 0x1
   696                           
   697     003A                     Lcd_Set_Cursor@b:	
   698                           ; 1 bytes @ 0x1
   699                           
   700     003A                     Lcd_Write_Char@y:	
   701                           ; 1 bytes @ 0x1
   702                           
   703                           
   704                           ; 1 bytes @ 0x1
   705     003A                     	ds	1
   706     003B                     ??_Lcd_Set_Cursor:
   707     003B                     Lcd_Write_Char@a:	
   708                           ; 1 bytes @ 0x2
   709                           
   710                           
   711                           ; 1 bytes @ 0x2
   712     003B                     	ds	1
   713     003C                     Lcd_Set_Cursor@a:
   714                           
   715                           ; 1 bytes @ 0x3
   716     003C                     	ds	1
   717     003D                     Lcd_Set_Cursor@z:
   718                           
   719                           ; 1 bytes @ 0x4
   720     003D                     	ds	1
   721     003E                     Lcd_Set_Cursor@y:
   722                           
   723                           ; 1 bytes @ 0x5
   724     003E                     	ds	1
   725     003F                     Lcd_Set_Cursor@temp:
   726                           
   727                           ; 1 bytes @ 0x6
   728     003F                     	ds	1
   729                           
   730                           	psect	maintext
   731     017F                     __pmaintext:	
   732 ;;
   733 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   734 ;;
   735 ;; *************** function _main *****************
   736 ;; Defined at:
   737 ;;		line 94 in file "pruebaI2Cslave.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;		None
   740 ;; Auto vars:     Size  Location     Type
   741 ;;		None
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		wreg, status,2, status,0, pclath, cstack
   746 ;; Tracked objects:
   747 ;;		On entry : B00/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   751 ;;      Params:         0       0       0       0       0
   752 ;;      Locals:         0       0       0       0       0
   753 ;;      Temps:          0       0       0       0       0
   754 ;;      Totals:         0       0       0       0       0
   755 ;;Total ram usage:        0 bytes
   756 ;; Hardware stack levels required when called: 4
   757 ;; This function calls:
   758 ;;		_Lcd_Init
   759 ;;		_Lcd_Set_Cursor
   760 ;;		_Lcd_Write_Char
   761 ;;		_setup
   762 ;; This function is called by:
   763 ;;		Startup code after reset
   764 ;; This function uses a non-reentrant model
   765 ;;
   766                           
   767     017F                     _main:	
   768                           ;psect for function _main
   769                           
   770     017F                     l1290:	
   771                           ;incstack = 0
   772                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   773                           
   774                           
   775                           ;pruebaI2Cslave.c: 95:     setup();
   776     017F  120A  118A  220A  120A  118A  	fcall	_setup
   777                           
   778                           ;pruebaI2Cslave.c: 96:     Lcd_Init();
   779     0184  120A  118A  203F  120A  118A  	fcall	_Lcd_Init
   780     0189                     l1292:
   781                           
   782                           ;pruebaI2Cslave.c: 101:         lec[6] = x / 10 + '0';
   783     0189  303A               	movlw	58
   784     018A  1283               	bcf	3,5	;RP0=0, select bank0
   785     018B  1303               	bcf	3,6	;RP1=0, select bank0
   786     018C  00A6               	movwf	_lec+6
   787     018D                     l1294:
   788                           
   789                           ;pruebaI2Cslave.c: 102:         lec[7] = x % 10 + '0';
   790     018D  3030               	movlw	48
   791     018E  00A7               	movwf	_lec+7
   792                           
   793                           ;pruebaI2Cslave.c: 106:         Lcd_Set_Cursor(1,1);
   794     018F  01BA               	clrf	Lcd_Set_Cursor@b
   795     0190  0ABA               	incf	Lcd_Set_Cursor@b,f
   796     0191  3001               	movlw	1
   797     0192  120A  118A  20FE  120A  118A  	fcall	_Lcd_Set_Cursor
   798                           
   799                           ;pruebaI2Cslave.c: 107:     Lcd_Write_Char(lec);
   800     0197  3020               	movlw	(low _lec)& (0+255)
   801     0198  120A  118A  214A  120A  118A  	fcall	_Lcd_Write_Char
   802     019D  2989               	goto	l1292
   803     019E  120A  118A  280C   	ljmp	start
   804     01A1                     __end_of_main:
   805                           
   806                           	psect	text1
   807     020A                     __ptext1:	
   808 ;; *************** function _setup *****************
   809 ;; Defined at:
   810 ;;		line 114 in file "pruebaI2Cslave.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;		None
   813 ;; Auto vars:     Size  Location     Type
   814 ;;		None
   815 ;; Return value:  Size  Location     Type
   816 ;;                  1    wreg      void 
   817 ;; Registers used:
   818 ;;		wreg, status,2, status,0, pclath, cstack
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   824 ;;      Params:         0       0       0       0       0
   825 ;;      Locals:         0       0       0       0       0
   826 ;;      Temps:          0       0       0       0       0
   827 ;;      Totals:         0       0       0       0       0
   828 ;;Total ram usage:        0 bytes
   829 ;; Hardware stack levels used: 1
   830 ;; Hardware stack levels required when called: 2
   831 ;; This function calls:
   832 ;;		_I2C_Slave_Init
   833 ;; This function is called by:
   834 ;;		_main
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838     020A                     _setup:	
   839                           ;psect for function _setup
   840                           
   841     020A                     l904:	
   842                           ;incstack = 0
   843                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   844                           
   845                           
   846                           ;pruebaI2Cslave.c: 115:     ANSEL = 0;
   847     020A  1683               	bsf	3,5	;RP0=1, select bank3
   848     020B  1703               	bsf	3,6	;RP1=1, select bank3
   849     020C  0188               	clrf	8	;volatile
   850                           
   851                           ;pruebaI2Cslave.c: 116:     ANSELH = 0;
   852     020D  0189               	clrf	9	;volatile
   853                           
   854                           ;pruebaI2Cslave.c: 118:     TRISB = 0;
   855     020E  1683               	bsf	3,5	;RP0=1, select bank1
   856     020F  1303               	bcf	3,6	;RP1=0, select bank1
   857     0210  0186               	clrf	6	;volatile
   858                           
   859                           ;pruebaI2Cslave.c: 119:     TRISD = 0;
   860     0211  0188               	clrf	8	;volatile
   861                           
   862                           ;pruebaI2Cslave.c: 121:     PORTB = 0;
   863     0212  1283               	bcf	3,5	;RP0=0, select bank0
   864     0213  1303               	bcf	3,6	;RP1=0, select bank0
   865     0214  0186               	clrf	6	;volatile
   866                           
   867                           ;pruebaI2Cslave.c: 122:     PORTD = 0;
   868     0215  0188               	clrf	8	;volatile
   869     0216                     l906:
   870                           
   871                           ;pruebaI2Cslave.c: 123:     I2C_Slave_Init(0x24);
   872     0216  3024               	movlw	36
   873     0217  120A  118A  21C3  120A  118A  	fcall	_I2C_Slave_Init
   874     021C                     l224:
   875     021C  0008               	return
   876     021D                     __end_of_setup:
   877                           
   878                           	psect	text2
   879     01C3                     __ptext2:	
   880 ;; *************** function _I2C_Slave_Init *****************
   881 ;; Defined at:
   882 ;;		line 93 in file "I2C.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;  address         1    wreg     unsigned char 
   885 ;; Auto vars:     Size  Location     Type
   886 ;;  address         1    3[COMMON] unsigned char 
   887 ;; Return value:  Size  Location     Type
   888 ;;                  1    wreg      void 
   889 ;; Registers used:
   890 ;;		wreg
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   896 ;;      Params:         0       0       0       0       0
   897 ;;      Locals:         1       0       0       0       0
   898 ;;      Temps:          0       0       0       0       0
   899 ;;      Totals:         1       0       0       0       0
   900 ;;Total ram usage:        1 bytes
   901 ;; Hardware stack levels used: 1
   902 ;; Hardware stack levels required when called: 1
   903 ;; This function calls:
   904 ;;		Nothing
   905 ;; This function is called by:
   906 ;;		_setup
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910     01C3                     _I2C_Slave_Init:	
   911                           ;psect for function _I2C_Slave_Init
   912                           
   913                           
   914                           ;incstack = 0
   915                           ; Regs used in _I2C_Slave_Init: [wreg]
   916                           ;I2C_Slave_Init@address stored from wreg
   917     01C3  00F3               	movwf	I2C_Slave_Init@address
   918     01C4                     l826:
   919                           
   920                           ;I2C.c: 93: void I2C_Slave_Init(uint8_t address);I2C.c: 94: {;I2C.c: 95:     SSPADD = ad
      +                          dress;
   921     01C4  0873               	movf	I2C_Slave_Init@address,w
   922     01C5  1683               	bsf	3,5	;RP0=1, select bank1
   923     01C6  1303               	bcf	3,6	;RP1=0, select bank1
   924     01C7  0093               	movwf	19	;volatile
   925                           
   926                           ;I2C.c: 96:     SSPCON = 0x36;
   927     01C8  3036               	movlw	54
   928     01C9  1283               	bcf	3,5	;RP0=0, select bank0
   929     01CA  1303               	bcf	3,6	;RP1=0, select bank0
   930     01CB  0094               	movwf	20	;volatile
   931                           
   932                           ;I2C.c: 97:     SSPSTAT = 0x80;
   933     01CC  3080               	movlw	128
   934     01CD  1683               	bsf	3,5	;RP0=1, select bank1
   935     01CE  1303               	bcf	3,6	;RP1=0, select bank1
   936     01CF  0094               	movwf	20	;volatile
   937                           
   938                           ;I2C.c: 98:     SSPCON2 = 0x01;
   939     01D0  3001               	movlw	1
   940     01D1  0091               	movwf	17	;volatile
   941     01D2                     l828:
   942                           
   943                           ;I2C.c: 99:     TRISC3 = 1;
   944     01D2  1587               	bsf	7,3	;volatile
   945     01D3                     l830:
   946                           
   947                           ;I2C.c: 100:     TRISC4 = 1;
   948     01D3  1607               	bsf	7,4	;volatile
   949     01D4                     l832:
   950                           
   951                           ;I2C.c: 101:     GIE = 1;
   952     01D4  178B               	bsf	11,7	;volatile
   953     01D5                     l834:
   954                           
   955                           ;I2C.c: 102:     PEIE = 1;
   956     01D5  170B               	bsf	11,6	;volatile
   957     01D6                     l836:
   958                           
   959                           ;I2C.c: 103:     SSPIF = 0;
   960     01D6  1283               	bcf	3,5	;RP0=0, select bank0
   961     01D7  1303               	bcf	3,6	;RP1=0, select bank0
   962     01D8  118C               	bcf	12,3	;volatile
   963     01D9                     l838:
   964                           
   965                           ;I2C.c: 104:     SSPIE = 1;
   966     01D9  1683               	bsf	3,5	;RP0=1, select bank1
   967     01DA  1303               	bcf	3,6	;RP1=0, select bank1
   968     01DB  158C               	bsf	12,3	;volatile
   969     01DC                     l55:
   970     01DC  0008               	return
   971     01DD                     __end_of_I2C_Slave_Init:
   972                           
   973                           	psect	text3
   974     014A                     __ptext3:	
   975 ;; *************** function _Lcd_Write_Char *****************
   976 ;; Defined at:
   977 ;;		line 83 in file "LCD.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;  a               1    wreg     unsigned char 
   980 ;; Auto vars:     Size  Location     Type
   981 ;;  a               1    2[BANK0 ] unsigned char 
   982 ;;  y               1    1[BANK0 ] unsigned char 
   983 ;;  temp            1    0[BANK0 ] unsigned char 
   984 ;; Return value:  Size  Location     Type
   985 ;;                  1    wreg      void 
   986 ;; Registers used:
   987 ;;		wreg, status,2, status,0, pclath, cstack
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   993 ;;      Params:         0       0       0       0       0
   994 ;;      Locals:         0       3       0       0       0
   995 ;;      Temps:          1       0       0       0       0
   996 ;;      Totals:         1       3       0       0       0
   997 ;;Total ram usage:        4 bytes
   998 ;; Hardware stack levels used: 1
   999 ;; Hardware stack levels required when called: 2
  1000 ;; This function calls:
  1001 ;;		_Lcd_Port
  1002 ;; This function is called by:
  1003 ;;		_main
  1004 ;;		_Lcd_Write_String
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008     014A                     _Lcd_Write_Char:	
  1009                           ;psect for function _Lcd_Write_Char
  1010                           
  1011                           
  1012                           ;incstack = 0
  1013                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1014                           ;Lcd_Write_Char@a stored from wreg
  1015     014A  1283               	bcf	3,5	;RP0=0, select bank0
  1016     014B  1303               	bcf	3,6	;RP1=0, select bank0
  1017     014C  00BB               	movwf	Lcd_Write_Char@a
  1018     014D                     l1256:
  1019                           
  1020                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  1021     014D  083B               	movf	Lcd_Write_Char@a,w
  1022     014E  390F               	andlw	15
  1023     014F  00B9               	movwf	Lcd_Write_Char@temp
  1024                           
  1025                           ;LCD.c: 86:     y = a & 0xF0;
  1026     0150  083B               	movf	Lcd_Write_Char@a,w
  1027     0151  39F0               	andlw	240
  1028     0152  00BA               	movwf	Lcd_Write_Char@y
  1029     0153                     l1258:
  1030                           
  1031                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  1032     0153  1508               	bsf	8,2	;volatile
  1033     0154                     l1260:
  1034                           
  1035                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  1036     0154  083A               	movf	Lcd_Write_Char@y,w
  1037     0155  00F4               	movwf	??_Lcd_Write_Char
  1038     0156  3004               	movlw	4
  1039     0157                     u635:
  1040     0157  1003               	clrc
  1041     0158  0CF4               	rrf	??_Lcd_Write_Char,f
  1042     0159  3EFF               	addlw	-1
  1043     015A  1D03               	skipz
  1044     015B  2957               	goto	u635
  1045     015C  0874               	movf	??_Lcd_Write_Char,w
  1046     015D  120A  118A  21A1  120A  118A  	fcall	_Lcd_Port
  1047     0162                     l1262:
  1048                           
  1049                           ;LCD.c: 89:     RD3 = 1;
  1050     0162  1283               	bcf	3,5	;RP0=0, select bank0
  1051     0163  1303               	bcf	3,6	;RP1=0, select bank0
  1052     0164  1588               	bsf	8,3	;volatile
  1053     0165                     l1264:
  1054                           
  1055                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1056     0165  301A               	movlw	26
  1057     0166  00F4               	movwf	??_Lcd_Write_Char
  1058     0167                     u657:
  1059     0167  0BF4               	decfsz	??_Lcd_Write_Char,f
  1060     0168  2967               	goto	u657
  1061     0169  0000               	nop
  1062     016A                     l1266:
  1063                           
  1064                           ;LCD.c: 91:     RD3 = 0;
  1065     016A  1283               	bcf	3,5	;RP0=0, select bank0
  1066     016B  1303               	bcf	3,6	;RP1=0, select bank0
  1067     016C  1188               	bcf	8,3	;volatile
  1068     016D                     l1268:
  1069                           
  1070                           ;LCD.c: 92:     Lcd_Port(temp);
  1071     016D  0839               	movf	Lcd_Write_Char@temp,w
  1072     016E  120A  118A  21A1  120A  118A  	fcall	_Lcd_Port
  1073     0173                     l1270:
  1074                           
  1075                           ;LCD.c: 93:     RD3 = 1;
  1076     0173  1283               	bcf	3,5	;RP0=0, select bank0
  1077     0174  1303               	bcf	3,6	;RP1=0, select bank0
  1078     0175  1588               	bsf	8,3	;volatile
  1079     0176                     l1272:
  1080                           
  1081                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1082     0176  301A               	movlw	26
  1083     0177  00F4               	movwf	??_Lcd_Write_Char
  1084     0178                     u667:
  1085     0178  0BF4               	decfsz	??_Lcd_Write_Char,f
  1086     0179  2978               	goto	u667
  1087     017A  0000               	nop
  1088     017B                     l1274:
  1089                           
  1090                           ;LCD.c: 95:     RD3 = 0;
  1091     017B  1283               	bcf	3,5	;RP0=0, select bank0
  1092     017C  1303               	bcf	3,6	;RP1=0, select bank0
  1093     017D  1188               	bcf	8,3	;volatile
  1094     017E                     l135:
  1095     017E  0008               	return
  1096     017F                     __end_of_Lcd_Write_Char:
  1097                           
  1098                           	psect	text4
  1099     00FE                     __ptext4:	
  1100 ;; *************** function _Lcd_Set_Cursor *****************
  1101 ;; Defined at:
  1102 ;;		line 48 in file "LCD.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;  a               1    wreg     unsigned char 
  1105 ;;  b               1    1[BANK0 ] unsigned char 
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;  a               1    3[BANK0 ] unsigned char 
  1108 ;;  temp            1    6[BANK0 ] unsigned char 
  1109 ;;  y               1    5[BANK0 ] unsigned char 
  1110 ;;  z               1    4[BANK0 ] unsigned char 
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      void 
  1113 ;; Registers used:
  1114 ;;		wreg, status,2, status,0, pclath, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1120 ;;      Params:         0       1       0       0       0
  1121 ;;      Locals:         0       4       0       0       0
  1122 ;;      Temps:          0       1       0       0       0
  1123 ;;      Totals:         0       6       0       0       0
  1124 ;;Total ram usage:        6 bytes
  1125 ;; Hardware stack levels used: 1
  1126 ;; Hardware stack levels required when called: 3
  1127 ;; This function calls:
  1128 ;;		_Lcd_Cmd
  1129 ;; This function is called by:
  1130 ;;		_main
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134     00FE                     _Lcd_Set_Cursor:	
  1135                           ;psect for function _Lcd_Set_Cursor
  1136                           
  1137                           
  1138                           ;incstack = 0
  1139                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1140                           ;Lcd_Set_Cursor@a stored from wreg
  1141     00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1142     00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1143     0100  00BC               	movwf	Lcd_Set_Cursor@a
  1144     0101                     l1226:
  1145                           
  1146                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  1147     0101  033C               	decf	Lcd_Set_Cursor@a,w
  1148     0102  1D03               	btfss	3,2
  1149     0103  2905               	goto	u591
  1150     0104  2906               	goto	u590
  1151     0105                     u591:
  1152     0105  2925               	goto	l1236
  1153     0106                     u590:
  1154     0106                     l1228:
  1155                           
  1156                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  1157     0106  083A               	movf	Lcd_Set_Cursor@b,w
  1158     0107  3E7F               	addlw	127
  1159     0108  00BF               	movwf	Lcd_Set_Cursor@temp
  1160                           
  1161                           ;LCD.c: 52:         z = temp >> 4;
  1162     0109  083F               	movf	Lcd_Set_Cursor@temp,w
  1163     010A  00BB               	movwf	??_Lcd_Set_Cursor
  1164     010B  3004               	movlw	4
  1165     010C                     u605:
  1166     010C  1003               	clrc
  1167     010D  0CBB               	rrf	??_Lcd_Set_Cursor,f
  1168     010E  3EFF               	addlw	-1
  1169     010F  1D03               	skipz
  1170     0110  290C               	goto	u605
  1171     0111  083B               	movf	??_Lcd_Set_Cursor,w
  1172     0112  00BD               	movwf	Lcd_Set_Cursor@z
  1173     0113                     l1230:
  1174                           
  1175                           ;LCD.c: 53:         y = temp & 0x0F;
  1176     0113  083F               	movf	Lcd_Set_Cursor@temp,w
  1177     0114  390F               	andlw	15
  1178     0115  00BE               	movwf	Lcd_Set_Cursor@y
  1179     0116                     l1232:
  1180                           
  1181                           ;LCD.c: 54:         Lcd_Cmd(z);
  1182     0116  083D               	movf	Lcd_Set_Cursor@z,w
  1183     0117  120A  118A  21DD  120A  118A  	fcall	_Lcd_Cmd
  1184     011C                     l1234:
  1185                           
  1186                           ;LCD.c: 55:         Lcd_Cmd(y);
  1187     011C  1283               	bcf	3,5	;RP0=0, select bank0
  1188     011D  1303               	bcf	3,6	;RP1=0, select bank0
  1189     011E  083E               	movf	Lcd_Set_Cursor@y,w
  1190     011F  120A  118A  21DD  120A  118A  	fcall	_Lcd_Cmd
  1191                           
  1192                           ;LCD.c: 56:     } else if (a == 2) {
  1193     0124  2949               	goto	l129
  1194     0125                     l1236:
  1195     0125  3002               	movlw	2
  1196     0126  063C               	xorwf	Lcd_Set_Cursor@a,w
  1197     0127  1D03               	btfss	3,2
  1198     0128  292A               	goto	u611
  1199     0129  292B               	goto	u610
  1200     012A                     u611:
  1201     012A  2949               	goto	l129
  1202     012B                     u610:
  1203     012B                     l1238:
  1204                           
  1205                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  1206     012B  083A               	movf	Lcd_Set_Cursor@b,w
  1207     012C  3EBF               	addlw	191
  1208     012D  00BF               	movwf	Lcd_Set_Cursor@temp
  1209                           
  1210                           ;LCD.c: 58:         z = temp >> 4;
  1211     012E  083F               	movf	Lcd_Set_Cursor@temp,w
  1212     012F  00BB               	movwf	??_Lcd_Set_Cursor
  1213     0130  3004               	movlw	4
  1214     0131                     u625:
  1215     0131  1003               	clrc
  1216     0132  0CBB               	rrf	??_Lcd_Set_Cursor,f
  1217     0133  3EFF               	addlw	-1
  1218     0134  1D03               	skipz
  1219     0135  2931               	goto	u625
  1220     0136  083B               	movf	??_Lcd_Set_Cursor,w
  1221     0137  00BD               	movwf	Lcd_Set_Cursor@z
  1222     0138                     l1240:
  1223                           
  1224                           ;LCD.c: 59:         y = temp & 0x0F;
  1225     0138  083F               	movf	Lcd_Set_Cursor@temp,w
  1226     0139  390F               	andlw	15
  1227     013A  00BE               	movwf	Lcd_Set_Cursor@y
  1228     013B                     l1242:
  1229                           
  1230                           ;LCD.c: 60:         Lcd_Cmd(z);
  1231     013B  083D               	movf	Lcd_Set_Cursor@z,w
  1232     013C  120A  118A  21DD  120A  118A  	fcall	_Lcd_Cmd
  1233     0141                     l1244:
  1234                           
  1235                           ;LCD.c: 61:         Lcd_Cmd(y);
  1236     0141  1283               	bcf	3,5	;RP0=0, select bank0
  1237     0142  1303               	bcf	3,6	;RP1=0, select bank0
  1238     0143  083E               	movf	Lcd_Set_Cursor@y,w
  1239     0144  120A  118A  21DD  120A  118A  	fcall	_Lcd_Cmd
  1240     0149                     l129:
  1241     0149  0008               	return
  1242     014A                     __end_of_Lcd_Set_Cursor:
  1243                           
  1244                           	psect	text5
  1245     003F                     __ptext5:	
  1246 ;; *************** function _Lcd_Init *****************
  1247 ;; Defined at:
  1248 ;;		line 65 in file "LCD.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;		None
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;		None
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  1    wreg      void 
  1255 ;; Registers used:
  1256 ;;		wreg, status,2, status,0, pclath, cstack
  1257 ;; Tracked objects:
  1258 ;;		On entry : 0/0
  1259 ;;		On exit  : 0/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1262 ;;      Params:         0       0       0       0       0
  1263 ;;      Locals:         0       0       0       0       0
  1264 ;;      Temps:          0       2       0       0       0
  1265 ;;      Totals:         0       2       0       0       0
  1266 ;;Total ram usage:        2 bytes
  1267 ;; Hardware stack levels used: 1
  1268 ;; Hardware stack levels required when called: 3
  1269 ;; This function calls:
  1270 ;;		_Lcd_Cmd
  1271 ;;		_Lcd_Port
  1272 ;; This function is called by:
  1273 ;;		_main
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277     003F                     _Lcd_Init:	
  1278                           ;psect for function _Lcd_Init
  1279                           
  1280     003F                     l1246:	
  1281                           ;incstack = 0
  1282                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1283                           
  1284                           
  1285                           ;LCD.c: 66:     Lcd_Port(0x00);
  1286     003F  3000               	movlw	0
  1287     0040  120A  118A  21A1  120A  118A  	fcall	_Lcd_Port
  1288     0045                     l1248:
  1289                           
  1290                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1291     0045  3034               	movlw	52
  1292     0046  1283               	bcf	3,5	;RP0=0, select bank0
  1293     0047  1303               	bcf	3,6	;RP1=0, select bank0
  1294     0048  00BB               	movwf	??_Lcd_Init+1
  1295     0049  30F1               	movlw	241
  1296     004A  00BA               	movwf	??_Lcd_Init
  1297     004B                     u677:
  1298     004B  0BBA               	decfsz	??_Lcd_Init,f
  1299     004C  284B               	goto	u677
  1300     004D  0BBB               	decfsz	??_Lcd_Init+1,f
  1301     004E  284B               	goto	u677
  1302     004F                     l1250:
  1303                           
  1304                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  1305     004F  3003               	movlw	3
  1306     0050  120A  118A  21DD  120A  118A  	fcall	_Lcd_Cmd
  1307                           
  1308                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1309     0055  300D               	movlw	13
  1310     0056  1283               	bcf	3,5	;RP0=0, select bank0
  1311     0057  1303               	bcf	3,6	;RP1=0, select bank0
  1312     0058  00BB               	movwf	??_Lcd_Init+1
  1313     0059  30FB               	movlw	251
  1314     005A  00BA               	movwf	??_Lcd_Init
  1315     005B                     u687:
  1316     005B  0BBA               	decfsz	??_Lcd_Init,f
  1317     005C  285B               	goto	u687
  1318     005D  0BBB               	decfsz	??_Lcd_Init+1,f
  1319     005E  285B               	goto	u687
  1320     005F                     l1252:
  1321                           
  1322                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  1323     005F  3003               	movlw	3
  1324     0060  120A  118A  21DD  120A  118A  	fcall	_Lcd_Cmd
  1325     0065                     l1254:
  1326                           
  1327                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1328     0065  301D               	movlw	29
  1329     0066  1283               	bcf	3,5	;RP0=0, select bank0
  1330     0067  1303               	bcf	3,6	;RP1=0, select bank0
  1331     0068  00BB               	movwf	??_Lcd_Init+1
  1332     0069  3090               	movlw	144
  1333     006A  00BA               	movwf	??_Lcd_Init
  1334     006B                     u697:
  1335     006B  0BBA               	decfsz	??_Lcd_Init,f
  1336     006C  286B               	goto	u697
  1337     006D  0BBB               	decfsz	??_Lcd_Init+1,f
  1338     006E  286B               	goto	u697
  1339     006F  0000               	nop
  1340                           
  1341                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  1342     0070  3003               	movlw	3
  1343     0071  120A  118A  21DD  120A  118A  	fcall	_Lcd_Cmd
  1344                           
  1345                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  1346     0076  3002               	movlw	2
  1347     0077  120A  118A  21DD  120A  118A  	fcall	_Lcd_Cmd
  1348                           
  1349                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  1350     007C  3002               	movlw	2
  1351     007D  120A  118A  21DD  120A  118A  	fcall	_Lcd_Cmd
  1352                           
  1353                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  1354     0082  3008               	movlw	8
  1355     0083  120A  118A  21DD  120A  118A  	fcall	_Lcd_Cmd
  1356                           
  1357                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  1358     0088  3000               	movlw	0
  1359     0089  120A  118A  21DD  120A  118A  	fcall	_Lcd_Cmd
  1360                           
  1361                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  1362     008E  300C               	movlw	12
  1363     008F  120A  118A  21DD  120A  118A  	fcall	_Lcd_Cmd
  1364                           
  1365                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  1366     0094  3000               	movlw	0
  1367     0095  120A  118A  21DD  120A  118A  	fcall	_Lcd_Cmd
  1368                           
  1369                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  1370     009A  3006               	movlw	6
  1371     009B  120A  118A  21DD  120A  118A  	fcall	_Lcd_Cmd
  1372     00A0                     l132:
  1373     00A0  0008               	return
  1374     00A1                     __end_of_Lcd_Init:
  1375                           
  1376                           	psect	text6
  1377     01DD                     __ptext6:	
  1378 ;; *************** function _Lcd_Cmd *****************
  1379 ;; Defined at:
  1380 ;;		line 35 in file "LCD.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  a               1    wreg     unsigned char 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  a               1    0[BANK0 ] unsigned char 
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		wreg, status,2, status,0, pclath, cstack
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1394 ;;      Params:         0       0       0       0       0
  1395 ;;      Locals:         0       1       0       0       0
  1396 ;;      Temps:          2       0       0       0       0
  1397 ;;      Totals:         2       1       0       0       0
  1398 ;;Total ram usage:        3 bytes
  1399 ;; Hardware stack levels used: 1
  1400 ;; Hardware stack levels required when called: 2
  1401 ;; This function calls:
  1402 ;;		_Lcd_Port
  1403 ;; This function is called by:
  1404 ;;		_Lcd_Set_Cursor
  1405 ;;		_Lcd_Init
  1406 ;;		_Lcd_Clear
  1407 ;;		_Lcd_Shift_Right
  1408 ;;		_Lcd_Shift_Left
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412     01DD                     _Lcd_Cmd:	
  1413                           ;psect for function _Lcd_Cmd
  1414                           
  1415                           
  1416                           ;incstack = 0
  1417                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1418                           ;Lcd_Cmd@a stored from wreg
  1419     01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1420     01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1421     01DF  00B9               	movwf	Lcd_Cmd@a
  1422     01E0                     l1216:
  1423                           
  1424                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  1425     01E0  1108               	bcf	8,2	;volatile
  1426     01E1                     l1218:
  1427                           
  1428                           ;LCD.c: 37:     Lcd_Port(a);
  1429     01E1  0839               	movf	Lcd_Cmd@a,w
  1430     01E2  120A  118A  21A1  120A  118A  	fcall	_Lcd_Port
  1431     01E7                     l1220:
  1432                           
  1433                           ;LCD.c: 38:     RD3 = 1;
  1434     01E7  1283               	bcf	3,5	;RP0=0, select bank0
  1435     01E8  1303               	bcf	3,6	;RP1=0, select bank0
  1436     01E9  1588               	bsf	8,3	;volatile
  1437     01EA                     l1222:
  1438                           
  1439                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  1440     01EA  300B               	movlw	11
  1441     01EB  00F5               	movwf	??_Lcd_Cmd+1
  1442     01EC  3062               	movlw	98
  1443     01ED  00F4               	movwf	??_Lcd_Cmd
  1444     01EE                     u707:
  1445     01EE  0BF4               	decfsz	??_Lcd_Cmd,f
  1446     01EF  29EE               	goto	u707
  1447     01F0  0BF5               	decfsz	??_Lcd_Cmd+1,f
  1448     01F1  29EE               	goto	u707
  1449     01F2  0000               	nop
  1450     01F3                     l1224:
  1451                           
  1452                           ;LCD.c: 40:     RD3 = 0;
  1453     01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1454     01F4  1303               	bcf	3,6	;RP1=0, select bank0
  1455     01F5  1188               	bcf	8,3	;volatile
  1456     01F6                     l120:
  1457     01F6  0008               	return
  1458     01F7                     __end_of_Lcd_Cmd:
  1459                           
  1460                           	psect	text7
  1461     01A1                     __ptext7:	
  1462 ;; *************** function _Lcd_Port *****************
  1463 ;; Defined at:
  1464 ;;		line 13 in file "LCD.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  a               1    wreg     unsigned char 
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;  a               1    3[COMMON] unsigned char 
  1469 ;; Return value:  Size  Location     Type
  1470 ;;                  1    wreg      void 
  1471 ;; Registers used:
  1472 ;;		wreg
  1473 ;; Tracked objects:
  1474 ;;		On entry : 0/0
  1475 ;;		On exit  : 0/0
  1476 ;;		Unchanged: 0/0
  1477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1478 ;;      Params:         0       0       0       0       0
  1479 ;;      Locals:         1       0       0       0       0
  1480 ;;      Temps:          0       0       0       0       0
  1481 ;;      Totals:         1       0       0       0       0
  1482 ;;Total ram usage:        1 bytes
  1483 ;; Hardware stack levels used: 1
  1484 ;; Hardware stack levels required when called: 1
  1485 ;; This function calls:
  1486 ;;		Nothing
  1487 ;; This function is called by:
  1488 ;;		_Lcd_Cmd
  1489 ;;		_Lcd_Init
  1490 ;;		_Lcd_Write_Char
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494     01A1                     _Lcd_Port:	
  1495                           ;psect for function _Lcd_Port
  1496                           
  1497                           
  1498                           ;incstack = 0
  1499                           ; Regs used in _Lcd_Port: [wreg]
  1500                           ;Lcd_Port@a stored from wreg
  1501     01A1  00F3               	movwf	Lcd_Port@a
  1502     01A2                     l1206:
  1503                           
  1504                           ;LCD.c: 14:     if (a & 1)
  1505     01A2  1C73               	btfss	Lcd_Port@a,0
  1506     01A3  29A5               	goto	u551
  1507     01A4  29A6               	goto	u550
  1508     01A5                     u551:
  1509     01A5  29AA               	goto	l109
  1510     01A6                     u550:
  1511     01A6                     l1208:
  1512                           
  1513                           ;LCD.c: 15:         RD4 = 1;
  1514     01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1515     01A7  1303               	bcf	3,6	;RP1=0, select bank0
  1516     01A8  1608               	bsf	8,4	;volatile
  1517     01A9  29AD               	goto	l110
  1518     01AA                     l109:	
  1519                           ;LCD.c: 16:     else
  1520                           
  1521                           
  1522                           ;LCD.c: 17:         RD4 = 0;
  1523     01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1524     01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1525     01AC  1208               	bcf	8,4	;volatile
  1526     01AD                     l110:
  1527                           
  1528                           ;LCD.c: 19:     if (a & 2)
  1529     01AD  1CF3               	btfss	Lcd_Port@a,1
  1530     01AE  29B0               	goto	u561
  1531     01AF  29B1               	goto	u560
  1532     01B0                     u561:
  1533     01B0  29B3               	goto	l111
  1534     01B1                     u560:
  1535     01B1                     l1210:
  1536                           
  1537                           ;LCD.c: 20:         RD5 = 1;
  1538     01B1  1688               	bsf	8,5	;volatile
  1539     01B2  29B4               	goto	l112
  1540     01B3                     l111:	
  1541                           ;LCD.c: 21:     else
  1542                           
  1543                           
  1544                           ;LCD.c: 22:         RD5 = 0;
  1545     01B3  1288               	bcf	8,5	;volatile
  1546     01B4                     l112:
  1547                           
  1548                           ;LCD.c: 24:     if (a & 4)
  1549     01B4  1D73               	btfss	Lcd_Port@a,2
  1550     01B5  29B7               	goto	u571
  1551     01B6  29B8               	goto	u570
  1552     01B7                     u571:
  1553     01B7  29BA               	goto	l113
  1554     01B8                     u570:
  1555     01B8                     l1212:
  1556                           
  1557                           ;LCD.c: 25:         RD6 = 1;
  1558     01B8  1708               	bsf	8,6	;volatile
  1559     01B9  29BB               	goto	l114
  1560     01BA                     l113:	
  1561                           ;LCD.c: 26:     else
  1562                           
  1563                           
  1564                           ;LCD.c: 27:         RD6 = 0;
  1565     01BA  1308               	bcf	8,6	;volatile
  1566     01BB                     l114:
  1567                           
  1568                           ;LCD.c: 29:     if (a & 8)
  1569     01BB  1DF3               	btfss	Lcd_Port@a,3
  1570     01BC  29BE               	goto	u581
  1571     01BD  29BF               	goto	u580
  1572     01BE                     u581:
  1573     01BE  29C1               	goto	l115
  1574     01BF                     u580:
  1575     01BF                     l1214:
  1576                           
  1577                           ;LCD.c: 30:         RD7 = 1;
  1578     01BF  1788               	bsf	8,7	;volatile
  1579     01C0  29C2               	goto	l117
  1580     01C1                     l115:	
  1581                           ;LCD.c: 31:     else
  1582                           
  1583                           
  1584                           ;LCD.c: 32:         RD7 = 0;
  1585     01C1  1388               	bcf	8,7	;volatile
  1586     01C2                     l117:
  1587     01C2  0008               	return
  1588     01C3                     __end_of_Lcd_Port:
  1589                           
  1590                           	psect	text8
  1591     00A1                     __ptext8:	
  1592 ;; *************** function _isr *****************
  1593 ;; Defined at:
  1594 ;;		line 57 in file "pruebaI2Cslave.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;		None
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;		None
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  1    wreg      void 
  1601 ;; Registers used:
  1602 ;;		wreg
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1608 ;;      Params:         0       0       0       0       0
  1609 ;;      Locals:         0       0       0       0       0
  1610 ;;      Temps:          3       0       0       0       0
  1611 ;;      Totals:         3       0       0       0       0
  1612 ;;Total ram usage:        3 bytes
  1613 ;; Hardware stack levels used: 1
  1614 ;; This function calls:
  1615 ;;		Nothing
  1616 ;; This function is called by:
  1617 ;;		Interrupt level 1
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621     00A1                     _isr:	
  1622                           ;psect for function _isr
  1623                           
  1624     00A1                     i1l994:
  1625                           
  1626                           ;pruebaI2Cslave.c: 58:    if(PIR1bits.SSPIF == 1){
  1627     00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1628     00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1629     00A3  1D8C               	btfss	12,3	;volatile
  1630     00A4  28A6               	goto	u17_21
  1631     00A5  28A7               	goto	u17_20
  1632     00A6                     u17_21:
  1633     00A6  28F7               	goto	i1l213
  1634     00A7                     u17_20:
  1635     00A7                     i1l996:
  1636                           
  1637                           ;pruebaI2Cslave.c: 60:         SSPCONbits.CKP = 0;
  1638     00A7  1214               	bcf	20,4	;volatile
  1639                           
  1640                           ;pruebaI2Cslave.c: 62:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  1641     00A8  1B14               	btfsc	20,6	;volatile
  1642     00A9  28AB               	goto	u18_21
  1643     00AA  28AC               	goto	u18_20
  1644     00AB                     u18_21:
  1645     00AB  28B0               	goto	i1l1000
  1646     00AC                     u18_20:
  1647     00AC                     i1l998:
  1648     00AC  1F94               	btfss	20,7	;volatile
  1649     00AD  28AF               	goto	u19_21
  1650     00AE  28B0               	goto	u19_20
  1651     00AF                     u19_21:
  1652     00AF  28B5               	goto	i1l1008
  1653     00B0                     u19_20:
  1654     00B0                     i1l1000:
  1655                           
  1656                           ;pruebaI2Cslave.c: 63:             z = SSPBUF;
  1657     00B0  0813               	movf	19,w	;volatile
  1658     00B1  00F8               	movwf	_z
  1659     00B2                     i1l1002:
  1660                           
  1661                           ;pruebaI2Cslave.c: 64:             SSPCONbits.SSPOV = 0;
  1662     00B2  1314               	bcf	20,6	;volatile
  1663     00B3                     i1l1004:
  1664                           
  1665                           ;pruebaI2Cslave.c: 65:             SSPCONbits.WCOL = 0;
  1666     00B3  1394               	bcf	20,7	;volatile
  1667     00B4                     i1l1006:
  1668                           
  1669                           ;pruebaI2Cslave.c: 66:             SSPCONbits.CKP = 1;
  1670     00B4  1614               	bsf	20,4	;volatile
  1671     00B5                     i1l1008:
  1672                           
  1673                           ;pruebaI2Cslave.c: 69:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  1674     00B5  1683               	bsf	3,5	;RP0=1, select bank1
  1675     00B6  1303               	bcf	3,6	;RP1=0, select bank1
  1676     00B7  1A94               	btfsc	20,5	;volatile
  1677     00B8  28BA               	goto	u20_21
  1678     00B9  28BB               	goto	u20_20
  1679     00BA                     u20_21:
  1680     00BA  28D5               	goto	i1l204
  1681     00BB                     u20_20:
  1682     00BB                     i1l1010:
  1683     00BB  1914               	btfsc	20,2	;volatile
  1684     00BC  28BE               	goto	u21_21
  1685     00BD  28BF               	goto	u21_20
  1686     00BE                     u21_21:
  1687     00BE  28D5               	goto	i1l204
  1688     00BF                     u21_20:
  1689     00BF                     i1l1012:
  1690                           
  1691                           ;pruebaI2Cslave.c: 71:             z = SSPBUF;
  1692     00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1693     00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1694     00C1  0813               	movf	19,w	;volatile
  1695     00C2  00F8               	movwf	_z
  1696     00C3                     i1l1014:
  1697                           
  1698                           ;pruebaI2Cslave.c: 73:             PIR1bits.SSPIF = 0;
  1699     00C3  118C               	bcf	12,3	;volatile
  1700     00C4                     i1l1016:
  1701                           
  1702                           ;pruebaI2Cslave.c: 74:             SSPCONbits.CKP = 1;
  1703     00C4  1614               	bsf	20,4	;volatile
  1704     00C5                     i1l205:	
  1705                           ;pruebaI2Cslave.c: 75:             while(!SSPSTATbits.BF);
  1706                           
  1707     00C5  1683               	bsf	3,5	;RP0=1, select bank1
  1708     00C6  1303               	bcf	3,6	;RP1=0, select bank1
  1709     00C7  1C14               	btfss	20,0	;volatile
  1710     00C8  28CA               	goto	u22_21
  1711     00C9  28CB               	goto	u22_20
  1712     00CA                     u22_21:
  1713     00CA  28C5               	goto	i1l205
  1714     00CB                     u22_20:
  1715     00CB                     i1l1018:
  1716                           
  1717                           ;pruebaI2Cslave.c: 76:             PORTD = SSPBUF;
  1718     00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1719     00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1720     00CD  0813               	movf	19,w	;volatile
  1721     00CE  0088               	movwf	8	;volatile
  1722                           
  1723                           ;pruebaI2Cslave.c: 77:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1724     00CF  30A6               	movlw	166
  1725     00D0  00F0               	movwf	??_isr
  1726     00D1                     u71_27:
  1727     00D1  0BF0               	decfsz	??_isr,f
  1728     00D2  28D1               	goto	u71_27
  1729     00D3  0000               	nop
  1730                           
  1731                           ;pruebaI2Cslave.c: 79:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1732     00D4  28F4               	goto	i1l208
  1733     00D5                     i1l204:
  1734     00D5  1A94               	btfsc	20,5	;volatile
  1735     00D6  28D8               	goto	u23_21
  1736     00D7  28D9               	goto	u23_20
  1737     00D8                     u23_21:
  1738     00D8  28F4               	goto	i1l208
  1739     00D9                     u23_20:
  1740     00D9                     i1l1020:
  1741     00D9  1D14               	btfss	20,2	;volatile
  1742     00DA  28DC               	goto	u24_21
  1743     00DB  28DD               	goto	u24_20
  1744     00DC                     u24_21:
  1745     00DC  28F4               	goto	i1l208
  1746     00DD                     u24_20:
  1747     00DD                     i1l1022:
  1748                           
  1749                           ;pruebaI2Cslave.c: 80:             z = SSPBUF;
  1750     00DD  1283               	bcf	3,5	;RP0=0, select bank0
  1751     00DE  1303               	bcf	3,6	;RP1=0, select bank0
  1752     00DF  0813               	movf	19,w	;volatile
  1753     00E0  00F8               	movwf	_z
  1754     00E1                     i1l1024:
  1755                           
  1756                           ;pruebaI2Cslave.c: 81:             BF = 0;
  1757     00E1  1683               	bsf	3,5	;RP0=1, select bank1
  1758     00E2  1303               	bcf	3,6	;RP1=0, select bank1
  1759     00E3  1014               	bcf	20,0	;volatile
  1760                           
  1761                           ;pruebaI2Cslave.c: 82:             SSPBUF = lec;
  1762     00E4  3020               	movlw	(low _lec)& (0+255)
  1763     00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1764     00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1765     00E7  0093               	movwf	19	;volatile
  1766     00E8                     i1l1026:
  1767                           
  1768                           ;pruebaI2Cslave.c: 83:             SSPCONbits.CKP = 1;
  1769     00E8  1614               	bsf	20,4	;volatile
  1770                           
  1771                           ;pruebaI2Cslave.c: 84:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1772     00E9  30A6               	movlw	166
  1773     00EA  00F0               	movwf	??_isr
  1774     00EB                     u72_27:
  1775     00EB  0BF0               	decfsz	??_isr,f
  1776     00EC  28EB               	goto	u72_27
  1777     00ED  0000               	nop
  1778     00EE                     i1l210:	
  1779                           ;pruebaI2Cslave.c: 85:             while(SSPSTATbits.BF);
  1780                           
  1781     00EE  1683               	bsf	3,5	;RP0=1, select bank1
  1782     00EF  1303               	bcf	3,6	;RP1=0, select bank1
  1783     00F0  1814               	btfsc	20,0	;volatile
  1784     00F1  28F3               	goto	u25_21
  1785     00F2  28F4               	goto	u25_20
  1786     00F3                     u25_21:
  1787     00F3  28EE               	goto	i1l210
  1788     00F4                     u25_20:
  1789     00F4                     i1l208:
  1790                           
  1791                           ;pruebaI2Cslave.c: 88:         PIR1bits.SSPIF = 0;
  1792     00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1793     00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1794     00F6  118C               	bcf	12,3	;volatile
  1795     00F7                     i1l213:
  1796     00F7  0872               	movf	??_isr+2,w
  1797     00F8  008A               	movwf	10
  1798     00F9  0E71               	swapf	??_isr+1,w
  1799     00FA  0083               	movwf	3
  1800     00FB  0EFE               	swapf	btemp,f
  1801     00FC  0E7E               	swapf	btemp,w
  1802     00FD  0009               	retfie
  1803     00FE                     __end_of_isr:
  1804     007E                     btemp	set	126	;btemp
  1805     007E                     wtemp0	set	126
  1806                           
  1807                           	psect	intentry
  1808     0004                     __pintentry:	
  1809                           ;incstack = 0
  1810                           ; Regs used in _isr: [wreg]
  1811                           
  1812     0004                     interrupt_function:
  1813     007E                     saved_w	set	btemp
  1814     0004  00FE               	movwf	btemp
  1815     0005  0E03               	swapf	3,w
  1816     0006  00F1               	movwf	??_isr+1
  1817     0007  080A               	movf	10,w
  1818     0008  00F2               	movwf	??_isr+2
  1819     0009  120A  118A  28A1   	ljmp	_isr
  1820                           
  1821                           	psect	config
  1822                           
  1823                           ;Config register CONFIG1 @ 0x2007
  1824                           ;	Oscillator Selection bits
  1825                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1826                           ;	Watchdog Timer Enable bit
  1827                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1828                           ;	Power-up Timer Enable bit
  1829                           ;	PWRTE = OFF, PWRT disabled
  1830                           ;	RE3/MCLR pin function select bit
  1831                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1832                           ;	Code Protection bit
  1833                           ;	CP = OFF, Program memory code protection is disabled
  1834                           ;	Data Code Protection bit
  1835                           ;	CPD = OFF, Data memory code protection is disabled
  1836                           ;	Brown Out Reset Selection bits
  1837                           ;	BOREN = OFF, BOR disabled
  1838                           ;	Internal External Switchover bit
  1839                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1840                           ;	Fail-Safe Clock Monitor Enabled bit
  1841                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1842                           ;	Low Voltage Programming Enable bit
  1843                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1844                           ;	In-Circuit Debugger Mode bit
  1845                           ;	DEBUG = 0x1, unprogrammed default
  1846     2007                     	org	8199
  1847     2007  20D6               	dw	8406
  1848                           
  1849                           ;Config register CONFIG2 @ 0x2008
  1850                           ;	Brown-out Reset Selection bit
  1851                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1852                           ;	Flash Program Memory Self Write Enable bits
  1853                           ;	WRT = OFF, Write protection off
  1854     2008                     	org	8200
  1855     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80      7      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_I2C_Slave_Init
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Lcd_Set_Cursor
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1183
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_Char                                       4     4      0     254
                                              4 COMMON     1     1      0
                                              0 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     635
                                              1 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              1 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Port                                             1     1      0     124
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _setup
     _I2C_Slave_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      7      20       5       40.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2B      12        0.0%
ABS                  0      0      2B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Aug 22 15:58:30 2023

                      _x 0077                        _y 0076                        _z 0078  
                      pc 0002              _SSPSTATbits 0094                       _BF 04A0  
                     l55 01DC                       fsr 0004                      l110 01AD  
                    l111 01B3                      l112 01B4                      l120 01F6  
                    l113 01BA                      l114 01BB                      l115 01C1  
                    l132 00A0                      l117 01C2                      l109 01AA  
                    l135 017E                      l224 021C                      l129 0149  
                    l830 01D3                      l832 01D4                      l904 020A  
                    l834 01D5                      l826 01C4                      l906 0216  
                    l836 01D6                      l828 01D2                      l838 01D9  
                    _GIE 005F                      _RD3 0043                      _RD4 0044  
                    _RD5 0045                      _RD6 0046                      _RD7 0047  
                    _PR2 0092                      u610 012B                      u611 012A  
                    u605 010C                      u550 01A6                      u551 01A5  
                    u560 01B1                      u561 01B0                      u625 0131  
                    u570 01B8                      u571 01B7                      u707 01EE  
                    u635 0157                      u580 01BF                      u581 01BE  
                    u590 0106                      u591 0105                      u657 0167  
                    u667 0178                      u677 004B                      u687 005B  
                    u697 006B                      _chn 0033                      _lec 0020  
                    _isr 00A1                      indf 0000                     l1210 01B1  
                   l1212 01B8                     l1220 01E7                     l1214 01BF  
                   l1206 01A2                     l1222 01EA                     l1230 0113  
                   l1208 01A6                     l1224 01F3                     l1216 01E0  
                   l1240 0138                     l1232 0116                     l1218 01E1  
                   l1250 004F                     l1242 013B                     l1234 011C  
                   l1226 0101                     l1252 005F                     l1244 0141  
                   l1228 0106                     l1236 0125                     l1260 0154  
                   l1254 0065                     l1246 003F                     l1238 012B  
                   l1270 0173                     l1262 0162                     l1248 0045  
                   l1272 0176                     l1264 0165                     l1256 014D  
                   l1274 017B                     l1266 016A                     l1258 0153  
                   l1290 017F                     l1268 016D                     l1292 0189  
                   l1294 018D                     ?_isr 0070                     _PEIE 005E  
                   _chn1 0037                     _chn2 0035                     _dato 007A  
                   _main 017F                     btemp 007E                     start 000C  
        __end_of_Lcd_Cmd 01F7                    ??_isr 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l210 00EE                    i1l204 00D5  
                  i1l205 00C5                    i1l213 00F7                    i1l208 00F4  
                  i1l994 00A1                    i1l996 00A7                    i1l998 00AC  
                  u20_20 00BB                    u20_21 00BA                    u21_20 00BF  
                  u21_21 00BE                    u22_20 00CB                    u22_21 00CA  
                  u23_20 00D9                    u23_21 00D8                    u24_20 00DD  
                  u24_21 00DC                    u25_20 00F4                    u17_20 00A7  
                  u25_21 00F3                    u17_21 00A6                    u18_20 00AC  
                  u18_21 00AB                    u19_20 00B0                    u19_21 00AF  
                  _PORTB 0006                    _PORTD 0008                    u71_27 00D1  
                  u72_27 00EB                    _TRISB 0086                    _TRISD 0088  
                  _SSPIE 0463                    _SSPIF 0063                    _setup 020A  
                  _state 0079                    pclath 000A                    status 0003  
                  wtemp0 007E         __end_of_Lcd_Init 00A1         __end_of_Lcd_Port 01C3  
        __initialization 000F             __end_of_main 01A1                   ??_main 0076  
                 _ADRESH 001E                   _CCPR1L 0015                   _CCPR2L 001B  
                 ?_setup 0070                   _ANSELH 0189                   i1l1000 00B0  
                 i1l1010 00BB                   i1l1002 00B2                   i1l1020 00D9  
                 i1l1012 00BF                   i1l1004 00B3                   i1l1022 00DD  
                 i1l1014 00C3                   i1l1006 00B4                   i1l1024 00E1  
                 i1l1016 00C4                   i1l1008 00B5                   i1l1026 00E8  
                 i1l1018 00CB                ??_Lcd_Cmd 0074                   _SSPADD 0093  
                 _TRISC3 043B                   _TRISC4 043C                   _SSPCON 0014  
                 _SSPBUF 0013             __pdataCOMMON 0076                   saved_w 007E  
        Lcd_Set_Cursor@a 003C          Lcd_Set_Cursor@b 003A          Lcd_Set_Cursor@y 003E  
        Lcd_Set_Cursor@z 003D  __end_of__initialization 003B           __pcstackCOMMON 0070  
           __pidataBANK0 021D            __end_of_setup 021D           _Lcd_Set_Cursor 00FE  
              ?_Lcd_Init 0070                ?_Lcd_Port 0070                  ??_setup 0074  
  I2C_Slave_Init@address 0073               __pbssBANK0 002F               __pmaintext 017F  
             __pintentry 0004   __end_of_Lcd_Set_Cursor 014A               ??_Lcd_Init 003A  
             ??_Lcd_Port 0073                  _SSPCON2 0091                  _SSPSTAT 0094  
         _Lcd_Write_Char 014A                  _Lcd_Cmd 01DD          ?_Lcd_Set_Cursor 003A  
                __ptext1 020A                  __ptext2 01C3                  __ptext3 014A  
                __ptext4 00FE                  __ptext5 003F                  __ptext6 01DD  
                __ptext7 01A1                  __ptext8 00A1                _T2CONbits 0012  
 __end_of_Lcd_Write_Char 017F     end_of_initialization 003B               _periodo_ms 002F  
         _I2C_Slave_Init 01C3                Lcd_Port@a 0073                _PORTDbits 0008  
              _TRISCbits 0087          ?_Lcd_Write_Char 0070              _CCP1CONbits 0017  
            _CCP2CONbits 001D   __end_of_I2C_Slave_Init 01DD            __pidataCOMMON 022C  
    start_initialization 000F              __end_of_isr 00FE          ?_I2C_Slave_Init 0070  
             init_fetch0 01F7              __pdataBANK0 0020          Lcd_Write_Char@a 003B  
        Lcd_Write_Char@y 003A              __pbssCOMMON 0079                ___latbits 0002  
          __pcstackBANK0 0039                 ?_Lcd_Cmd 0070         ??_Lcd_Set_Cursor 003B  
      interrupt_function 0004                 Lcd_Cmd@a 0039                 _PIR1bits 000C  
       ??_Lcd_Write_Char 0074                 _Lcd_Init 003F                 _Lcd_Port 01A1  
       ??_I2C_Slave_Init 0073                 init_ram0 01FB       Lcd_Write_Char@temp 0039  
               intlevel1 0000       Lcd_Set_Cursor@temp 003F              _SSPCON2bits 0091  
             _SSPCONbits 0014  
