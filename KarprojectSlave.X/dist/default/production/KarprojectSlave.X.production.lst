

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Aug 21 23:43:40 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25     0000                     
    26                           ; Generated 22/03/2023 GMT
    27                           ; 
    28                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60     0000                     	;# 
    61     0001                     	;# 
    62     0002                     	;# 
    63     0003                     	;# 
    64     0004                     	;# 
    65     0005                     	;# 
    66     0006                     	;# 
    67     0007                     	;# 
    68     0008                     	;# 
    69     0009                     	;# 
    70     000A                     	;# 
    71     000B                     	;# 
    72     000C                     	;# 
    73     000D                     	;# 
    74     000E                     	;# 
    75     000E                     	;# 
    76     000F                     	;# 
    77     0010                     	;# 
    78     0011                     	;# 
    79     0012                     	;# 
    80     0013                     	;# 
    81     0014                     	;# 
    82     0015                     	;# 
    83     0015                     	;# 
    84     0016                     	;# 
    85     0017                     	;# 
    86     0018                     	;# 
    87     0019                     	;# 
    88     001A                     	;# 
    89     001B                     	;# 
    90     001B                     	;# 
    91     001C                     	;# 
    92     001D                     	;# 
    93     001E                     	;# 
    94     001F                     	;# 
    95     0081                     	;# 
    96     0085                     	;# 
    97     0086                     	;# 
    98     0087                     	;# 
    99     0088                     	;# 
   100     0089                     	;# 
   101     008C                     	;# 
   102     008D                     	;# 
   103     008E                     	;# 
   104     008F                     	;# 
   105     0090                     	;# 
   106     0091                     	;# 
   107     0092                     	;# 
   108     0093                     	;# 
   109     0093                     	;# 
   110     0093                     	;# 
   111     0094                     	;# 
   112     0095                     	;# 
   113     0096                     	;# 
   114     0097                     	;# 
   115     0098                     	;# 
   116     0099                     	;# 
   117     009A                     	;# 
   118     009B                     	;# 
   119     009C                     	;# 
   120     009D                     	;# 
   121     009E                     	;# 
   122     009F                     	;# 
   123     0105                     	;# 
   124     0107                     	;# 
   125     0108                     	;# 
   126     0109                     	;# 
   127     010C                     	;# 
   128     010C                     	;# 
   129     010D                     	;# 
   130     010E                     	;# 
   131     010F                     	;# 
   132     0185                     	;# 
   133     0187                     	;# 
   134     0188                     	;# 
   135     0189                     	;# 
   136     018C                     	;# 
   137     018D                     	;# 
   138     0000                     	;# 
   139     0001                     	;# 
   140     0002                     	;# 
   141     0003                     	;# 
   142     0004                     	;# 
   143     0005                     	;# 
   144     0006                     	;# 
   145     0007                     	;# 
   146     0008                     	;# 
   147     0009                     	;# 
   148     000A                     	;# 
   149     000B                     	;# 
   150     000C                     	;# 
   151     000D                     	;# 
   152     000E                     	;# 
   153     000E                     	;# 
   154     000F                     	;# 
   155     0010                     	;# 
   156     0011                     	;# 
   157     0012                     	;# 
   158     0013                     	;# 
   159     0014                     	;# 
   160     0015                     	;# 
   161     0015                     	;# 
   162     0016                     	;# 
   163     0017                     	;# 
   164     0018                     	;# 
   165     0019                     	;# 
   166     001A                     	;# 
   167     001B                     	;# 
   168     001B                     	;# 
   169     001C                     	;# 
   170     001D                     	;# 
   171     001E                     	;# 
   172     001F                     	;# 
   173     0081                     	;# 
   174     0085                     	;# 
   175     0086                     	;# 
   176     0087                     	;# 
   177     0088                     	;# 
   178     0089                     	;# 
   179     008C                     	;# 
   180     008D                     	;# 
   181     008E                     	;# 
   182     008F                     	;# 
   183     0090                     	;# 
   184     0091                     	;# 
   185     0092                     	;# 
   186     0093                     	;# 
   187     0093                     	;# 
   188     0093                     	;# 
   189     0094                     	;# 
   190     0095                     	;# 
   191     0096                     	;# 
   192     0097                     	;# 
   193     0098                     	;# 
   194     0099                     	;# 
   195     009A                     	;# 
   196     009B                     	;# 
   197     009C                     	;# 
   198     009D                     	;# 
   199     009E                     	;# 
   200     009F                     	;# 
   201     0105                     	;# 
   202     0107                     	;# 
   203     0108                     	;# 
   204     0109                     	;# 
   205     010C                     	;# 
   206     010C                     	;# 
   207     010D                     	;# 
   208     010E                     	;# 
   209     010F                     	;# 
   210     0185                     	;# 
   211     0187                     	;# 
   212     0188                     	;# 
   213     0189                     	;# 
   214     018C                     	;# 
   215     018D                     	;# 
   216     0000                     	;# 
   217     0001                     	;# 
   218     0002                     	;# 
   219     0003                     	;# 
   220     0004                     	;# 
   221     0005                     	;# 
   222     0006                     	;# 
   223     0007                     	;# 
   224     0008                     	;# 
   225     0009                     	;# 
   226     000A                     	;# 
   227     000B                     	;# 
   228     000C                     	;# 
   229     000D                     	;# 
   230     000E                     	;# 
   231     000E                     	;# 
   232     000F                     	;# 
   233     0010                     	;# 
   234     0011                     	;# 
   235     0012                     	;# 
   236     0013                     	;# 
   237     0014                     	;# 
   238     0015                     	;# 
   239     0015                     	;# 
   240     0016                     	;# 
   241     0017                     	;# 
   242     0018                     	;# 
   243     0019                     	;# 
   244     001A                     	;# 
   245     001B                     	;# 
   246     001B                     	;# 
   247     001C                     	;# 
   248     001D                     	;# 
   249     001E                     	;# 
   250     001F                     	;# 
   251     0081                     	;# 
   252     0085                     	;# 
   253     0086                     	;# 
   254     0087                     	;# 
   255     0088                     	;# 
   256     0089                     	;# 
   257     008C                     	;# 
   258     008D                     	;# 
   259     008E                     	;# 
   260     008F                     	;# 
   261     0090                     	;# 
   262     0091                     	;# 
   263     0092                     	;# 
   264     0093                     	;# 
   265     0093                     	;# 
   266     0093                     	;# 
   267     0094                     	;# 
   268     0095                     	;# 
   269     0096                     	;# 
   270     0097                     	;# 
   271     0098                     	;# 
   272     0099                     	;# 
   273     009A                     	;# 
   274     009B                     	;# 
   275     009C                     	;# 
   276     009D                     	;# 
   277     009E                     	;# 
   278     009F                     	;# 
   279     0105                     	;# 
   280     0107                     	;# 
   281     0108                     	;# 
   282     0109                     	;# 
   283     010C                     	;# 
   284     010C                     	;# 
   285     010D                     	;# 
   286     010E                     	;# 
   287     010F                     	;# 
   288     0185                     	;# 
   289     0187                     	;# 
   290     0188                     	;# 
   291     0189                     	;# 
   292     018C                     	;# 
   293     018D                     	;# 
   294     0000                     	;# 
   295     0001                     	;# 
   296     0002                     	;# 
   297     0003                     	;# 
   298     0004                     	;# 
   299     0005                     	;# 
   300     0006                     	;# 
   301     0007                     	;# 
   302     0008                     	;# 
   303     0009                     	;# 
   304     000A                     	;# 
   305     000B                     	;# 
   306     000C                     	;# 
   307     000D                     	;# 
   308     000E                     	;# 
   309     000E                     	;# 
   310     000F                     	;# 
   311     0010                     	;# 
   312     0011                     	;# 
   313     0012                     	;# 
   314     0013                     	;# 
   315     0014                     	;# 
   316     0015                     	;# 
   317     0015                     	;# 
   318     0016                     	;# 
   319     0017                     	;# 
   320     0018                     	;# 
   321     0019                     	;# 
   322     001A                     	;# 
   323     001B                     	;# 
   324     001B                     	;# 
   325     001C                     	;# 
   326     001D                     	;# 
   327     001E                     	;# 
   328     001F                     	;# 
   329     0081                     	;# 
   330     0085                     	;# 
   331     0086                     	;# 
   332     0087                     	;# 
   333     0088                     	;# 
   334     0089                     	;# 
   335     008C                     	;# 
   336     008D                     	;# 
   337     008E                     	;# 
   338     008F                     	;# 
   339     0090                     	;# 
   340     0091                     	;# 
   341     0092                     	;# 
   342     0093                     	;# 
   343     0093                     	;# 
   344     0093                     	;# 
   345     0094                     	;# 
   346     0095                     	;# 
   347     0096                     	;# 
   348     0097                     	;# 
   349     0098                     	;# 
   350     0099                     	;# 
   351     009A                     	;# 
   352     009B                     	;# 
   353     009C                     	;# 
   354     009D                     	;# 
   355     009E                     	;# 
   356     009F                     	;# 
   357     0105                     	;# 
   358     0107                     	;# 
   359     0108                     	;# 
   360     0109                     	;# 
   361     010C                     	;# 
   362     010C                     	;# 
   363     010D                     	;# 
   364     010E                     	;# 
   365     010F                     	;# 
   366     0185                     	;# 
   367     0187                     	;# 
   368     0188                     	;# 
   369     0189                     	;# 
   370     018C                     	;# 
   371     018D                     	;# 
   372     0000                     	;# 
   373     0001                     	;# 
   374     0002                     	;# 
   375     0003                     	;# 
   376     0004                     	;# 
   377     0005                     	;# 
   378     0006                     	;# 
   379     0007                     	;# 
   380     0008                     	;# 
   381     0009                     	;# 
   382     000A                     	;# 
   383     000B                     	;# 
   384     000C                     	;# 
   385     000D                     	;# 
   386     000E                     	;# 
   387     000E                     	;# 
   388     000F                     	;# 
   389     0010                     	;# 
   390     0011                     	;# 
   391     0012                     	;# 
   392     0013                     	;# 
   393     0014                     	;# 
   394     0015                     	;# 
   395     0015                     	;# 
   396     0016                     	;# 
   397     0017                     	;# 
   398     0018                     	;# 
   399     0019                     	;# 
   400     001A                     	;# 
   401     001B                     	;# 
   402     001B                     	;# 
   403     001C                     	;# 
   404     001D                     	;# 
   405     001E                     	;# 
   406     001F                     	;# 
   407     0081                     	;# 
   408     0085                     	;# 
   409     0086                     	;# 
   410     0087                     	;# 
   411     0088                     	;# 
   412     0089                     	;# 
   413     008C                     	;# 
   414     008D                     	;# 
   415     008E                     	;# 
   416     008F                     	;# 
   417     0090                     	;# 
   418     0091                     	;# 
   419     0092                     	;# 
   420     0093                     	;# 
   421     0093                     	;# 
   422     0093                     	;# 
   423     0094                     	;# 
   424     0095                     	;# 
   425     0096                     	;# 
   426     0097                     	;# 
   427     0098                     	;# 
   428     0099                     	;# 
   429     009A                     	;# 
   430     009B                     	;# 
   431     009C                     	;# 
   432     009D                     	;# 
   433     009E                     	;# 
   434     009F                     	;# 
   435     0105                     	;# 
   436     0107                     	;# 
   437     0108                     	;# 
   438     0109                     	;# 
   439     010C                     	;# 
   440     010C                     	;# 
   441     010D                     	;# 
   442     010E                     	;# 
   443     010F                     	;# 
   444     0185                     	;# 
   445     0187                     	;# 
   446     0188                     	;# 
   447     0189                     	;# 
   448     018C                     	;# 
   449     018D                     	;# 
   450                           
   451                           	psect	strings
   452     03DC                     __pstrings:
   453     03DC                     stringtab:
   454     03DC                     __stringtab:
   455     03DC                     stringcode:	
   456                           ;	String table - string pointers are 1 byte each
   457                           
   458     03DC                     stringdir:
   459     03DC  3003               	movlw	high stringdir
   460     03DD  008A               	movwf	10
   461     03DE  0804               	movf	4,w
   462     03DF  0A84               	incf	4,f
   463     03E0  0782               	addwf	2,f
   464     03E1                     __stringbase:
   465     03E1  3400               	retlw	0
   466     03E2                     __end_of__stringtab:
   467     03E2                     _dpowers:
   468     03E2  3401               	retlw	1
   469     03E3  3400               	retlw	0
   470     03E4  340A               	retlw	10
   471     03E5  3400               	retlw	0
   472     03E6  3464               	retlw	100
   473     03E7  3400               	retlw	0
   474     03E8  34E8               	retlw	232
   475     03E9  3403               	retlw	3
   476     03EA  3410               	retlw	16
   477     03EB  3427               	retlw	39
   478     03EC                     __end_of_dpowers:
   479     0008                     _PORTDbits	set	8
   480     001E                     _ADRESH	set	30
   481     001B                     _CCPR2L	set	27
   482     001D                     _CCP2CONbits	set	29
   483     0012                     _T2CONbits	set	18
   484     000C                     _PIR1bits	set	12
   485     0017                     _CCP1CONbits	set	23
   486     0009                     _PORTE	set	9
   487     0015                     _CCPR1L	set	21
   488     0008                     _PORTD	set	8
   489     0006                     _PORTBbits	set	6
   490     001F                     _ADCON0bits	set	31
   491     0001                     _TMR0	set	1
   492     000B                     _INTCONbits	set	11
   493     0013                     _SSPBUF	set	19
   494     0014                     _SSPCON	set	20
   495     0043                     _RD3	set	67
   496     0047                     _RD7	set	71
   497     0046                     _RD6	set	70
   498     0045                     _RD5	set	69
   499     0044                     _RD4	set	68
   500     0063                     _SSPIF	set	99
   501     005E                     _PEIE	set	94
   502     005F                     _GIE	set	95
   503     0092                     _PR2	set	146
   504     008F                     _OSCCONbits	set	143
   505     0095                     _WPUB	set	149
   506     0089                     _TRISE	set	137
   507     0081                     _OPTION_REGbits	set	129
   508     0088                     _TRISD	set	136
   509     0086                     _TRISB	set	134
   510     0085                     _TRISA	set	133
   511     008F                     _OSCCON	set	143
   512     0091                     _SSPCON2bits	set	145
   513     0087                     _TRISCbits	set	135
   514     0094                     _SSPSTAT	set	148
   515     0093                     _SSPADD	set	147
   516     0091                     _SSPCON2	set	145
   517     0463                     _SSPIE	set	1123
   518     043C                     _TRISC4	set	1084
   519     043B                     _TRISC3	set	1083
   520     0189                     _ANSELH	set	393
   521     0188                     _ANSEL	set	392
   522     03EC                     STR_1:
   523     03EC  3425               	retlw	37	;'%'
   524     03ED  3475               	retlw	117	;'u'
   525     03EE  3400               	retlw	0
   526     03EC                     
   527                           	psect	cinit
   528     0011                     start_initialization:	
   529                           ; #config settings
   530                           
   531     0011                     __initialization:
   532                           
   533                           ; Clear objects allocated to COMMON
   534     0011  01FD               	clrf	__pbssCOMMON& (0+127)
   535                           
   536                           ; Clear objects allocated to BANK0
   537     0012  1283               	bcf	3,5	;RP0=0, select bank0
   538     0013  1303               	bcf	3,6	;RP1=0, select bank0
   539     0014  01BC               	clrf	__pbssBANK0& (0+127)
   540     0015  01BD               	clrf	(__pbssBANK0+1)& (0+127)
   541     0016  01BE               	clrf	(__pbssBANK0+2)& (0+127)
   542     0017  01BF               	clrf	(__pbssBANK0+3)& (0+127)
   543     0018  01C0               	clrf	(__pbssBANK0+4)& (0+127)
   544     0019  01C1               	clrf	(__pbssBANK0+5)& (0+127)
   545     001A  01C2               	clrf	(__pbssBANK0+6)& (0+127)
   546     001B  01C3               	clrf	(__pbssBANK0+7)& (0+127)
   547     001C  01C4               	clrf	(__pbssBANK0+8)& (0+127)
   548     001D  01C5               	clrf	(__pbssBANK0+9)& (0+127)
   549     001E  01C6               	clrf	(__pbssBANK0+10)& (0+127)
   550     001F  01C7               	clrf	(__pbssBANK0+11)& (0+127)
   551                           
   552                           ; Clear objects allocated to BANK1
   553     0020  1683               	bsf	3,5	;RP0=1, select bank1
   554     0021  1303               	bcf	3,6	;RP1=0, select bank1
   555     0022  01DC               	clrf	__pbssBANK1& (0+127)
   556     0023  01DD               	clrf	(__pbssBANK1+1)& (0+127)
   557     0024  01DE               	clrf	(__pbssBANK1+2)& (0+127)
   558     0025  01DF               	clrf	(__pbssBANK1+3)& (0+127)
   559     0026  01E0               	clrf	(__pbssBANK1+4)& (0+127)
   560     0027  01E1               	clrf	(__pbssBANK1+5)& (0+127)
   561     0028  01E2               	clrf	(__pbssBANK1+6)& (0+127)
   562     0029                     end_of_initialization:	
   563                           ;End of C runtime variable initialization code
   564                           
   565     0029                     __end_of__initialization:
   566     0029  0183               	clrf	3
   567     002A  120A  118A  28F0   	ljmp	_main	;jump to C main() function
   568                           
   569                           	psect	bssCOMMON
   570     007D                     __pbssCOMMON:
   571     007D                     _a:
   572     007D                     	ds	1
   573                           
   574                           	psect	bssBANK0
   575     003C                     __pbssBANK0:
   576     003C                     _periodo_ms:
   577     003C                     	ds	4
   578     0040                     _c:
   579     0040                     	ds	2
   580     0042                     _chn:
   581     0042                     	ds	2
   582     0044                     _chn2:
   583     0044                     	ds	2
   584     0046                     _chn1:
   585     0046                     	ds	2
   586                           
   587                           	psect	bssBANK1
   588     00DC                     __pbssBANK1:
   589     00DC                     _s:
   590     00DC                     	ds	2
   591     00DE                     _i:
   592     00DE                     	ds	2
   593     00E0                     _valservo:
   594     00E0                     	ds	1
   595     00E1                     _rpm:
   596     00E1                     	ds	1
   597     00E2                     _b:
   598     00E2                     	ds	1
   599                           
   600                           	psect	cstackBANK1
   601     00A0                     __pcstackBANK1:
   602     00A0                     main@s:
   603                           
   604                           ; 20 bytes @ 0x0
   605     00A0                     	ds	20
   606     00B4                     main@s2:
   607                           
   608                           ; 20 bytes @ 0x14
   609     00B4                     	ds	20
   610     00C8                     main@s3:
   611                           
   612                           ; 20 bytes @ 0x28
   613     00C8                     	ds	20
   614                           
   615                           	psect	cstackCOMMON
   616     0070                     __pcstackCOMMON:
   617     0070                     ?_setup:
   618     0070                     ?_I2C_Slave_Init:	
   619                           ; 1 bytes @ 0x0
   620                           
   621     0070                     ?_isr:	
   622                           ; 1 bytes @ 0x0
   623                           
   624     0070                     ?_main:	
   625                           ; 1 bytes @ 0x0
   626                           
   627     0070                     ?___awdiv:	
   628                           ; 1 bytes @ 0x0
   629                           
   630     0070                     ___awdiv@divisor:	
   631                           ; 2 bytes @ 0x0
   632                           
   633                           
   634                           ; 2 bytes @ 0x0
   635     0070                     	ds	2
   636     0072                     ___awdiv@dividend:
   637                           
   638                           ; 2 bytes @ 0x2
   639     0072                     	ds	2
   640     0074                     ??___awdiv:
   641     0074                     ___awdiv@counter:	
   642                           ; 1 bytes @ 0x4
   643                           
   644                           
   645                           ; 1 bytes @ 0x4
   646     0074                     	ds	1
   647     0075                     ___awdiv@sign:
   648                           
   649                           ; 1 bytes @ 0x5
   650     0075                     	ds	1
   651     0076                     ___awdiv@quotient:
   652                           
   653                           ; 2 bytes @ 0x6
   654     0076                     	ds	2
   655     0078                     ??_isr:
   656                           
   657                           ; 1 bytes @ 0x8
   658     0078                     	ds	5
   659                           
   660                           	psect	cstackBANK0
   661     0020                     __pcstackBANK0:
   662     0020                     ??_I2C_Slave_Init:
   663     0020                     ?___lwdiv:	
   664                           ; 1 bytes @ 0x0
   665                           
   666     0020                     ?___fltol:	
   667                           ; 2 bytes @ 0x0
   668                           
   669     0020                     I2C_Slave_Init@address:	
   670                           ; 4 bytes @ 0x0
   671                           
   672     0020                     ___lwdiv@divisor:	
   673                           ; 1 bytes @ 0x0
   674                           
   675     0020                     ___fltol@f1:	
   676                           ; 2 bytes @ 0x0
   677                           
   678                           
   679                           ; 4 bytes @ 0x0
   680     0020                     	ds	1
   681     0021                     ??_setup:
   682                           
   683                           ; 1 bytes @ 0x1
   684     0021                     	ds	1
   685     0022                     ___lwdiv@dividend:
   686                           
   687                           ; 2 bytes @ 0x2
   688     0022                     	ds	2
   689     0024                     ??___fltol:
   690     0024                     ??___lwdiv:	
   691                           ; 1 bytes @ 0x4
   692                           
   693     0024                     ___lwdiv@quotient:	
   694                           ; 1 bytes @ 0x4
   695                           
   696                           
   697                           ; 2 bytes @ 0x4
   698     0024                     	ds	2
   699     0026                     ___lwdiv@counter:
   700                           
   701                           ; 1 bytes @ 0x6
   702     0026                     	ds	1
   703     0027                     ?___lwmod:
   704     0027                     ___lwmod@divisor:	
   705                           ; 2 bytes @ 0x7
   706                           
   707                           
   708                           ; 2 bytes @ 0x7
   709     0027                     	ds	1
   710     0028                     ___fltol@sign1:
   711                           
   712                           ; 1 bytes @ 0x8
   713     0028                     	ds	1
   714     0029                     ___fltol@exp1:
   715     0029                     ___lwmod@dividend:	
   716                           ; 1 bytes @ 0x9
   717                           
   718                           
   719                           ; 2 bytes @ 0x9
   720     0029                     	ds	1
   721     002A                     ?_PWM_init:
   722     002A                     PWM_init@chn1:	
   723                           ; 1 bytes @ 0xA
   724                           
   725                           
   726                           ; 2 bytes @ 0xA
   727     002A                     	ds	1
   728     002B                     ??___lwmod:
   729     002B                     ___lwmod@counter:	
   730                           ; 1 bytes @ 0xB
   731                           
   732                           
   733                           ; 1 bytes @ 0xB
   734     002B                     	ds	1
   735     002C                     ?_sprintf:
   736     002C                     sprintf@f:	
   737                           ; 2 bytes @ 0xC
   738                           
   739     002C                     PWM_init@chn2:	
   740                           ; 1 bytes @ 0xC
   741                           
   742                           
   743                           ; 2 bytes @ 0xC
   744     002C                     	ds	2
   745     002E                     PWM_init@periodo_ms:
   746                           
   747                           ; 4 bytes @ 0xE
   748     002E                     	ds	1
   749     002F                     ??_sprintf:
   750                           
   751                           ; 1 bytes @ 0xF
   752     002F                     	ds	3
   753     0032                     ??_PWM_init:
   754     0032                     sprintf@flag:	
   755                           ; 1 bytes @ 0x12
   756                           
   757                           
   758                           ; 1 bytes @ 0x12
   759     0032                     	ds	1
   760     0033                     sprintf@ap:
   761                           
   762                           ; 1 bytes @ 0x13
   763     0033                     	ds	1
   764     0034                     sprintf@val:
   765                           
   766                           ; 2 bytes @ 0x14
   767     0034                     	ds	2
   768     0036                     sprintf@prec:
   769                           
   770                           ; 1 bytes @ 0x16
   771     0036                     	ds	1
   772     0037                     sprintf@sp:
   773                           
   774                           ; 1 bytes @ 0x17
   775     0037                     	ds	1
   776     0038                     sprintf@c:
   777                           
   778                           ; 1 bytes @ 0x18
   779     0038                     	ds	1
   780     0039                     ??_main:
   781                           
   782                           ; 1 bytes @ 0x19
   783     0039                     	ds	3
   784                           
   785                           	psect	maintext
   786     00F0                     __pmaintext:	
   787 ;;
   788 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   789 ;;
   790 ;; *************** function _main *****************
   791 ;; Defined at:
   792 ;;		line 87 in file "Slave1.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;		None
   795 ;; Auto vars:     Size  Location     Type
   796 ;;  s3             20   40[BANK1 ] unsigned char [20]
   797 ;;  s2             20   20[BANK1 ] unsigned char [20]
   798 ;;  s              20    0[BANK1 ] unsigned char [20]
   799 ;;  text            9    0        unsigned char [9]
   800 ;; Return value:  Size  Location     Type
   801 ;;                  1    wreg      void 
   802 ;; Registers used:
   803 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   804 ;; Tracked objects:
   805 ;;		On entry : B00/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   809 ;;      Params:         0       0       0       0       0
   810 ;;      Locals:         0       0      60       0       0
   811 ;;      Temps:          0       3       0       0       0
   812 ;;      Totals:         0       3      60       0       0
   813 ;;Total ram usage:       63 bytes
   814 ;; Hardware stack levels required when called: 4
   815 ;; This function calls:
   816 ;;		_PWM_init
   817 ;;		_setup
   818 ;;		_sprintf
   819 ;; This function is called by:
   820 ;;		Startup code after reset
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824     00F0                     _main:	
   825                           ;psect for function _main
   826                           
   827     00F0                     l1626:	
   828                           ;incstack = 0
   829                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   830                           
   831                           
   832                           ;Slave1.c: 89:     setup();
   833     00F0  120A  118A  2394  120A  118A  	fcall	_setup
   834     00F5                     l1628:
   835                           
   836                           ;Slave1.c: 90:     OSCCON = 0x70;
   837     00F5  3070               	movlw	112
   838     00F6  1683               	bsf	3,5	;RP0=1, select bank1
   839     00F7  1303               	bcf	3,6	;RP1=0, select bank1
   840     00F8  008F               	movwf	15	;volatile
   841     00F9                     l1630:
   842                           
   843                           ;Slave1.c: 91:      PWM_init (0,0,255);
   844     00F9  3000               	movlw	0
   845     00FA  1283               	bcf	3,5	;RP0=0, select bank0
   846     00FB  1303               	bcf	3,6	;RP1=0, select bank0
   847     00FC  00AA               	movwf	PWM_init@chn1
   848     00FD  00AB               	movwf	PWM_init@chn1+1
   849     00FE  3000               	movlw	0
   850     00FF  00AC               	movwf	PWM_init@chn2
   851     0100  00AD               	movwf	PWM_init@chn2+1
   852     0101  3043               	movlw	67
   853     0102  00B1               	movwf	PWM_init@periodo_ms+3
   854     0103  307F               	movlw	127
   855     0104  00B0               	movwf	PWM_init@periodo_ms+2
   856     0105  3000               	movlw	0
   857     0106  00AF               	movwf	PWM_init@periodo_ms+1
   858     0107  3000               	movlw	0
   859     0108  00AE               	movwf	PWM_init@periodo_ms
   860     0109  120A  118A  2313  120A  118A  	fcall	_PWM_init
   861     010E                     l1632:
   862                           
   863                           ;Slave1.c: 92:     ADCON0bits.GO =1;
   864     010E  1283               	bcf	3,5	;RP0=0, select bank0
   865     010F  1303               	bcf	3,6	;RP1=0, select bank0
   866     0110  149F               	bsf	31,1	;volatile
   867     0111                     l1634:
   868                           
   869                           ;Slave1.c: 94:   _delay((unsigned long)((500)*(8000000/4000.0)));
   870     0111  3006               	movlw	6
   871     0112  1283               	bcf	3,5	;RP0=0, select bank0
   872     0113  1303               	bcf	3,6	;RP1=0, select bank0
   873     0114  00BB               	movwf	??_main+2
   874     0115  3013               	movlw	19
   875     0116  00BA               	movwf	??_main+1
   876     0117  30AD               	movlw	173
   877     0118  00B9               	movwf	??_main
   878     0119                     u1087:
   879     0119  0BB9               	decfsz	??_main,f
   880     011A  2919               	goto	u1087
   881     011B  0BBA               	decfsz	??_main+1,f
   882     011C  2919               	goto	u1087
   883     011D  0BBB               	decfsz	??_main+2,f
   884     011E  2919               	goto	u1087
   885     011F                     l1636:
   886                           
   887                           ;Slave1.c: 99:  char text[9];;Slave1.c: 100:     i=0;
   888     011F  1683               	bsf	3,5	;RP0=1, select bank1
   889     0120  1303               	bcf	3,6	;RP1=0, select bank1
   890     0121  01DE               	clrf	_i^(0+128)
   891     0122  01DF               	clrf	(_i+1)^(0+128)
   892     0123                     l1638:
   893                           
   894                           ;Slave1.c: 103:     {;Slave1.c: 105:        if (ADCON0bits.GO ==0){
   895     0123  1283               	bcf	3,5	;RP0=0, select bank0
   896     0124  1303               	bcf	3,6	;RP1=0, select bank0
   897     0125  189F               	btfsc	31,1	;volatile
   898     0126  2928               	goto	u1041
   899     0127  2929               	goto	u1040
   900     0128                     u1041:
   901     0128  2950               	goto	l135
   902     0129                     u1040:
   903     0129                     l1640:
   904                           
   905                           ;Slave1.c: 106:            for (i=0;i<=2;i++){
   906     0129  1683               	bsf	3,5	;RP0=1, select bank1
   907     012A  1303               	bcf	3,6	;RP1=0, select bank1
   908     012B  01DE               	clrf	_i^(0+128)
   909     012C  01DF               	clrf	(_i+1)^(0+128)
   910     012D                     l1646:
   911                           
   912                           ;Slave1.c: 107:            ADCON0bits.CHS = i;
   913     012D  1683               	bsf	3,5	;RP0=1, select bank1
   914     012E  1303               	bcf	3,6	;RP1=0, select bank1
   915     012F  085E               	movf	_i^(0+128),w
   916     0130  1283               	bcf	3,5	;RP0=0, select bank0
   917     0131  1303               	bcf	3,6	;RP1=0, select bank0
   918     0132  00B9               	movwf	??_main
   919     0133  0DB9               	rlf	??_main,f
   920     0134  0DB9               	rlf	??_main,f
   921     0135  081F               	movf	31,w	;volatile
   922     0136  0639               	xorwf	??_main,w
   923     0137  39C3               	andlw	-61
   924     0138  0639               	xorwf	??_main,w
   925     0139  009F               	movwf	31	;volatile
   926     013A                     l1648:
   927                           
   928                           ;Slave1.c: 108:            ADCON0bits.GO =1;
   929     013A  149F               	bsf	31,1	;volatile
   930     013B                     l1650:
   931                           
   932                           ;Slave1.c: 110:            }
   933     013B  3001               	movlw	1
   934     013C  1683               	bsf	3,5	;RP0=1, select bank1
   935     013D  1303               	bcf	3,6	;RP1=0, select bank1
   936     013E  07DE               	addwf	_i^(0+128),f
   937     013F  1803               	skipnc
   938     0140  0ADF               	incf	(_i+1)^(0+128),f
   939     0141  3000               	movlw	0
   940     0142  07DF               	addwf	(_i+1)^(0+128),f
   941     0143                     l1652:
   942     0143  085F               	movf	(_i+1)^(0+128),w
   943     0144  3A80               	xorlw	128
   944     0145  00FF               	movwf	btemp+1
   945     0146  3080               	movlw	128
   946     0147  027F               	subwf	btemp+1,w
   947     0148  1D03               	skipz
   948     0149  294C               	goto	u1055
   949     014A  3003               	movlw	3
   950     014B  025E               	subwf	_i^(0+128),w
   951     014C                     u1055:
   952     014C  1C03               	skipc
   953     014D  294F               	goto	u1051
   954     014E  2950               	goto	u1050
   955     014F                     u1051:
   956     014F  292D               	goto	l1646
   957     0150                     u1050:
   958     0150                     l135:	
   959                           ;Slave1.c: 113:        }
   960                           
   961                           
   962                           ;Slave1.c: 115:        if (!PORTBbits.RB0){
   963     0150  1283               	bcf	3,5	;RP0=0, select bank0
   964     0151  1303               	bcf	3,6	;RP1=0, select bank0
   965     0152  1806               	btfsc	6,0	;volatile
   966     0153  2955               	goto	u1061
   967     0154  2956               	goto	u1060
   968     0155                     u1061:
   969     0155  295A               	goto	l1656
   970     0156                     u1060:
   971     0156                     l1654:
   972                           
   973                           ;Slave1.c: 117:                 a ++;
   974     0156  3001               	movlw	1
   975     0157  00FF               	movwf	btemp+1
   976     0158  087F               	movf	btemp+1,w
   977     0159  07FD               	addwf	_a,f
   978     015A                     l1656:
   979                           
   980                           ;Slave1.c: 120:     if (!PORTBbits.RB1){
   981     015A  1886               	btfsc	6,1	;volatile
   982     015B  295D               	goto	u1071
   983     015C  295E               	goto	u1070
   984     015D                     u1071:
   985     015D  2964               	goto	l1660
   986     015E                     u1070:
   987     015E                     l1658:
   988                           
   989                           ;Slave1.c: 122:                 b ++;
   990     015E  3001               	movlw	1
   991     015F  00FF               	movwf	btemp+1
   992     0160  087F               	movf	btemp+1,w
   993     0161  1683               	bsf	3,5	;RP0=1, select bank1
   994     0162  1303               	bcf	3,6	;RP1=0, select bank1
   995     0163  07E2               	addwf	_b^(0+128),f
   996     0164                     l1660:
   997                           
   998                           ;Slave1.c: 128:            PORTD= 0;
   999     0164  1283               	bcf	3,5	;RP0=0, select bank0
  1000     0165  0188               	clrf	8	;volatile
  1001     0166                     l141:	
  1002                           ;Slave1.c: 132:        }
  1003                           
  1004                           
  1005                           ;Slave1.c: 133:          CCPR1L = (valservo>>1)+128;
  1006     0166  3080               	movlw	128
  1007     0167  0095               	movwf	21	;volatile
  1008     0168                     l1664:
  1009                           
  1010                           ;Slave1.c: 135:        char s[20];;Slave1.c: 136:        char s2[20];;Slave1.c: 137:    
      +                              char s3[20];;Slave1.c: 138:         sprintf(s, "%u", rpm);
  1011     0168  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1012     0169  00AC               	movwf	sprintf@f
  1013     016A  1683               	bsf	3,5	;RP0=1, select bank1
  1014     016B  1303               	bcf	3,6	;RP1=0, select bank1
  1015     016C  0861               	movf	_rpm^(0+128),w
  1016     016D  1283               	bcf	3,5	;RP0=0, select bank0
  1017     016E  1303               	bcf	3,6	;RP1=0, select bank0
  1018     016F  00B9               	movwf	??_main
  1019     0170  01BA               	clrf	??_main+1
  1020     0171  0839               	movf	??_main,w
  1021     0172  00AD               	movwf	?_sprintf+1
  1022     0173  083A               	movf	??_main+1,w
  1023     0174  00AE               	movwf	?_sprintf+2
  1024     0175  30A0               	movlw	(low (main@s| 0))& (0+255)
  1025     0176  120A  118A  202D  120A  118A  	fcall	_sprintf
  1026     017B                     l1666:
  1027                           
  1028                           ;Slave1.c: 139:         sprintf(s2, "%u", a);
  1029     017B  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1030     017C  1283               	bcf	3,5	;RP0=0, select bank0
  1031     017D  1303               	bcf	3,6	;RP1=0, select bank0
  1032     017E  00AC               	movwf	sprintf@f
  1033     017F  087D               	movf	_a,w
  1034     0180  00B9               	movwf	??_main
  1035     0181  01BA               	clrf	??_main+1
  1036     0182  0839               	movf	??_main,w
  1037     0183  00AD               	movwf	?_sprintf+1
  1038     0184  083A               	movf	??_main+1,w
  1039     0185  00AE               	movwf	?_sprintf+2
  1040     0186  30B4               	movlw	(low (main@s2| 0))& (0+255)
  1041     0187  120A  118A  202D  120A  118A  	fcall	_sprintf
  1042     018C                     l1668:
  1043                           
  1044                           ;Slave1.c: 140:         sprintf(s3, "%u", b);
  1045     018C  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1046     018D  1283               	bcf	3,5	;RP0=0, select bank0
  1047     018E  1303               	bcf	3,6	;RP1=0, select bank0
  1048     018F  00AC               	movwf	sprintf@f
  1049     0190  1683               	bsf	3,5	;RP0=1, select bank1
  1050     0191  1303               	bcf	3,6	;RP1=0, select bank1
  1051     0192  0862               	movf	_b^(0+128),w
  1052     0193  1283               	bcf	3,5	;RP0=0, select bank0
  1053     0194  1303               	bcf	3,6	;RP1=0, select bank0
  1054     0195  00B9               	movwf	??_main
  1055     0196  01BA               	clrf	??_main+1
  1056     0197  0839               	movf	??_main,w
  1057     0198  00AD               	movwf	?_sprintf+1
  1058     0199  083A               	movf	??_main+1,w
  1059     019A  00AE               	movwf	?_sprintf+2
  1060     019B  30C8               	movlw	(low (main@s3| 0))& (0+255)
  1061     019C  120A  118A  202D  120A  118A  	fcall	_sprintf
  1062     01A1  2923               	goto	l1638
  1063     01A2  120A  118A  280E   	ljmp	start
  1064     01A5                     __end_of_main:
  1065                           
  1066                           	psect	text1
  1067     002D                     __ptext1:	
  1068 ;; *************** function _sprintf *****************
  1069 ;; Defined at:
  1070 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;  sp              1    wreg     PTR unsigned char 
  1073 ;;		 -> main@s3(20), main@s2(20), main@s(20), 
  1074 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  1075 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  sp              1   23[BANK0 ] PTR unsigned char 
  1078 ;;		 -> main@s3(20), main@s2(20), main@s(20), 
  1079 ;;  tmpval          4    0        struct .
  1080 ;;  val             2   20[BANK0 ] unsigned int 
  1081 ;;  cp              2    0        PTR const unsigned char 
  1082 ;;  len             2    0        unsigned int 
  1083 ;;  c               1   24[BANK0 ] unsigned char 
  1084 ;;  prec            1   22[BANK0 ] char 
  1085 ;;  ap              1   19[BANK0 ] PTR void [1]
  1086 ;;		 -> ?_sprintf(2), 
  1087 ;;  flag            1   18[BANK0 ] unsigned char 
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  2   12[BANK0 ] int 
  1090 ;; Registers used:
  1091 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1097 ;;      Params:         0       3       0       0       0
  1098 ;;      Locals:         0       7       0       0       0
  1099 ;;      Temps:          0       3       0       0       0
  1100 ;;      Totals:         0      13       0       0       0
  1101 ;;Total ram usage:       13 bytes
  1102 ;; Hardware stack levels used: 1
  1103 ;; Hardware stack levels required when called: 3
  1104 ;; This function calls:
  1105 ;;		___lwdiv
  1106 ;;		___lwmod
  1107 ;; This function is called by:
  1108 ;;		_main
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112     002D                     _sprintf:	
  1113                           ;psect for function _sprintf
  1114                           
  1115                           
  1116                           ;incstack = 0
  1117                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1118                           ;sprintf@sp stored from wreg
  1119     002D  1283               	bcf	3,5	;RP0=0, select bank0
  1120     002E  1303               	bcf	3,6	;RP1=0, select bank0
  1121     002F  00B7               	movwf	sprintf@sp
  1122     0030                     l1508:
  1123                           
  1124                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1125     0030  302D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1126     0031  00B3               	movwf	sprintf@ap
  1127                           
  1128                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1129     0032  28DB               	goto	l1552
  1130     0033                     l1510:
  1131                           
  1132                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1133     0033  3025               	movlw	37
  1134     0034  0638               	xorwf	sprintf@c,w
  1135     0035  1903               	btfsc	3,2
  1136     0036  2838               	goto	u861
  1137     0037  2839               	goto	u860
  1138     0038                     u861:
  1139     0038  2843               	goto	l1516
  1140     0039                     u860:
  1141     0039                     l1512:
  1142                           
  1143                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1144     0039  0837               	movf	sprintf@sp,w
  1145     003A  0084               	movwf	4
  1146     003B  0838               	movf	sprintf@c,w
  1147     003C  1383               	bcf	3,7	;select IRP bank0
  1148     003D  0080               	movwf	0
  1149     003E                     l1514:
  1150     003E  3001               	movlw	1
  1151     003F  00FF               	movwf	btemp+1
  1152     0040  087F               	movf	btemp+1,w
  1153     0041  07B7               	addwf	sprintf@sp,f
  1154                           
  1155                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  1156     0042  28DB               	goto	l1552
  1157     0043                     l1516:
  1158                           
  1159                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1160     0043  01B2               	clrf	sprintf@flag
  1161                           
  1162                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1163     0044  284A               	goto	l1522
  1164     0045                     l1518:
  1165                           
  1166                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1167     0045  30C0               	movlw	192
  1168     0046  00FF               	movwf	btemp+1
  1169     0047  087F               	movf	btemp+1,w
  1170     0048  04B2               	iorwf	sprintf@flag,f
  1171                           
  1172                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 845:    break;
  1173     0049  2864               	goto	l1524
  1174     004A                     l1522:
  1175     004A  3001               	movlw	1
  1176     004B  07AC               	addwf	sprintf@f,f
  1177     004C  30FF               	movlw	-1
  1178     004D  072C               	addwf	sprintf@f,w
  1179     004E  0084               	movwf	4
  1180     004F  120A  118A  23DC  120A  118A  	fcall	stringdir
  1181     0054  00B8               	movwf	sprintf@c
  1182     0055  00AF               	movwf	??_sprintf
  1183     0056  01B0               	clrf	??_sprintf+1
  1184                           
  1185                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1186                           ; Switch size 1, requested type "simple"
  1187                           ; Number of cases is 1, Range of values is 0 to 0
  1188                           ; switch strategies available:
  1189                           ; Name         Instructions Cycles
  1190                           ; simple_byte            4     3 (average)
  1191                           ; direct_byte           11     8 (fixed)
  1192                           ; jumptable            260     6 (fixed)
  1193                           ;	Chosen strategy is simple_byte
  1194     0057  0830               	movf	??_sprintf+1,w
  1195     0058  3A00               	xorlw	0	; case 0
  1196     0059  1903               	skipnz
  1197     005A  285C               	goto	l1690
  1198     005B  28DB               	goto	l1552
  1199     005C                     l1690:
  1200                           
  1201                           ; Switch size 1, requested type "simple"
  1202                           ; Number of cases is 2, Range of values is 0 to 117
  1203                           ; switch strategies available:
  1204                           ; Name         Instructions Cycles
  1205                           ; simple_byte            7     4 (average)
  1206                           ; jumptable            260     6 (fixed)
  1207                           ;	Chosen strategy is simple_byte
  1208     005C  082F               	movf	??_sprintf,w
  1209     005D  3A00               	xorlw	0	; case 0
  1210     005E  1903               	skipnz
  1211     005F  28EB               	goto	l1554
  1212     0060  3A75               	xorlw	117	; case 117
  1213     0061  1903               	skipnz
  1214     0062  2845               	goto	l1518
  1215     0063  28DB               	goto	l1552
  1216     0064                     l1524:
  1217                           
  1218                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1219     0064  0833               	movf	sprintf@ap,w
  1220     0065  0084               	movwf	4
  1221     0066  1383               	bcf	3,7	;select IRP bank0
  1222     0067  0800               	movf	0,w
  1223     0068  00B4               	movwf	sprintf@val
  1224     0069  0A84               	incf	4,f
  1225     006A  0800               	movf	0,w
  1226     006B  00B5               	movwf	sprintf@val+1
  1227     006C                     l1526:
  1228     006C  3002               	movlw	2
  1229     006D  00FF               	movwf	btemp+1
  1230     006E  087F               	movf	btemp+1,w
  1231     006F  07B3               	addwf	sprintf@ap,f
  1232     0070                     l1528:
  1233                           
  1234                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1235     0070  01B8               	clrf	sprintf@c
  1236     0071  0AB8               	incf	sprintf@c,f
  1237     0072                     l1534:
  1238                           
  1239                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1240     0072  0838               	movf	sprintf@c,w
  1241     0073  00AF               	movwf	??_sprintf
  1242     0074  072F               	addwf	??_sprintf,w
  1243     0075  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1244     0076  0084               	movwf	4
  1245     0077  120A  118A  23DC  120A  118A  	fcall	stringdir
  1246     007C  00B0               	movwf	??_sprintf+1
  1247     007D  120A  118A  23DC  120A  118A  	fcall	stringdir
  1248     0082  00B1               	movwf	??_sprintf+2
  1249     0083  0831               	movf	??_sprintf+2,w
  1250     0084  0235               	subwf	sprintf@val+1,w
  1251     0085  1D03               	skipz
  1252     0086  2889               	goto	u875
  1253     0087  0830               	movf	??_sprintf+1,w
  1254     0088  0234               	subwf	sprintf@val,w
  1255     0089                     u875:
  1256     0089  1803               	skipnc
  1257     008A  288C               	goto	u871
  1258     008B  288D               	goto	u870
  1259     008C                     u871:
  1260     008C  288E               	goto	l1538
  1261     008D                     u870:
  1262     008D  2898               	goto	l1542
  1263     008E                     l1538:
  1264     008E  3001               	movlw	1
  1265     008F  00FF               	movwf	btemp+1
  1266     0090  087F               	movf	btemp+1,w
  1267     0091  07B8               	addwf	sprintf@c,f
  1268     0092                     l1540:
  1269     0092  3005               	movlw	5
  1270     0093  0638               	xorwf	sprintf@c,w
  1271     0094  1D03               	btfss	3,2
  1272     0095  2897               	goto	u881
  1273     0096  2898               	goto	u880
  1274     0097                     u881:
  1275     0097  2872               	goto	l1534
  1276     0098                     u880:
  1277     0098                     l1542:
  1278                           
  1279                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1280     0098  0838               	movf	sprintf@c,w
  1281     0099  00B6               	movwf	sprintf@prec
  1282                           
  1283                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1284     009A  28D2               	goto	l1550
  1285     009B                     l1544:
  1286                           
  1287                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1288     009B  300A               	movlw	10
  1289     009C  00A7               	movwf	___lwmod@divisor
  1290     009D  3000               	movlw	0
  1291     009E  00A8               	movwf	___lwmod@divisor+1
  1292     009F  0836               	movf	sprintf@prec,w
  1293     00A0  00AF               	movwf	??_sprintf
  1294     00A1  072F               	addwf	??_sprintf,w
  1295     00A2  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1296     00A3  0084               	movwf	4
  1297     00A4  120A  118A  23DC  120A  118A  	fcall	stringdir
  1298     00A9  00A0               	movwf	___lwdiv@divisor
  1299     00AA  120A  118A  23DC  120A  118A  	fcall	stringdir
  1300     00AF  00A1               	movwf	___lwdiv@divisor+1
  1301     00B0  0835               	movf	sprintf@val+1,w
  1302     00B1  00A3               	movwf	___lwdiv@dividend+1
  1303     00B2  0834               	movf	sprintf@val,w
  1304     00B3  00A2               	movwf	___lwdiv@dividend
  1305     00B4  120A  118A  22CD  120A  118A  	fcall	___lwdiv
  1306     00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1307     00BA  1303               	bcf	3,6	;RP1=0, select bank0
  1308     00BB  0821               	movf	?___lwdiv+1,w
  1309     00BC  00AA               	movwf	___lwmod@dividend+1
  1310     00BD  0820               	movf	?___lwdiv,w
  1311     00BE  00A9               	movwf	___lwmod@dividend
  1312     00BF  120A  118A  2358  120A  118A  	fcall	___lwmod
  1313     00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1314     00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1315     00C6  0827               	movf	?___lwmod,w
  1316     00C7  3E30               	addlw	48
  1317     00C8  00B8               	movwf	sprintf@c
  1318     00C9                     l1546:
  1319                           
  1320                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1321     00C9  0837               	movf	sprintf@sp,w
  1322     00CA  0084               	movwf	4
  1323     00CB  0838               	movf	sprintf@c,w
  1324     00CC  1383               	bcf	3,7	;select IRP bank0
  1325     00CD  0080               	movwf	0
  1326     00CE                     l1548:
  1327     00CE  3001               	movlw	1
  1328     00CF  00FF               	movwf	btemp+1
  1329     00D0  087F               	movf	btemp+1,w
  1330     00D1  07B7               	addwf	sprintf@sp,f
  1331     00D2                     l1550:
  1332                           
  1333                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1334     00D2  30FF               	movlw	255
  1335     00D3  00FF               	movwf	btemp+1
  1336     00D4  087F               	movf	btemp+1,w
  1337     00D5  07B6               	addwf	sprintf@prec,f
  1338     00D6  0A36               	incf	sprintf@prec,w
  1339     00D7  1D03               	btfss	3,2
  1340     00D8  28DA               	goto	u891
  1341     00D9  28DB               	goto	u890
  1342     00DA                     u891:
  1343     00DA  289B               	goto	l1544
  1344     00DB                     u890:
  1345     00DB                     l1552:
  1346                           
  1347                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1348     00DB  3001               	movlw	1
  1349     00DC  07AC               	addwf	sprintf@f,f
  1350     00DD  30FF               	movlw	-1
  1351     00DE  072C               	addwf	sprintf@f,w
  1352     00DF  0084               	movwf	4
  1353     00E0  120A  118A  23DC  120A  118A  	fcall	stringdir
  1354     00E5  00B8               	movwf	sprintf@c
  1355     00E6  0838               	movf	sprintf@c,w
  1356     00E7  1D03               	btfss	3,2
  1357     00E8  28EA               	goto	u901
  1358     00E9  28EB               	goto	u900
  1359     00EA                     u901:
  1360     00EA  2833               	goto	l1510
  1361     00EB                     u900:
  1362     00EB                     l1554:
  1363                           
  1364                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1365     00EB  0837               	movf	sprintf@sp,w
  1366     00EC  0084               	movwf	4
  1367     00ED  1383               	bcf	3,7	;select IRP bank0
  1368     00EE  0180               	clrf	0
  1369     00EF                     l346:
  1370     00EF  0008               	return
  1371     00F0                     __end_of_sprintf:
  1372                           
  1373                           	psect	text2
  1374     0358                     __ptext2:	
  1375 ;; *************** function ___lwmod *****************
  1376 ;; Defined at:
  1377 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;  divisor         2    7[BANK0 ] unsigned int 
  1380 ;;  dividend        2    9[BANK0 ] unsigned int 
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;  counter         1   11[BANK0 ] unsigned char 
  1383 ;; Return value:  Size  Location     Type
  1384 ;;                  2    7[BANK0 ] unsigned int 
  1385 ;; Registers used:
  1386 ;;		wreg, status,2, status,0, btemp+1
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1392 ;;      Params:         0       4       0       0       0
  1393 ;;      Locals:         0       1       0       0       0
  1394 ;;      Temps:          0       0       0       0       0
  1395 ;;      Totals:         0       5       0       0       0
  1396 ;;Total ram usage:        5 bytes
  1397 ;; Hardware stack levels used: 1
  1398 ;; Hardware stack levels required when called: 2
  1399 ;; This function calls:
  1400 ;;		Nothing
  1401 ;; This function is called by:
  1402 ;;		_sprintf
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406     0358                     ___lwmod:	
  1407                           ;psect for function ___lwmod
  1408                           
  1409     0358                     l1418:	
  1410                           ;incstack = 0
  1411                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  1412                           
  1413     0358  1283               	bcf	3,5	;RP0=0, select bank0
  1414     0359  1303               	bcf	3,6	;RP1=0, select bank0
  1415     035A  0827               	movf	___lwmod@divisor,w
  1416     035B  0428               	iorwf	___lwmod@divisor+1,w
  1417     035C  1903               	btfsc	3,2
  1418     035D  2B5F               	goto	u791
  1419     035E  2B60               	goto	u790
  1420     035F                     u791:
  1421     035F  2B8F               	goto	l1436
  1422     0360                     u790:
  1423     0360                     l1420:
  1424     0360  01AB               	clrf	___lwmod@counter
  1425     0361  0AAB               	incf	___lwmod@counter,f
  1426     0362  2B6E               	goto	l1426
  1427     0363                     l1422:
  1428     0363  3001               	movlw	1
  1429     0364                     u805:
  1430     0364  1003               	clrc
  1431     0365  0DA7               	rlf	___lwmod@divisor,f
  1432     0366  0DA8               	rlf	___lwmod@divisor+1,f
  1433     0367  3EFF               	addlw	-1
  1434     0368  1D03               	skipz
  1435     0369  2B64               	goto	u805
  1436     036A                     l1424:
  1437     036A  3001               	movlw	1
  1438     036B  00FF               	movwf	btemp+1
  1439     036C  087F               	movf	btemp+1,w
  1440     036D  07AB               	addwf	___lwmod@counter,f
  1441     036E                     l1426:
  1442     036E  1FA8               	btfss	___lwmod@divisor+1,7
  1443     036F  2B71               	goto	u811
  1444     0370  2B72               	goto	u810
  1445     0371                     u811:
  1446     0371  2B63               	goto	l1422
  1447     0372                     u810:
  1448     0372                     l1428:
  1449     0372  0828               	movf	___lwmod@divisor+1,w
  1450     0373  022A               	subwf	___lwmod@dividend+1,w
  1451     0374  1D03               	skipz
  1452     0375  2B78               	goto	u825
  1453     0376  0827               	movf	___lwmod@divisor,w
  1454     0377  0229               	subwf	___lwmod@dividend,w
  1455     0378                     u825:
  1456     0378  1C03               	skipc
  1457     0379  2B7B               	goto	u821
  1458     037A  2B7C               	goto	u820
  1459     037B                     u821:
  1460     037B  2B82               	goto	l1432
  1461     037C                     u820:
  1462     037C                     l1430:
  1463     037C  0827               	movf	___lwmod@divisor,w
  1464     037D  02A9               	subwf	___lwmod@dividend,f
  1465     037E  0828               	movf	___lwmod@divisor+1,w
  1466     037F  1C03               	skipc
  1467     0380  03AA               	decf	___lwmod@dividend+1,f
  1468     0381  02AA               	subwf	___lwmod@dividend+1,f
  1469     0382                     l1432:
  1470     0382  3001               	movlw	1
  1471     0383                     u835:
  1472     0383  1003               	clrc
  1473     0384  0CA8               	rrf	___lwmod@divisor+1,f
  1474     0385  0CA7               	rrf	___lwmod@divisor,f
  1475     0386  3EFF               	addlw	-1
  1476     0387  1D03               	skipz
  1477     0388  2B83               	goto	u835
  1478     0389                     l1434:
  1479     0389  3001               	movlw	1
  1480     038A  02AB               	subwf	___lwmod@counter,f
  1481     038B  1D03               	btfss	3,2
  1482     038C  2B8E               	goto	u841
  1483     038D  2B8F               	goto	u840
  1484     038E                     u841:
  1485     038E  2B72               	goto	l1428
  1486     038F                     u840:
  1487     038F                     l1436:
  1488     038F  082A               	movf	___lwmod@dividend+1,w
  1489     0390  00A8               	movwf	?___lwmod+1
  1490     0391  0829               	movf	___lwmod@dividend,w
  1491     0392  00A7               	movwf	?___lwmod
  1492     0393                     l632:
  1493     0393  0008               	return
  1494     0394                     __end_of___lwmod:
  1495                           
  1496                           	psect	text3
  1497     02CD                     __ptext3:	
  1498 ;; *************** function ___lwdiv *****************
  1499 ;; Defined at:
  1500 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;  divisor         2    0[BANK0 ] unsigned int 
  1503 ;;  dividend        2    2[BANK0 ] unsigned int 
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;  quotient        2    4[BANK0 ] unsigned int 
  1506 ;;  counter         1    6[BANK0 ] unsigned char 
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  2    0[BANK0 ] unsigned int 
  1509 ;; Registers used:
  1510 ;;		wreg, status,2, status,0, btemp+1
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1516 ;;      Params:         0       4       0       0       0
  1517 ;;      Locals:         0       3       0       0       0
  1518 ;;      Temps:          0       0       0       0       0
  1519 ;;      Totals:         0       7       0       0       0
  1520 ;;Total ram usage:        7 bytes
  1521 ;; Hardware stack levels used: 1
  1522 ;; Hardware stack levels required when called: 2
  1523 ;; This function calls:
  1524 ;;		Nothing
  1525 ;; This function is called by:
  1526 ;;		_sprintf
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530     02CD                     ___lwdiv:	
  1531                           ;psect for function ___lwdiv
  1532                           
  1533     02CD                     l1392:	
  1534                           ;incstack = 0
  1535                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1536                           
  1537     02CD  1283               	bcf	3,5	;RP0=0, select bank0
  1538     02CE  1303               	bcf	3,6	;RP1=0, select bank0
  1539     02CF  01A4               	clrf	___lwdiv@quotient
  1540     02D0  01A5               	clrf	___lwdiv@quotient+1
  1541     02D1                     l1394:
  1542     02D1  0820               	movf	___lwdiv@divisor,w
  1543     02D2  0421               	iorwf	___lwdiv@divisor+1,w
  1544     02D3  1903               	btfsc	3,2
  1545     02D4  2AD6               	goto	u721
  1546     02D5  2AD7               	goto	u720
  1547     02D6                     u721:
  1548     02D6  2B0E               	goto	l1414
  1549     02D7                     u720:
  1550     02D7                     l1396:
  1551     02D7  01A6               	clrf	___lwdiv@counter
  1552     02D8  0AA6               	incf	___lwdiv@counter,f
  1553     02D9  2AE5               	goto	l1402
  1554     02DA                     l1398:
  1555     02DA  3001               	movlw	1
  1556     02DB                     u735:
  1557     02DB  1003               	clrc
  1558     02DC  0DA0               	rlf	___lwdiv@divisor,f
  1559     02DD  0DA1               	rlf	___lwdiv@divisor+1,f
  1560     02DE  3EFF               	addlw	-1
  1561     02DF  1D03               	skipz
  1562     02E0  2ADB               	goto	u735
  1563     02E1                     l1400:
  1564     02E1  3001               	movlw	1
  1565     02E2  00FF               	movwf	btemp+1
  1566     02E3  087F               	movf	btemp+1,w
  1567     02E4  07A6               	addwf	___lwdiv@counter,f
  1568     02E5                     l1402:
  1569     02E5  1FA1               	btfss	___lwdiv@divisor+1,7
  1570     02E6  2AE8               	goto	u741
  1571     02E7  2AE9               	goto	u740
  1572     02E8                     u741:
  1573     02E8  2ADA               	goto	l1398
  1574     02E9                     u740:
  1575     02E9                     l1404:
  1576     02E9  3001               	movlw	1
  1577     02EA                     u755:
  1578     02EA  1003               	clrc
  1579     02EB  0DA4               	rlf	___lwdiv@quotient,f
  1580     02EC  0DA5               	rlf	___lwdiv@quotient+1,f
  1581     02ED  3EFF               	addlw	-1
  1582     02EE  1D03               	skipz
  1583     02EF  2AEA               	goto	u755
  1584     02F0  0821               	movf	___lwdiv@divisor+1,w
  1585     02F1  0223               	subwf	___lwdiv@dividend+1,w
  1586     02F2  1D03               	skipz
  1587     02F3  2AF6               	goto	u765
  1588     02F4  0820               	movf	___lwdiv@divisor,w
  1589     02F5  0222               	subwf	___lwdiv@dividend,w
  1590     02F6                     u765:
  1591     02F6  1C03               	skipc
  1592     02F7  2AF9               	goto	u761
  1593     02F8  2AFA               	goto	u760
  1594     02F9                     u761:
  1595     02F9  2B01               	goto	l1410
  1596     02FA                     u760:
  1597     02FA                     l1406:
  1598     02FA  0820               	movf	___lwdiv@divisor,w
  1599     02FB  02A2               	subwf	___lwdiv@dividend,f
  1600     02FC  0821               	movf	___lwdiv@divisor+1,w
  1601     02FD  1C03               	skipc
  1602     02FE  03A3               	decf	___lwdiv@dividend+1,f
  1603     02FF  02A3               	subwf	___lwdiv@dividend+1,f
  1604     0300                     l1408:
  1605     0300  1424               	bsf	___lwdiv@quotient,0
  1606     0301                     l1410:
  1607     0301  3001               	movlw	1
  1608     0302                     u775:
  1609     0302  1003               	clrc
  1610     0303  0CA1               	rrf	___lwdiv@divisor+1,f
  1611     0304  0CA0               	rrf	___lwdiv@divisor,f
  1612     0305  3EFF               	addlw	-1
  1613     0306  1D03               	skipz
  1614     0307  2B02               	goto	u775
  1615     0308                     l1412:
  1616     0308  3001               	movlw	1
  1617     0309  02A6               	subwf	___lwdiv@counter,f
  1618     030A  1D03               	btfss	3,2
  1619     030B  2B0D               	goto	u781
  1620     030C  2B0E               	goto	u780
  1621     030D                     u781:
  1622     030D  2AE9               	goto	l1404
  1623     030E                     u780:
  1624     030E                     l1414:
  1625     030E  0825               	movf	___lwdiv@quotient+1,w
  1626     030F  00A1               	movwf	?___lwdiv+1
  1627     0310  0824               	movf	___lwdiv@quotient,w
  1628     0311  00A0               	movwf	?___lwdiv
  1629     0312                     l622:
  1630     0312  0008               	return
  1631     0313                     __end_of___lwdiv:
  1632                           
  1633                           	psect	text4
  1634     0394                     __ptext4:	
  1635 ;; *************** function _setup *****************
  1636 ;; Defined at:
  1637 ;;		line 153 in file "Slave1.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;		None
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;		None
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  1    wreg      void 
  1644 ;; Registers used:
  1645 ;;		wreg, status,2, status,0, pclath, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1651 ;;      Params:         0       0       0       0       0
  1652 ;;      Locals:         0       0       0       0       0
  1653 ;;      Temps:          0       0       0       0       0
  1654 ;;      Totals:         0       0       0       0       0
  1655 ;;Total ram usage:        0 bytes
  1656 ;; Hardware stack levels used: 1
  1657 ;; Hardware stack levels required when called: 3
  1658 ;; This function calls:
  1659 ;;		_I2C_Slave_Init
  1660 ;; This function is called by:
  1661 ;;		_main
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665     0394                     _setup:	
  1666                           ;psect for function _setup
  1667                           
  1668     0394                     l1440:	
  1669                           ;incstack = 0
  1670                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1671                           
  1672                           
  1673                           ;Slave1.c: 154:     ANSEL = 0;
  1674     0394  1683               	bsf	3,5	;RP0=1, select bank3
  1675     0395  1703               	bsf	3,6	;RP1=1, select bank3
  1676     0396  0188               	clrf	8	;volatile
  1677                           
  1678                           ;Slave1.c: 155:     ANSELH = 0;
  1679     0397  0189               	clrf	9	;volatile
  1680     0398                     l1442:
  1681                           
  1682                           ;Slave1.c: 157:     TRISA = 0xFF;
  1683     0398  30FF               	movlw	255
  1684     0399  1683               	bsf	3,5	;RP0=1, select bank1
  1685     039A  1303               	bcf	3,6	;RP1=0, select bank1
  1686     039B  0085               	movwf	5	;volatile
  1687     039C                     l1444:
  1688                           
  1689                           ;Slave1.c: 158:     TRISB = 0b11111111;
  1690     039C  30FF               	movlw	255
  1691     039D  0086               	movwf	6	;volatile
  1692                           
  1693                           ;Slave1.c: 159:     TRISD = 0;
  1694     039E  0188               	clrf	8	;volatile
  1695     039F                     l1446:
  1696                           
  1697                           ;Slave1.c: 160:     OPTION_REGbits.nRBPU = 0;
  1698     039F  1381               	bcf	1,7	;volatile
  1699                           
  1700                           ;Slave1.c: 161:     TRISE = 0;
  1701     03A0  0189               	clrf	9	;volatile
  1702     03A1                     l1448:
  1703                           
  1704                           ;Slave1.c: 164:     WPUB = 0b1111;
  1705     03A1  300F               	movlw	15
  1706     03A2  0095               	movwf	21	;volatile
  1707     03A3                     l1450:
  1708                           
  1709                           ;Slave1.c: 167:     PORTD = 0;
  1710     03A3  1283               	bcf	3,5	;RP0=0, select bank0
  1711     03A4  1303               	bcf	3,6	;RP1=0, select bank0
  1712     03A5  0188               	clrf	8	;volatile
  1713     03A6                     l1452:
  1714                           
  1715                           ;Slave1.c: 168:     PORTE = 0;
  1716     03A6  0189               	clrf	9	;volatile
  1717     03A7                     l1454:
  1718                           
  1719                           ;Slave1.c: 170:    I2C_Slave_Init(0x24);
  1720     03A7  3024               	movlw	36
  1721     03A8  120A  118A  23C0  120A  118A  	fcall	_I2C_Slave_Init
  1722     03AD                     l1456:
  1723                           
  1724                           ;Slave1.c: 175:     OSCCONbits.IRCF = 0b0111;
  1725     03AD  3070               	movlw	112
  1726     03AE  1683               	bsf	3,5	;RP0=1, select bank1
  1727     03AF  1303               	bcf	3,6	;RP1=0, select bank1
  1728     03B0  048F               	iorwf	15,f	;volatile
  1729     03B1                     l1458:
  1730                           
  1731                           ;Slave1.c: 176:     OSCCONbits.SCS = 1;
  1732     03B1  140F               	bsf	15,0	;volatile
  1733     03B2                     l1460:
  1734                           
  1735                           ;Slave1.c: 180: OPTION_REGbits.T0CS = 0;
  1736     03B2  1281               	bcf	1,5	;volatile
  1737     03B3                     l1462:
  1738                           
  1739                           ;Slave1.c: 181: OPTION_REGbits.T0SE = 0;
  1740     03B3  1201               	bcf	1,4	;volatile
  1741     03B4                     l1464:
  1742                           
  1743                           ;Slave1.c: 182: OPTION_REGbits.PSA = 0;
  1744     03B4  1181               	bcf	1,3	;volatile
  1745     03B5                     l1466:
  1746                           
  1747                           ;Slave1.c: 183: OPTION_REGbits.PS2 = 1;
  1748     03B5  1501               	bsf	1,2	;volatile
  1749     03B6                     l1468:
  1750                           
  1751                           ;Slave1.c: 184: OPTION_REGbits.PS1 = 1;
  1752     03B6  1481               	bsf	1,1	;volatile
  1753     03B7                     l1470:
  1754                           
  1755                           ;Slave1.c: 185: OPTION_REGbits.PS0 = 1;
  1756     03B7  1401               	bsf	1,0	;volatile
  1757     03B8                     l1472:
  1758                           
  1759                           ;Slave1.c: 186: TMR0 = 0;
  1760     03B8  1283               	bcf	3,5	;RP0=0, select bank0
  1761     03B9  1303               	bcf	3,6	;RP1=0, select bank0
  1762     03BA  0181               	clrf	1	;volatile
  1763     03BB                     l1474:
  1764                           
  1765                           ;Slave1.c: 191:     INTCONbits.RBIE = 0;
  1766     03BB  118B               	bcf	11,3	;volatile
  1767     03BC                     l1476:
  1768                           
  1769                           ;Slave1.c: 192:     INTCONbits.RBIF = 1;
  1770     03BC  140B               	bsf	11,0	;volatile
  1771     03BD                     l1478:
  1772                           
  1773                           ;Slave1.c: 194:     INTCONbits.PEIE = 1;
  1774     03BD  170B               	bsf	11,6	;volatile
  1775     03BE                     l1480:
  1776                           
  1777                           ;Slave1.c: 195:     INTCONbits.GIE = 1;
  1778     03BE  178B               	bsf	11,7	;volatile
  1779     03BF                     l147:
  1780     03BF  0008               	return
  1781     03C0                     __end_of_setup:
  1782                           
  1783                           	psect	text5
  1784     03C0                     __ptext5:	
  1785 ;; *************** function _I2C_Slave_Init *****************
  1786 ;; Defined at:
  1787 ;;		line 93 in file "I2C.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  address         1    wreg     unsigned char 
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;  address         1    0[BANK0 ] unsigned char 
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1    wreg      void 
  1794 ;; Registers used:
  1795 ;;		wreg
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1801 ;;      Params:         0       0       0       0       0
  1802 ;;      Locals:         0       1       0       0       0
  1803 ;;      Temps:          0       0       0       0       0
  1804 ;;      Totals:         0       1       0       0       0
  1805 ;;Total ram usage:        1 bytes
  1806 ;; Hardware stack levels used: 1
  1807 ;; Hardware stack levels required when called: 2
  1808 ;; This function calls:
  1809 ;;		Nothing
  1810 ;; This function is called by:
  1811 ;;		_setup
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815     03C0                     _I2C_Slave_Init:	
  1816                           ;psect for function _I2C_Slave_Init
  1817                           
  1818                           
  1819                           ;incstack = 0
  1820                           ; Regs used in _I2C_Slave_Init: [wreg]
  1821                           ;I2C_Slave_Init@address stored from wreg
  1822     03C0  1283               	bcf	3,5	;RP0=0, select bank0
  1823     03C1  1303               	bcf	3,6	;RP1=0, select bank0
  1824     03C2  00A0               	movwf	I2C_Slave_Init@address
  1825     03C3                     l1340:
  1826                           
  1827                           ;I2C.c: 93: void I2C_Slave_Init(uint8_t address);I2C.c: 94: {;I2C.c: 95:     SSPADD = ad
      +                          dress;
  1828     03C3  0820               	movf	I2C_Slave_Init@address,w
  1829     03C4  1683               	bsf	3,5	;RP0=1, select bank1
  1830     03C5  1303               	bcf	3,6	;RP1=0, select bank1
  1831     03C6  0093               	movwf	19	;volatile
  1832                           
  1833                           ;I2C.c: 96:     SSPCON = 0x36;
  1834     03C7  3036               	movlw	54
  1835     03C8  1283               	bcf	3,5	;RP0=0, select bank0
  1836     03C9  1303               	bcf	3,6	;RP1=0, select bank0
  1837     03CA  0094               	movwf	20	;volatile
  1838                           
  1839                           ;I2C.c: 97:     SSPSTAT = 0x80;
  1840     03CB  3080               	movlw	128
  1841     03CC  1683               	bsf	3,5	;RP0=1, select bank1
  1842     03CD  1303               	bcf	3,6	;RP1=0, select bank1
  1843     03CE  0094               	movwf	20	;volatile
  1844                           
  1845                           ;I2C.c: 98:     SSPCON2 = 0x01;
  1846     03CF  3001               	movlw	1
  1847     03D0  0091               	movwf	17	;volatile
  1848     03D1                     l1342:
  1849                           
  1850                           ;I2C.c: 99:     TRISC3 = 1;
  1851     03D1  1587               	bsf	7,3	;volatile
  1852     03D2                     l1344:
  1853                           
  1854                           ;I2C.c: 100:     TRISC4 = 1;
  1855     03D2  1607               	bsf	7,4	;volatile
  1856     03D3                     l1346:
  1857                           
  1858                           ;I2C.c: 101:     GIE = 1;
  1859     03D3  178B               	bsf	11,7	;volatile
  1860     03D4                     l1348:
  1861                           
  1862                           ;I2C.c: 102:     PEIE = 1;
  1863     03D4  170B               	bsf	11,6	;volatile
  1864     03D5                     l1350:
  1865                           
  1866                           ;I2C.c: 103:     SSPIF = 0;
  1867     03D5  1283               	bcf	3,5	;RP0=0, select bank0
  1868     03D6  1303               	bcf	3,6	;RP1=0, select bank0
  1869     03D7  118C               	bcf	12,3	;volatile
  1870     03D8                     l1352:
  1871                           
  1872                           ;I2C.c: 104:     SSPIE = 1;
  1873     03D8  1683               	bsf	3,5	;RP0=1, select bank1
  1874     03D9  1303               	bcf	3,6	;RP1=0, select bank1
  1875     03DA  158C               	bsf	12,3	;volatile
  1876     03DB                     l55:
  1877     03DB  0008               	return
  1878     03DC                     __end_of_I2C_Slave_Init:
  1879                           
  1880                           	psect	text6
  1881     0313                     __ptext6:	
  1882 ;; *************** function _PWM_init *****************
  1883 ;; Defined at:
  1884 ;;		line 11 in file "PWM.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  chn1            2   10[BANK0 ] int 
  1887 ;;  chn2            2   12[BANK0 ] int 
  1888 ;;  periodo_ms      4   14[BANK0 ] float 
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;		None
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  1    wreg      void 
  1893 ;; Registers used:
  1894 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1900 ;;      Params:         0       8       0       0       0
  1901 ;;      Locals:         0       0       0       0       0
  1902 ;;      Temps:          0       0       0       0       0
  1903 ;;      Totals:         0       8       0       0       0
  1904 ;;Total ram usage:        8 bytes
  1905 ;; Hardware stack levels used: 1
  1906 ;; Hardware stack levels required when called: 3
  1907 ;; This function calls:
  1908 ;;		___fltol
  1909 ;; This function is called by:
  1910 ;;		_main
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914     0313                     _PWM_init:	
  1915                           ;psect for function _PWM_init
  1916                           
  1917     0313                     l1482:	
  1918                           ;incstack = 0
  1919                           ; Regs used in _PWM_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1920                           
  1921                           
  1922                           ;PWM.c: 13:     TRISCbits.TRISC1 = chn2;
  1923     0313  1283               	bcf	3,5	;RP0=0, select bank0
  1924     0314  1303               	bcf	3,6	;RP1=0, select bank0
  1925     0315  0C2C               	rrf	PWM_init@chn2,w
  1926     0316  1683               	bsf	3,5	;RP0=1, select bank1
  1927     0317  1303               	bcf	3,6	;RP1=0, select bank1
  1928     0318  1C03               	skipc
  1929     0319  1087               	bcf	7,1	;volatile
  1930     031A  1803               	skipnc
  1931     031B  1487               	bsf	7,1	;volatile
  1932                           
  1933                           ;PWM.c: 14:     TRISCbits.TRISC2 = chn1;
  1934     031C  1283               	bcf	3,5	;RP0=0, select bank0
  1935     031D  1303               	bcf	3,6	;RP1=0, select bank0
  1936     031E  0C2A               	rrf	PWM_init@chn1,w
  1937     031F  1683               	bsf	3,5	;RP0=1, select bank1
  1938     0320  1303               	bcf	3,6	;RP1=0, select bank1
  1939     0321  1C03               	skipc
  1940     0322  1107               	bcf	7,2	;volatile
  1941     0323  1803               	skipnc
  1942     0324  1507               	bsf	7,2	;volatile
  1943     0325                     l1484:
  1944                           
  1945                           ;PWM.c: 16:     PR2 = periodo_ms;
  1946     0325  1283               	bcf	3,5	;RP0=0, select bank0
  1947     0326  1303               	bcf	3,6	;RP1=0, select bank0
  1948     0327  0831               	movf	PWM_init@periodo_ms+3,w
  1949     0328  00A3               	movwf	___fltol@f1+3
  1950     0329  0830               	movf	PWM_init@periodo_ms+2,w
  1951     032A  00A2               	movwf	___fltol@f1+2
  1952     032B  082F               	movf	PWM_init@periodo_ms+1,w
  1953     032C  00A1               	movwf	___fltol@f1+1
  1954     032D  082E               	movf	PWM_init@periodo_ms,w
  1955     032E  00A0               	movwf	___fltol@f1
  1956     032F  120A  118A  21A5  120A  118A  	fcall	___fltol
  1957     0334  1283               	bcf	3,5	;RP0=0, select bank0
  1958     0335  1303               	bcf	3,6	;RP1=0, select bank0
  1959     0336  0820               	movf	?___fltol,w
  1960     0337  1683               	bsf	3,5	;RP0=1, select bank1
  1961     0338  1303               	bcf	3,6	;RP1=0, select bank1
  1962     0339  0092               	movwf	18	;volatile
  1963     033A                     l1486:
  1964                           
  1965                           ;PWM.c: 17:     CCP1CONbits.P1M =0;
  1966     033A  303F               	movlw	-193
  1967     033B  1283               	bcf	3,5	;RP0=0, select bank0
  1968     033C  1303               	bcf	3,6	;RP1=0, select bank0
  1969     033D  0597               	andwf	23,f	;volatile
  1970     033E                     l1488:
  1971                           
  1972                           ;PWM.c: 18:     CCP1CONbits.CCP1M =0b1100;
  1973     033E  0817               	movf	23,w	;volatile
  1974     033F  39F0               	andlw	-16
  1975     0340  380C               	iorlw	12
  1976     0341  0097               	movwf	23	;volatile
  1977     0342                     l1490:
  1978                           
  1979                           ;PWM.c: 20:     CCPR1L = 0x0f;
  1980     0342  300F               	movlw	15
  1981     0343  0095               	movwf	21	;volatile
  1982     0344                     l1492:
  1983                           
  1984                           ;PWM.c: 21:     CCP1CONbits.DC1B= 0;
  1985     0344  30CF               	movlw	-49
  1986     0345  0597               	andwf	23,f	;volatile
  1987     0346                     l1494:
  1988                           
  1989                           ;PWM.c: 23:     PIR1bits.TMR2IF =0;
  1990     0346  108C               	bcf	12,1	;volatile
  1991     0347                     l1496:
  1992                           
  1993                           ;PWM.c: 24:     T2CONbits.T2CKPS = 0b11;
  1994     0347  3003               	movlw	3
  1995     0348  0492               	iorwf	18,f	;volatile
  1996     0349                     l1498:
  1997                           
  1998                           ;PWM.c: 25:     T2CONbits.TMR2ON = 1;
  1999     0349  1512               	bsf	18,2	;volatile
  2000     034A                     l1500:
  2001                           
  2002                           ;PWM.c: 28:     CCP2CONbits.CCP2M = 0b1100;
  2003     034A  081D               	movf	29,w	;volatile
  2004     034B  39F0               	andlw	-16
  2005     034C  380C               	iorlw	12
  2006     034D  009D               	movwf	29	;volatile
  2007     034E                     l1502:
  2008                           
  2009                           ;PWM.c: 29:     CCPR2L = 0x0f;
  2010     034E  300F               	movlw	15
  2011     034F  009B               	movwf	27	;volatile
  2012     0350                     l1504:
  2013                           
  2014                           ;PWM.c: 30:     CCP2CONbits.DC2B0 = 0;
  2015     0350  121D               	bcf	29,4	;volatile
  2016     0351                     l1506:
  2017                           
  2018                           ;PWM.c: 31:     CCP2CONbits.DC2B1 = 0;
  2019     0351  129D               	bcf	29,5	;volatile
  2020     0352                     l176:	
  2021                           ;PWM.c: 34:     while (PIR1bits.TMR2IF == 0);
  2022                           
  2023     0352  1C8C               	btfss	12,1	;volatile
  2024     0353  2B55               	goto	u851
  2025     0354  2B56               	goto	u850
  2026     0355                     u851:
  2027     0355  2B52               	goto	l176
  2028     0356                     u850:
  2029     0356                     l178:
  2030                           
  2031                           ;PWM.c: 35:     PIR1bits.TMR2IF = 0;
  2032     0356  108C               	bcf	12,1	;volatile
  2033     0357                     l179:
  2034     0357  0008               	return
  2035     0358                     __end_of_PWM_init:
  2036                           
  2037                           	psect	text7
  2038     01A5                     __ptext7:	
  2039 ;; *************** function ___fltol *****************
  2040 ;; Defined at:
  2041 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fltol.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;  f1              4    0[BANK0 ] void 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;  exp1            1    9[BANK0 ] unsigned char 
  2046 ;;  sign1           1    8[BANK0 ] unsigned char 
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  4    0[BANK0 ] long 
  2049 ;; Registers used:
  2050 ;;		wreg, status,2, status,0, btemp+1
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2056 ;;      Params:         0       4       0       0       0
  2057 ;;      Locals:         0       2       0       0       0
  2058 ;;      Temps:          0       4       0       0       0
  2059 ;;      Totals:         0      10       0       0       0
  2060 ;;Total ram usage:       10 bytes
  2061 ;; Hardware stack levels used: 1
  2062 ;; Hardware stack levels required when called: 2
  2063 ;; This function calls:
  2064 ;;		Nothing
  2065 ;; This function is called by:
  2066 ;;		_PWM_init
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070     01A5                     ___fltol:	
  2071                           ;psect for function ___fltol
  2072                           
  2073     01A5                     l1354:	
  2074                           ;incstack = 0
  2075                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  2076                           
  2077     01A5  1003               	clrc
  2078     01A6  1283               	bcf	3,5	;RP0=0, select bank0
  2079     01A7  1303               	bcf	3,6	;RP1=0, select bank0
  2080     01A8  0D22               	rlf	___fltol@f1+2,w
  2081     01A9  0D23               	rlf	___fltol@f1+3,w
  2082     01AA  00A9               	movwf	___fltol@exp1
  2083     01AB  0829               	movf	___fltol@exp1,w
  2084     01AC  1D03               	btfss	3,2
  2085     01AD  29AF               	goto	u621
  2086     01AE  29B0               	goto	u620
  2087     01AF                     u621:
  2088     01AF  29B9               	goto	l1360
  2089     01B0                     u620:
  2090     01B0                     l1356:
  2091     01B0  3000               	movlw	0
  2092     01B1  00A3               	movwf	?___fltol+3
  2093     01B2  3000               	movlw	0
  2094     01B3  00A2               	movwf	?___fltol+2
  2095     01B4  3000               	movlw	0
  2096     01B5  00A1               	movwf	?___fltol+1
  2097     01B6  3000               	movlw	0
  2098     01B7  00A0               	movwf	?___fltol
  2099     01B8  2A1C               	goto	l536
  2100     01B9                     l1360:
  2101     01B9  0820               	movf	___fltol@f1,w
  2102     01BA  00A4               	movwf	??___fltol
  2103     01BB  0821               	movf	___fltol@f1+1,w
  2104     01BC  00A5               	movwf	??___fltol+1
  2105     01BD  0822               	movf	___fltol@f1+2,w
  2106     01BE  00A6               	movwf	??___fltol+2
  2107     01BF  0823               	movf	___fltol@f1+3,w
  2108     01C0  00A7               	movwf	??___fltol+3
  2109     01C1  301F               	movlw	31
  2110     01C2                     u635:
  2111     01C2  1003               	clrc
  2112     01C3  0CA7               	rrf	??___fltol+3,f
  2113     01C4  0CA6               	rrf	??___fltol+2,f
  2114     01C5  0CA5               	rrf	??___fltol+1,f
  2115     01C6  0CA4               	rrf	??___fltol,f
  2116     01C7                     u630:
  2117     01C7  3EFF               	addlw	-1
  2118     01C8  1D03               	skipz
  2119     01C9  29C2               	goto	u635
  2120     01CA  0824               	movf	??___fltol,w
  2121     01CB  00A8               	movwf	___fltol@sign1
  2122     01CC                     l1362:
  2123     01CC  17A2               	bsf	___fltol@f1+2,7
  2124     01CD                     l1364:
  2125     01CD  30FF               	movlw	255
  2126     01CE  05A0               	andwf	___fltol@f1,f
  2127     01CF  30FF               	movlw	255
  2128     01D0  05A1               	andwf	___fltol@f1+1,f
  2129     01D1  30FF               	movlw	255
  2130     01D2  05A2               	andwf	___fltol@f1+2,f
  2131     01D3  3000               	movlw	0
  2132     01D4  05A3               	andwf	___fltol@f1+3,f
  2133     01D5                     l1366:
  2134     01D5  3096               	movlw	150
  2135     01D6  02A9               	subwf	___fltol@exp1,f
  2136     01D7                     l1368:
  2137     01D7  1FA9               	btfss	___fltol@exp1,7
  2138     01D8  29DA               	goto	u641
  2139     01D9  29DB               	goto	u640
  2140     01DA                     u641:
  2141     01DA  29F5               	goto	l1380
  2142     01DB                     u640:
  2143     01DB                     l1370:
  2144     01DB  0829               	movf	___fltol@exp1,w
  2145     01DC  3A80               	xorlw	128
  2146     01DD  3E97               	addlw	151
  2147     01DE  1803               	skipnc
  2148     01DF  29E1               	goto	u651
  2149     01E0  29E2               	goto	u650
  2150     01E1                     u651:
  2151     01E1  29E3               	goto	l1376
  2152     01E2                     u650:
  2153     01E2  29B0               	goto	l1356
  2154     01E3                     l1376:
  2155     01E3  3001               	movlw	1
  2156     01E4                     u665:
  2157     01E4  1003               	clrc
  2158     01E5  0CA3               	rrf	___fltol@f1+3,f
  2159     01E6  0CA2               	rrf	___fltol@f1+2,f
  2160     01E7  0CA1               	rrf	___fltol@f1+1,f
  2161     01E8  0CA0               	rrf	___fltol@f1,f
  2162     01E9  3EFF               	addlw	-1
  2163     01EA  1D03               	skipz
  2164     01EB  29E4               	goto	u665
  2165     01EC                     l1378:
  2166     01EC  3001               	movlw	1
  2167     01ED  00FF               	movwf	btemp+1
  2168     01EE  087F               	movf	btemp+1,w
  2169     01EF  07A9               	addwf	___fltol@exp1,f
  2170     01F0  1D03               	btfss	3,2
  2171     01F1  29F3               	goto	u671
  2172     01F2  29F4               	goto	u670
  2173     01F3                     u671:
  2174     01F3  29E3               	goto	l1376
  2175     01F4                     u670:
  2176     01F4  2A0C               	goto	l1388
  2177     01F5                     l1380:
  2178     01F5  3020               	movlw	32
  2179     01F6  0229               	subwf	___fltol@exp1,w
  2180     01F7  1C03               	skipc
  2181     01F8  29FA               	goto	u681
  2182     01F9  29FB               	goto	u680
  2183     01FA                     u681:
  2184     01FA  2A07               	goto	l543
  2185     01FB                     u680:
  2186     01FB  29B0               	goto	l1356
  2187     01FC                     l1386:
  2188     01FC  3001               	movlw	1
  2189     01FD  00A4               	movwf	??___fltol
  2190     01FE                     u695:
  2191     01FE  1003               	clrc
  2192     01FF  0DA0               	rlf	___fltol@f1,f
  2193     0200  0DA1               	rlf	___fltol@f1+1,f
  2194     0201  0DA2               	rlf	___fltol@f1+2,f
  2195     0202  0DA3               	rlf	___fltol@f1+3,f
  2196     0203  0BA4               	decfsz	??___fltol,f
  2197     0204  29FE               	goto	u695
  2198     0205  3001               	movlw	1
  2199     0206  02A9               	subwf	___fltol@exp1,f
  2200     0207                     l543:
  2201     0207  0829               	movf	___fltol@exp1,w
  2202     0208  1D03               	btfss	3,2
  2203     0209  2A0B               	goto	u701
  2204     020A  2A0C               	goto	u700
  2205     020B                     u701:
  2206     020B  29FC               	goto	l1386
  2207     020C                     u700:
  2208     020C                     l1388:
  2209     020C  0828               	movf	___fltol@sign1,w
  2210     020D  1903               	btfsc	3,2
  2211     020E  2A10               	goto	u711
  2212     020F  2A11               	goto	u710
  2213     0210                     u711:
  2214     0210  2A1C               	goto	l546
  2215     0211                     u710:
  2216     0211                     l1390:
  2217     0211  09A0               	comf	___fltol@f1,f
  2218     0212  09A1               	comf	___fltol@f1+1,f
  2219     0213  09A2               	comf	___fltol@f1+2,f
  2220     0214  09A3               	comf	___fltol@f1+3,f
  2221     0215  0AA0               	incf	___fltol@f1,f
  2222     0216  1903               	skipnz
  2223     0217  0AA1               	incf	___fltol@f1+1,f
  2224     0218  1903               	skipnz
  2225     0219  0AA2               	incf	___fltol@f1+2,f
  2226     021A  1903               	skipnz
  2227     021B  0AA3               	incf	___fltol@f1+3,f
  2228     021C                     l546:
  2229     021C                     l536:
  2230     021C  0008               	return
  2231     021D                     __end_of___fltol:
  2232                           
  2233                           	psect	text8
  2234     0284                     __ptext8:	
  2235 ;; *************** function _isr *****************
  2236 ;; Defined at:
  2237 ;;		line 57 in file "Slave1.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;		None
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;		None
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      void 
  2244 ;; Registers used:
  2245 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2251 ;;      Params:         0       0       0       0       0
  2252 ;;      Locals:         0       0       0       0       0
  2253 ;;      Temps:          5       0       0       0       0
  2254 ;;      Totals:         5       0       0       0       0
  2255 ;;Total ram usage:        5 bytes
  2256 ;; Hardware stack levels used: 1
  2257 ;; Hardware stack levels required when called: 1
  2258 ;; This function calls:
  2259 ;;		___awdiv
  2260 ;; This function is called by:
  2261 ;;		Interrupt level 1
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265     0284                     _isr:	
  2266                           ;psect for function _isr
  2267                           
  2268     0284                     i1l1606:
  2269                           
  2270                           ;Slave1.c: 62:    if (INTCONbits.T0IF){
  2271     0284  1D0B               	btfss	11,2	;volatile
  2272     0285  2A87               	goto	u101_21
  2273     0286  2A88               	goto	u101_20
  2274     0287                     u101_21:
  2275     0287  2AC4               	goto	i1l129
  2276     0288                     u101_20:
  2277     0288                     i1l1608:
  2278                           
  2279                           ;Slave1.c: 65:         if (c<=100){
  2280     0288  1283               	bcf	3,5	;RP0=0, select bank0
  2281     0289  1303               	bcf	3,6	;RP1=0, select bank0
  2282     028A  0841               	movf	_c+1,w
  2283     028B  3A80               	xorlw	128
  2284     028C  00FF               	movwf	btemp+1
  2285     028D  3080               	movlw	128
  2286     028E  027F               	subwf	btemp+1,w
  2287     028F  1D03               	skipz
  2288     0290  2A93               	goto	u102_25
  2289     0291  3065               	movlw	101
  2290     0292  0240               	subwf	_c,w
  2291     0293                     u102_25:
  2292     0293  1803               	skipnc
  2293     0294  2A96               	goto	u102_21
  2294     0295  2A97               	goto	u102_20
  2295     0296                     u102_21:
  2296     0296  2A9F               	goto	i1l1612
  2297     0297                     u102_20:
  2298     0297                     i1l1610:
  2299                           
  2300                           ;Slave1.c: 66:            c ++;
  2301     0297  3001               	movlw	1
  2302     0298  1283               	bcf	3,5	;RP0=0, select bank0
  2303     0299  1303               	bcf	3,6	;RP1=0, select bank0
  2304     029A  07C0               	addwf	_c,f
  2305     029B  1803               	skipnc
  2306     029C  0AC1               	incf	_c+1,f
  2307     029D  3000               	movlw	0
  2308     029E  07C1               	addwf	_c+1,f
  2309     029F                     i1l1612:
  2310                           
  2311                           ;Slave1.c: 70:         if (c==100){
  2312     029F  3064               	movlw	100
  2313     02A0  1283               	bcf	3,5	;RP0=0, select bank0
  2314     02A1  1303               	bcf	3,6	;RP1=0, select bank0
  2315     02A2  0640               	xorwf	_c,w
  2316     02A3  0441               	iorwf	_c+1,w
  2317     02A4  1D03               	btfss	3,2
  2318     02A5  2AA7               	goto	u103_21
  2319     02A6  2AA8               	goto	u103_20
  2320     02A7                     u103_21:
  2321     02A7  2AC2               	goto	i1l1622
  2322     02A8                     u103_20:
  2323     02A8                     i1l1614:
  2324                           
  2325                           ;Slave1.c: 71:             rpm = a/2;
  2326     02A8  3002               	movlw	2
  2327     02A9  00F0               	movwf	___awdiv@divisor
  2328     02AA  3000               	movlw	0
  2329     02AB  00F1               	movwf	___awdiv@divisor+1
  2330     02AC  087D               	movf	_a,w
  2331     02AD  00F8               	movwf	??_isr
  2332     02AE  01F9               	clrf	??_isr+1
  2333     02AF  0878               	movf	??_isr,w
  2334     02B0  00F2               	movwf	___awdiv@dividend
  2335     02B1  0879               	movf	??_isr+1,w
  2336     02B2  00F3               	movwf	___awdiv@dividend+1
  2337     02B3  120A  118A  221D  120A  118A  	fcall	___awdiv
  2338     02B8  0870               	movf	?___awdiv,w
  2339     02B9  1683               	bsf	3,5	;RP0=1, select bank1
  2340     02BA  1303               	bcf	3,6	;RP1=0, select bank1
  2341     02BB  00E1               	movwf	_rpm^(0+128)
  2342     02BC                     i1l1616:
  2343                           
  2344                           ;Slave1.c: 72:             a= 0;
  2345     02BC  01FD               	clrf	_a
  2346     02BD                     i1l1618:
  2347                           
  2348                           ;Slave1.c: 73:             b= 0;
  2349     02BD  01E2               	clrf	_b^(0+128)
  2350     02BE                     i1l1620:
  2351                           
  2352                           ;Slave1.c: 74:             c=0;
  2353     02BE  1283               	bcf	3,5	;RP0=0, select bank0
  2354     02BF  1303               	bcf	3,6	;RP1=0, select bank0
  2355     02C0  01C0               	clrf	_c
  2356     02C1  01C1               	clrf	_c+1
  2357     02C2                     i1l1622:
  2358                           
  2359                           ;Slave1.c: 76:         INTCONbits.T0IF = 0;
  2360     02C2  110B               	bcf	11,2	;volatile
  2361     02C3                     i1l1624:
  2362                           
  2363                           ;Slave1.c: 77:         TMR0 = 0;
  2364     02C3  0181               	clrf	1	;volatile
  2365     02C4                     i1l129:
  2366     02C4  087C               	movf	??_isr+4,w
  2367     02C5  00FF               	movwf	btemp+1
  2368     02C6  087B               	movf	??_isr+3,w
  2369     02C7  008A               	movwf	10
  2370     02C8  0E7A               	swapf	??_isr+2,w
  2371     02C9  0083               	movwf	3
  2372     02CA  0EFE               	swapf	btemp,f
  2373     02CB  0E7E               	swapf	btemp,w
  2374     02CC  0009               	retfie
  2375     02CD                     __end_of_isr:
  2376                           
  2377                           	psect	intentry
  2378     0004                     __pintentry:	
  2379                           ;incstack = 0
  2380                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2381                           
  2382     0004                     interrupt_function:
  2383     007E                     saved_w	set	btemp
  2384     0004  00FE               	movwf	btemp
  2385     0005  0E03               	swapf	3,w
  2386     0006  00FA               	movwf	??_isr+2
  2387     0007  080A               	movf	10,w
  2388     0008  00FB               	movwf	??_isr+3
  2389     0009  087F               	movf	btemp+1,w
  2390     000A  00FC               	movwf	??_isr+4
  2391     000B  120A  118A  2A84   	ljmp	_isr
  2392                           
  2393                           	psect	text9
  2394     021D                     __ptext9:	
  2395 ;; *************** function ___awdiv *****************
  2396 ;; Defined at:
  2397 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;  divisor         2    0[COMMON] int 
  2400 ;;  dividend        2    2[COMMON] int 
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;  quotient        2    6[COMMON] int 
  2403 ;;  sign            1    5[COMMON] unsigned char 
  2404 ;;  counter         1    4[COMMON] unsigned char 
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  2    0[COMMON] int 
  2407 ;; Registers used:
  2408 ;;		wreg, status,2, status,0, btemp+1
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2414 ;;      Params:         4       0       0       0       0
  2415 ;;      Locals:         4       0       0       0       0
  2416 ;;      Temps:          0       0       0       0       0
  2417 ;;      Totals:         8       0       0       0       0
  2418 ;;Total ram usage:        8 bytes
  2419 ;; Hardware stack levels used: 1
  2420 ;; This function calls:
  2421 ;;		Nothing
  2422 ;; This function is called by:
  2423 ;;		_isr
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427     021D                     ___awdiv:	
  2428                           ;psect for function ___awdiv
  2429                           
  2430     021D                     i1l1562:	
  2431                           ;incstack = 0
  2432                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  2433                           
  2434     021D  01F5               	clrf	___awdiv@sign
  2435     021E                     i1l1564:
  2436     021E  1FF1               	btfss	___awdiv@divisor+1,7
  2437     021F  2A21               	goto	u91_21
  2438     0220  2A22               	goto	u91_20
  2439     0221                     u91_21:
  2440     0221  2A29               	goto	i1l1570
  2441     0222                     u91_20:
  2442     0222                     i1l1566:
  2443     0222  09F0               	comf	___awdiv@divisor,f
  2444     0223  09F1               	comf	___awdiv@divisor+1,f
  2445     0224  0AF0               	incf	___awdiv@divisor,f
  2446     0225  1903               	skipnz
  2447     0226  0AF1               	incf	___awdiv@divisor+1,f
  2448     0227                     i1l1568:
  2449     0227  01F5               	clrf	___awdiv@sign
  2450     0228  0AF5               	incf	___awdiv@sign,f
  2451     0229                     i1l1570:
  2452     0229  1FF3               	btfss	___awdiv@dividend+1,7
  2453     022A  2A2C               	goto	u92_21
  2454     022B  2A2D               	goto	u92_20
  2455     022C                     u92_21:
  2456     022C  2A36               	goto	i1l1576
  2457     022D                     u92_20:
  2458     022D                     i1l1572:
  2459     022D  09F2               	comf	___awdiv@dividend,f
  2460     022E  09F3               	comf	___awdiv@dividend+1,f
  2461     022F  0AF2               	incf	___awdiv@dividend,f
  2462     0230  1903               	skipnz
  2463     0231  0AF3               	incf	___awdiv@dividend+1,f
  2464     0232                     i1l1574:
  2465     0232  3001               	movlw	1
  2466     0233  00FF               	movwf	btemp+1
  2467     0234  087F               	movf	btemp+1,w
  2468     0235  06F5               	xorwf	___awdiv@sign,f
  2469     0236                     i1l1576:
  2470     0236  01F6               	clrf	___awdiv@quotient
  2471     0237  01F7               	clrf	___awdiv@quotient+1
  2472     0238                     i1l1578:
  2473     0238  0870               	movf	___awdiv@divisor,w
  2474     0239  0471               	iorwf	___awdiv@divisor+1,w
  2475     023A  1903               	btfsc	3,2
  2476     023B  2A3D               	goto	u93_21
  2477     023C  2A3E               	goto	u93_20
  2478     023D                     u93_21:
  2479     023D  2A75               	goto	i1l1598
  2480     023E                     u93_20:
  2481     023E                     i1l1580:
  2482     023E  01F4               	clrf	___awdiv@counter
  2483     023F  0AF4               	incf	___awdiv@counter,f
  2484     0240  2A4C               	goto	i1l1586
  2485     0241                     i1l1582:
  2486     0241  3001               	movlw	1
  2487     0242                     u94_25:
  2488     0242  1003               	clrc
  2489     0243  0DF0               	rlf	___awdiv@divisor,f
  2490     0244  0DF1               	rlf	___awdiv@divisor+1,f
  2491     0245  3EFF               	addlw	-1
  2492     0246  1D03               	skipz
  2493     0247  2A42               	goto	u94_25
  2494     0248                     i1l1584:
  2495     0248  3001               	movlw	1
  2496     0249  00FF               	movwf	btemp+1
  2497     024A  087F               	movf	btemp+1,w
  2498     024B  07F4               	addwf	___awdiv@counter,f
  2499     024C                     i1l1586:
  2500     024C  1FF1               	btfss	___awdiv@divisor+1,7
  2501     024D  2A4F               	goto	u95_21
  2502     024E  2A50               	goto	u95_20
  2503     024F                     u95_21:
  2504     024F  2A41               	goto	i1l1582
  2505     0250                     u95_20:
  2506     0250                     i1l1588:
  2507     0250  3001               	movlw	1
  2508     0251                     u96_25:
  2509     0251  1003               	clrc
  2510     0252  0DF6               	rlf	___awdiv@quotient,f
  2511     0253  0DF7               	rlf	___awdiv@quotient+1,f
  2512     0254  3EFF               	addlw	-1
  2513     0255  1D03               	skipz
  2514     0256  2A51               	goto	u96_25
  2515     0257  0871               	movf	___awdiv@divisor+1,w
  2516     0258  0273               	subwf	___awdiv@dividend+1,w
  2517     0259  1D03               	skipz
  2518     025A  2A5D               	goto	u97_25
  2519     025B  0870               	movf	___awdiv@divisor,w
  2520     025C  0272               	subwf	___awdiv@dividend,w
  2521     025D                     u97_25:
  2522     025D  1C03               	skipc
  2523     025E  2A60               	goto	u97_21
  2524     025F  2A61               	goto	u97_20
  2525     0260                     u97_21:
  2526     0260  2A68               	goto	i1l1594
  2527     0261                     u97_20:
  2528     0261                     i1l1590:
  2529     0261  0870               	movf	___awdiv@divisor,w
  2530     0262  02F2               	subwf	___awdiv@dividend,f
  2531     0263  0871               	movf	___awdiv@divisor+1,w
  2532     0264  1C03               	skipc
  2533     0265  03F3               	decf	___awdiv@dividend+1,f
  2534     0266  02F3               	subwf	___awdiv@dividend+1,f
  2535     0267                     i1l1592:
  2536     0267  1476               	bsf	___awdiv@quotient,0
  2537     0268                     i1l1594:
  2538     0268  3001               	movlw	1
  2539     0269                     u98_25:
  2540     0269  1003               	clrc
  2541     026A  0CF1               	rrf	___awdiv@divisor+1,f
  2542     026B  0CF0               	rrf	___awdiv@divisor,f
  2543     026C  3EFF               	addlw	-1
  2544     026D  1D03               	skipz
  2545     026E  2A69               	goto	u98_25
  2546     026F                     i1l1596:
  2547     026F  3001               	movlw	1
  2548     0270  02F4               	subwf	___awdiv@counter,f
  2549     0271  1D03               	btfss	3,2
  2550     0272  2A74               	goto	u99_21
  2551     0273  2A75               	goto	u99_20
  2552     0274                     u99_21:
  2553     0274  2A50               	goto	i1l1588
  2554     0275                     u99_20:
  2555     0275                     i1l1598:
  2556     0275  0875               	movf	___awdiv@sign,w
  2557     0276  1903               	btfsc	3,2
  2558     0277  2A79               	goto	u100_21
  2559     0278  2A7A               	goto	u100_20
  2560     0279                     u100_21:
  2561     0279  2A7F               	goto	i1l1602
  2562     027A                     u100_20:
  2563     027A                     i1l1600:
  2564     027A  09F6               	comf	___awdiv@quotient,f
  2565     027B  09F7               	comf	___awdiv@quotient+1,f
  2566     027C  0AF6               	incf	___awdiv@quotient,f
  2567     027D  1903               	skipnz
  2568     027E  0AF7               	incf	___awdiv@quotient+1,f
  2569     027F                     i1l1602:
  2570     027F  0877               	movf	___awdiv@quotient+1,w
  2571     0280  00F1               	movwf	?___awdiv+1
  2572     0281  0876               	movf	___awdiv@quotient,w
  2573     0282  00F0               	movwf	?___awdiv
  2574     0283                     i1l503:
  2575     0283  0008               	return
  2576     0284                     __end_of___awdiv:
  2577     007E                     btemp	set	126	;btemp
  2578     007E                     wtemp0	set	126
  2579                           
  2580                           	psect	config
  2581                           
  2582                           ;Config register CONFIG1 @ 0x2007
  2583                           ;	Oscillator Selection bits
  2584                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  2585                           ;	Watchdog Timer Enable bit
  2586                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2587                           ;	Power-up Timer Enable bit
  2588                           ;	PWRTE = OFF, PWRT disabled
  2589                           ;	RE3/MCLR pin function select bit
  2590                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2591                           ;	Code Protection bit
  2592                           ;	CP = OFF, Program memory code protection is disabled
  2593                           ;	Data Code Protection bit
  2594                           ;	CPD = OFF, Data memory code protection is disabled
  2595                           ;	Brown Out Reset Selection bits
  2596                           ;	BOREN = OFF, BOR disabled
  2597                           ;	Internal External Switchover bit
  2598                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2599                           ;	Fail-Safe Clock Monitor Enabled bit
  2600                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2601                           ;	Low Voltage Programming Enable bit
  2602                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2603                           ;	In-Circuit Debugger Mode bit
  2604                           ;	DEBUG = 0x1, unprogrammed default
  2605     2007                     	org	8199
  2606     2007  20D5               	dw	8405
  2607                           
  2608                           ;Config register CONFIG2 @ 0x2008
  2609                           ;	Brown-out Reset Selection bit
  2610                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2611                           ;	Flash Program Memory Self Write Enable bits
  2612                           ;	WRT = OFF, Write protection off
  2613     2008                     	org	8200
  2614     2008  3FFF               	dw	16383

Data Sizes:
    Strings     3
    Constant    10
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     28      40
    BANK1            80     60      67
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@s3(BANK1[20]), main@s2(BANK1[20]), main@s(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___awdiv

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_I2C_Slave_Init
    _PWM_init->___fltol

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                72    72      0    2044
                                             25 BANK0      3     3      0
                                              0 BANK1     60    60      0
                           _PWM_init
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1339
                                             12 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             8     0      8     599
                                             10 BANK0      8     0      8
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0     452
                                              8 COMMON     5     5      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_init
     ___fltol
   _setup
     _I2C_Slave_Init
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      79       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1C      28       5       50.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     3C      43       7       83.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      79      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Aug 21 23:43:40 2023

                      _a 007D                        _b 00E2                        _c 0040  
                      _i 00DE                        _s 00DC                        pc 0002  
                     l55 03DB             ___awdiv@sign 0075                       fsr 0004  
                    l141 0166                      l135 0150                      l147 03BF  
                    l176 0352                      l178 0356                      l346 00EF  
                    l179 0357                      l622 0312                      l543 0207  
                    l536 021C                      l632 0393                      l546 021C  
                    _GIE 005F                      _RD3 0043                      _RD4 0044  
                    _RD5 0045                      _RD6 0046                      _RD7 0047  
                    _PR2 0092                      u700 020C                      u620 01B0  
                    u701 020B                      u621 01AF                      u710 0211  
                    u630 01C7                      u711 0210                      u640 01DB  
                    u720 02D7                      u641 01DA                      u721 02D6  
                    u650 01E2                      u810 0372                      u651 01E1  
                    u635 01C2                      u811 0371                      u740 02E9  
                    u820 037C                      u900 00EB                      u741 02E8  
                    u821 037B                      u805 0364                      u901 00EA  
                    u670 01F4                      u671 01F3                      u735 02DB  
                    u680 01FB                      u760 02FA                      u840 038F  
                    u681 01FA                      u665 01E4                      u761 02F9  
                    u841 038E                      u825 0378                      u850 0356  
                    u851 0355                      u755 02EA                      u835 0383  
                    u780 030E                      u860 0039                      u781 030D  
                    u765 02F6                      u861 0038                      u790 0360  
                    u870 008D                      u695 01FE                      u775 0302  
                    u791 035F                      u871 008C                      u880 0098  
                    u881 0097                      u890 00DB                      u891 00DA  
                    u875 0089                      _chn 0042                      _isr 0284  
                    _rpm 00E1                      fsr0 0004                      indf 0000  
           ___fltol@exp1 0029                     l1400 02E1                     l1410 0301  
                   l1402 02E5                     l1500 034A                     l1340 03C3  
                   l1412 0308                     l1404 02E9                     l1420 0360  
                   l1502 034E                     l1350 03D5                     l1342 03D1  
                   l1406 02FA                     l1414 030E                     l1430 037C  
                   l1422 0363                     l1510 0033                     l1360 01B9  
                   l1504 0350                     l1352 03D8                     l1344 03D2  
                   l1440 0394                     l1408 0300                     l1432 0382  
                   l1424 036A                     l1512 0039                     l1370 01DB  
                   l1362 01CC                     l1354 01A5                     l1506 0351  
                   l1346 03D3                     l1450 03A3                     l1442 0398  
                   l1434 0389                     l1426 036E                     l1418 0358  
                   l1522 004A                     l1514 003E                     l1380 01F5  
                   l1364 01CD                     l1356 01B0                     l1348 03D4  
                   l1460 03B2                     l1452 03A6                     l1444 039C  
                   l1428 0372                     l1436 038F                     l1540 0092  
                   l1524 0064                     l1516 0043                     l1508 0030  
                   l1390 0211                     l1366 01D5                     l1470 03B7  
                   l1462 03B3                     l1454 03A7                     l1446 039F  
                   l1550 00D2                     l1542 0098                     l1534 0072  
                   l1526 006C                     l1518 0045                     l1630 00F9  
                   l1376 01E3                     l1368 01D7                     l1480 03BE  
                   l1472 03B8                     l1464 03B4                     l1456 03AD  
                   l1448 03A1                     l1392 02CD                     l1544 009B  
                   l1528 0070                     l1552 00DB                     l1640 0129  
                   l1632 010E                     l1386 01FC                     l1378 01EC  
                   l1490 0342                     l1482 0313                     l1474 03BB  
                   l1466 03B5                     l1458 03B1                     l1394 02D1  
                   l1546 00C9                     l1538 008E                     l1554 00EB  
                   l1650 013B                     l1634 0111                     l1626 00F0  
                   l1388 020C                     l1492 0344                     l1484 0325  
                   l1476 03BC                     l1468 03B6                     l1396 02D7  
                   l1548 00CE                     l1660 0164                     l1652 0143  
                   l1636 011F                     l1628 00F5                     l1494 0346  
                   l1486 033A                     l1478 03BD                     l1398 02DA  
                   l1654 0156                     l1646 012D                     l1638 0123  
                   l1496 0347                     l1488 033E                     l1664 0168  
                   l1656 015A                     l1648 013A                     l1498 0349  
                   l1690 005C                     l1666 017B                     l1658 015E  
                   l1668 018C                     ?_isr 0070                     STR_1 03EC  
                   STR_2 03EC                     STR_3 03EC                     u1040 0129  
                   u1041 0128                     u1050 0150                     u1051 014F  
                   u1060 0156                     u1061 0155                     u1070 015E  
                   u1071 015D                     u1055 014C                     u1087 0119  
                   _PEIE 005E                     _TMR0 0001                     _WPUB 0095  
                   _chn1 0046                     _chn2 0044                     _main 00F0  
                   btemp 007E                     start 000E                    ??_isr 0078  
          ___fltol@sign1 0028                    ?_main 0070          __end_of___awdiv 0284  
        __end_of___fltol 021D                    _ANSEL 0188          ___awdiv@divisor 0070  
        __end_of___lwdiv 0313                    i1l129 02C4                    i1l503 0283  
        __end_of___lwmod 0394          ___awdiv@counter 0074                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _SSPIE 0463                    _TRISE 0089  
                  _SSPIF 0063                    u91_20 0222                    u91_21 0221  
                  u92_20 022D                    u92_21 022C                    u93_20 023E  
                  u93_21 023D                    u94_25 0242                    u95_20 0250  
                  u95_21 024F                    u96_25 0251                    u97_20 0261  
                  u97_21 0260                    u97_25 025D                    u98_25 0269  
                  u99_20 0275                    u99_21 0274          __end_of_dpowers 03EC  
                  _setup 0394                    main@s 00A0                    pclath 000A  
       __end_of_PWM_init 0358                    status 0003                    wtemp0 007E  
        __end_of_sprintf 00F0          __initialization 0011             __end_of_main 01A5  
                 ??_main 0039                   _ADRESH 001E                   _CCPR1L 0015  
                 _CCPR2L 001B         ___awdiv@dividend 0072                   ?_setup 0070  
                 _ANSELH 0189                   u100_20 027A                   u100_21 0279  
                 u101_20 0288                   u101_21 0287                   u102_20 0297  
                 u102_21 0296                   u102_25 0293                   u103_20 02A8  
                 u103_21 02A7                   i1l1600 027A                   i1l1602 027F  
                 i1l1610 0297                   i1l1620 02BE                   i1l1612 029F  
                 i1l1614 02A8                   i1l1622 02C2                   i1l1606 0284  
                 i1l1624 02C3                   i1l1616 02BC                   i1l1608 0288  
                 i1l1570 0229                   i1l1562 021D                   i1l1618 02BD  
                 i1l1580 023E                   i1l1572 022D                   i1l1564 021E  
                 i1l1590 0261                   i1l1582 0241                   i1l1574 0232  
                 i1l1566 0222                   i1l1592 0267                   i1l1584 0248  
                 i1l1576 0236                   i1l1568 0227                   i1l1594 0268  
                 i1l1586 024C                   i1l1578 0238                   i1l1596 026F  
                 i1l1588 0250                   i1l1598 0275                   _OSCCON 008F  
                 _SSPADD 0093                   _TRISC3 043B                   _TRISC4 043C  
                 _SSPCON 0014                   _SSPBUF 0013                ??___awdiv 0074  
              ??___fltol 0024                ??___lwdiv 0024                ??___lwmod 002B  
       ___awdiv@quotient 0076                   main@s2 00B4                   main@s3 00C8  
                 saved_w 007E                ??_sprintf 002F  __end_of__initialization 0029  
             ___fltol@f1 0020           __pcstackCOMMON 0070            __end_of_setup 03C0  
              ?_PWM_init 002A           _OPTION_REGbits 0081                  ??_setup 0021  
  I2C_Slave_Init@address 0020               __pbssBANK0 003C               __pbssBANK1 00DC  
             __pmaintext 00F0               __pintentry 0004       PWM_init@periodo_ms 002E  
             ??_PWM_init 0032             PWM_init@chn1 002A             PWM_init@chn2 002C  
                _SSPCON2 0091                  _SSPSTAT 0094               __stringtab 03DC  
                ___awdiv 021D                  ___fltol 01A5                  ___lwdiv 02CD  
                ___lwmod 0358                  __ptext1 002D                  __ptext2 0358  
                __ptext3 02CD                  __ptext4 0394                  __ptext5 03C0  
                __ptext6 0313                  __ptext7 01A5                  __ptext8 0284  
                __ptext9 021D                  _dpowers 03E2                _T2CONbits 0012  
                _sprintf 002D     end_of_initialization 0029               _periodo_ms 003C  
         _I2C_Slave_Init 03C0                _PORTBbits 0006                _PORTDbits 0008  
              _TRISCbits 0087              _CCP1CONbits 0017              _CCP2CONbits 001D  
 __end_of_I2C_Slave_Init 03DC      start_initialization 0011              __end_of_isr 02CD  
        ?_I2C_Slave_Init 0070              __pbssCOMMON 007D                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00A0              sprintf@flag 0032  
            sprintf@prec 0036         ___lwdiv@dividend 0022                 ?___awdiv 0070  
               ?___fltol 0020                 ?___lwdiv 0020                 ?___lwmod 0027  
              __pstrings 03DC         ___lwdiv@quotient 0024                 ?_sprintf 002C  
      interrupt_function 0004                 _PIR1bits 000C               _ADCON0bits 001F  
            __stringbase 03E1                 _PWM_init 0313       __end_of__stringtab 03E2  
             sprintf@val 0034          ___lwdiv@divisor 0020          ___lwdiv@counter 0026  
       ??_I2C_Slave_Init 0020                 _valservo 00E0               _INTCONbits 000B  
               intlevel1 0000                sprintf@ap 0033                sprintf@sp 0037  
       ___lwmod@dividend 0029                stringcode 03DC               _OSCCONbits 008F  
               sprintf@c 0038                 sprintf@f 002C          ___lwmod@divisor 0027  
        ___lwmod@counter 002B                 stringdir 03DC                 stringtab 03DC  
            _SSPCON2bits 0091  
