

<<<<<<< Updated upstream
Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Aug 24 02:03:01 2023
=======
Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Aug 24 18:31:10 2023
>>>>>>> Stashed changes

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
<<<<<<< Updated upstream
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
=======
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
>>>>>>> Stashed changes
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
<<<<<<< Updated upstream
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35     0000                     
    36                           ; Version 2.40
    37                           ; Generated 17/11/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71     0000                     	;# 
    72     0001                     	;# 
    73     0002                     	;# 
    74     0003                     	;# 
    75     0004                     	;# 
    76     0005                     	;# 
    77     0006                     	;# 
    78     0007                     	;# 
    79     0008                     	;# 
    80     0009                     	;# 
    81     000A                     	;# 
    82     000B                     	;# 
    83     000C                     	;# 
    84     000D                     	;# 
    85     000E                     	;# 
    86     000E                     	;# 
    87     000F                     	;# 
    88     0010                     	;# 
    89     0011                     	;# 
    90     0012                     	;# 
    91     0013                     	;# 
    92     0014                     	;# 
    93     0015                     	;# 
    94     0015                     	;# 
    95     0016                     	;# 
    96     0017                     	;# 
    97     0018                     	;# 
    98     0019                     	;# 
    99     001A                     	;# 
   100     001B                     	;# 
   101     001B                     	;# 
   102     001C                     	;# 
   103     001D                     	;# 
   104     001E                     	;# 
   105     001F                     	;# 
   106     0081                     	;# 
   107     0085                     	;# 
   108     0086                     	;# 
   109     0087                     	;# 
   110     0088                     	;# 
   111     0089                     	;# 
   112     008C                     	;# 
   113     008D                     	;# 
   114     008E                     	;# 
   115     008F                     	;# 
   116     0090                     	;# 
   117     0091                     	;# 
   118     0092                     	;# 
   119     0093                     	;# 
   120     0093                     	;# 
   121     0093                     	;# 
   122     0094                     	;# 
   123     0095                     	;# 
   124     0096                     	;# 
   125     0097                     	;# 
   126     0098                     	;# 
   127     0099                     	;# 
   128     009A                     	;# 
   129     009B                     	;# 
   130     009C                     	;# 
   131     009D                     	;# 
   132     009E                     	;# 
   133     009F                     	;# 
   134     0105                     	;# 
   135     0107                     	;# 
   136     0108                     	;# 
   137     0109                     	;# 
   138     010C                     	;# 
   139     010C                     	;# 
   140     010D                     	;# 
   141     010E                     	;# 
   142     010F                     	;# 
   143     0185                     	;# 
   144     0187                     	;# 
   145     0188                     	;# 
   146     0189                     	;# 
   147     018C                     	;# 
   148     018D                     	;# 
   149     0000                     	;# 
   150     0001                     	;# 
   151     0002                     	;# 
   152     0003                     	;# 
   153     0004                     	;# 
   154     0005                     	;# 
   155     0006                     	;# 
   156     0007                     	;# 
   157     0008                     	;# 
   158     0009                     	;# 
   159     000A                     	;# 
   160     000B                     	;# 
   161     000C                     	;# 
   162     000D                     	;# 
   163     000E                     	;# 
   164     000E                     	;# 
   165     000F                     	;# 
   166     0010                     	;# 
   167     0011                     	;# 
   168     0012                     	;# 
   169     0013                     	;# 
   170     0014                     	;# 
   171     0015                     	;# 
   172     0015                     	;# 
   173     0016                     	;# 
   174     0017                     	;# 
   175     0018                     	;# 
   176     0019                     	;# 
   177     001A                     	;# 
   178     001B                     	;# 
   179     001B                     	;# 
   180     001C                     	;# 
   181     001D                     	;# 
   182     001E                     	;# 
   183     001F                     	;# 
   184     0081                     	;# 
   185     0085                     	;# 
   186     0086                     	;# 
   187     0087                     	;# 
   188     0088                     	;# 
   189     0089                     	;# 
   190     008C                     	;# 
   191     008D                     	;# 
   192     008E                     	;# 
   193     008F                     	;# 
   194     0090                     	;# 
   195     0091                     	;# 
   196     0092                     	;# 
   197     0093                     	;# 
   198     0093                     	;# 
   199     0093                     	;# 
   200     0094                     	;# 
   201     0095                     	;# 
   202     0096                     	;# 
   203     0097                     	;# 
   204     0098                     	;# 
   205     0099                     	;# 
   206     009A                     	;# 
   207     009B                     	;# 
   208     009C                     	;# 
   209     009D                     	;# 
   210     009E                     	;# 
   211     009F                     	;# 
   212     0105                     	;# 
   213     0107                     	;# 
   214     0108                     	;# 
   215     0109                     	;# 
   216     010C                     	;# 
   217     010C                     	;# 
   218     010D                     	;# 
   219     010E                     	;# 
   220     010F                     	;# 
   221     0185                     	;# 
   222     0187                     	;# 
   223     0188                     	;# 
   224     0189                     	;# 
   225     018C                     	;# 
   226     018D                     	;# 
   227     0000                     	;# 
   228     0001                     	;# 
   229     0002                     	;# 
   230     0003                     	;# 
   231     0004                     	;# 
   232     0005                     	;# 
   233     0006                     	;# 
   234     0007                     	;# 
   235     0008                     	;# 
   236     0009                     	;# 
   237     000A                     	;# 
   238     000B                     	;# 
   239     000C                     	;# 
   240     000D                     	;# 
   241     000E                     	;# 
   242     000E                     	;# 
   243     000F                     	;# 
   244     0010                     	;# 
   245     0011                     	;# 
   246     0012                     	;# 
   247     0013                     	;# 
   248     0014                     	;# 
   249     0015                     	;# 
   250     0015                     	;# 
   251     0016                     	;# 
   252     0017                     	;# 
   253     0018                     	;# 
   254     0019                     	;# 
   255     001A                     	;# 
   256     001B                     	;# 
   257     001B                     	;# 
   258     001C                     	;# 
   259     001D                     	;# 
   260     001E                     	;# 
   261     001F                     	;# 
   262     0081                     	;# 
   263     0085                     	;# 
   264     0086                     	;# 
   265     0087                     	;# 
   266     0088                     	;# 
   267     0089                     	;# 
   268     008C                     	;# 
   269     008D                     	;# 
   270     008E                     	;# 
   271     008F                     	;# 
   272     0090                     	;# 
   273     0091                     	;# 
   274     0092                     	;# 
   275     0093                     	;# 
   276     0093                     	;# 
   277     0093                     	;# 
   278     0094                     	;# 
   279     0095                     	;# 
   280     0096                     	;# 
   281     0097                     	;# 
   282     0098                     	;# 
   283     0099                     	;# 
   284     009A                     	;# 
   285     009B                     	;# 
   286     009C                     	;# 
   287     009D                     	;# 
   288     009E                     	;# 
   289     009F                     	;# 
   290     0105                     	;# 
   291     0107                     	;# 
   292     0108                     	;# 
   293     0109                     	;# 
   294     010C                     	;# 
   295     010C                     	;# 
   296     010D                     	;# 
   297     010E                     	;# 
   298     010F                     	;# 
   299     0185                     	;# 
   300     0187                     	;# 
   301     0188                     	;# 
   302     0189                     	;# 
   303     018C                     	;# 
   304     018D                     	;# 
   305     0000                     	;# 
   306     0001                     	;# 
   307     0002                     	;# 
   308     0003                     	;# 
   309     0004                     	;# 
   310     0005                     	;# 
   311     0006                     	;# 
   312     0007                     	;# 
   313     0008                     	;# 
   314     0009                     	;# 
   315     000A                     	;# 
   316     000B                     	;# 
   317     000C                     	;# 
   318     000D                     	;# 
   319     000E                     	;# 
   320     000E                     	;# 
   321     000F                     	;# 
   322     0010                     	;# 
   323     0011                     	;# 
   324     0012                     	;# 
   325     0013                     	;# 
   326     0014                     	;# 
   327     0015                     	;# 
   328     0015                     	;# 
   329     0016                     	;# 
   330     0017                     	;# 
   331     0018                     	;# 
   332     0019                     	;# 
   333     001A                     	;# 
   334     001B                     	;# 
   335     001B                     	;# 
   336     001C                     	;# 
   337     001D                     	;# 
   338     001E                     	;# 
   339     001F                     	;# 
   340     0081                     	;# 
   341     0085                     	;# 
   342     0086                     	;# 
   343     0087                     	;# 
   344     0088                     	;# 
   345     0089                     	;# 
   346     008C                     	;# 
   347     008D                     	;# 
   348     008E                     	;# 
   349     008F                     	;# 
   350     0090                     	;# 
   351     0091                     	;# 
   352     0092                     	;# 
   353     0093                     	;# 
   354     0093                     	;# 
   355     0093                     	;# 
   356     0094                     	;# 
   357     0095                     	;# 
   358     0096                     	;# 
   359     0097                     	;# 
   360     0098                     	;# 
   361     0099                     	;# 
   362     009A                     	;# 
   363     009B                     	;# 
   364     009C                     	;# 
   365     009D                     	;# 
   366     009E                     	;# 
   367     009F                     	;# 
   368     0105                     	;# 
   369     0107                     	;# 
   370     0108                     	;# 
   371     0109                     	;# 
   372     010C                     	;# 
   373     010C                     	;# 
   374     010D                     	;# 
   375     010E                     	;# 
   376     010F                     	;# 
   377     0185                     	;# 
   378     0187                     	;# 
   379     0188                     	;# 
   380     0189                     	;# 
   381     018C                     	;# 
   382     018D                     	;# 
   383     0000                     	;# 
   384     0001                     	;# 
   385     0002                     	;# 
   386     0003                     	;# 
   387     0004                     	;# 
   388     0005                     	;# 
   389     0006                     	;# 
   390     0007                     	;# 
   391     0008                     	;# 
   392     0009                     	;# 
   393     000A                     	;# 
   394     000B                     	;# 
   395     000C                     	;# 
   396     000D                     	;# 
   397     000E                     	;# 
   398     000E                     	;# 
   399     000F                     	;# 
   400     0010                     	;# 
   401     0011                     	;# 
   402     0012                     	;# 
   403     0013                     	;# 
   404     0014                     	;# 
   405     0015                     	;# 
   406     0015                     	;# 
   407     0016                     	;# 
   408     0017                     	;# 
   409     0018                     	;# 
   410     0019                     	;# 
   411     001A                     	;# 
   412     001B                     	;# 
   413     001B                     	;# 
   414     001C                     	;# 
   415     001D                     	;# 
   416     001E                     	;# 
   417     001F                     	;# 
   418     0081                     	;# 
   419     0085                     	;# 
   420     0086                     	;# 
   421     0087                     	;# 
   422     0088                     	;# 
   423     0089                     	;# 
   424     008C                     	;# 
   425     008D                     	;# 
   426     008E                     	;# 
   427     008F                     	;# 
   428     0090                     	;# 
   429     0091                     	;# 
   430     0092                     	;# 
   431     0093                     	;# 
   432     0093                     	;# 
   433     0093                     	;# 
   434     0094                     	;# 
   435     0095                     	;# 
   436     0096                     	;# 
   437     0097                     	;# 
   438     0098                     	;# 
   439     0099                     	;# 
   440     009A                     	;# 
   441     009B                     	;# 
   442     009C                     	;# 
   443     009D                     	;# 
   444     009E                     	;# 
   445     009F                     	;# 
   446     0105                     	;# 
   447     0107                     	;# 
   448     0108                     	;# 
   449     0109                     	;# 
   450     010C                     	;# 
   451     010C                     	;# 
   452     010D                     	;# 
   453     010E                     	;# 
   454     010F                     	;# 
   455     0185                     	;# 
   456     0187                     	;# 
   457     0188                     	;# 
   458     0189                     	;# 
   459     018C                     	;# 
   460     018D                     	;# 
   461                           
   462                           	psect	strings
   463     0003                     __pstrings:
   464     0003                     stringtab:
   465     0003                     __stringtab:
   466                           
   467                           ;	String table - string pointers are 1 byte each
   468     0003  1BFF               	btfsc	btemp+1,7
   469     0004  280D               	ljmp	stringcode
   470     0005  1383               	bcf	3,7
   471     0006  187F               	btfsc	btemp+1,0
   472     0007  1783               	bsf	3,7
   473     0008  0800               	movf	0,w
   474     0009  0A84               	incf	4,f
   475     000A  1903               	skipnz
   476     000B  0AFF               	incf	btemp+1,f
   477     000C  0008               	return
   478     000D                     stringcode:
   479     000D                     stringdir:
   480     000D  3000               	movlw	high stringdir
   481     000E  008A               	movwf	10
   482     000F  0804               	movf	4,w
   483     0010  0A84               	incf	4,f
   484     0011  0782               	addwf	2,f
   485     0012                     __stringbase:
   486     0012  3400               	retlw	0
   487     0013                     __end_of__stringtab:
   488     0013                     _message:
   489     0013  3432               	retlw	50
   490     0014  342E               	retlw	46
   491     0015  3445               	retlw	69
   492     0016  346E               	retlw	110
   493     0017  3476               	retlw	118
   494     0018  3469               	retlw	105
   495     0019  3461               	retlw	97
   496     001A  3472               	retlw	114
   497     001B  3420               	retlw	32
   498     001C  3441               	retlw	65
   499     001D  3473               	retlw	115
   500     001E  3463               	retlw	99
   501     001F  3469               	retlw	105
   502     0020  3469               	retlw	105
   503     0021  3400               	retlw	0
   504     0022                     __end_of_message:
   505     0022                     _dpowers:
   506     0022  3401               	retlw	1
   507     0023  3400               	retlw	0
   508     0024  340A               	retlw	10
   509     0025  3400               	retlw	0
   510     0026  3464               	retlw	100
   511     0027  3400               	retlw	0
   512     0028  34E8               	retlw	232
   513     0029  3403               	retlw	3
   514     002A  3410               	retlw	16
   515     002B  3427               	retlw	39
   516     002C                     __end_of_dpowers:
   517     0007                     _PORTCbits	set	7
   518     0008                     _PORTD	set	8
   519     0006                     _PORTB	set	6
   520     0005                     _PORTA	set	5
   521     0019                     _TXREG	set	25
   522     001A                     _RCREG	set	26
   523     0018                     _RCSTA	set	24
   524     0008                     _PORTDbits	set	8
   525     0013                     _SSPBUF	set	19
   526     0014                     _SSPCON	set	20
   527     00C4                     _CREN	set	196
   528     00C1                     _OERR	set	193
   529     0065                     _RCIF	set	101
   530     0043                     _RD3	set	67
   531     0047                     _RD7	set	71
   532     0046                     _RD6	set	70
   533     0045                     _RD5	set	69
   534     0044                     _RD4	set	68
   535     0063                     _SSPIF	set	99
   536     005E                     _PEIE	set	94
   537     005F                     _GIE	set	95
   538     008F                     _OSCCONbits	set	143
   539     0088                     _TRISD	set	136
   540     0086                     _TRISB	set	134
   541     0085                     _TRISA	set	133
   542     0098                     _TXSTA	set	152
   543     0099                     _SPBRG	set	153
   544     0091                     _SSPCON2bits	set	145
   545     0087                     _TRISCbits	set	135
   546     0094                     _SSPSTAT	set	148
   547     0093                     _SSPADD	set	147
   548     0091                     _SSPCON2	set	145
   549     043F                     _TRISC7	set	1087
   550     043E                     _TRISC6	set	1086
   551     043A                     _TRISC2	set	1082
   552     0439                     _TRISC1	set	1081
   553     04C1                     _TRMT	set	1217
   554     0463                     _SSPIE	set	1123
   555     043C                     _TRISC4	set	1084
   556     043B                     _TRISC3	set	1083
   557     0189                     _ANSELH	set	393
   558     0188                     _ANSEL	set	392
   559     002C                     STR_4:
   560     002C  3468               	retlw	104	;'h'
   561     002D  3465               	retlw	101	;'e'
   562     002E  3479               	retlw	121	;'y'
   563     002F  3400               	retlw	0
   564     0030                     STR_1:
   565     0030  3425               	retlw	37	;'%'
   566     0031  3475               	retlw	117	;'u'
   567     0032  3400               	retlw	0
   568     0030                     
   569                           	psect	cinit
   570     07EB                     start_initialization:	
   571                           ; #config settings
   572                           
   573     07EB                     __initialization:
   574                           
   575                           ; Clear objects allocated to BANK0
   576     07EB  1383               	bcf	3,7	;select IRP bank0
   577     07EC  3020               	movlw	low __pbssBANK0
   578     07ED  0084               	movwf	4
   579     07EE  3053               	movlw	low (__pbssBANK0+51)
   580     07EF  120A  118A  21B9  120A  118A  	fcall	clear_ram0
   581                           
   582                           ; Clear objects allocated to BANK1
   583     07F4  30A0               	movlw	low __pbssBANK1
   584     07F5  0084               	movwf	4
   585     07F6  30B4               	movlw	low (__pbssBANK1+20)
   586     07F7  120A  118A  21B9  120A  118A  	fcall	clear_ram0
   587     07FC                     end_of_initialization:	
   588                           ;End of C runtime variable initialization code
   589                           
   590     07FC                     __end_of__initialization:
   591     07FC  0183               	clrf	3
   592     07FD  120A  118A  2DDB   	ljmp	_main	;jump to C main() function
   593                           
   594                           	psect	bssBANK0
   595     0020                     __pbssBANK0:
   596     0020                     _Zval2:
   597     0020                     	ds	1
   598     0021                     _Zval:
   599     0021                     	ds	1
   600     0022                     _Yval2:
   601     0022                     	ds	1
   602     0023                     _Yval:
   603     0023                     	ds	1
   604     0024                     _Xval2:
   605     0024                     	ds	1
   606     0025                     _Xval:
   607     0025                     	ds	1
   608     0026                     _x2:
   609     0026                     	ds	1
   610     0027                     _z:
   611     0027                     	ds	1
   612     0028                     _y:
   613     0028                     	ds	1
   614     0029                     _x:
   615     0029                     	ds	1
   616     002A                     _i:
   617     002A                     	ds	1
   618     002B                     _s2:
   619     002B                     	ds	20
   620     003F                     _s:
   621     003F                     	ds	20
   622                           
   623                           	psect	bssBANK1
   624     00A0                     __pbssBANK1:
   625     00A0                     _s3:
   626     00A0                     	ds	20
   627                           
   628                           	psect	clrtext
   629     01B9                     clear_ram0:	
   630                           ;	Called with FSR containing the base address, and
   631                           ;	W with the last address+1
   632                           
   633     01B9  0064               	clrwdt	;clear the watchdog before getting into this loop
   634     01BA                     clrloop0:
   635     01BA  0180               	clrf	0	;clear RAM location pointed to by FSR
   636     01BB  0A84               	incf	4,f	;increment pointer
   637     01BC  0604               	xorwf	4,w	;XOR with final address
   638     01BD  1903               	btfsc	3,2	;have we reached the end yet?
   639     01BE  3400               	retlw	0	;all done for this memory range, return
   640     01BF  0604               	xorwf	4,w	;XOR again to restore value
   641     01C0  29BA               	goto	clrloop0	;do the next byte
   642                           
   643                           	psect	cstackCOMMON
   644     0070                     __pcstackCOMMON:
   645     0070                     ?_setup:
   646     0070                     ??_setup:	
   647                           ; 1 bytes @ 0x0
   648                           
   649     0070                     ?_I2C_Master_Wait:	
   650                           ; 1 bytes @ 0x0
   651                           
   652     0070                     ??_I2C_Master_Wait:	
   653                           ; 1 bytes @ 0x0
   654                           
   655     0070                     ?_I2C_Master_Start:	
   656                           ; 1 bytes @ 0x0
   657                           
   658     0070                     ??_I2C_Master_Start:	
   659                           ; 1 bytes @ 0x0
   660                           
   661     0070                     ?_I2C_Master_RepeatedStart:	
   662                           ; 1 bytes @ 0x0
   663                           
   664     0070                     ??_I2C_Master_RepeatedStart:	
   665                           ; 1 bytes @ 0x0
   666                           
   667     0070                     ?_I2C_Master_Stop:	
   668                           ; 1 bytes @ 0x0
   669                           
   670     0070                     ??_I2C_Master_Stop:	
   671                           ; 1 bytes @ 0x0
   672                           
   673     0070                     ?_I2C_Master_Write:	
   674                           ; 1 bytes @ 0x0
   675                           
   676     0070                     ?_Lcd_Port:	
   677                           ; 1 bytes @ 0x0
   678                           
   679     0070                     ??_Lcd_Port:	
   680                           ; 1 bytes @ 0x0
   681                           
   682     0070                     ?_Lcd_Cmd:	
   683                           ; 1 bytes @ 0x0
   684                           
   685     0070                     ?_Lcd_Clear:	
   686                           ; 1 bytes @ 0x0
   687                           
   688     0070                     ?_Lcd_Init:	
   689                           ; 1 bytes @ 0x0
   690                           
   691     0070                     ?_Lcd_Write_Char:	
   692                           ; 1 bytes @ 0x0
   693                           
   694     0070                     ?_main:	
   695                           ; 1 bytes @ 0x0
   696                           
   697     0070                     ?_I2C_Master_Read:	
   698                           ; 1 bytes @ 0x0
   699                           
   700     0070                     ?___awdiv:	
   701                           ; 2 bytes @ 0x0
   702                           
   703     0070                     ?___lwdiv:	
   704                           ; 2 bytes @ 0x0
   705                           
   706     0070                     ?___lldiv:	
   707                           ; 2 bytes @ 0x0
   708                           
   709     0070                     Lcd_Port@a:	
   710                           ; 4 bytes @ 0x0
   711                           
   712     0070                     I2C_Master_Write@d:	
   713                           ; 1 bytes @ 0x0
   714                           
   715     0070                     I2C_Master_Read@a:	
   716                           ; 2 bytes @ 0x0
   717                           
   718     0070                     ___awdiv@divisor:	
   719                           ; 2 bytes @ 0x0
   720                           
   721     0070                     ___lwdiv@divisor:	
   722                           ; 2 bytes @ 0x0
   723                           
   724     0070                     ___lldiv@divisor:	
   725                           ; 2 bytes @ 0x0
   726                           
   727                           
   728                           ; 4 bytes @ 0x0
   729     0070                     	ds	1
   730     0071                     ??_Lcd_Cmd:
   731     0071                     ??_Lcd_Write_Char:	
   732                           ; 1 bytes @ 0x1
   733                           
   734                           
   735                           ; 1 bytes @ 0x1
   736     0071                     	ds	1
   737     0072                     ??_I2C_Master_Write:
   738     0072                     ??_I2C_Master_Read:	
   739                           ; 1 bytes @ 0x2
   740                           
   741     0072                     Lcd_Write_Char@temp:	
   742                           ; 1 bytes @ 0x2
   743                           
   744     0072                     ___awdiv@dividend:	
   745                           ; 1 bytes @ 0x2
   746                           
   747     0072                     ___lwdiv@dividend:	
   748                           ; 2 bytes @ 0x2
   749                           
   750                           
   751                           ; 2 bytes @ 0x2
   752     0072                     	ds	1
   753     0073                     Lcd_Cmd@a:
   754     0073                     Lcd_Write_Char@y:	
   755                           ; 1 bytes @ 0x3
   756                           
   757                           
   758                           ; 1 bytes @ 0x3
   759     0073                     	ds	1
   760     0074                     ??_Lcd_Clear:
   761     0074                     ?_Lcd_Set_Cursor:	
   762                           ; 1 bytes @ 0x4
   763                           
   764     0074                     ??_Lcd_Init:	
   765                           ; 1 bytes @ 0x4
   766                           
   767     0074                     ??___awdiv:	
   768                           ; 1 bytes @ 0x4
   769                           
   770     0074                     ??___lwdiv:	
   771                           ; 1 bytes @ 0x4
   772                           
   773     0074                     Lcd_Set_Cursor@b:	
   774                           ; 1 bytes @ 0x4
   775                           
   776     0074                     Lcd_Write_Char@a:	
   777                           ; 1 bytes @ 0x4
   778                           
   779     0074                     I2C_Master_Read@temp:	
   780                           ; 1 bytes @ 0x4
   781                           
   782     0074                     ___lldiv@dividend:	
   783                           ; 2 bytes @ 0x4
   784                           
   785                           
   786                           ; 4 bytes @ 0x4
   787     0074                     	ds	1
   788     0075                     ??_Lcd_Set_Cursor:
   789     0075                     ?_Lcd_Write_String:	
   790                           ; 1 bytes @ 0x5
   791                           
   792     0075                     ___awdiv@counter:	
   793                           ; 1 bytes @ 0x5
   794                           
   795     0075                     Lcd_Write_String@a:	
   796                           ; 1 bytes @ 0x5
   797                           
   798     0075                     ___lwdiv@quotient:	
   799                           ; 2 bytes @ 0x5
   800                           
   801                           
   802                           ; 2 bytes @ 0x5
   803     0075                     	ds	1
   804     0076                     Lcd_Set_Cursor@a:
   805     0076                     ___awdiv@sign:	
   806                           ; 1 bytes @ 0x6
   807                           
   808                           
   809                           ; 1 bytes @ 0x6
   810     0076                     	ds	1
   811     0077                     ??_Lcd_Write_String:
   812     0077                     Lcd_Set_Cursor@z:	
   813                           ; 1 bytes @ 0x7
   814                           
   815     0077                     ___lwdiv@counter:	
   816                           ; 1 bytes @ 0x7
   817                           
   818     0077                     ___awdiv@quotient:	
   819                           ; 1 bytes @ 0x7
   820                           
   821                           
   822                           ; 2 bytes @ 0x7
   823     0077                     	ds	1
   824     0078                     ??___lldiv:
   825     0078                     ?___lwmod:	
   826                           ; 1 bytes @ 0x8
   827                           
   828     0078                     Lcd_Set_Cursor@y:	
   829                           ; 2 bytes @ 0x8
   830                           
   831     0078                     ___lwmod@divisor:	
   832                           ; 1 bytes @ 0x8
   833                           
   834                           
   835                           ; 2 bytes @ 0x8
   836     0078                     	ds	1
   837     0079                     Lcd_Set_Cursor@temp:
   838     0079                     ___lldiv@quotient:	
   839                           ; 1 bytes @ 0x9
   840                           
   841                           
   842                           ; 4 bytes @ 0x9
   843     0079                     	ds	1
   844     007A                     Lcd_Write_String@i:
   845     007A                     ___lwmod@dividend:	
   846                           ; 2 bytes @ 0xA
   847                           
   848                           
   849                           ; 2 bytes @ 0xA
   850     007A                     	ds	2
   851     007C                     ??___lwmod:
   852                           
   853                           ; 1 bytes @ 0xC
   854     007C                     	ds	1
   855     007D                     ___lldiv@counter:
   856     007D                     ___lwmod@counter:	
   857                           ; 1 bytes @ 0xD
   858                           
   859                           
   860                           ; 1 bytes @ 0xD
   861     007D                     	ds	1
   862                           
   863                           	psect	cstackBANK0
   864     0053                     __pcstackBANK0:
   865     0053                     ?_I2C_Init:
   866     0053                     ?_sprintf:	
   867                           ; 1 bytes @ 0x0
   868                           
   869     0053                     sprintf@f:	
   870                           ; 2 bytes @ 0x0
   871                           
   872     0053                     I2C_Init@i2c_clk_freq:	
   873                           ; 1 bytes @ 0x0
   874                           
   875                           
   876                           ; 4 bytes @ 0x0
   877     0053                     	ds	3
   878     0056                     ??_sprintf:
   879                           
   880                           ; 1 bytes @ 0x3
   881     0056                     	ds	1
   882     0057                     ??_I2C_Init:
   883                           
   884                           ; 1 bytes @ 0x4
   885     0057                     	ds	2
   886     0059                     sprintf@flag:
   887                           
   888                           ; 1 bytes @ 0x6
   889     0059                     	ds	1
   890     005A                     sprintf@ap:
   891                           
   892                           ; 1 bytes @ 0x7
   893     005A                     	ds	1
   894     005B                     sprintf@val:
   895                           
   896                           ; 2 bytes @ 0x8
   897     005B                     	ds	2
   898     005D                     sprintf@prec:
   899                           
   900                           ; 1 bytes @ 0xA
   901     005D                     	ds	1
   902     005E                     sprintf@sp:
   903                           
   904                           ; 1 bytes @ 0xB
   905     005E                     	ds	1
   906     005F                     sprintf@c:
   907                           
   908                           ; 1 bytes @ 0xC
   909     005F                     	ds	1
   910     0060                     ??_main:
   911                           
   912                           ; 1 bytes @ 0xD
   913     0060                     	ds	3
   914                           
   915                           	psect	maintext
   916     05DB                     __pmaintext:	
   917 ;;
   918 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   919 ;;
   920 ;; *************** function _main *****************
   921 ;; Defined at:
   922 ;;		line 75 in file "pruebaADXL345.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;		None
   925 ;; Auto vars:     Size  Location     Type
   926 ;;		None
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : B00/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   936 ;;      Params:         0       0       0       0       0
   937 ;;      Locals:         0       0       0       0       0
   938 ;;      Temps:          0       3       0       0       0
   939 ;;      Totals:         0       3       0       0       0
   940 ;;Total ram usage:        3 bytes
   941 ;; Hardware stack levels required when called: 3
   942 ;; This function calls:
   943 ;;		_I2C_Init
   944 ;;		_I2C_Master_Read
   945 ;;		_I2C_Master_RepeatedStart
   946 ;;		_I2C_Master_Start
   947 ;;		_I2C_Master_Stop
   948 ;;		_I2C_Master_Write
   949 ;;		_Lcd_Clear
   950 ;;		_Lcd_Init
   951 ;;		_Lcd_Set_Cursor
   952 ;;		_Lcd_Write_String
   953 ;;		___awdiv
   954 ;;		_setup
   955 ;;		_sprintf
   956 ;; This function is called by:
   957 ;;		Startup code after reset
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961     05DB                     _main:	
   962                           ;psect for function _main
   963                           
   964     05DB                     l1648:	
   965                           ;incstack = 0
   966                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   967                           
   968                           
   969                           ;pruebaADXL345.c: 76:     setup();
   970     05DB  120A  118A  221A  120A  118A  	fcall	_setup
   971                           
   972                           ;pruebaADXL345.c: 77:     Lcd_Init();
   973     05E0  120A  118A  23F0  120A  118A  	fcall	_Lcd_Init
   974                           
   975                           ;pruebaADXL345.c: 78:     I2C_Init(100000);
   976     05E5  3000               	movlw	0
   977     05E6  1283               	bcf	3,5	;RP0=0, select bank0
   978     05E7  1303               	bcf	3,6	;RP1=0, select bank0
   979     05E8  00D6               	movwf	I2C_Init@i2c_clk_freq+3
   980     05E9  3001               	movlw	1
   981     05EA  00D5               	movwf	I2C_Init@i2c_clk_freq+2
   982     05EB  3086               	movlw	134
   983     05EC  00D4               	movwf	I2C_Init@i2c_clk_freq+1
   984     05ED  30A0               	movlw	160
   985     05EE  00D3               	movwf	I2C_Init@i2c_clk_freq
   986     05EF  120A  118A  2284  120A  118A  	fcall	_I2C_Init
   987                           
   988                           ;pruebaADXL345.c: 79:      I2C_Master_Start();
   989     05F4  120A  118A  21CA  120A  118A  	fcall	_I2C_Master_Start
   990                           
   991                           ;pruebaADXL345.c: 80:         I2C_Master_Write(56);
   992     05F9  3038               	movlw	56
   993     05FA  00F0               	movwf	I2C_Master_Write@d
   994     05FB  3000               	movlw	0
   995     05FC  00F1               	movwf	I2C_Master_Write@d+1
   996     05FD  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
   997                           
   998                           ;pruebaADXL345.c: 81:         I2C_Master_Write(0x9f);
   999     0602  309F               	movlw	159
  1000     0603  00F0               	movwf	I2C_Master_Write@d
  1001     0604  3000               	movlw	0
  1002     0605  00F1               	movwf	I2C_Master_Write@d+1
  1003     0606  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1004                           
  1005                           ;pruebaADXL345.c: 82:         I2C_Master_RepeatedStart();
  1006     060B  120A  118A  21C1  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1007                           
  1008                           ;pruebaADXL345.c: 83:         I2C_Master_Write(49);
  1009     0610  3031               	movlw	49
  1010     0611  00F0               	movwf	I2C_Master_Write@d
  1011     0612  3000               	movlw	0
  1012     0613  00F1               	movwf	I2C_Master_Write@d+1
  1013     0614  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1014                           
  1015                           ;pruebaADXL345.c: 84:         I2C_Master_Write(0x09);
  1016     0619  3009               	movlw	9
  1017     061A  00F0               	movwf	I2C_Master_Write@d
  1018     061B  3000               	movlw	0
  1019     061C  00F1               	movwf	I2C_Master_Write@d+1
  1020     061D  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1021                           
  1022                           ;pruebaADXL345.c: 85:         I2C_Master_RepeatedStart();
  1023     0622  120A  118A  21C1  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1024                           
  1025                           ;pruebaADXL345.c: 86:         I2C_Master_Write(44);
  1026     0627  302C               	movlw	44
  1027     0628  00F0               	movwf	I2C_Master_Write@d
  1028     0629  3000               	movlw	0
  1029     062A  00F1               	movwf	I2C_Master_Write@d+1
  1030     062B  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1031                           
  1032                           ;pruebaADXL345.c: 87:         I2C_Master_Write(0x0d);
  1033     0630  300D               	movlw	13
  1034     0631  00F0               	movwf	I2C_Master_Write@d
  1035     0632  3000               	movlw	0
  1036     0633  00F1               	movwf	I2C_Master_Write@d+1
  1037     0634  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1038                           
  1039                           ;pruebaADXL345.c: 88:         I2C_Master_RepeatedStart();
  1040     0639  120A  118A  21C1  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1041                           
  1042                           ;pruebaADXL345.c: 89:         I2C_Master_Write(45);
  1043     063E  302D               	movlw	45
  1044     063F  00F0               	movwf	I2C_Master_Write@d
  1045     0640  3000               	movlw	0
  1046     0641  00F1               	movwf	I2C_Master_Write@d+1
  1047     0642  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1048                           
  1049                           ;pruebaADXL345.c: 90:         I2C_Master_Write(0x08);
  1050     0647  3008               	movlw	8
  1051     0648  00F0               	movwf	I2C_Master_Write@d
  1052     0649  3000               	movlw	0
  1053     064A  00F1               	movwf	I2C_Master_Write@d+1
  1054     064B  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1055                           
  1056                           ;pruebaADXL345.c: 92:         I2C_Master_Stop();
  1057     0650  120A  118A  21D3  120A  118A  	fcall	_I2C_Master_Stop
  1058     0655                     l257:	
  1059                           ;pruebaADXL345.c: 94:     while(1){
  1060                           
  1061                           
  1062                           ;pruebaADXL345.c: 98:         I2C_Master_Start();
  1063     0655  120A  118A  21CA  120A  118A  	fcall	_I2C_Master_Start
  1064                           
  1065                           ;pruebaADXL345.c: 99:          I2C_Master_Write(0xA6);
  1066     065A  30A6               	movlw	166
  1067     065B  00F0               	movwf	I2C_Master_Write@d
  1068     065C  3000               	movlw	0
  1069     065D  00F1               	movwf	I2C_Master_Write@d+1
  1070     065E  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1071                           
  1072                           ;pruebaADXL345.c: 100:          I2C_Master_Write(50);
  1073     0663  3032               	movlw	50
  1074     0664  00F0               	movwf	I2C_Master_Write@d
  1075     0665  3000               	movlw	0
  1076     0666  00F1               	movwf	I2C_Master_Write@d+1
  1077     0667  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1078                           
  1079                           ;pruebaADXL345.c: 102:         I2C_Master_RepeatedStart();
  1080     066C  120A  118A  21C1  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1081                           
  1082                           ;pruebaADXL345.c: 103:         I2C_Master_Write(0xA7);
  1083     0671  30A7               	movlw	167
  1084     0672  00F0               	movwf	I2C_Master_Write@d
  1085     0673  3000               	movlw	0
  1086     0674  00F1               	movwf	I2C_Master_Write@d+1
  1087     0675  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1088                           
  1089                           ;pruebaADXL345.c: 104:         I2C_Master_Write(0x32);
  1090     067A  3032               	movlw	50
  1091     067B  00F0               	movwf	I2C_Master_Write@d
  1092     067C  3000               	movlw	0
  1093     067D  00F1               	movwf	I2C_Master_Write@d+1
  1094     067E  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1095                           
  1096                           ;pruebaADXL345.c: 105:         Xval = I2C_Master_Read(0);
  1097     0683  3000               	movlw	0
  1098     0684  00F0               	movwf	I2C_Master_Read@a
  1099     0685  00F1               	movwf	I2C_Master_Read@a+1
  1100     0686  120A  118A  2256  120A  118A  	fcall	_I2C_Master_Read
  1101     068B  0870               	movf	?_I2C_Master_Read,w
  1102     068C  1283               	bcf	3,5	;RP0=0, select bank0
  1103     068D  1303               	bcf	3,6	;RP1=0, select bank0
  1104     068E  00A5               	movwf	_Xval
  1105                           
  1106                           ;pruebaADXL345.c: 106:         I2C_Master_RepeatedStart();
  1107     068F  120A  118A  21C1  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1108                           
  1109                           ;pruebaADXL345.c: 107:         I2C_Master_Write(0xA7);
  1110     0694  30A7               	movlw	167
  1111     0695  00F0               	movwf	I2C_Master_Write@d
  1112     0696  3000               	movlw	0
  1113     0697  00F1               	movwf	I2C_Master_Write@d+1
  1114     0698  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1115                           
  1116                           ;pruebaADXL345.c: 108:         I2C_Master_Write(0x33);
  1117     069D  3033               	movlw	51
  1118     069E  00F0               	movwf	I2C_Master_Write@d
  1119     069F  3000               	movlw	0
  1120     06A0  00F1               	movwf	I2C_Master_Write@d+1
  1121     06A1  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1122                           
  1123                           ;pruebaADXL345.c: 109:         Xval2 = I2C_Master_Read(0);
  1124     06A6  3000               	movlw	0
  1125     06A7  00F0               	movwf	I2C_Master_Read@a
  1126     06A8  00F1               	movwf	I2C_Master_Read@a+1
  1127     06A9  120A  118A  2256  120A  118A  	fcall	_I2C_Master_Read
  1128     06AE  0870               	movf	?_I2C_Master_Read,w
  1129     06AF  1283               	bcf	3,5	;RP0=0, select bank0
  1130     06B0  1303               	bcf	3,6	;RP1=0, select bank0
  1131     06B1  00A4               	movwf	_Xval2
  1132                           
  1133                           ;pruebaADXL345.c: 110:         I2C_Master_RepeatedStart();
  1134     06B2  120A  118A  21C1  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1135                           
  1136                           ;pruebaADXL345.c: 111:         I2C_Master_Write(0xA7);
  1137     06B7  30A7               	movlw	167
  1138     06B8  00F0               	movwf	I2C_Master_Write@d
  1139     06B9  3000               	movlw	0
  1140     06BA  00F1               	movwf	I2C_Master_Write@d+1
  1141     06BB  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1142                           
  1143                           ;pruebaADXL345.c: 112:         I2C_Master_Write(0x34);
  1144     06C0  3034               	movlw	52
  1145     06C1  00F0               	movwf	I2C_Master_Write@d
  1146     06C2  3000               	movlw	0
  1147     06C3  00F1               	movwf	I2C_Master_Write@d+1
  1148     06C4  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1149                           
  1150                           ;pruebaADXL345.c: 113:         Yval = I2C_Master_Read(0);
  1151     06C9  3000               	movlw	0
  1152     06CA  00F0               	movwf	I2C_Master_Read@a
  1153     06CB  00F1               	movwf	I2C_Master_Read@a+1
  1154     06CC  120A  118A  2256  120A  118A  	fcall	_I2C_Master_Read
  1155     06D1  0870               	movf	?_I2C_Master_Read,w
  1156     06D2  1283               	bcf	3,5	;RP0=0, select bank0
  1157     06D3  1303               	bcf	3,6	;RP1=0, select bank0
  1158     06D4  00A3               	movwf	_Yval
  1159                           
  1160                           ;pruebaADXL345.c: 114:         I2C_Master_RepeatedStart();
  1161     06D5  120A  118A  21C1  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1162                           
  1163                           ;pruebaADXL345.c: 115:         I2C_Master_Write(0xA7);
  1164     06DA  30A7               	movlw	167
  1165     06DB  00F0               	movwf	I2C_Master_Write@d
  1166     06DC  3000               	movlw	0
  1167     06DD  00F1               	movwf	I2C_Master_Write@d+1
  1168     06DE  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1169                           
  1170                           ;pruebaADXL345.c: 116:         I2C_Master_Write(0x35);
  1171     06E3  3035               	movlw	53
  1172     06E4  00F0               	movwf	I2C_Master_Write@d
  1173     06E5  3000               	movlw	0
  1174     06E6  00F1               	movwf	I2C_Master_Write@d+1
  1175     06E7  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1176                           
  1177                           ;pruebaADXL345.c: 117:         Yval2 = I2C_Master_Read(0);
  1178     06EC  3000               	movlw	0
  1179     06ED  00F0               	movwf	I2C_Master_Read@a
  1180     06EE  00F1               	movwf	I2C_Master_Read@a+1
  1181     06EF  120A  118A  2256  120A  118A  	fcall	_I2C_Master_Read
  1182     06F4  0870               	movf	?_I2C_Master_Read,w
  1183     06F5  1283               	bcf	3,5	;RP0=0, select bank0
  1184     06F6  1303               	bcf	3,6	;RP1=0, select bank0
  1185     06F7  00A2               	movwf	_Yval2
  1186                           
  1187                           ;pruebaADXL345.c: 118:         I2C_Master_RepeatedStart();
  1188     06F8  120A  118A  21C1  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1189                           
  1190                           ;pruebaADXL345.c: 119:         I2C_Master_Write(0xA7);
  1191     06FD  30A7               	movlw	167
  1192     06FE  00F0               	movwf	I2C_Master_Write@d
  1193     06FF  3000               	movlw	0
  1194     0700  00F1               	movwf	I2C_Master_Write@d+1
  1195     0701  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1196                           
  1197                           ;pruebaADXL345.c: 120:         I2C_Master_Write(0x36);
  1198     0706  3036               	movlw	54
  1199     0707  00F0               	movwf	I2C_Master_Write@d
  1200     0708  3000               	movlw	0
  1201     0709  00F1               	movwf	I2C_Master_Write@d+1
  1202     070A  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1203                           
  1204                           ;pruebaADXL345.c: 121:         Zval = I2C_Master_Read(0);
  1205     070F  3000               	movlw	0
  1206     0710  00F0               	movwf	I2C_Master_Read@a
  1207     0711  00F1               	movwf	I2C_Master_Read@a+1
  1208     0712  120A  118A  2256  120A  118A  	fcall	_I2C_Master_Read
  1209     0717  0870               	movf	?_I2C_Master_Read,w
  1210     0718  1283               	bcf	3,5	;RP0=0, select bank0
  1211     0719  1303               	bcf	3,6	;RP1=0, select bank0
  1212     071A  00A1               	movwf	_Zval
  1213                           
  1214                           ;pruebaADXL345.c: 122:         I2C_Master_RepeatedStart();
  1215     071B  120A  118A  21C1  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1216                           
  1217                           ;pruebaADXL345.c: 123:         I2C_Master_Write(0xA7);
  1218     0720  30A7               	movlw	167
  1219     0721  00F0               	movwf	I2C_Master_Write@d
  1220     0722  3000               	movlw	0
  1221     0723  00F1               	movwf	I2C_Master_Write@d+1
  1222     0724  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1223                           
  1224                           ;pruebaADXL345.c: 124:         I2C_Master_Write(0x37);
  1225     0729  3037               	movlw	55
  1226     072A  00F0               	movwf	I2C_Master_Write@d
  1227     072B  3000               	movlw	0
  1228     072C  00F1               	movwf	I2C_Master_Write@d+1
  1229     072D  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1230                           
  1231                           ;pruebaADXL345.c: 125:         Zval2 = I2C_Master_Read(0);
  1232     0732  3000               	movlw	0
  1233     0733  00F0               	movwf	I2C_Master_Read@a
  1234     0734  00F1               	movwf	I2C_Master_Read@a+1
  1235     0735  120A  118A  2256  120A  118A  	fcall	_I2C_Master_Read
  1236     073A  0870               	movf	?_I2C_Master_Read,w
  1237     073B  1283               	bcf	3,5	;RP0=0, select bank0
  1238     073C  1303               	bcf	3,6	;RP1=0, select bank0
  1239     073D  00A0               	movwf	_Zval2
  1240                           
  1241                           ;pruebaADXL345.c: 126:         I2C_Master_Stop();
  1242     073E  120A  118A  21D3  120A  118A  	fcall	_I2C_Master_Stop
  1243     0743                     l1650:
  1244                           
  1245                           ;pruebaADXL345.c: 128:         _delay((unsigned long)((300)*(8000000/4000.0)));
  1246     0743  3004               	movlw	4
  1247     0744  1283               	bcf	3,5	;RP0=0, select bank0
  1248     0745  1303               	bcf	3,6	;RP1=0, select bank0
  1249     0746  00E2               	movwf	??_main+2
  1250     0747  300C               	movlw	12
  1251     0748  00E1               	movwf	??_main+1
  1252     0749  3033               	movlw	51
  1253     074A  00E0               	movwf	??_main
  1254     074B                     u1197:
  1255     074B  0BE0               	decfsz	??_main,f
  1256     074C  2F4B               	goto	u1197
  1257     074D  0BE1               	decfsz	??_main+1,f
  1258     074E  2F4B               	goto	u1197
  1259     074F  0BE2               	decfsz	??_main+2,f
  1260     0750  2F4B               	goto	u1197
  1261     0751                     l1652:
  1262                           
  1263                           ;pruebaADXL345.c: 129:          Lcd_Clear();
  1264     0751  120A  118A  21F3  120A  118A  	fcall	_Lcd_Clear
  1265                           
  1266                           ;pruebaADXL345.c: 130:          x= (Xval2<<8)| (Xval & 0xFF);
  1267     0756  1283               	bcf	3,5	;RP0=0, select bank0
  1268     0757  1303               	bcf	3,6	;RP1=0, select bank0
  1269     0758  0825               	movf	_Xval,w
  1270     0759  00A9               	movwf	_x
  1271                           
  1272                           ;pruebaADXL345.c: 131:          y= Yval|Yval2 <<8;
  1273     075A  0823               	movf	_Yval,w
  1274     075B  00A8               	movwf	_y
  1275                           
  1276                           ;pruebaADXL345.c: 132:          z= Zval|Zval2 <<8;
  1277     075C  0821               	movf	_Zval,w
  1278     075D  00A7               	movwf	_z
  1279     075E                     l1654:
  1280                           
  1281                           ;pruebaADXL345.c: 133:          x2= x/256;
  1282     075E  3000               	movlw	0
  1283     075F  00F0               	movwf	___awdiv@divisor
  1284     0760  3001               	movlw	1
  1285     0761  00F1               	movwf	___awdiv@divisor+1
  1286     0762  0829               	movf	_x,w
  1287     0763  00E0               	movwf	??_main
  1288     0764  01E1               	clrf	??_main+1
  1289     0765  0860               	movf	??_main,w
  1290     0766  00F2               	movwf	___awdiv@dividend
  1291     0767  0861               	movf	??_main+1,w
  1292     0768  00F3               	movwf	___awdiv@dividend+1
  1293     0769  120A  118A  24B3  120A  118A  	fcall	___awdiv
  1294     076E  0870               	movf	?___awdiv,w
  1295     076F  1283               	bcf	3,5	;RP0=0, select bank0
  1296     0770  1303               	bcf	3,6	;RP1=0, select bank0
  1297     0771  00A6               	movwf	_x2
  1298     0772                     l1656:
  1299                           
  1300                           ;pruebaADXL345.c: 134:         sprintf(s, "%u", x2);
  1301     0772  301E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1302     0773  00D3               	movwf	sprintf@f
  1303     0774  0826               	movf	_x2,w
  1304     0775  00E0               	movwf	??_main
  1305     0776  01E1               	clrf	??_main+1
  1306     0777  0860               	movf	??_main,w
  1307     0778  00D4               	movwf	?_sprintf+1
  1308     0779  0861               	movf	??_main+1,w
  1309     077A  00D5               	movwf	?_sprintf+2
  1310     077B  303F               	movlw	(low (_s| 0))& (0+255)
  1311     077C  120A  118A  251A  120A  118A  	fcall	_sprintf
  1312     0781                     l1658:
  1313                           
  1314                           ;pruebaADXL345.c: 135:         sprintf(s2, "%u", y);
  1315     0781  301E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1316     0782  1283               	bcf	3,5	;RP0=0, select bank0
  1317     0783  1303               	bcf	3,6	;RP1=0, select bank0
  1318     0784  00D3               	movwf	sprintf@f
  1319     0785  0828               	movf	_y,w
  1320     0786  00E0               	movwf	??_main
  1321     0787  01E1               	clrf	??_main+1
  1322     0788  0860               	movf	??_main,w
  1323     0789  00D4               	movwf	?_sprintf+1
  1324     078A  0861               	movf	??_main+1,w
  1325     078B  00D5               	movwf	?_sprintf+2
  1326     078C  302B               	movlw	(low (_s2| 0))& (0+255)
  1327     078D  120A  118A  251A  120A  118A  	fcall	_sprintf
  1328     0792                     l1660:
  1329                           
  1330                           ;pruebaADXL345.c: 136:         sprintf(s3, "%u", z);
  1331     0792  301E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1332     0793  1283               	bcf	3,5	;RP0=0, select bank0
  1333     0794  1303               	bcf	3,6	;RP1=0, select bank0
  1334     0795  00D3               	movwf	sprintf@f
  1335     0796  0827               	movf	_z,w
  1336     0797  00E0               	movwf	??_main
  1337     0798  01E1               	clrf	??_main+1
  1338     0799  0860               	movf	??_main,w
  1339     079A  00D4               	movwf	?_sprintf+1
  1340     079B  0861               	movf	??_main+1,w
  1341     079C  00D5               	movwf	?_sprintf+2
  1342     079D  30A0               	movlw	(low (_s3| 0))& (0+255)
  1343     079E  120A  118A  251A  120A  118A  	fcall	_sprintf
  1344     07A3                     l1662:
  1345                           
  1346                           ;pruebaADXL345.c: 137:     Lcd_Set_Cursor(1,1);
  1347     07A3  01F4               	clrf	Lcd_Set_Cursor@b
  1348     07A4  0AF4               	incf	Lcd_Set_Cursor@b,f
  1349     07A5  3001               	movlw	1
  1350     07A6  120A  118A  23AA  120A  118A  	fcall	_Lcd_Set_Cursor
  1351     07AB                     l1664:
  1352                           
  1353                           ;pruebaADXL345.c: 138:     Lcd_Write_String(s);
  1354     07AB  303F               	movlw	(low (_s| 0))& (0+255)
  1355     07AC  00F5               	movwf	Lcd_Write_String@a
  1356     07AD  3000               	movlw	0
  1357     07AE  00F6               	movwf	Lcd_Write_String@a+1
  1358     07AF  120A  118A  2324  120A  118A  	fcall	_Lcd_Write_String
  1359     07B4                     l1666:
  1360                           
  1361                           ;pruebaADXL345.c: 139:     Lcd_Set_Cursor(1,5);
  1362     07B4  3005               	movlw	5
  1363     07B5  00F4               	movwf	Lcd_Set_Cursor@b
  1364     07B6  3001               	movlw	1
  1365     07B7  120A  118A  23AA  120A  118A  	fcall	_Lcd_Set_Cursor
  1366     07BC                     l1668:
  1367                           
  1368                           ;pruebaADXL345.c: 140:     Lcd_Write_String(s2);
  1369     07BC  302B               	movlw	(low (_s2| 0))& (0+255)
  1370     07BD  00F5               	movwf	Lcd_Write_String@a
  1371     07BE  3000               	movlw	0
  1372     07BF  00F6               	movwf	Lcd_Write_String@a+1
  1373     07C0  120A  118A  2324  120A  118A  	fcall	_Lcd_Write_String
  1374     07C5                     l1670:
  1375                           
  1376                           ;pruebaADXL345.c: 141:     Lcd_Set_Cursor(1,12);
  1377     07C5  300C               	movlw	12
  1378     07C6  00F4               	movwf	Lcd_Set_Cursor@b
  1379     07C7  3001               	movlw	1
  1380     07C8  120A  118A  23AA  120A  118A  	fcall	_Lcd_Set_Cursor
  1381     07CD                     l1672:
  1382                           
  1383                           ;pruebaADXL345.c: 142:     Lcd_Write_String(s3);
  1384     07CD  30A0               	movlw	(low (_s3| 0))& (0+255)
  1385     07CE  00F5               	movwf	Lcd_Write_String@a
  1386     07CF  3000               	movlw	0
  1387     07D0  00F6               	movwf	Lcd_Write_String@a+1
  1388     07D1  120A  118A  2324  120A  118A  	fcall	_Lcd_Write_String
  1389     07D6                     l1674:
  1390                           
  1391                           ;pruebaADXL345.c: 143:    Lcd_Set_Cursor(2,1);
  1392     07D6  01F4               	clrf	Lcd_Set_Cursor@b
  1393     07D7  0AF4               	incf	Lcd_Set_Cursor@b,f
  1394     07D8  3002               	movlw	2
  1395     07D9  120A  118A  23AA  120A  118A  	fcall	_Lcd_Set_Cursor
  1396     07DE                     l1676:
  1397                           
  1398                           ;pruebaADXL345.c: 144:     Lcd_Write_String("hey");
  1399     07DE  301A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1400     07DF  00F5               	movwf	Lcd_Write_String@a
  1401     07E0  3080               	movlw	128
  1402     07E1  00F6               	movwf	Lcd_Write_String@a+1
  1403     07E2  120A  118A  2324  120A  118A  	fcall	_Lcd_Write_String
  1404     07E7  2E55               	goto	l257
  1405     07E8  120A  118A  2800   	ljmp	start
  1406     07EB                     __end_of_main:
  1407                           
  1408                           	psect	text1
  1409     051A                     __ptext1:	
  1410 ;; *************** function _sprintf *****************
  1411 ;; Defined at:
  1412 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;  sp              1    wreg     PTR unsigned char 
  1415 ;;		 -> s3(20), s2(20), s(20), 
  1416 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1417 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1420 ;;		 -> s3(20), s2(20), s(20), 
  1421 ;;  tmpval          4    0        struct .
  1422 ;;  val             2    8[BANK0 ] unsigned int 
  1423 ;;  cp              2    0        PTR const unsigned char 
  1424 ;;  len             2    0        unsigned int 
  1425 ;;  c               1   12[BANK0 ] unsigned char 
  1426 ;;  prec            1   10[BANK0 ] char 
  1427 ;;  ap              1    7[BANK0 ] PTR void [1]
  1428 ;;		 -> ?_sprintf(2), 
  1429 ;;  flag            1    6[BANK0 ] unsigned char 
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  2    0[BANK0 ] int 
  1432 ;; Registers used:
  1433 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1439 ;;      Params:         0       3       0       0       0
  1440 ;;      Locals:         0       7       0       0       0
  1441 ;;      Temps:          0       3       0       0       0
  1442 ;;      Totals:         0      13       0       0       0
  1443 ;;Total ram usage:       13 bytes
  1444 ;; Hardware stack levels used: 1
  1445 ;; Hardware stack levels required when called: 1
  1446 ;; This function calls:
  1447 ;;		___lwdiv
  1448 ;;		___lwmod
  1449 ;; This function is called by:
  1450 ;;		_main
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454     051A                     _sprintf:	
  1455                           ;psect for function _sprintf
  1456                           
  1457                           
  1458                           ;incstack = 0
  1459                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1460                           ;sprintf@sp stored from wreg
  1461     051A  1283               	bcf	3,5	;RP0=0, select bank0
  1462     051B  1303               	bcf	3,6	;RP1=0, select bank0
  1463     051C  00DE               	movwf	sprintf@sp
  1464     051D                     l1520:
  1465                           
  1466                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1467     051D  3054               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1468     051E  00DA               	movwf	sprintf@ap
  1469                           
  1470                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1471     051F  2DC6               	goto	l1562
  1472     0520                     l1522:
  1473                           
  1474                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1475     0520  3025               	movlw	37
  1476     0521  065F               	xorwf	sprintf@c,w
  1477     0522  1903               	btfsc	3,2
  1478     0523  2D25               	goto	u981
  1479     0524  2D26               	goto	u980
  1480     0525                     u981:
  1481     0525  2D30               	goto	l1528
  1482     0526                     u980:
  1483     0526                     l1524:
  1484                           
  1485                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1486     0526  085E               	movf	sprintf@sp,w
  1487     0527  0084               	movwf	4
  1488     0528  085F               	movf	sprintf@c,w
  1489     0529  1383               	bcf	3,7	;select IRP bank0
  1490     052A  0080               	movwf	0
  1491     052B                     l1526:
  1492     052B  3001               	movlw	1
  1493     052C  00D6               	movwf	??_sprintf
  1494     052D  0856               	movf	??_sprintf,w
  1495     052E  07DE               	addwf	sprintf@sp,f
  1496                           
  1497                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1498     052F  2DC6               	goto	l1562
  1499     0530                     l1528:
  1500                           
  1501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1502     0530  01D9               	clrf	sprintf@flag
  1503                           
  1504                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1505     0531  2D37               	goto	l1534
  1506     0532                     l1530:
  1507                           
  1508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1509     0532  30C0               	movlw	192
  1510     0533  00D6               	movwf	??_sprintf
  1511     0534  0856               	movf	??_sprintf,w
  1512     0535  04D9               	iorwf	sprintf@flag,f
  1513                           
  1514                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1515     0536  2D51               	goto	l1536
  1516     0537                     l1534:
  1517     0537  3001               	movlw	1
  1518     0538  07D3               	addwf	sprintf@f,f
  1519     0539  30FF               	movlw	-1
  1520     053A  0753               	addwf	sprintf@f,w
  1521     053B  0084               	movwf	4
  1522     053C  120A  118A  200D  120A  118A  	fcall	stringdir
  1523     0541  00DF               	movwf	sprintf@c
  1524     0542  00D6               	movwf	??_sprintf
  1525     0543  01D7               	clrf	??_sprintf+1
  1526                           
  1527                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1528                           ; Switch size 1, requested type "simple"
  1529                           ; Number of cases is 1, Range of values is 0 to 0
  1530                           ; switch strategies available:
  1531                           ; Name         Instructions Cycles
  1532                           ; simple_byte            4     3 (average)
  1533                           ; direct_byte           11     8 (fixed)
  1534                           ; jumptable            260     6 (fixed)
  1535                           ;	Chosen strategy is simple_byte
  1536     0544  0857               	movf	??_sprintf+1,w
  1537     0545  3A00               	xorlw	0	; case 0
  1538     0546  1903               	skipnz
  1539     0547  2D49               	goto	l1698
  1540     0548  2DC6               	goto	l1562
  1541     0549                     l1698:
  1542                           
  1543                           ; Switch size 1, requested type "simple"
  1544                           ; Number of cases is 2, Range of values is 0 to 117
  1545                           ; switch strategies available:
  1546                           ; Name         Instructions Cycles
  1547                           ; simple_byte            7     4 (average)
  1548                           ; jumptable            260     6 (fixed)
  1549                           ;	Chosen strategy is simple_byte
  1550     0549  0856               	movf	??_sprintf,w
  1551     054A  3A00               	xorlw	0	; case 0
  1552     054B  1903               	skipnz
  1553     054C  2DD6               	goto	l1564
  1554     054D  3A75               	xorlw	117	; case 117
  1555     054E  1903               	skipnz
  1556     054F  2D32               	goto	l1530
  1557     0550  2DC6               	goto	l1562
  1558     0551                     l1536:
  1559                           
  1560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1561     0551  085A               	movf	sprintf@ap,w
  1562     0552  0084               	movwf	4
  1563     0553  1383               	bcf	3,7	;select IRP bank0
  1564     0554  0800               	movf	0,w
  1565     0555  00DB               	movwf	sprintf@val
  1566     0556  0A84               	incf	4,f
  1567     0557  0800               	movf	0,w
  1568     0558  00DC               	movwf	sprintf@val+1
  1569     0559                     l1538:
  1570     0559  3002               	movlw	2
  1571     055A  00D6               	movwf	??_sprintf
  1572     055B  0856               	movf	??_sprintf,w
  1573     055C  07DA               	addwf	sprintf@ap,f
  1574     055D                     l1540:
  1575                           
  1576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1577     055D  01DF               	clrf	sprintf@c
  1578     055E  0ADF               	incf	sprintf@c,f
  1579     055F                     l1546:
  1580                           
  1581                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1582     055F  085F               	movf	sprintf@c,w
  1583     0560  00D6               	movwf	??_sprintf
  1584     0561  0756               	addwf	??_sprintf,w
  1585     0562  3E10               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1586     0563  0084               	movwf	4
  1587     0564  120A  118A  200D  120A  118A  	fcall	stringdir
  1588     0569  00D7               	movwf	??_sprintf+1
  1589     056A  120A  118A  200D  120A  118A  	fcall	stringdir
  1590     056F  00D8               	movwf	??_sprintf+2
  1591     0570  0858               	movf	??_sprintf+2,w
  1592     0571  025C               	subwf	sprintf@val+1,w
  1593     0572  1D03               	skipz
  1594     0573  2D76               	goto	u995
  1595     0574  0857               	movf	??_sprintf+1,w
  1596     0575  025B               	subwf	sprintf@val,w
  1597     0576                     u995:
  1598     0576  1803               	skipnc
  1599     0577  2D79               	goto	u991
  1600     0578  2D7A               	goto	u990
  1601     0579                     u991:
  1602     0579  2D7B               	goto	l1550
  1603     057A                     u990:
  1604     057A  2D85               	goto	l1552
  1605     057B                     l1550:
  1606     057B  3001               	movlw	1
  1607     057C  00D6               	movwf	??_sprintf
  1608     057D  0856               	movf	??_sprintf,w
  1609     057E  07DF               	addwf	sprintf@c,f
  1610     057F  3005               	movlw	5
  1611     0580  065F               	xorwf	sprintf@c,w
  1612     0581  1D03               	btfss	3,2
  1613     0582  2D84               	goto	u1001
  1614     0583  2D85               	goto	u1000
  1615     0584                     u1001:
  1616     0584  2D5F               	goto	l1546
  1617     0585                     u1000:
  1618     0585                     l1552:
  1619                           
  1620                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1621     0585  085F               	movf	sprintf@c,w
  1622     0586  00DD               	movwf	sprintf@prec
  1623                           
  1624                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1625     0587  2DBD               	goto	l1560
  1626     0588                     l1554:
  1627                           
  1628                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1629     0588  300A               	movlw	10
  1630     0589  00F8               	movwf	___lwmod@divisor
  1631     058A  3000               	movlw	0
  1632     058B  00F9               	movwf	___lwmod@divisor+1
  1633     058C  085D               	movf	sprintf@prec,w
  1634     058D  00D6               	movwf	??_sprintf
  1635     058E  0756               	addwf	??_sprintf,w
  1636     058F  3E10               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1637     0590  0084               	movwf	4
  1638     0591  120A  118A  200D  120A  118A  	fcall	stringdir
  1639     0596  00F0               	movwf	___lwdiv@divisor
  1640     0597  120A  118A  200D  120A  118A  	fcall	stringdir
  1641     059C  00F1               	movwf	___lwdiv@divisor+1
  1642     059D  085C               	movf	sprintf@val+1,w
  1643     059E  00F3               	movwf	___lwdiv@dividend+1
  1644     059F  085B               	movf	sprintf@val,w
  1645     05A0  00F2               	movwf	___lwdiv@dividend
  1646     05A1  120A  118A  2366  120A  118A  	fcall	___lwdiv
  1647     05A6  0871               	movf	?___lwdiv+1,w
  1648     05A7  00FB               	movwf	___lwmod@dividend+1
  1649     05A8  0870               	movf	?___lwdiv,w
  1650     05A9  00FA               	movwf	___lwmod@dividend
  1651     05AA  120A  118A  22EA  120A  118A  	fcall	___lwmod
  1652     05AF  0878               	movf	?___lwmod,w
  1653     05B0  3E30               	addlw	48
  1654     05B1  1283               	bcf	3,5	;RP0=0, select bank0
  1655     05B2  1303               	bcf	3,6	;RP1=0, select bank0
  1656     05B3  00DF               	movwf	sprintf@c
  1657     05B4                     l1556:
  1658                           
  1659                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1660     05B4  085E               	movf	sprintf@sp,w
  1661     05B5  0084               	movwf	4
  1662     05B6  085F               	movf	sprintf@c,w
  1663     05B7  1383               	bcf	3,7	;select IRP bank0
  1664     05B8  0080               	movwf	0
  1665     05B9                     l1558:
  1666     05B9  3001               	movlw	1
  1667     05BA  00D6               	movwf	??_sprintf
  1668     05BB  0856               	movf	??_sprintf,w
  1669     05BC  07DE               	addwf	sprintf@sp,f
  1670     05BD                     l1560:
  1671                           
  1672                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1673     05BD  30FF               	movlw	255
  1674     05BE  00D6               	movwf	??_sprintf
  1675     05BF  0856               	movf	??_sprintf,w
  1676     05C0  07DD               	addwf	sprintf@prec,f
  1677     05C1  0A5D               	incf	sprintf@prec,w
  1678     05C2  1D03               	btfss	3,2
  1679     05C3  2DC5               	goto	u1011
  1680     05C4  2DC6               	goto	u1010
  1681     05C5                     u1011:
  1682     05C5  2D88               	goto	l1554
  1683     05C6                     u1010:
  1684     05C6                     l1562:
  1685                           
  1686                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1687     05C6  3001               	movlw	1
  1688     05C7  07D3               	addwf	sprintf@f,f
  1689     05C8  30FF               	movlw	-1
  1690     05C9  0753               	addwf	sprintf@f,w
  1691     05CA  0084               	movwf	4
  1692     05CB  120A  118A  200D  120A  118A  	fcall	stringdir
  1693     05D0  00DF               	movwf	sprintf@c
  1694     05D1  085F               	movf	sprintf@c,w
  1695     05D2  1D03               	btfss	3,2
  1696     05D3  2DD5               	goto	u1021
  1697     05D4  2DD6               	goto	u1020
  1698     05D5                     u1021:
  1699     05D5  2D20               	goto	l1522
  1700     05D6                     u1020:
  1701     05D6                     l1564:
  1702                           
  1703                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1704     05D6  085E               	movf	sprintf@sp,w
  1705     05D7  0084               	movwf	4
  1706     05D8  1383               	bcf	3,7	;select IRP bank0
  1707     05D9  0180               	clrf	0
  1708     05DA                     l370:
  1709     05DA  0008               	return
  1710     05DB                     __end_of_sprintf:
  1711                           
  1712                           	psect	text2
  1713     02EA                     __ptext2:	
  1714 ;; *************** function ___lwmod *****************
  1715 ;; Defined at:
  1716 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;  divisor         2    8[COMMON] unsigned int 
  1719 ;;  dividend        2   10[COMMON] unsigned int 
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;  counter         1   13[COMMON] unsigned char 
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  2    8[COMMON] unsigned int 
  1724 ;; Registers used:
  1725 ;;		wreg, status,2, status,0
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1731 ;;      Params:         4       0       0       0       0
  1732 ;;      Locals:         1       0       0       0       0
  1733 ;;      Temps:          1       0       0       0       0
  1734 ;;      Totals:         6       0       0       0       0
  1735 ;;Total ram usage:        6 bytes
  1736 ;; Hardware stack levels used: 1
  1737 ;; This function calls:
  1738 ;;		Nothing
  1739 ;; This function is called by:
  1740 ;;		_sprintf
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744     02EA                     ___lwmod:	
  1745                           ;psect for function ___lwmod
  1746                           
  1747     02EA                     l1402:	
  1748                           ;incstack = 0
  1749                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1750                           
  1751     02EA  0878               	movf	___lwmod@divisor,w
  1752     02EB  0479               	iorwf	___lwmod@divisor+1,w
  1753     02EC  1903               	btfsc	3,2
  1754     02ED  2AEF               	goto	u831
  1755     02EE  2AF0               	goto	u830
  1756     02EF                     u831:
  1757     02EF  2B1F               	goto	l1420
  1758     02F0                     u830:
  1759     02F0                     l1404:
  1760     02F0  01FD               	clrf	___lwmod@counter
  1761     02F1  0AFD               	incf	___lwmod@counter,f
  1762     02F2  2AFE               	goto	l1410
  1763     02F3                     l1406:
  1764     02F3  3001               	movlw	1
  1765     02F4                     u845:
  1766     02F4  1003               	clrc
  1767     02F5  0DF8               	rlf	___lwmod@divisor,f
  1768     02F6  0DF9               	rlf	___lwmod@divisor+1,f
  1769     02F7  3EFF               	addlw	-1
  1770     02F8  1D03               	skipz
  1771     02F9  2AF4               	goto	u845
  1772     02FA                     l1408:
  1773     02FA  3001               	movlw	1
  1774     02FB  00FC               	movwf	??___lwmod
  1775     02FC  087C               	movf	??___lwmod,w
  1776     02FD  07FD               	addwf	___lwmod@counter,f
  1777     02FE                     l1410:
  1778     02FE  1FF9               	btfss	___lwmod@divisor+1,7
  1779     02FF  2B01               	goto	u851
  1780     0300  2B02               	goto	u850
  1781     0301                     u851:
  1782     0301  2AF3               	goto	l1406
  1783     0302                     u850:
  1784     0302                     l1412:
  1785     0302  0879               	movf	___lwmod@divisor+1,w
  1786     0303  027B               	subwf	___lwmod@dividend+1,w
  1787     0304  1D03               	skipz
  1788     0305  2B08               	goto	u865
  1789     0306  0878               	movf	___lwmod@divisor,w
  1790     0307  027A               	subwf	___lwmod@dividend,w
  1791     0308                     u865:
  1792     0308  1C03               	skipc
  1793     0309  2B0B               	goto	u861
  1794     030A  2B0C               	goto	u860
  1795     030B                     u861:
  1796     030B  2B12               	goto	l1416
  1797     030C                     u860:
  1798     030C                     l1414:
  1799     030C  0878               	movf	___lwmod@divisor,w
  1800     030D  02FA               	subwf	___lwmod@dividend,f
  1801     030E  0879               	movf	___lwmod@divisor+1,w
  1802     030F  1C03               	skipc
  1803     0310  03FB               	decf	___lwmod@dividend+1,f
  1804     0311  02FB               	subwf	___lwmod@dividend+1,f
  1805     0312                     l1416:
  1806     0312  3001               	movlw	1
  1807     0313                     u875:
  1808     0313  1003               	clrc
  1809     0314  0CF9               	rrf	___lwmod@divisor+1,f
  1810     0315  0CF8               	rrf	___lwmod@divisor,f
  1811     0316  3EFF               	addlw	-1
  1812     0317  1D03               	skipz
  1813     0318  2B13               	goto	u875
  1814     0319                     l1418:
  1815     0319  3001               	movlw	1
  1816     031A  02FD               	subwf	___lwmod@counter,f
  1817     031B  1D03               	btfss	3,2
  1818     031C  2B1E               	goto	u881
  1819     031D  2B1F               	goto	u880
  1820     031E                     u881:
  1821     031E  2B02               	goto	l1412
  1822     031F                     u880:
  1823     031F                     l1420:
  1824     031F  087B               	movf	___lwmod@dividend+1,w
  1825     0320  00F9               	movwf	?___lwmod+1
  1826     0321  087A               	movf	___lwmod@dividend,w
  1827     0322  00F8               	movwf	?___lwmod
  1828     0323                     l656:
  1829     0323  0008               	return
  1830     0324                     __end_of___lwmod:
  1831                           
  1832                           	psect	text3
  1833     0366                     __ptext3:	
  1834 ;; *************** function ___lwdiv *****************
  1835 ;; Defined at:
  1836 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;  divisor         2    0[COMMON] unsigned int 
  1839 ;;  dividend        2    2[COMMON] unsigned int 
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;  quotient        2    5[COMMON] unsigned int 
  1842 ;;  counter         1    7[COMMON] unsigned char 
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  2    0[COMMON] unsigned int 
  1845 ;; Registers used:
  1846 ;;		wreg, status,2, status,0
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1852 ;;      Params:         4       0       0       0       0
  1853 ;;      Locals:         3       0       0       0       0
  1854 ;;      Temps:          1       0       0       0       0
  1855 ;;      Totals:         8       0       0       0       0
  1856 ;;Total ram usage:        8 bytes
  1857 ;; Hardware stack levels used: 1
  1858 ;; This function calls:
  1859 ;;		Nothing
  1860 ;; This function is called by:
  1861 ;;		_sprintf
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865     0366                     ___lwdiv:	
  1866                           ;psect for function ___lwdiv
  1867                           
  1868     0366                     l1376:	
  1869                           ;incstack = 0
  1870                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1871                           
  1872     0366  01F5               	clrf	___lwdiv@quotient
  1873     0367  01F6               	clrf	___lwdiv@quotient+1
  1874     0368                     l1378:
  1875     0368  0870               	movf	___lwdiv@divisor,w
  1876     0369  0471               	iorwf	___lwdiv@divisor+1,w
  1877     036A  1903               	btfsc	3,2
  1878     036B  2B6D               	goto	u761
  1879     036C  2B6E               	goto	u760
  1880     036D                     u761:
  1881     036D  2BA5               	goto	l1398
  1882     036E                     u760:
  1883     036E                     l1380:
  1884     036E  01F7               	clrf	___lwdiv@counter
  1885     036F  0AF7               	incf	___lwdiv@counter,f
  1886     0370  2B7C               	goto	l1386
  1887     0371                     l1382:
  1888     0371  3001               	movlw	1
  1889     0372                     u775:
  1890     0372  1003               	clrc
  1891     0373  0DF0               	rlf	___lwdiv@divisor,f
  1892     0374  0DF1               	rlf	___lwdiv@divisor+1,f
  1893     0375  3EFF               	addlw	-1
  1894     0376  1D03               	skipz
  1895     0377  2B72               	goto	u775
  1896     0378                     l1384:
  1897     0378  3001               	movlw	1
  1898     0379  00F4               	movwf	??___lwdiv
  1899     037A  0874               	movf	??___lwdiv,w
  1900     037B  07F7               	addwf	___lwdiv@counter,f
  1901     037C                     l1386:
  1902     037C  1FF1               	btfss	___lwdiv@divisor+1,7
  1903     037D  2B7F               	goto	u781
  1904     037E  2B80               	goto	u780
  1905     037F                     u781:
  1906     037F  2B71               	goto	l1382
  1907     0380                     u780:
  1908     0380                     l1388:
  1909     0380  3001               	movlw	1
  1910     0381                     u795:
  1911     0381  1003               	clrc
  1912     0382  0DF5               	rlf	___lwdiv@quotient,f
  1913     0383  0DF6               	rlf	___lwdiv@quotient+1,f
  1914     0384  3EFF               	addlw	-1
  1915     0385  1D03               	skipz
  1916     0386  2B81               	goto	u795
  1917     0387  0871               	movf	___lwdiv@divisor+1,w
  1918     0388  0273               	subwf	___lwdiv@dividend+1,w
  1919     0389  1D03               	skipz
  1920     038A  2B8D               	goto	u805
  1921     038B  0870               	movf	___lwdiv@divisor,w
  1922     038C  0272               	subwf	___lwdiv@dividend,w
  1923     038D                     u805:
  1924     038D  1C03               	skipc
  1925     038E  2B90               	goto	u801
  1926     038F  2B91               	goto	u800
  1927     0390                     u801:
  1928     0390  2B98               	goto	l1394
  1929     0391                     u800:
  1930     0391                     l1390:
  1931     0391  0870               	movf	___lwdiv@divisor,w
  1932     0392  02F2               	subwf	___lwdiv@dividend,f
  1933     0393  0871               	movf	___lwdiv@divisor+1,w
  1934     0394  1C03               	skipc
  1935     0395  03F3               	decf	___lwdiv@dividend+1,f
  1936     0396  02F3               	subwf	___lwdiv@dividend+1,f
  1937     0397                     l1392:
  1938     0397  1475               	bsf	___lwdiv@quotient,0
  1939     0398                     l1394:
  1940     0398  3001               	movlw	1
  1941     0399                     u815:
  1942     0399  1003               	clrc
  1943     039A  0CF1               	rrf	___lwdiv@divisor+1,f
  1944     039B  0CF0               	rrf	___lwdiv@divisor,f
  1945     039C  3EFF               	addlw	-1
  1946     039D  1D03               	skipz
  1947     039E  2B99               	goto	u815
  1948     039F                     l1396:
  1949     039F  3001               	movlw	1
  1950     03A0  02F7               	subwf	___lwdiv@counter,f
  1951     03A1  1D03               	btfss	3,2
  1952     03A2  2BA4               	goto	u821
  1953     03A3  2BA5               	goto	u820
  1954     03A4                     u821:
  1955     03A4  2B80               	goto	l1388
  1956     03A5                     u820:
  1957     03A5                     l1398:
  1958     03A5  0876               	movf	___lwdiv@quotient+1,w
  1959     03A6  00F1               	movwf	?___lwdiv+1
  1960     03A7  0875               	movf	___lwdiv@quotient,w
  1961     03A8  00F0               	movwf	?___lwdiv
  1962     03A9                     l646:
  1963     03A9  0008               	return
  1964     03AA                     __end_of___lwdiv:
  1965                           
  1966                           	psect	text4
  1967     021A                     __ptext4:	
  1968 ;; *************** function _setup *****************
  1969 ;; Defined at:
  1970 ;;		line 152 in file "pruebaADXL345.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;		None
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;		None
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  1    wreg      void 
  1977 ;; Registers used:
  1978 ;;		wreg, status,2, status,0
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1984 ;;      Params:         0       0       0       0       0
  1985 ;;      Locals:         0       0       0       0       0
  1986 ;;      Temps:          0       0       0       0       0
  1987 ;;      Totals:         0       0       0       0       0
  1988 ;;Total ram usage:        0 bytes
  1989 ;; Hardware stack levels used: 1
  1990 ;; This function calls:
  1991 ;;		Nothing
  1992 ;; This function is called by:
  1993 ;;		_main
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997     021A                     _setup:	
  1998                           ;psect for function _setup
  1999                           
  2000     021A                     l1502:	
  2001                           ;incstack = 0
  2002                           ; Regs used in _setup: [wreg+status,2+status,0]
  2003                           
  2004                           
  2005                           ;pruebaADXL345.c: 153:     ANSEL = 0;
  2006     021A  1683               	bsf	3,5	;RP0=1, select bank3
  2007     021B  1703               	bsf	3,6	;RP1=1, select bank3
  2008     021C  0188               	clrf	8	;volatile
  2009                           
  2010                           ;pruebaADXL345.c: 154:     ANSELH = 0;
  2011     021D  0189               	clrf	9	;volatile
  2012     021E                     l1504:
  2013                           
  2014                           ;pruebaADXL345.c: 155:     TRISC1 = 0;
  2015     021E  1683               	bsf	3,5	;RP0=1, select bank1
  2016     021F  1303               	bcf	3,6	;RP1=0, select bank1
  2017     0220  1087               	bcf	7,1	;volatile
  2018     0221                     l1506:
  2019                           
  2020                           ;pruebaADXL345.c: 156:     TRISC2 = 0;
  2021     0221  1107               	bcf	7,2	;volatile
  2022     0222                     l1508:
  2023                           
  2024                           ;pruebaADXL345.c: 157:     TRISC6 = 0;
  2025     0222  1307               	bcf	7,6	;volatile
  2026     0223                     l1510:
  2027                           
  2028                           ;pruebaADXL345.c: 158:     TRISC7 = 0;
  2029     0223  1387               	bcf	7,7	;volatile
  2030                           
  2031                           ;pruebaADXL345.c: 159:     TRISA =0;
  2032     0224  0185               	clrf	5	;volatile
  2033                           
  2034                           ;pruebaADXL345.c: 160:     TRISB = 0;
  2035     0225  0186               	clrf	6	;volatile
  2036                           
  2037                           ;pruebaADXL345.c: 161:     TRISD = 0;
  2038     0226  0188               	clrf	8	;volatile
  2039                           
  2040                           ;pruebaADXL345.c: 162:     PORTA = 0;
  2041     0227  1283               	bcf	3,5	;RP0=0, select bank0
  2042     0228  1303               	bcf	3,6	;RP1=0, select bank0
  2043     0229  0185               	clrf	5	;volatile
  2044                           
  2045                           ;pruebaADXL345.c: 163:     PORTB = 0;
  2046     022A  0186               	clrf	6	;volatile
  2047                           
  2048                           ;pruebaADXL345.c: 164:     PORTD = 0;
  2049     022B  0188               	clrf	8	;volatile
  2050     022C                     l1512:
  2051                           
  2052                           ;pruebaADXL345.c: 165:     PORTCbits.RC1 = 1;
  2053     022C  1487               	bsf	7,1	;volatile
  2054     022D                     l1514:
  2055                           
  2056                           ;pruebaADXL345.c: 166:     PORTCbits.RC2 = 1;
  2057     022D  1507               	bsf	7,2	;volatile
  2058     022E                     l1516:
  2059                           
  2060                           ;pruebaADXL345.c: 169:     OSCCONbits.IRCF = 0b0111;
  2061     022E  3070               	movlw	112
  2062     022F  1683               	bsf	3,5	;RP0=1, select bank1
  2063     0230  1303               	bcf	3,6	;RP1=0, select bank1
  2064     0231  048F               	iorwf	15,f	;volatile
  2065     0232                     l1518:
  2066                           
  2067                           ;pruebaADXL345.c: 170:     OSCCONbits.SCS = 1;
  2068     0232  140F               	bsf	15,0	;volatile
  2069     0233                     l263:
  2070     0233  0008               	return
  2071     0234                     __end_of_setup:
  2072                           
  2073                           	psect	text5
  2074     04B3                     __ptext5:	
  2075 ;; *************** function ___awdiv *****************
  2076 ;; Defined at:
  2077 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;  divisor         2    0[COMMON] int 
  2080 ;;  dividend        2    2[COMMON] int 
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;  quotient        2    7[COMMON] int 
  2083 ;;  sign            1    6[COMMON] unsigned char 
  2084 ;;  counter         1    5[COMMON] unsigned char 
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  2    0[COMMON] int 
  2087 ;; Registers used:
  2088 ;;		wreg, status,2, status,0
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2094 ;;      Params:         4       0       0       0       0
  2095 ;;      Locals:         4       0       0       0       0
  2096 ;;      Temps:          1       0       0       0       0
  2097 ;;      Totals:         9       0       0       0       0
  2098 ;;Total ram usage:        9 bytes
  2099 ;; Hardware stack levels used: 1
  2100 ;; This function calls:
  2101 ;;		Nothing
  2102 ;; This function is called by:
  2103 ;;		_main
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107     04B3                     ___awdiv:	
  2108                           ;psect for function ___awdiv
  2109                           
  2110     04B3                     l1572:	
  2111                           ;incstack = 0
  2112                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2113                           
  2114     04B3  01F6               	clrf	___awdiv@sign
  2115     04B4                     l1574:
  2116     04B4  1FF1               	btfss	___awdiv@divisor+1,7
  2117     04B5  2CB7               	goto	u1031
  2118     04B6  2CB8               	goto	u1030
  2119     04B7                     u1031:
  2120     04B7  2CBF               	goto	l1580
  2121     04B8                     u1030:
  2122     04B8                     l1576:
  2123     04B8  09F0               	comf	___awdiv@divisor,f
  2124     04B9  09F1               	comf	___awdiv@divisor+1,f
  2125     04BA  0AF0               	incf	___awdiv@divisor,f
  2126     04BB  1903               	skipnz
  2127     04BC  0AF1               	incf	___awdiv@divisor+1,f
  2128     04BD                     l1578:
  2129     04BD  01F6               	clrf	___awdiv@sign
  2130     04BE  0AF6               	incf	___awdiv@sign,f
  2131     04BF                     l1580:
  2132     04BF  1FF3               	btfss	___awdiv@dividend+1,7
  2133     04C0  2CC2               	goto	u1041
  2134     04C1  2CC3               	goto	u1040
  2135     04C2                     u1041:
  2136     04C2  2CCC               	goto	l1586
  2137     04C3                     u1040:
  2138     04C3                     l1582:
  2139     04C3  09F2               	comf	___awdiv@dividend,f
  2140     04C4  09F3               	comf	___awdiv@dividend+1,f
  2141     04C5  0AF2               	incf	___awdiv@dividend,f
  2142     04C6  1903               	skipnz
  2143     04C7  0AF3               	incf	___awdiv@dividend+1,f
  2144     04C8                     l1584:
  2145     04C8  3001               	movlw	1
  2146     04C9  00F4               	movwf	??___awdiv
  2147     04CA  0874               	movf	??___awdiv,w
  2148     04CB  06F6               	xorwf	___awdiv@sign,f
  2149     04CC                     l1586:
  2150     04CC  01F7               	clrf	___awdiv@quotient
  2151     04CD  01F8               	clrf	___awdiv@quotient+1
  2152     04CE                     l1588:
  2153     04CE  0870               	movf	___awdiv@divisor,w
  2154     04CF  0471               	iorwf	___awdiv@divisor+1,w
  2155     04D0  1903               	btfsc	3,2
  2156     04D1  2CD3               	goto	u1051
  2157     04D2  2CD4               	goto	u1050
  2158     04D3                     u1051:
  2159     04D3  2D0B               	goto	l1608
  2160     04D4                     u1050:
  2161     04D4                     l1590:
  2162     04D4  01F5               	clrf	___awdiv@counter
  2163     04D5  0AF5               	incf	___awdiv@counter,f
  2164     04D6  2CE2               	goto	l1596
  2165     04D7                     l1592:
  2166     04D7  3001               	movlw	1
  2167     04D8                     u1065:
  2168     04D8  1003               	clrc
  2169     04D9  0DF0               	rlf	___awdiv@divisor,f
  2170     04DA  0DF1               	rlf	___awdiv@divisor+1,f
  2171     04DB  3EFF               	addlw	-1
  2172     04DC  1D03               	skipz
  2173     04DD  2CD8               	goto	u1065
  2174     04DE                     l1594:
  2175     04DE  3001               	movlw	1
  2176     04DF  00F4               	movwf	??___awdiv
  2177     04E0  0874               	movf	??___awdiv,w
  2178     04E1  07F5               	addwf	___awdiv@counter,f
  2179     04E2                     l1596:
  2180     04E2  1FF1               	btfss	___awdiv@divisor+1,7
  2181     04E3  2CE5               	goto	u1071
  2182     04E4  2CE6               	goto	u1070
  2183     04E5                     u1071:
  2184     04E5  2CD7               	goto	l1592
  2185     04E6                     u1070:
  2186     04E6                     l1598:
  2187     04E6  3001               	movlw	1
  2188     04E7                     u1085:
  2189     04E7  1003               	clrc
  2190     04E8  0DF7               	rlf	___awdiv@quotient,f
  2191     04E9  0DF8               	rlf	___awdiv@quotient+1,f
  2192     04EA  3EFF               	addlw	-1
  2193     04EB  1D03               	skipz
  2194     04EC  2CE7               	goto	u1085
  2195     04ED  0871               	movf	___awdiv@divisor+1,w
  2196     04EE  0273               	subwf	___awdiv@dividend+1,w
  2197     04EF  1D03               	skipz
  2198     04F0  2CF3               	goto	u1095
  2199     04F1  0870               	movf	___awdiv@divisor,w
  2200     04F2  0272               	subwf	___awdiv@dividend,w
  2201     04F3                     u1095:
  2202     04F3  1C03               	skipc
  2203     04F4  2CF6               	goto	u1091
  2204     04F5  2CF7               	goto	u1090
  2205     04F6                     u1091:
  2206     04F6  2CFE               	goto	l1604
  2207     04F7                     u1090:
  2208     04F7                     l1600:
  2209     04F7  0870               	movf	___awdiv@divisor,w
  2210     04F8  02F2               	subwf	___awdiv@dividend,f
  2211     04F9  0871               	movf	___awdiv@divisor+1,w
  2212     04FA  1C03               	skipc
  2213     04FB  03F3               	decf	___awdiv@dividend+1,f
  2214     04FC  02F3               	subwf	___awdiv@dividend+1,f
  2215     04FD                     l1602:
  2216     04FD  1477               	bsf	___awdiv@quotient,0
  2217     04FE                     l1604:
  2218     04FE  3001               	movlw	1
  2219     04FF                     u1105:
  2220     04FF  1003               	clrc
  2221     0500  0CF1               	rrf	___awdiv@divisor+1,f
  2222     0501  0CF0               	rrf	___awdiv@divisor,f
  2223     0502  3EFF               	addlw	-1
  2224     0503  1D03               	skipz
  2225     0504  2CFF               	goto	u1105
  2226     0505                     l1606:
  2227     0505  3001               	movlw	1
  2228     0506  02F5               	subwf	___awdiv@counter,f
  2229     0507  1D03               	btfss	3,2
  2230     0508  2D0A               	goto	u1111
  2231     0509  2D0B               	goto	u1110
  2232     050A                     u1111:
  2233     050A  2CE6               	goto	l1598
  2234     050B                     u1110:
  2235     050B                     l1608:
  2236     050B  0876               	movf	___awdiv@sign,w
  2237     050C  1903               	btfsc	3,2
  2238     050D  2D0F               	goto	u1121
  2239     050E  2D10               	goto	u1120
  2240     050F                     u1121:
  2241     050F  2D15               	goto	l1612
  2242     0510                     u1120:
  2243     0510                     l1610:
  2244     0510  09F7               	comf	___awdiv@quotient,f
  2245     0511  09F8               	comf	___awdiv@quotient+1,f
  2246     0512  0AF7               	incf	___awdiv@quotient,f
  2247     0513  1903               	skipnz
  2248     0514  0AF8               	incf	___awdiv@quotient+1,f
  2249     0515                     l1612:
  2250     0515  0878               	movf	___awdiv@quotient+1,w
  2251     0516  00F1               	movwf	?___awdiv+1
  2252     0517  0877               	movf	___awdiv@quotient,w
  2253     0518  00F0               	movwf	?___awdiv
  2254     0519                     l527:
  2255     0519  0008               	return
  2256     051A                     __end_of___awdiv:
  2257                           
  2258                           	psect	text6
  2259     0324                     __ptext6:	
  2260 ;; *************** function _Lcd_Write_String *****************
  2261 ;; Defined at:
  2262 ;;		line 98 in file "LCD.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;  a               2    5[COMMON] PTR unsigned char 
  2265 ;;		 -> STR_4(4), s3(20), s2(20), s(20), 
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;  i               2   10[COMMON] int 
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  1    wreg      void 
  2270 ;; Registers used:
  2271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2277 ;;      Params:         2       0       0       0       0
  2278 ;;      Locals:         2       0       0       0       0
  2279 ;;      Temps:          3       0       0       0       0
  2280 ;;      Totals:         7       0       0       0       0
  2281 ;;Total ram usage:        7 bytes
  2282 ;; Hardware stack levels used: 1
  2283 ;; Hardware stack levels required when called: 2
  2284 ;; This function calls:
  2285 ;;		_Lcd_Write_Char
  2286 ;; This function is called by:
  2287 ;;		_main
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291     0324                     _Lcd_Write_String:	
  2292                           ;psect for function _Lcd_Write_String
  2293                           
  2294     0324                     l1488:	
  2295                           ;incstack = 0
  2296                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2297                           
  2298                           
  2299                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  2300     0324  01FA               	clrf	Lcd_Write_String@i
  2301     0325  01FB               	clrf	Lcd_Write_String@i+1
  2302     0326  2B49               	goto	l1494
  2303     0327                     l1490:
  2304                           
  2305                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  2306     0327  087A               	movf	Lcd_Write_String@i,w
  2307     0328  0775               	addwf	Lcd_Write_String@a,w
  2308     0329  00F8               	movwf	??_Lcd_Write_String+1
  2309     032A  0876               	movf	Lcd_Write_String@a+1,w
  2310     032B  00F7               	movwf	??_Lcd_Write_String
  2311     032C  1803               	skipnc
  2312     032D  0AF7               	incf	??_Lcd_Write_String,f
  2313     032E  1FFA               	btfss	Lcd_Write_String@i,7
  2314     032F  2B31               	goto	u940
  2315     0330  03F7               	decf	??_Lcd_Write_String,f
  2316     0331                     u940:
  2317     0331  0877               	movf	??_Lcd_Write_String,w
  2318     0332  00F9               	movwf	??_Lcd_Write_String+2
  2319     0333  0879               	movf	??_Lcd_Write_String+2,w
  2320     0334  1283               	bcf	3,5	;RP0=0, select bank0
  2321     0335  1303               	bcf	3,6	;RP1=0, select bank0
  2322     0336  00FF               	movwf	btemp+1
  2323     0337  0878               	movf	??_Lcd_Write_String+1,w
  2324     0338  0084               	movwf	4
  2325     0339  120A  118A  2003  120A  118A  	fcall	stringtab
  2326     033E  120A  118A  22B5  120A  118A  	fcall	_Lcd_Write_Char
  2327     0343                     l1492:
  2328     0343  3001               	movlw	1
  2329     0344  07FA               	addwf	Lcd_Write_String@i,f
  2330     0345  1803               	skipnc
  2331     0346  0AFB               	incf	Lcd_Write_String@i+1,f
  2332     0347  3000               	movlw	0
  2333     0348  07FB               	addwf	Lcd_Write_String@i+1,f
  2334     0349                     l1494:
  2335     0349  087A               	movf	Lcd_Write_String@i,w
  2336     034A  0775               	addwf	Lcd_Write_String@a,w
  2337     034B  00F8               	movwf	??_Lcd_Write_String+1
  2338     034C  0876               	movf	Lcd_Write_String@a+1,w
  2339     034D  00F7               	movwf	??_Lcd_Write_String
  2340     034E  1803               	skipnc
  2341     034F  0AF7               	incf	??_Lcd_Write_String,f
  2342     0350  1FFA               	btfss	Lcd_Write_String@i,7
  2343     0351  2B53               	goto	u950
  2344     0352  03F7               	decf	??_Lcd_Write_String,f
  2345     0353                     u950:
  2346     0353  0877               	movf	??_Lcd_Write_String,w
  2347     0354  00F9               	movwf	??_Lcd_Write_String+2
  2348     0355  0879               	movf	??_Lcd_Write_String+2,w
  2349     0356  1283               	bcf	3,5	;RP0=0, select bank0
  2350     0357  1303               	bcf	3,6	;RP1=0, select bank0
  2351     0358  00FF               	movwf	btemp+1
  2352     0359  0878               	movf	??_Lcd_Write_String+1,w
  2353     035A  0084               	movwf	4
  2354     035B  120A  118A  2003  120A  118A  	fcall	stringtab
  2355     0360  3A00               	xorlw	0
  2356     0361  1D03               	skipz
  2357     0362  2B64               	goto	u961
  2358     0363  2B65               	goto	u960
  2359     0364                     u961:
  2360     0364  2B27               	goto	l1490
  2361     0365                     u960:
  2362     0365                     l104:
  2363     0365  0008               	return
  2364     0366                     __end_of_Lcd_Write_String:
  2365                           
  2366                           	psect	text7
  2367     02B5                     __ptext7:	
  2368 ;; *************** function _Lcd_Write_Char *****************
  2369 ;; Defined at:
  2370 ;;		line 83 in file "LCD.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;  a               1    wreg     unsigned char 
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;  a               1    4[COMMON] unsigned char 
  2375 ;;  y               1    3[COMMON] unsigned char 
  2376 ;;  temp            1    2[COMMON] unsigned char 
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  1    wreg      void 
  2379 ;; Registers used:
  2380 ;;		wreg, status,2, status,0, pclath, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2386 ;;      Params:         0       0       0       0       0
  2387 ;;      Locals:         3       0       0       0       0
  2388 ;;      Temps:          1       0       0       0       0
  2389 ;;      Totals:         4       0       0       0       0
  2390 ;;Total ram usage:        4 bytes
  2391 ;; Hardware stack levels used: 1
  2392 ;; Hardware stack levels required when called: 1
  2393 ;; This function calls:
  2394 ;;		_Lcd_Port
  2395 ;; This function is called by:
  2396 ;;		_Lcd_Write_String
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400     02B5                     _Lcd_Write_Char:	
  2401                           ;psect for function _Lcd_Write_Char
  2402                           
  2403                           
  2404                           ;incstack = 0
  2405                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2406                           ;Lcd_Write_Char@a stored from wreg
  2407     02B5  00F4               	movwf	Lcd_Write_Char@a
  2408     02B6                     l1332:
  2409                           
  2410                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  2411     02B6  0874               	movf	Lcd_Write_Char@a,w
  2412     02B7  390F               	andlw	15
  2413     02B8  00F2               	movwf	Lcd_Write_Char@temp
  2414                           
  2415                           ;LCD.c: 86:     y = a & 0xF0;
  2416     02B9  0874               	movf	Lcd_Write_Char@a,w
  2417     02BA  39F0               	andlw	240
  2418     02BB  00F3               	movwf	Lcd_Write_Char@y
  2419     02BC                     l1334:
  2420                           
  2421                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  2422     02BC  1283               	bcf	3,5	;RP0=0, select bank0
  2423     02BD  1303               	bcf	3,6	;RP1=0, select bank0
  2424     02BE  1508               	bsf	8,2	;volatile
  2425     02BF                     l1336:
  2426                           
  2427                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  2428     02BF  0873               	movf	Lcd_Write_Char@y,w
  2429     02C0  00F1               	movwf	??_Lcd_Write_Char
  2430     02C1  3004               	movlw	4
  2431     02C2                     u685:
  2432     02C2  1003               	clrc
  2433     02C3  0CF1               	rrf	??_Lcd_Write_Char,f
  2434     02C4  3EFF               	addlw	-1
  2435     02C5  1D03               	skipz
  2436     02C6  2AC2               	goto	u685
  2437     02C7  0871               	movf	??_Lcd_Write_Char,w
  2438     02C8  120A  118A  2234  120A  118A  	fcall	_Lcd_Port
  2439     02CD                     l1338:
  2440                           
  2441                           ;LCD.c: 89:     RD3 = 1;
  2442     02CD  1283               	bcf	3,5	;RP0=0, select bank0
  2443     02CE  1303               	bcf	3,6	;RP1=0, select bank0
  2444     02CF  1588               	bsf	8,3	;volatile
  2445     02D0                     l1340:
  2446                           
  2447                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2448     02D0  301A               	movlw	26
  2449     02D1  00F1               	movwf	??_Lcd_Write_Char
  2450     02D2                     u1207:
  2451     02D2  0BF1               	decfsz	??_Lcd_Write_Char,f
  2452     02D3  2AD2               	goto	u1207
  2453     02D4  0000               	nop
  2454     02D5                     l1342:
  2455                           
  2456                           ;LCD.c: 91:     RD3 = 0;
  2457     02D5  1283               	bcf	3,5	;RP0=0, select bank0
  2458     02D6  1303               	bcf	3,6	;RP1=0, select bank0
  2459     02D7  1188               	bcf	8,3	;volatile
  2460     02D8                     l1344:
  2461                           
  2462                           ;LCD.c: 92:     Lcd_Port(temp);
  2463     02D8  0872               	movf	Lcd_Write_Char@temp,w
  2464     02D9  120A  118A  2234  120A  118A  	fcall	_Lcd_Port
  2465     02DE                     l1346:
  2466                           
  2467                           ;LCD.c: 93:     RD3 = 1;
  2468     02DE  1283               	bcf	3,5	;RP0=0, select bank0
  2469     02DF  1303               	bcf	3,6	;RP1=0, select bank0
  2470     02E0  1588               	bsf	8,3	;volatile
  2471     02E1                     l1348:
  2472                           
  2473                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2474     02E1  301A               	movlw	26
  2475     02E2  00F1               	movwf	??_Lcd_Write_Char
  2476     02E3                     u1217:
  2477     02E3  0BF1               	decfsz	??_Lcd_Write_Char,f
  2478     02E4  2AE3               	goto	u1217
  2479     02E5  0000               	nop
  2480     02E6                     l1350:
  2481                           
  2482                           ;LCD.c: 95:     RD3 = 0;
  2483     02E6  1283               	bcf	3,5	;RP0=0, select bank0
  2484     02E7  1303               	bcf	3,6	;RP1=0, select bank0
  2485     02E8  1188               	bcf	8,3	;volatile
  2486     02E9                     l98:
  2487     02E9  0008               	return
  2488     02EA                     __end_of_Lcd_Write_Char:
  2489                           
  2490                           	psect	text8
  2491     03AA                     __ptext8:	
  2492 ;; *************** function _Lcd_Set_Cursor *****************
  2493 ;; Defined at:
  2494 ;;		line 48 in file "LCD.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;  a               1    wreg     unsigned char 
  2497 ;;  b               1    4[COMMON] unsigned char 
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;  a               1    6[COMMON] unsigned char 
  2500 ;;  temp            1    9[COMMON] unsigned char 
  2501 ;;  y               1    8[COMMON] unsigned char 
  2502 ;;  z               1    7[COMMON] unsigned char 
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  1    wreg      void 
  2505 ;; Registers used:
  2506 ;;		wreg, status,2, status,0, pclath, cstack
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2512 ;;      Params:         1       0       0       0       0
  2513 ;;      Locals:         4       0       0       0       0
  2514 ;;      Temps:          1       0       0       0       0
  2515 ;;      Totals:         6       0       0       0       0
  2516 ;;Total ram usage:        6 bytes
  2517 ;; Hardware stack levels used: 1
  2518 ;; Hardware stack levels required when called: 2
  2519 ;; This function calls:
  2520 ;;		_Lcd_Cmd
  2521 ;; This function is called by:
  2522 ;;		_main
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526     03AA                     _Lcd_Set_Cursor:	
  2527                           ;psect for function _Lcd_Set_Cursor
  2528                           
  2529                           
  2530                           ;incstack = 0
  2531                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2532                           ;Lcd_Set_Cursor@a stored from wreg
  2533     03AA  00F6               	movwf	Lcd_Set_Cursor@a
  2534     03AB                     l1458:
  2535                           
  2536                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2537     03AB  0376               	decf	Lcd_Set_Cursor@a,w
  2538     03AC  1D03               	btfss	3,2
  2539     03AD  2BAF               	goto	u901
  2540     03AE  2BB0               	goto	u900
  2541     03AF                     u901:
  2542     03AF  2BCD               	goto	l1468
  2543     03B0                     u900:
  2544     03B0                     l1460:
  2545                           
  2546                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2547     03B0  0874               	movf	Lcd_Set_Cursor@b,w
  2548     03B1  3E7F               	addlw	127
  2549     03B2  00F9               	movwf	Lcd_Set_Cursor@temp
  2550                           
  2551                           ;LCD.c: 52:         z = temp >> 4;
  2552     03B3  0879               	movf	Lcd_Set_Cursor@temp,w
  2553     03B4  00F5               	movwf	??_Lcd_Set_Cursor
  2554     03B5  3004               	movlw	4
  2555     03B6                     u915:
  2556     03B6  1003               	clrc
  2557     03B7  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2558     03B8  3EFF               	addlw	-1
  2559     03B9  1D03               	skipz
  2560     03BA  2BB6               	goto	u915
  2561     03BB  0875               	movf	??_Lcd_Set_Cursor,w
  2562     03BC  00F7               	movwf	Lcd_Set_Cursor@z
  2563     03BD                     l1462:
  2564                           
  2565                           ;LCD.c: 53:         y = temp & 0x0F;
  2566     03BD  0879               	movf	Lcd_Set_Cursor@temp,w
  2567     03BE  390F               	andlw	15
  2568     03BF  00F8               	movwf	Lcd_Set_Cursor@y
  2569     03C0                     l1464:
  2570                           
  2571                           ;LCD.c: 54:         Lcd_Cmd(z);
  2572     03C0  0877               	movf	Lcd_Set_Cursor@z,w
  2573     03C1  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2574     03C6                     l1466:
  2575                           
  2576                           ;LCD.c: 55:         Lcd_Cmd(y);
  2577     03C6  0878               	movf	Lcd_Set_Cursor@y,w
  2578     03C7  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2579                           
  2580                           ;LCD.c: 56:     } else if (a == 2) {
  2581     03CC  2BEF               	goto	l92
  2582     03CD                     l1468:
  2583     03CD  3002               	movlw	2
  2584     03CE  0676               	xorwf	Lcd_Set_Cursor@a,w
  2585     03CF  1D03               	btfss	3,2
  2586     03D0  2BD2               	goto	u921
  2587     03D1  2BD3               	goto	u920
  2588     03D2                     u921:
  2589     03D2  2BEF               	goto	l92
  2590     03D3                     u920:
  2591     03D3                     l1470:
  2592                           
  2593                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2594     03D3  0874               	movf	Lcd_Set_Cursor@b,w
  2595     03D4  3EBF               	addlw	191
  2596     03D5  00F9               	movwf	Lcd_Set_Cursor@temp
  2597                           
  2598                           ;LCD.c: 58:         z = temp >> 4;
  2599     03D6  0879               	movf	Lcd_Set_Cursor@temp,w
  2600     03D7  00F5               	movwf	??_Lcd_Set_Cursor
  2601     03D8  3004               	movlw	4
  2602     03D9                     u935:
  2603     03D9  1003               	clrc
  2604     03DA  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2605     03DB  3EFF               	addlw	-1
  2606     03DC  1D03               	skipz
  2607     03DD  2BD9               	goto	u935
  2608     03DE  0875               	movf	??_Lcd_Set_Cursor,w
  2609     03DF  00F7               	movwf	Lcd_Set_Cursor@z
  2610     03E0                     l1472:
  2611                           
  2612                           ;LCD.c: 59:         y = temp & 0x0F;
  2613     03E0  0879               	movf	Lcd_Set_Cursor@temp,w
  2614     03E1  390F               	andlw	15
  2615     03E2  00F8               	movwf	Lcd_Set_Cursor@y
  2616     03E3                     l1474:
  2617                           
  2618                           ;LCD.c: 60:         Lcd_Cmd(z);
  2619     03E3  0877               	movf	Lcd_Set_Cursor@z,w
  2620     03E4  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2621     03E9                     l1476:
  2622                           
  2623                           ;LCD.c: 61:         Lcd_Cmd(y);
  2624     03E9  0878               	movf	Lcd_Set_Cursor@y,w
  2625     03EA  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2626     03EF                     l92:
  2627     03EF  0008               	return
  2628     03F0                     __end_of_Lcd_Set_Cursor:
  2629                           
  2630                           	psect	text9
  2631     03F0                     __ptext9:	
  2632 ;; *************** function _Lcd_Init *****************
  2633 ;; Defined at:
  2634 ;;		line 65 in file "LCD.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;		None
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;		None
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      void 
  2641 ;; Registers used:
  2642 ;;		wreg, status,2, status,0, pclath, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2648 ;;      Params:         0       0       0       0       0
  2649 ;;      Locals:         0       0       0       0       0
  2650 ;;      Temps:          2       0       0       0       0
  2651 ;;      Totals:         2       0       0       0       0
  2652 ;;Total ram usage:        2 bytes
  2653 ;; Hardware stack levels used: 1
  2654 ;; Hardware stack levels required when called: 2
  2655 ;; This function calls:
  2656 ;;		_Lcd_Cmd
  2657 ;;		_Lcd_Port
  2658 ;; This function is called by:
  2659 ;;		_main
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663     03F0                     _Lcd_Init:	
  2664                           ;psect for function _Lcd_Init
  2665                           
  2666     03F0                     l1478:	
  2667                           ;incstack = 0
  2668                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2669                           
  2670                           
  2671                           ;LCD.c: 66:     Lcd_Port(0x00);
  2672     03F0  3000               	movlw	0
  2673     03F1  120A  118A  2234  120A  118A  	fcall	_Lcd_Port
  2674     03F6                     l1480:
  2675                           
  2676                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2677     03F6  3034               	movlw	52
  2678     03F7  00F5               	movwf	??_Lcd_Init+1
  2679     03F8  30F1               	movlw	241
  2680     03F9  00F4               	movwf	??_Lcd_Init
  2681     03FA                     u1227:
  2682     03FA  0BF4               	decfsz	??_Lcd_Init,f
  2683     03FB  2BFA               	goto	u1227
  2684     03FC  0BF5               	decfsz	??_Lcd_Init+1,f
  2685     03FD  2BFA               	goto	u1227
  2686     03FE  2BFF               	nop2
  2687     03FF                     l1482:
  2688                           
  2689                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2690     03FF  3003               	movlw	3
  2691     0400  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2692                           
  2693                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2694     0405  300D               	movlw	13
  2695     0406  00F5               	movwf	??_Lcd_Init+1
  2696     0407  30FB               	movlw	251
  2697     0408  00F4               	movwf	??_Lcd_Init
  2698     0409                     u1237:
  2699     0409  0BF4               	decfsz	??_Lcd_Init,f
  2700     040A  2C09               	goto	u1237
  2701     040B  0BF5               	decfsz	??_Lcd_Init+1,f
  2702     040C  2C09               	goto	u1237
  2703     040D  2C0E               	nop2
  2704     040E                     l1484:
  2705                           
  2706                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2707     040E  3003               	movlw	3
  2708     040F  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2709     0414                     l1486:
  2710                           
  2711                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2712     0414  301D               	movlw	29
  2713     0415  00F5               	movwf	??_Lcd_Init+1
  2714     0416  3091               	movlw	145
  2715     0417  00F4               	movwf	??_Lcd_Init
  2716     0418                     u1247:
  2717     0418  0BF4               	decfsz	??_Lcd_Init,f
  2718     0419  2C18               	goto	u1247
  2719     041A  0BF5               	decfsz	??_Lcd_Init+1,f
  2720     041B  2C18               	goto	u1247
  2721                           
  2722                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2723     041C  3003               	movlw	3
  2724     041D  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2725                           
  2726                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2727     0422  3002               	movlw	2
  2728     0423  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2729                           
  2730                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  2731     0428  3002               	movlw	2
  2732     0429  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2733                           
  2734                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  2735     042E  3008               	movlw	8
  2736     042F  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2737                           
  2738                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  2739     0434  3000               	movlw	0
  2740     0435  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2741                           
  2742                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  2743     043A  300C               	movlw	12
  2744     043B  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2745                           
  2746                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  2747     0440  3000               	movlw	0
  2748     0441  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2749                           
  2750                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  2751     0446  3006               	movlw	6
  2752     0447  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2753     044C                     l95:
  2754     044C  0008               	return
  2755     044D                     __end_of_Lcd_Init:
  2756                           
  2757                           	psect	text10
  2758     01F3                     __ptext10:	
  2759 ;; *************** function _Lcd_Clear *****************
  2760 ;; Defined at:
  2761 ;;		line 43 in file "LCD.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;		None
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;		None
  2766 ;; Return value:  Size  Location     Type
  2767 ;;                  1    wreg      void 
  2768 ;; Registers used:
  2769 ;;		wreg, status,2, status,0, pclath, cstack
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2775 ;;      Params:         0       0       0       0       0
  2776 ;;      Locals:         0       0       0       0       0
  2777 ;;      Temps:          0       0       0       0       0
  2778 ;;      Totals:         0       0       0       0       0
  2779 ;;Total ram usage:        0 bytes
  2780 ;; Hardware stack levels used: 1
  2781 ;; Hardware stack levels required when called: 2
  2782 ;; This function calls:
  2783 ;;		_Lcd_Cmd
  2784 ;; This function is called by:
  2785 ;;		_main
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789     01F3                     _Lcd_Clear:	
  2790                           ;psect for function _Lcd_Clear
  2791                           
  2792     01F3                     l1456:	
  2793                           ;incstack = 0
  2794                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2795                           
  2796                           
  2797                           ;LCD.c: 44:     Lcd_Cmd(0);
  2798     01F3  3000               	movlw	0
  2799     01F4  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2800                           
  2801                           ;LCD.c: 45:     Lcd_Cmd(1);
  2802     01F9  3001               	movlw	1
  2803     01FA  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2804     01FF                     l86:
  2805     01FF  0008               	return
  2806     0200                     __end_of_Lcd_Clear:
  2807                           
  2808                           	psect	text11
  2809     0200                     __ptext11:	
  2810 ;; *************** function _Lcd_Cmd *****************
  2811 ;; Defined at:
  2812 ;;		line 35 in file "LCD.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  a               1    wreg     unsigned char 
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;  a               1    3[COMMON] unsigned char 
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  1    wreg      void 
  2819 ;; Registers used:
  2820 ;;		wreg, status,2, status,0, pclath, cstack
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2826 ;;      Params:         0       0       0       0       0
  2827 ;;      Locals:         1       0       0       0       0
  2828 ;;      Temps:          2       0       0       0       0
  2829 ;;      Totals:         3       0       0       0       0
  2830 ;;Total ram usage:        3 bytes
  2831 ;; Hardware stack levels used: 1
  2832 ;; Hardware stack levels required when called: 1
  2833 ;; This function calls:
  2834 ;;		_Lcd_Port
  2835 ;; This function is called by:
  2836 ;;		_Lcd_Clear
  2837 ;;		_Lcd_Set_Cursor
  2838 ;;		_Lcd_Init
  2839 ;;		_Lcd_Shift_Right
  2840 ;;		_Lcd_Shift_Left
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844     0200                     _Lcd_Cmd:	
  2845                           ;psect for function _Lcd_Cmd
  2846                           
  2847                           
  2848                           ;incstack = 0
  2849                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2850                           ;Lcd_Cmd@a stored from wreg
  2851     0200  00F3               	movwf	Lcd_Cmd@a
  2852     0201                     l1322:
  2853                           
  2854                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  2855     0201  1283               	bcf	3,5	;RP0=0, select bank0
  2856     0202  1303               	bcf	3,6	;RP1=0, select bank0
  2857     0203  1108               	bcf	8,2	;volatile
  2858     0204                     l1324:
  2859                           
  2860                           ;LCD.c: 37:     Lcd_Port(a);
  2861     0204  0873               	movf	Lcd_Cmd@a,w
  2862     0205  120A  118A  2234  120A  118A  	fcall	_Lcd_Port
  2863     020A                     l1326:
  2864                           
  2865                           ;LCD.c: 38:     RD3 = 1;
  2866     020A  1283               	bcf	3,5	;RP0=0, select bank0
  2867     020B  1303               	bcf	3,6	;RP1=0, select bank0
  2868     020C  1588               	bsf	8,3	;volatile
  2869     020D                     l1328:
  2870                           
  2871                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2872     020D  300B               	movlw	11
  2873     020E  00F2               	movwf	??_Lcd_Cmd+1
  2874     020F  3062               	movlw	98
  2875     0210  00F1               	movwf	??_Lcd_Cmd
  2876     0211                     u1257:
  2877     0211  0BF1               	decfsz	??_Lcd_Cmd,f
  2878     0212  2A11               	goto	u1257
  2879     0213  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2880     0214  2A11               	goto	u1257
  2881     0215  0000               	nop
  2882     0216                     l1330:
  2883                           
  2884                           ;LCD.c: 40:     RD3 = 0;
  2885     0216  1283               	bcf	3,5	;RP0=0, select bank0
  2886     0217  1303               	bcf	3,6	;RP1=0, select bank0
  2887     0218  1188               	bcf	8,3	;volatile
  2888     0219                     l83:
  2889     0219  0008               	return
  2890     021A                     __end_of_Lcd_Cmd:
  2891                           
  2892                           	psect	text12
  2893     0234                     __ptext12:	
  2894 ;; *************** function _Lcd_Port *****************
  2895 ;; Defined at:
  2896 ;;		line 13 in file "LCD.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;  a               1    wreg     unsigned char 
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;  a               1    0[COMMON] unsigned char 
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  1    wreg      void 
  2903 ;; Registers used:
  2904 ;;		wreg
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2910 ;;      Params:         0       0       0       0       0
  2911 ;;      Locals:         1       0       0       0       0
  2912 ;;      Temps:          0       0       0       0       0
  2913 ;;      Totals:         1       0       0       0       0
  2914 ;;Total ram usage:        1 bytes
  2915 ;; Hardware stack levels used: 1
  2916 ;; This function calls:
  2917 ;;		Nothing
  2918 ;; This function is called by:
  2919 ;;		_Lcd_Cmd
  2920 ;;		_Lcd_Init
  2921 ;;		_Lcd_Write_Char
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925     0234                     _Lcd_Port:	
  2926                           ;psect for function _Lcd_Port
  2927                           
  2928                           
  2929                           ;incstack = 0
  2930                           ; Regs used in _Lcd_Port: [wreg]
  2931                           ;Lcd_Port@a stored from wreg
  2932     0234  00F0               	movwf	Lcd_Port@a
  2933     0235                     l1308:
  2934                           
  2935                           ;LCD.c: 14:     if (a & 1)
  2936     0235  1C70               	btfss	Lcd_Port@a,0
  2937     0236  2A38               	goto	u621
  2938     0237  2A39               	goto	u620
  2939     0238                     u621:
  2940     0238  2A3D               	goto	l72
  2941     0239                     u620:
  2942     0239                     l1310:
  2943                           
  2944                           ;LCD.c: 15:         RD4 = 1;
  2945     0239  1283               	bcf	3,5	;RP0=0, select bank0
  2946     023A  1303               	bcf	3,6	;RP1=0, select bank0
  2947     023B  1608               	bsf	8,4	;volatile
  2948     023C  2A40               	goto	l73
  2949     023D                     l72:	
  2950                           ;LCD.c: 16:     else
  2951                           
  2952                           
  2953                           ;LCD.c: 17:         RD4 = 0;
  2954     023D  1283               	bcf	3,5	;RP0=0, select bank0
  2955     023E  1303               	bcf	3,6	;RP1=0, select bank0
  2956     023F  1208               	bcf	8,4	;volatile
  2957     0240                     l73:
  2958                           
  2959                           ;LCD.c: 19:     if (a & 2)
  2960     0240  1CF0               	btfss	Lcd_Port@a,1
  2961     0241  2A43               	goto	u631
  2962     0242  2A44               	goto	u630
  2963     0243                     u631:
  2964     0243  2A46               	goto	l74
  2965     0244                     u630:
  2966     0244                     l1312:
  2967                           
  2968                           ;LCD.c: 20:         RD5 = 1;
  2969     0244  1688               	bsf	8,5	;volatile
  2970     0245  2A47               	goto	l75
  2971     0246                     l74:	
  2972                           ;LCD.c: 21:     else
  2973                           
  2974                           
  2975                           ;LCD.c: 22:         RD5 = 0;
  2976     0246  1288               	bcf	8,5	;volatile
  2977     0247                     l75:
  2978                           
  2979                           ;LCD.c: 24:     if (a & 4)
  2980     0247  1D70               	btfss	Lcd_Port@a,2
  2981     0248  2A4A               	goto	u641
  2982     0249  2A4B               	goto	u640
  2983     024A                     u641:
  2984     024A  2A4D               	goto	l76
  2985     024B                     u640:
  2986     024B                     l1314:
  2987                           
  2988                           ;LCD.c: 25:         RD6 = 1;
  2989     024B  1708               	bsf	8,6	;volatile
  2990     024C  2A4E               	goto	l77
  2991     024D                     l76:	
  2992                           ;LCD.c: 26:     else
  2993                           
  2994                           
  2995                           ;LCD.c: 27:         RD6 = 0;
  2996     024D  1308               	bcf	8,6	;volatile
  2997     024E                     l77:
  2998                           
  2999                           ;LCD.c: 29:     if (a & 8)
  3000     024E  1DF0               	btfss	Lcd_Port@a,3
  3001     024F  2A51               	goto	u651
  3002     0250  2A52               	goto	u650
  3003     0251                     u651:
  3004     0251  2A54               	goto	l78
  3005     0252                     u650:
  3006     0252                     l1316:
  3007                           
  3008                           ;LCD.c: 30:         RD7 = 1;
  3009     0252  1788               	bsf	8,7	;volatile
  3010     0253  2A55               	goto	l80
  3011     0254                     l78:	
  3012                           ;LCD.c: 31:     else
  3013                           
  3014                           
  3015                           ;LCD.c: 32:         RD7 = 0;
  3016     0254  1388               	bcf	8,7	;volatile
  3017     0255                     l80:
  3018     0255  0008               	return
  3019     0256                     __end_of_Lcd_Port:
  3020                           
  3021                           	psect	text13
  3022     01DC                     __ptext13:	
  3023 ;; *************** function _I2C_Master_Write *****************
  3024 ;; Defined at:
  3025 ;;		line 65 in file "I2C.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;  d               2    0[COMMON] unsigned int 
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;		None
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  1    wreg      void 
  3032 ;; Registers used:
  3033 ;;		wreg, status,2, status,0, pclath, cstack
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3039 ;;      Params:         2       0       0       0       0
  3040 ;;      Locals:         0       0       0       0       0
  3041 ;;      Temps:          0       0       0       0       0
  3042 ;;      Totals:         2       0       0       0       0
  3043 ;;Total ram usage:        2 bytes
  3044 ;; Hardware stack levels used: 1
  3045 ;; Hardware stack levels required when called: 1
  3046 ;; This function calls:
  3047 ;;		_I2C_Master_Wait
  3048 ;; This function is called by:
  3049 ;;		_main
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053     01DC                     _I2C_Master_Write:	
  3054                           ;psect for function _I2C_Master_Write
  3055                           
  3056     01DC                     l1436:	
  3057                           ;incstack = 0
  3058                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3059                           
  3060                           
  3061                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3062     01DC  120A  118A  21E6  120A  118A  	fcall	_I2C_Master_Wait
  3063     01E1                     l1438:
  3064                           
  3065                           ;I2C.c: 68:     SSPBUF = d;
  3066     01E1  0870               	movf	I2C_Master_Write@d,w
  3067     01E2  1283               	bcf	3,5	;RP0=0, select bank0
  3068     01E3  1303               	bcf	3,6	;RP1=0, select bank0
  3069     01E4  0093               	movwf	19	;volatile
  3070     01E5                     l47:
  3071     01E5  0008               	return
  3072     01E6                     __end_of_I2C_Master_Write:
  3073                           
  3074                           	psect	text14
  3075     01D3                     __ptext14:	
  3076 ;; *************** function _I2C_Master_Stop *****************
  3077 ;; Defined at:
  3078 ;;		line 55 in file "I2C.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;		None
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;		None
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  1    wreg      void 
  3085 ;; Registers used:
  3086 ;;		wreg, status,2, status,0, pclath, cstack
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3092 ;;      Params:         0       0       0       0       0
  3093 ;;      Locals:         0       0       0       0       0
  3094 ;;      Temps:          0       0       0       0       0
  3095 ;;      Totals:         0       0       0       0       0
  3096 ;;Total ram usage:        0 bytes
  3097 ;; Hardware stack levels used: 1
  3098 ;; Hardware stack levels required when called: 1
  3099 ;; This function calls:
  3100 ;;		_I2C_Master_Wait
  3101 ;; This function is called by:
  3102 ;;		_main
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           
  3106     01D3                     _I2C_Master_Stop:	
  3107                           ;psect for function _I2C_Master_Stop
  3108                           
  3109     01D3                     l1432:	
  3110                           ;incstack = 0
  3111                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3112                           
  3113                           
  3114                           ;I2C.c: 57:     I2C_Master_Wait();
  3115     01D3  120A  118A  21E6  120A  118A  	fcall	_I2C_Master_Wait
  3116     01D8                     l1434:
  3117                           
  3118                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3119     01D8  1683               	bsf	3,5	;RP0=1, select bank1
  3120     01D9  1303               	bcf	3,6	;RP1=0, select bank1
  3121     01DA  1511               	bsf	17,2	;volatile
  3122     01DB                     l44:
  3123     01DB  0008               	return
  3124     01DC                     __end_of_I2C_Master_Stop:
  3125                           
  3126                           	psect	text15
  3127     01CA                     __ptext15:	
  3128 ;; *************** function _I2C_Master_Start *****************
  3129 ;; Defined at:
  3130 ;;		line 39 in file "I2C.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;		None
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;		None
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  1    wreg      void 
  3137 ;; Registers used:
  3138 ;;		wreg, status,2, status,0, pclath, cstack
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3144 ;;      Params:         0       0       0       0       0
  3145 ;;      Locals:         0       0       0       0       0
  3146 ;;      Temps:          0       0       0       0       0
  3147 ;;      Totals:         0       0       0       0       0
  3148 ;;Total ram usage:        0 bytes
  3149 ;; Hardware stack levels used: 1
  3150 ;; Hardware stack levels required when called: 1
  3151 ;; This function calls:
  3152 ;;		_I2C_Master_Wait
  3153 ;; This function is called by:
  3154 ;;		_main
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158     01CA                     _I2C_Master_Start:	
  3159                           ;psect for function _I2C_Master_Start
  3160                           
  3161     01CA                     l1424:	
  3162                           ;incstack = 0
  3163                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3164                           
  3165                           
  3166                           ;I2C.c: 41:     I2C_Master_Wait();
  3167     01CA  120A  118A  21E6  120A  118A  	fcall	_I2C_Master_Wait
  3168     01CF                     l1426:
  3169                           
  3170                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3171     01CF  1683               	bsf	3,5	;RP0=1, select bank1
  3172     01D0  1303               	bcf	3,6	;RP1=0, select bank1
  3173     01D1  1411               	bsf	17,0	;volatile
  3174     01D2                     l38:
  3175     01D2  0008               	return
  3176     01D3                     __end_of_I2C_Master_Start:
  3177                           
  3178                           	psect	text16
  3179     01C1                     __ptext16:	
  3180 ;; *************** function _I2C_Master_RepeatedStart *****************
  3181 ;; Defined at:
  3182 ;;		line 47 in file "I2C.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;		None
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;		None
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  1    wreg      void 
  3189 ;; Registers used:
  3190 ;;		wreg, status,2, status,0, pclath, cstack
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3196 ;;      Params:         0       0       0       0       0
  3197 ;;      Locals:         0       0       0       0       0
  3198 ;;      Temps:          0       0       0       0       0
  3199 ;;      Totals:         0       0       0       0       0
  3200 ;;Total ram usage:        0 bytes
  3201 ;; Hardware stack levels used: 1
  3202 ;; Hardware stack levels required when called: 1
  3203 ;; This function calls:
  3204 ;;		_I2C_Master_Wait
  3205 ;; This function is called by:
  3206 ;;		_main
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210     01C1                     _I2C_Master_RepeatedStart:	
  3211                           ;psect for function _I2C_Master_RepeatedStart
  3212                           
  3213     01C1                     l1428:	
  3214                           ;incstack = 0
  3215                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3216                           
  3217                           
  3218                           ;I2C.c: 49:     I2C_Master_Wait();
  3219     01C1  120A  118A  21E6  120A  118A  	fcall	_I2C_Master_Wait
  3220     01C6                     l1430:
  3221                           
  3222                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  3223     01C6  1683               	bsf	3,5	;RP0=1, select bank1
  3224     01C7  1303               	bcf	3,6	;RP1=0, select bank1
  3225     01C8  1491               	bsf	17,1	;volatile
  3226     01C9                     l41:
  3227     01C9  0008               	return
  3228     01CA                     __end_of_I2C_Master_RepeatedStart:
  3229                           
  3230                           	psect	text17
  3231     0256                     __ptext17:	
  3232 ;; *************** function _I2C_Master_Read *****************
  3233 ;; Defined at:
  3234 ;;		line 74 in file "I2C.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;  a               2    0[COMMON] unsigned short 
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;  temp            2    4[COMMON] unsigned short 
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  2    0[COMMON] unsigned short 
  3241 ;; Registers used:
  3242 ;;		wreg, status,2, status,0, pclath, cstack
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3248 ;;      Params:         2       0       0       0       0
  3249 ;;      Locals:         2       0       0       0       0
  3250 ;;      Temps:          2       0       0       0       0
  3251 ;;      Totals:         6       0       0       0       0
  3252 ;;Total ram usage:        6 bytes
  3253 ;; Hardware stack levels used: 1
  3254 ;; Hardware stack levels required when called: 1
  3255 ;; This function calls:
  3256 ;;		_I2C_Master_Wait
  3257 ;; This function is called by:
  3258 ;;		_main
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262     0256                     _I2C_Master_Read:	
  3263                           ;psect for function _I2C_Master_Read
  3264                           
  3265     0256                     l1440:	
  3266                           ;incstack = 0
  3267                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3268                           
  3269                           
  3270                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3271     0256  120A  118A  21E6  120A  118A  	fcall	_I2C_Master_Wait
  3272     025B                     l1442:
  3273                           
  3274                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3275     025B  1683               	bsf	3,5	;RP0=1, select bank1
  3276     025C  1303               	bcf	3,6	;RP1=0, select bank1
  3277     025D  1591               	bsf	17,3	;volatile
  3278                           
  3279                           ;I2C.c: 79:     I2C_Master_Wait();
  3280     025E  120A  118A  21E6  120A  118A  	fcall	_I2C_Master_Wait
  3281     0263                     l1444:
  3282                           
  3283                           ;I2C.c: 80:     temp = SSPBUF;
  3284     0263  1283               	bcf	3,5	;RP0=0, select bank0
  3285     0264  1303               	bcf	3,6	;RP1=0, select bank0
  3286     0265  0813               	movf	19,w	;volatile
  3287     0266  00F2               	movwf	??_I2C_Master_Read
  3288     0267  01F3               	clrf	??_I2C_Master_Read+1
  3289     0268  0872               	movf	??_I2C_Master_Read,w
  3290     0269  00F4               	movwf	I2C_Master_Read@temp
  3291     026A  0873               	movf	??_I2C_Master_Read+1,w
  3292     026B  00F5               	movwf	I2C_Master_Read@temp+1
  3293     026C                     l1446:
  3294                           
  3295                           ;I2C.c: 81:     I2C_Master_Wait();
  3296     026C  120A  118A  21E6  120A  118A  	fcall	_I2C_Master_Wait
  3297     0271                     l1448:
  3298                           
  3299                           ;I2C.c: 82:     if(a == 1){
  3300     0271  0370               	decf	I2C_Master_Read@a,w
  3301     0272  0471               	iorwf	I2C_Master_Read@a+1,w
  3302     0273  1D03               	btfss	3,2
  3303     0274  2A76               	goto	u891
  3304     0275  2A77               	goto	u890
  3305     0276                     u891:
  3306     0276  2A7B               	goto	l50
  3307     0277                     u890:
  3308     0277                     l1450:
  3309                           
  3310                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3311     0277  1683               	bsf	3,5	;RP0=1, select bank1
  3312     0278  1303               	bcf	3,6	;RP1=0, select bank1
  3313     0279  1291               	bcf	17,5	;volatile
  3314                           
  3315                           ;I2C.c: 84:     }else{
  3316     027A  2A7E               	goto	l51
  3317     027B                     l50:
  3318                           
  3319                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3320     027B  1683               	bsf	3,5	;RP0=1, select bank1
  3321     027C  1303               	bcf	3,6	;RP1=0, select bank1
  3322     027D  1691               	bsf	17,5	;volatile
  3323     027E                     l51:	
  3324                           ;I2C.c: 86:     }
  3325                           
  3326                           
  3327                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3328     027E  1611               	bsf	17,4	;volatile
  3329     027F                     l1452:
  3330                           
  3331                           ;I2C.c: 88:     return temp;
  3332     027F  0875               	movf	I2C_Master_Read@temp+1,w
  3333     0280  00F1               	movwf	?_I2C_Master_Read+1
  3334     0281  0874               	movf	I2C_Master_Read@temp,w
  3335     0282  00F0               	movwf	?_I2C_Master_Read
  3336     0283                     l52:
  3337     0283  0008               	return
  3338     0284                     __end_of_I2C_Master_Read:
  3339                           
  3340                           	psect	text18
  3341     01E6                     __ptext18:	
  3342 ;; *************** function _I2C_Master_Wait *****************
  3343 ;; Defined at:
  3344 ;;		line 32 in file "I2C.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;		None
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;		None
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1    wreg      void 
  3351 ;; Registers used:
  3352 ;;		wreg, status,2
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3358 ;;      Params:         0       0       0       0       0
  3359 ;;      Locals:         0       0       0       0       0
  3360 ;;      Temps:          0       0       0       0       0
  3361 ;;      Totals:         0       0       0       0       0
  3362 ;;Total ram usage:        0 bytes
  3363 ;; Hardware stack levels used: 1
  3364 ;; This function calls:
  3365 ;;		Nothing
  3366 ;; This function is called by:
  3367 ;;		_I2C_Master_Start
  3368 ;;		_I2C_Master_RepeatedStart
  3369 ;;		_I2C_Master_Stop
  3370 ;;		_I2C_Master_Write
  3371 ;;		_I2C_Master_Read
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375     01E6                     _I2C_Master_Wait:	
  3376                           ;psect for function _I2C_Master_Wait
  3377                           
  3378     01E6                     l1318:	
  3379                           ;incstack = 0
  3380                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3381                           
  3382     01E6                     l32:	
  3383                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3384                           
  3385     01E6  1683               	bsf	3,5	;RP0=1, select bank1
  3386     01E7  1303               	bcf	3,6	;RP1=0, select bank1
  3387     01E8  1914               	btfsc	20,2	;volatile
  3388     01E9  29EB               	goto	u661
  3389     01EA  29EC               	goto	u660
  3390     01EB                     u661:
  3391     01EB  29E6               	goto	l32
  3392     01EC                     u660:
  3393     01EC                     l1320:
  3394     01EC  0811               	movf	17,w	;volatile
  3395     01ED  391F               	andlw	31
  3396     01EE  1D03               	btfss	3,2
  3397     01EF  29F1               	goto	u671
  3398     01F0  29F2               	goto	u670
  3399     01F1                     u671:
  3400     01F1  29E6               	goto	l32
  3401     01F2                     u670:
  3402     01F2                     l35:
  3403     01F2  0008               	return
  3404     01F3                     __end_of_I2C_Master_Wait:
  3405                           
  3406                           	psect	text19
  3407     0284                     __ptext19:	
  3408 ;; *************** function _I2C_Init *****************
  3409 ;; Defined at:
  3410 ;;		line 62 in file "pruebaADXL345.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;  i2c_clk_freq    4    0[BANK0 ] unsigned long 
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;		None
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1    wreg      void 
  3417 ;; Registers used:
  3418 ;;		wreg, status,2, status,0, pclath, cstack
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3424 ;;      Params:         0       4       0       0       0
  3425 ;;      Locals:         0       0       0       0       0
  3426 ;;      Temps:          0       4       0       0       0
  3427 ;;      Totals:         0       8       0       0       0
  3428 ;;Total ram usage:        8 bytes
  3429 ;; Hardware stack levels used: 1
  3430 ;; Hardware stack levels required when called: 1
  3431 ;; This function calls:
  3432 ;;		___lldiv
  3433 ;; This function is called by:
  3434 ;;		_main
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438     0284                     _I2C_Init:	
  3439                           ;psect for function _I2C_Init
  3440                           
  3441     0284                     l1496:	
  3442                           ;incstack = 0
  3443                           ; Regs used in _I2C_Init: [wreg+status,2+status,0+pclath+cstack]
  3444                           
  3445                           
  3446                           ;pruebaADXL345.c: 62: void I2C_Init(uint32_t i2c_clk_freq);pruebaADXL345.c: 64: {;prueba
      +                          ADXL345.c: 65:   SSPCON = 0x28;
  3447     0284  3028               	movlw	40
  3448     0285  1283               	bcf	3,5	;RP0=0, select bank0
  3449     0286  1303               	bcf	3,6	;RP1=0, select bank0
  3450     0287  0094               	movwf	20	;volatile
  3451     0288                     l1498:
  3452                           
  3453                           ;pruebaADXL345.c: 66:   SSPADD = (8000000/(4 * i2c_clk_freq)) - 1;
  3454     0288  0853               	movf	I2C_Init@i2c_clk_freq,w
  3455     0289  00D7               	movwf	??_I2C_Init
  3456     028A  0854               	movf	I2C_Init@i2c_clk_freq+1,w
  3457     028B  00D8               	movwf	??_I2C_Init+1
  3458     028C  0855               	movf	I2C_Init@i2c_clk_freq+2,w
  3459     028D  00D9               	movwf	??_I2C_Init+2
  3460     028E  0856               	movf	I2C_Init@i2c_clk_freq+3,w
  3461     028F  00DA               	movwf	??_I2C_Init+3
  3462     0290  3002               	movlw	2
  3463     0291                     u975:
  3464     0291  1003               	clrc
  3465     0292  0DD7               	rlf	??_I2C_Init,f
  3466     0293  0DD8               	rlf	??_I2C_Init+1,f
  3467     0294  0DD9               	rlf	??_I2C_Init+2,f
  3468     0295  0DDA               	rlf	??_I2C_Init+3,f
  3469     0296                     u970:
  3470     0296  3EFF               	addlw	-1
  3471     0297  1D03               	skipz
  3472     0298  2A91               	goto	u975
  3473     0299  085A               	movf	??_I2C_Init+3,w
  3474     029A  00F3               	movwf	___lldiv@divisor+3
  3475     029B  0859               	movf	??_I2C_Init+2,w
  3476     029C  00F2               	movwf	___lldiv@divisor+2
  3477     029D  0858               	movf	??_I2C_Init+1,w
  3478     029E  00F1               	movwf	___lldiv@divisor+1
  3479     029F  0857               	movf	??_I2C_Init,w
  3480     02A0  00F0               	movwf	___lldiv@divisor
  3481     02A1  3000               	movlw	0
  3482     02A2  00F7               	movwf	___lldiv@dividend+3
  3483     02A3  307A               	movlw	122
  3484     02A4  00F6               	movwf	___lldiv@dividend+2
  3485     02A5  3012               	movlw	18
  3486     02A6  00F5               	movwf	___lldiv@dividend+1
  3487     02A7  3000               	movlw	0
  3488     02A8  00F4               	movwf	___lldiv@dividend
  3489     02A9  120A  118A  244D  120A  118A  	fcall	___lldiv
  3490     02AE  0870               	movf	?___lldiv,w
  3491     02AF  3EFF               	addlw	255
  3492     02B0  1683               	bsf	3,5	;RP0=1, select bank1
  3493     02B1  1303               	bcf	3,6	;RP1=0, select bank1
  3494     02B2  0093               	movwf	19	;volatile
  3495     02B3                     l1500:
  3496                           
  3497                           ;pruebaADXL345.c: 67:   SSPSTAT = 0;
  3498     02B3  0194               	clrf	20	;volatile
  3499     02B4                     l252:
  3500     02B4  0008               	return
  3501     02B5                     __end_of_I2C_Init:
  3502                           
  3503                           	psect	text20
  3504     044D                     __ptext20:	
  3505 ;; *************** function ___lldiv *****************
  3506 ;; Defined at:
  3507 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;  divisor         4    0[COMMON] unsigned long 
  3510 ;;  dividend        4    4[COMMON] unsigned long 
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;  quotient        4    9[COMMON] unsigned long 
  3513 ;;  counter         1   13[COMMON] unsigned char 
  3514 ;; Return value:  Size  Location     Type
  3515 ;;                  4    0[COMMON] unsigned long 
  3516 ;; Registers used:
  3517 ;;		wreg, status,2, status,0
  3518 ;; Tracked objects:
  3519 ;;		On entry : 0/0
  3520 ;;		On exit  : 0/0
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3523 ;;      Params:         8       0       0       0       0
  3524 ;;      Locals:         5       0       0       0       0
  3525 ;;      Temps:          1       0       0       0       0
  3526 ;;      Totals:        14       0       0       0       0
  3527 ;;Total ram usage:       14 bytes
  3528 ;; Hardware stack levels used: 1
  3529 ;; This function calls:
  3530 ;;		Nothing
  3531 ;; This function is called by:
  3532 ;;		_I2C_Init
  3533 ;;		_I2C_Master_Init
  3534 ;;		_UART_Init
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           
  3538     044D                     ___lldiv:	
  3539                           ;psect for function ___lldiv
  3540                           
  3541     044D                     l1352:	
  3542                           ;incstack = 0
  3543                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3544                           
  3545     044D  3000               	movlw	0
  3546     044E  00FC               	movwf	___lldiv@quotient+3
  3547     044F  3000               	movlw	0
  3548     0450  00FB               	movwf	___lldiv@quotient+2
  3549     0451  3000               	movlw	0
  3550     0452  00FA               	movwf	___lldiv@quotient+1
  3551     0453  3000               	movlw	0
  3552     0454  00F9               	movwf	___lldiv@quotient
  3553     0455  0873               	movf	___lldiv@divisor+3,w
  3554     0456  0472               	iorwf	___lldiv@divisor+2,w
  3555     0457  0471               	iorwf	___lldiv@divisor+1,w
  3556     0458  0470               	iorwf	___lldiv@divisor,w
  3557     0459  1903               	skipnz
  3558     045A  2C5C               	goto	u691
  3559     045B  2C5D               	goto	u690
  3560     045C                     u691:
  3561     045C  2CAA               	goto	l1372
  3562     045D                     u690:
  3563     045D                     l1354:
  3564     045D  01FD               	clrf	___lldiv@counter
  3565     045E  0AFD               	incf	___lldiv@counter,f
  3566     045F  2C6D               	goto	l1358
  3567     0460                     l1356:
  3568     0460  3001               	movlw	1
  3569     0461  00F8               	movwf	??___lldiv
  3570     0462                     u705:
  3571     0462  1003               	clrc
  3572     0463  0DF0               	rlf	___lldiv@divisor,f
  3573     0464  0DF1               	rlf	___lldiv@divisor+1,f
  3574     0465  0DF2               	rlf	___lldiv@divisor+2,f
  3575     0466  0DF3               	rlf	___lldiv@divisor+3,f
  3576     0467  0BF8               	decfsz	??___lldiv,f
  3577     0468  2C62               	goto	u705
  3578     0469  3001               	movlw	1
  3579     046A  00F8               	movwf	??___lldiv
  3580     046B  0878               	movf	??___lldiv,w
  3581     046C  07FD               	addwf	___lldiv@counter,f
  3582     046D                     l1358:
  3583     046D  1FF3               	btfss	___lldiv@divisor+3,7
  3584     046E  2C70               	goto	u711
  3585     046F  2C71               	goto	u710
  3586     0470                     u711:
  3587     0470  2C60               	goto	l1356
  3588     0471                     u710:
  3589     0471                     l1360:
  3590     0471  3001               	movlw	1
  3591     0472  00F8               	movwf	??___lldiv
  3592     0473                     u725:
  3593     0473  1003               	clrc
  3594     0474  0DF9               	rlf	___lldiv@quotient,f
  3595     0475  0DFA               	rlf	___lldiv@quotient+1,f
  3596     0476  0DFB               	rlf	___lldiv@quotient+2,f
  3597     0477  0DFC               	rlf	___lldiv@quotient+3,f
  3598     0478  0BF8               	decfsz	??___lldiv,f
  3599     0479  2C73               	goto	u725
  3600     047A                     l1362:
  3601     047A  0873               	movf	___lldiv@divisor+3,w
  3602     047B  0277               	subwf	___lldiv@dividend+3,w
  3603     047C  1D03               	skipz
  3604     047D  2C88               	goto	u735
  3605     047E  0872               	movf	___lldiv@divisor+2,w
  3606     047F  0276               	subwf	___lldiv@dividend+2,w
  3607     0480  1D03               	skipz
  3608     0481  2C88               	goto	u735
  3609     0482  0871               	movf	___lldiv@divisor+1,w
  3610     0483  0275               	subwf	___lldiv@dividend+1,w
  3611     0484  1D03               	skipz
  3612     0485  2C88               	goto	u735
  3613     0486  0870               	movf	___lldiv@divisor,w
  3614     0487  0274               	subwf	___lldiv@dividend,w
  3615     0488                     u735:
  3616     0488  1C03               	skipc
  3617     0489  2C8B               	goto	u731
  3618     048A  2C8C               	goto	u730
  3619     048B                     u731:
  3620     048B  2C9B               	goto	l1368
  3621     048C                     u730:
  3622     048C                     l1364:
  3623     048C  0870               	movf	___lldiv@divisor,w
  3624     048D  02F4               	subwf	___lldiv@dividend,f
  3625     048E  0871               	movf	___lldiv@divisor+1,w
  3626     048F  1C03               	skipc
  3627     0490  0F71               	incfsz	___lldiv@divisor+1,w
  3628     0491  02F5               	subwf	___lldiv@dividend+1,f
  3629     0492  0872               	movf	___lldiv@divisor+2,w
  3630     0493  1C03               	skipc
  3631     0494  0F72               	incfsz	___lldiv@divisor+2,w
  3632     0495  02F6               	subwf	___lldiv@dividend+2,f
  3633     0496  0873               	movf	___lldiv@divisor+3,w
  3634     0497  1C03               	skipc
  3635     0498  0F73               	incfsz	___lldiv@divisor+3,w
  3636     0499  02F7               	subwf	___lldiv@dividend+3,f
  3637     049A                     l1366:
  3638     049A  1479               	bsf	___lldiv@quotient,0
  3639     049B                     l1368:
  3640     049B  3001               	movlw	1
  3641     049C                     u745:
  3642     049C  1003               	clrc
  3643     049D  0CF3               	rrf	___lldiv@divisor+3,f
  3644     049E  0CF2               	rrf	___lldiv@divisor+2,f
  3645     049F  0CF1               	rrf	___lldiv@divisor+1,f
  3646     04A0  0CF0               	rrf	___lldiv@divisor,f
  3647     04A1  3EFF               	addlw	-1
  3648     04A2  1D03               	skipz
  3649     04A3  2C9C               	goto	u745
  3650     04A4                     l1370:
  3651     04A4  3001               	movlw	1
  3652     04A5  02FD               	subwf	___lldiv@counter,f
  3653     04A6  1D03               	btfss	3,2
  3654     04A7  2CA9               	goto	u751
  3655     04A8  2CAA               	goto	u750
  3656     04A9                     u751:
  3657     04A9  2C71               	goto	l1360
  3658     04AA                     u750:
  3659     04AA                     l1372:
  3660     04AA  087C               	movf	___lldiv@quotient+3,w
  3661     04AB  00F3               	movwf	?___lldiv+3
  3662     04AC  087B               	movf	___lldiv@quotient+2,w
  3663     04AD  00F2               	movwf	?___lldiv+2
  3664     04AE  087A               	movf	___lldiv@quotient+1,w
  3665     04AF  00F1               	movwf	?___lldiv+1
  3666     04B0  0879               	movf	___lldiv@quotient,w
  3667     04B1  00F0               	movwf	?___lldiv
  3668     04B2                     l410:
  3669     04B2  0008               	return
  3670     04B3                     __end_of___lldiv:
  3671     007E                     btemp	set	126	;btemp
  3672     007E                     wtemp0	set	126
  3673                           
  3674                           	psect	idloc
  3675                           
  3676                           ;Config register IDLOC0 @ 0x2000
  3677                           ;	unspecified, using default values
  3678     2000                     	org	8192
  3679     2000  3FFF               	dw	16383
  3680                           
  3681                           ;Config register IDLOC1 @ 0x2001
  3682                           ;	unspecified, using default values
  3683     2001                     	org	8193
  3684     2001  3FFF               	dw	16383
  3685                           
  3686                           ;Config register IDLOC2 @ 0x2002
  3687                           ;	unspecified, using default values
  3688     2002                     	org	8194
  3689     2002  3FFF               	dw	16383
  3690                           
  3691                           ;Config register IDLOC3 @ 0x2003
  3692                           ;	unspecified, using default values
  3693     2003                     	org	8195
  3694     2003  3FFF               	dw	16383
  3695                           
  3696                           	psect	config
  3697                           
  3698                           ;Config register CONFIG1 @ 0x2007
  3699                           ;	Oscillator Selection bits
  3700                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  3701                           ;	Watchdog Timer Enable bit
  3702                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3703                           ;	Power-up Timer Enable bit
  3704                           ;	PWRTE = OFF, PWRT disabled
  3705                           ;	RE3/MCLR pin function select bit
  3706                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3707                           ;	Code Protection bit
  3708                           ;	CP = OFF, Program memory code protection is disabled
  3709                           ;	Data Code Protection bit
  3710                           ;	CPD = OFF, Data memory code protection is disabled
  3711                           ;	Brown Out Reset Selection bits
  3712                           ;	BOREN = OFF, BOR disabled
  3713                           ;	Internal External Switchover bit
  3714                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3715                           ;	Fail-Safe Clock Monitor Enabled bit
  3716                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3717                           ;	Low Voltage Programming Enable bit
  3718                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3719                           ;	In-Circuit Debugger Mode bit
  3720                           ;	DEBUG = 0x1, unprogrammed default
  3721     2007                     	org	8199
  3722     2007  20D5               	dw	8405
  3723                           
  3724                           ;Config register CONFIG2 @ 0x2008
  3725                           ;	Brown-out Reset Selection bit
  3726                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3727                           ;	Flash Program Memory Self Write Enable bits
  3728                           ;	WRT = OFF, Write protection off
  3729     2008                     	org	8200
  3730     2008  3FFF               	dw	16383

Data Sizes:
    Strings     7
    Constant    25
    Data        0
    BSS         71
=======
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31     0000                     
    32                           ; Generated 09/02/2023 GMT
    33                           ; 
    34                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66     0000                     	;# 
    67     0001                     	;# 
    68     0002                     	;# 
    69     0003                     	;# 
    70     0004                     	;# 
    71     0005                     	;# 
    72     0006                     	;# 
    73     0007                     	;# 
    74     0008                     	;# 
    75     0009                     	;# 
    76     000A                     	;# 
    77     000B                     	;# 
    78     000C                     	;# 
    79     000D                     	;# 
    80     000E                     	;# 
    81     000E                     	;# 
    82     000F                     	;# 
    83     0010                     	;# 
    84     0011                     	;# 
    85     0012                     	;# 
    86     0013                     	;# 
    87     0014                     	;# 
    88     0015                     	;# 
    89     0015                     	;# 
    90     0016                     	;# 
    91     0017                     	;# 
    92     0018                     	;# 
    93     0019                     	;# 
    94     001A                     	;# 
    95     001B                     	;# 
    96     001B                     	;# 
    97     001C                     	;# 
    98     001D                     	;# 
    99     001E                     	;# 
   100     001F                     	;# 
   101     0081                     	;# 
   102     0085                     	;# 
   103     0086                     	;# 
   104     0087                     	;# 
   105     0088                     	;# 
   106     0089                     	;# 
   107     008C                     	;# 
   108     008D                     	;# 
   109     008E                     	;# 
   110     008F                     	;# 
   111     0090                     	;# 
   112     0091                     	;# 
   113     0092                     	;# 
   114     0093                     	;# 
   115     0093                     	;# 
   116     0093                     	;# 
   117     0094                     	;# 
   118     0095                     	;# 
   119     0096                     	;# 
   120     0097                     	;# 
   121     0098                     	;# 
   122     0099                     	;# 
   123     009A                     	;# 
   124     009B                     	;# 
   125     009C                     	;# 
   126     009D                     	;# 
   127     009E                     	;# 
   128     009F                     	;# 
   129     0105                     	;# 
   130     0107                     	;# 
   131     0108                     	;# 
   132     0109                     	;# 
   133     010C                     	;# 
   134     010C                     	;# 
   135     010D                     	;# 
   136     010E                     	;# 
   137     010F                     	;# 
   138     0185                     	;# 
   139     0187                     	;# 
   140     0188                     	;# 
   141     0189                     	;# 
   142     018C                     	;# 
   143     018D                     	;# 
   144     0000                     	;# 
   145     0001                     	;# 
   146     0002                     	;# 
   147     0003                     	;# 
   148     0004                     	;# 
   149     0005                     	;# 
   150     0006                     	;# 
   151     0007                     	;# 
   152     0008                     	;# 
   153     0009                     	;# 
   154     000A                     	;# 
   155     000B                     	;# 
   156     000C                     	;# 
   157     000D                     	;# 
   158     000E                     	;# 
   159     000E                     	;# 
   160     000F                     	;# 
   161     0010                     	;# 
   162     0011                     	;# 
   163     0012                     	;# 
   164     0013                     	;# 
   165     0014                     	;# 
   166     0015                     	;# 
   167     0015                     	;# 
   168     0016                     	;# 
   169     0017                     	;# 
   170     0018                     	;# 
   171     0019                     	;# 
   172     001A                     	;# 
   173     001B                     	;# 
   174     001B                     	;# 
   175     001C                     	;# 
   176     001D                     	;# 
   177     001E                     	;# 
   178     001F                     	;# 
   179     0081                     	;# 
   180     0085                     	;# 
   181     0086                     	;# 
   182     0087                     	;# 
   183     0088                     	;# 
   184     0089                     	;# 
   185     008C                     	;# 
   186     008D                     	;# 
   187     008E                     	;# 
   188     008F                     	;# 
   189     0090                     	;# 
   190     0091                     	;# 
   191     0092                     	;# 
   192     0093                     	;# 
   193     0093                     	;# 
   194     0093                     	;# 
   195     0094                     	;# 
   196     0095                     	;# 
   197     0096                     	;# 
   198     0097                     	;# 
   199     0098                     	;# 
   200     0099                     	;# 
   201     009A                     	;# 
   202     009B                     	;# 
   203     009C                     	;# 
   204     009D                     	;# 
   205     009E                     	;# 
   206     009F                     	;# 
   207     0105                     	;# 
   208     0107                     	;# 
   209     0108                     	;# 
   210     0109                     	;# 
   211     010C                     	;# 
   212     010C                     	;# 
   213     010D                     	;# 
   214     010E                     	;# 
   215     010F                     	;# 
   216     0185                     	;# 
   217     0187                     	;# 
   218     0188                     	;# 
   219     0189                     	;# 
   220     018C                     	;# 
   221     018D                     	;# 
   222     0000                     	;# 
   223     0001                     	;# 
   224     0002                     	;# 
   225     0003                     	;# 
   226     0004                     	;# 
   227     0005                     	;# 
   228     0006                     	;# 
   229     0007                     	;# 
   230     0008                     	;# 
   231     0009                     	;# 
   232     000A                     	;# 
   233     000B                     	;# 
   234     000C                     	;# 
   235     000D                     	;# 
   236     000E                     	;# 
   237     000E                     	;# 
   238     000F                     	;# 
   239     0010                     	;# 
   240     0011                     	;# 
   241     0012                     	;# 
   242     0013                     	;# 
   243     0014                     	;# 
   244     0015                     	;# 
   245     0015                     	;# 
   246     0016                     	;# 
   247     0017                     	;# 
   248     0018                     	;# 
   249     0019                     	;# 
   250     001A                     	;# 
   251     001B                     	;# 
   252     001B                     	;# 
   253     001C                     	;# 
   254     001D                     	;# 
   255     001E                     	;# 
   256     001F                     	;# 
   257     0081                     	;# 
   258     0085                     	;# 
   259     0086                     	;# 
   260     0087                     	;# 
   261     0088                     	;# 
   262     0089                     	;# 
   263     008C                     	;# 
   264     008D                     	;# 
   265     008E                     	;# 
   266     008F                     	;# 
   267     0090                     	;# 
   268     0091                     	;# 
   269     0092                     	;# 
   270     0093                     	;# 
   271     0093                     	;# 
   272     0093                     	;# 
   273     0094                     	;# 
   274     0095                     	;# 
   275     0096                     	;# 
   276     0097                     	;# 
   277     0098                     	;# 
   278     0099                     	;# 
   279     009A                     	;# 
   280     009B                     	;# 
   281     009C                     	;# 
   282     009D                     	;# 
   283     009E                     	;# 
   284     009F                     	;# 
   285     0105                     	;# 
   286     0107                     	;# 
   287     0108                     	;# 
   288     0109                     	;# 
   289     010C                     	;# 
   290     010C                     	;# 
   291     010D                     	;# 
   292     010E                     	;# 
   293     010F                     	;# 
   294     0185                     	;# 
   295     0187                     	;# 
   296     0188                     	;# 
   297     0189                     	;# 
   298     018C                     	;# 
   299     018D                     	;# 
   300     0000                     	;# 
   301     0001                     	;# 
   302     0002                     	;# 
   303     0003                     	;# 
   304     0004                     	;# 
   305     0005                     	;# 
   306     0006                     	;# 
   307     0007                     	;# 
   308     0008                     	;# 
   309     0009                     	;# 
   310     000A                     	;# 
   311     000B                     	;# 
   312     000C                     	;# 
   313     000D                     	;# 
   314     000E                     	;# 
   315     000E                     	;# 
   316     000F                     	;# 
   317     0010                     	;# 
   318     0011                     	;# 
   319     0012                     	;# 
   320     0013                     	;# 
   321     0014                     	;# 
   322     0015                     	;# 
   323     0015                     	;# 
   324     0016                     	;# 
   325     0017                     	;# 
   326     0018                     	;# 
   327     0019                     	;# 
   328     001A                     	;# 
   329     001B                     	;# 
   330     001B                     	;# 
   331     001C                     	;# 
   332     001D                     	;# 
   333     001E                     	;# 
   334     001F                     	;# 
   335     0081                     	;# 
   336     0085                     	;# 
   337     0086                     	;# 
   338     0087                     	;# 
   339     0088                     	;# 
   340     0089                     	;# 
   341     008C                     	;# 
   342     008D                     	;# 
   343     008E                     	;# 
   344     008F                     	;# 
   345     0090                     	;# 
   346     0091                     	;# 
   347     0092                     	;# 
   348     0093                     	;# 
   349     0093                     	;# 
   350     0093                     	;# 
   351     0094                     	;# 
   352     0095                     	;# 
   353     0096                     	;# 
   354     0097                     	;# 
   355     0098                     	;# 
   356     0099                     	;# 
   357     009A                     	;# 
   358     009B                     	;# 
   359     009C                     	;# 
   360     009D                     	;# 
   361     009E                     	;# 
   362     009F                     	;# 
   363     0105                     	;# 
   364     0107                     	;# 
   365     0108                     	;# 
   366     0109                     	;# 
   367     010C                     	;# 
   368     010C                     	;# 
   369     010D                     	;# 
   370     010E                     	;# 
   371     010F                     	;# 
   372     0185                     	;# 
   373     0187                     	;# 
   374     0188                     	;# 
   375     0189                     	;# 
   376     018C                     	;# 
   377     018D                     	;# 
   378     0000                     	;# 
   379     0001                     	;# 
   380     0002                     	;# 
   381     0003                     	;# 
   382     0004                     	;# 
   383     0005                     	;# 
   384     0006                     	;# 
   385     0007                     	;# 
   386     0008                     	;# 
   387     0009                     	;# 
   388     000A                     	;# 
   389     000B                     	;# 
   390     000C                     	;# 
   391     000D                     	;# 
   392     000E                     	;# 
   393     000E                     	;# 
   394     000F                     	;# 
   395     0010                     	;# 
   396     0011                     	;# 
   397     0012                     	;# 
   398     0013                     	;# 
   399     0014                     	;# 
   400     0015                     	;# 
   401     0015                     	;# 
   402     0016                     	;# 
   403     0017                     	;# 
   404     0018                     	;# 
   405     0019                     	;# 
   406     001A                     	;# 
   407     001B                     	;# 
   408     001B                     	;# 
   409     001C                     	;# 
   410     001D                     	;# 
   411     001E                     	;# 
   412     001F                     	;# 
   413     0081                     	;# 
   414     0085                     	;# 
   415     0086                     	;# 
   416     0087                     	;# 
   417     0088                     	;# 
   418     0089                     	;# 
   419     008C                     	;# 
   420     008D                     	;# 
   421     008E                     	;# 
   422     008F                     	;# 
   423     0090                     	;# 
   424     0091                     	;# 
   425     0092                     	;# 
   426     0093                     	;# 
   427     0093                     	;# 
   428     0093                     	;# 
   429     0094                     	;# 
   430     0095                     	;# 
   431     0096                     	;# 
   432     0097                     	;# 
   433     0098                     	;# 
   434     0099                     	;# 
   435     009A                     	;# 
   436     009B                     	;# 
   437     009C                     	;# 
   438     009D                     	;# 
   439     009E                     	;# 
   440     009F                     	;# 
   441     0105                     	;# 
   442     0107                     	;# 
   443     0108                     	;# 
   444     0109                     	;# 
   445     010C                     	;# 
   446     010C                     	;# 
   447     010D                     	;# 
   448     010E                     	;# 
   449     010F                     	;# 
   450     0185                     	;# 
   451     0187                     	;# 
   452     0188                     	;# 
   453     0189                     	;# 
   454     018C                     	;# 
   455     018D                     	;# 
   456                           
   457                           	psect	idataBANK0
   458     0374                     __pidataBANK0:
   459                           
   460                           ;initializer for _z
   461     0374  3402               	retlw	2
   462                           
   463                           	psect	strings
   464     0003                     __pstrings:
   465     0003                     stringtab:
   466     0003                     __stringtab:
   467     0003                     stringcode:	
   468                           ;	String table - string pointers are 1 byte each
   469                           
   470     0003                     stringdir:
   471     0003  3000               	movlw	high stringdir
   472     0004  008A               	movwf	10
   473     0005  0804               	movf	4,w
   474     0006  0A84               	incf	4,f
   475     0007  0782               	addwf	2,f
   476     0008                     __stringbase:
   477     0008  3400               	retlw	0
   478     0009                     __end_of__stringtab:
   479     0009                     _message:
   480     0009  3432               	retlw	50
   481     000A  342E               	retlw	46
   482     000B  3445               	retlw	69
   483     000C  346E               	retlw	110
   484     000D  3476               	retlw	118
   485     000E  3469               	retlw	105
   486     000F  3461               	retlw	97
   487     0010  3472               	retlw	114
   488     0011  3420               	retlw	32
   489     0012  3441               	retlw	65
   490     0013  3473               	retlw	115
   491     0014  3463               	retlw	99
   492     0015  3469               	retlw	105
   493     0016  3469               	retlw	105
   494     0017  3400               	retlw	0
   495     0018                     __end_of_message:
   496     0008                     _PORTD	set	8
   497     0006                     _PORTB	set	6
   498     0019                     _TXREG	set	25
   499     001A                     _RCREG	set	26
   500     0018                     _RCSTA	set	24
   501     0008                     _PORTDbits	set	8
   502     0013                     _SSPBUF	set	19
   503     0014                     _SSPCON	set	20
   504     00C4                     _CREN	set	196
   505     00C1                     _OERR	set	193
   506     0065                     _RCIF	set	101
   507     0043                     _RD3	set	67
   508     0047                     _RD7	set	71
   509     0046                     _RD6	set	70
   510     0045                     _RD5	set	69
   511     0044                     _RD4	set	68
   512     0063                     _SSPIF	set	99
   513     005E                     _PEIE	set	94
   514     005F                     _GIE	set	95
   515     0088                     _TRISD	set	136
   516     0086                     _TRISB	set	134
   517     0098                     _TXSTA	set	152
   518     0099                     _SPBRG	set	153
   519     0091                     _SSPCON2bits	set	145
   520     0087                     _TRISCbits	set	135
   521     0094                     _SSPSTAT	set	148
   522     0093                     _SSPADD	set	147
   523     0091                     _SSPCON2	set	145
   524     04C1                     _TRMT	set	1217
   525     0463                     _SSPIE	set	1123
   526     043C                     _TRISC4	set	1084
   527     043B                     _TRISC3	set	1083
   528     0189                     _ANSELH	set	393
   529     0188                     _ANSEL	set	392
   530                           
   531                           	psect	cinit
   532     07EE                     start_initialization:	
   533                           ; #config settings
   534                           
   535     07EE                     __initialization:
   536                           
   537                           ; Initialize objects allocated to BANK0
   538     07EE  120A  118A  2374  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   539     07F3  00B2               	movwf	__pdataBANK0& (0+127)
   540                           
   541                           ; Clear objects allocated to BANK0
   542     07F4  01AA               	clrf	__pbssBANK0& (0+127)
   543     07F5  01AB               	clrf	(__pbssBANK0+1)& (0+127)
   544     07F6  01AC               	clrf	(__pbssBANK0+2)& (0+127)
   545     07F7  01AD               	clrf	(__pbssBANK0+3)& (0+127)
   546     07F8  01AE               	clrf	(__pbssBANK0+4)& (0+127)
   547     07F9  01AF               	clrf	(__pbssBANK0+5)& (0+127)
   548     07FA  01B0               	clrf	(__pbssBANK0+6)& (0+127)
   549     07FB  01B1               	clrf	(__pbssBANK0+7)& (0+127)
   550     07FC                     end_of_initialization:	
   551                           ;End of C runtime variable initialization code
   552                           
   553     07FC                     __end_of__initialization:
   554     07FC  0183               	clrf	3
   555     07FD  120A  118A  2E79   	ljmp	_main	;jump to C main() function
   556                           
   557                           	psect	bssBANK0
   558     002A                     __pbssBANK0:
   559     002A                     _mot:
   560     002A                     	ds	1
   561     002B                     _y:
   562     002B                     	ds	1
   563     002C                     _x:
   564     002C                     	ds	1
   565     002D                     _dato:
   566     002D                     	ds	1
   567     002E                     _datos2:
   568     002E                     	ds	2
   569     0030                     _datos:
   570     0030                     	ds	2
   571                           
   572                           	psect	dataBANK0
   573     0032                     __pdataBANK0:
   574     0032                     _z:
   575     0032                     	ds	1
   576                           
   577                           	psect	cstackCOMMON
   578     0070                     __pcstackCOMMON:
   579     0070                     ?_setup:
   580     0070                     ?_I2C_Master_Wait:	
   581                           ; 1 bytes @ 0x0
   582                           
   583     0070                     ??_I2C_Master_Wait:	
   584                           ; 1 bytes @ 0x0
   585                           
   586     0070                     ?_I2C_Master_Start:	
   587                           ; 1 bytes @ 0x0
   588                           
   589     0070                     ??_I2C_Master_Start:	
   590                           ; 1 bytes @ 0x0
   591                           
   592     0070                     ?_I2C_Master_Stop:	
   593                           ; 1 bytes @ 0x0
   594                           
   595     0070                     ??_I2C_Master_Stop:	
   596                           ; 1 bytes @ 0x0
   597                           
   598     0070                     ?_I2C_Master_Write:	
   599                           ; 1 bytes @ 0x0
   600                           
   601     0070                     ?_Lcd_Port:	
   602                           ; 1 bytes @ 0x0
   603                           
   604     0070                     ??_Lcd_Port:	
   605                           ; 1 bytes @ 0x0
   606                           
   607     0070                     ?_Lcd_Cmd:	
   608                           ; 1 bytes @ 0x0
   609                           
   610     0070                     ?_Lcd_Init:	
   611                           ; 1 bytes @ 0x0
   612                           
   613     0070                     ?_Lcd_Write_Char:	
   614                           ; 1 bytes @ 0x0
   615                           
   616     0070                     ?_Lcd_Write_String:	
   617                           ; 1 bytes @ 0x0
   618                           
   619     0070                     ?_main:	
   620                           ; 1 bytes @ 0x0
   621                           
   622     0070                     ?_I2C_Master_Read:	
   623                           ; 1 bytes @ 0x0
   624                           
   625     0070                     ?___awdiv:	
   626                           ; 2 bytes @ 0x0
   627                           
   628     0070                     ?___lldiv:	
   629                           ; 2 bytes @ 0x0
   630                           
   631     0070                     Lcd_Port@a:	
   632                           ; 4 bytes @ 0x0
   633                           
   634     0070                     I2C_Master_Write@d:	
   635                           ; 1 bytes @ 0x0
   636                           
   637     0070                     I2C_Master_Read@a:	
   638                           ; 2 bytes @ 0x0
   639                           
   640     0070                     ___awdiv@divisor:	
   641                           ; 2 bytes @ 0x0
   642                           
   643     0070                     ___lldiv@divisor:	
   644                           ; 2 bytes @ 0x0
   645                           
   646                           
   647                           ; 4 bytes @ 0x0
   648     0070                     	ds	1
   649     0071                     ??_Lcd_Cmd:
   650     0071                     ??_Lcd_Write_Char:	
   651                           ; 1 bytes @ 0x1
   652                           
   653                           
   654                           ; 1 bytes @ 0x1
   655     0071                     	ds	1
   656     0072                     ??_I2C_Master_Write:
   657     0072                     ??_I2C_Master_Read:	
   658                           ; 1 bytes @ 0x2
   659                           
   660     0072                     Lcd_Write_Char@temp:	
   661                           ; 1 bytes @ 0x2
   662                           
   663     0072                     ___awdiv@dividend:	
   664                           ; 1 bytes @ 0x2
   665                           
   666                           
   667                           ; 2 bytes @ 0x2
   668     0072                     	ds	1
   669     0073                     Lcd_Cmd@a:
   670     0073                     Lcd_Write_Char@y:	
   671                           ; 1 bytes @ 0x3
   672                           
   673                           
   674                           ; 1 bytes @ 0x3
   675     0073                     	ds	1
   676     0074                     ?_Lcd_Set_Cursor:
   677     0074                     ??_Lcd_Init:	
   678                           ; 1 bytes @ 0x4
   679                           
   680     0074                     ??___awdiv:	
   681                           ; 1 bytes @ 0x4
   682                           
   683     0074                     Lcd_Set_Cursor@b:	
   684                           ; 1 bytes @ 0x4
   685                           
   686     0074                     Lcd_Write_Char@a:	
   687                           ; 1 bytes @ 0x4
   688                           
   689     0074                     ___awdiv@counter:	
   690                           ; 1 bytes @ 0x4
   691                           
   692     0074                     I2C_Master_Read@temp:	
   693                           ; 1 bytes @ 0x4
   694                           
   695     0074                     ___lldiv@dividend:	
   696                           ; 2 bytes @ 0x4
   697                           
   698                           
   699                           ; 4 bytes @ 0x4
   700     0074                     	ds	1
   701     0075                     ??_Lcd_Set_Cursor:
   702     0075                     ??_Lcd_Write_String:	
   703                           ; 1 bytes @ 0x5
   704                           
   705     0075                     ___awdiv@sign:	
   706                           ; 1 bytes @ 0x5
   707                           
   708                           
   709                           ; 1 bytes @ 0x5
   710     0075                     	ds	1
   711     0076                     Lcd_Set_Cursor@a:
   712     0076                     Lcd_Write_String@i:	
   713                           ; 1 bytes @ 0x6
   714                           
   715     0076                     ___awdiv@quotient:	
   716                           ; 2 bytes @ 0x6
   717                           
   718                           
   719                           ; 2 bytes @ 0x6
   720     0076                     	ds	1
   721     0077                     Lcd_Set_Cursor@z:
   722                           
   723                           ; 1 bytes @ 0x7
   724     0077                     	ds	1
   725     0078                     ??___lldiv:
   726     0078                     ?___awmod:	
   727                           ; 1 bytes @ 0x8
   728                           
   729     0078                     Lcd_Set_Cursor@y:	
   730                           ; 2 bytes @ 0x8
   731                           
   732     0078                     Lcd_Write_String@a:	
   733                           ; 1 bytes @ 0x8
   734                           
   735     0078                     ___awmod@divisor:	
   736                           ; 1 bytes @ 0x8
   737                           
   738                           
   739                           ; 2 bytes @ 0x8
   740     0078                     	ds	1
   741     0079                     Lcd_Set_Cursor@temp:
   742     0079                     ___lldiv@quotient:	
   743                           ; 1 bytes @ 0x9
   744                           
   745                           
   746                           ; 4 bytes @ 0x9
   747     0079                     	ds	1
   748     007A                     ___awmod@dividend:
   749                           
   750                           ; 2 bytes @ 0xA
   751     007A                     	ds	2
   752     007C                     ??___awmod:
   753     007C                     ___awmod@counter:	
   754                           ; 1 bytes @ 0xC
   755                           
   756                           
   757                           ; 1 bytes @ 0xC
   758     007C                     	ds	1
   759     007D                     ___lldiv@counter:
   760     007D                     ___awmod@sign:	
   761                           ; 1 bytes @ 0xD
   762                           
   763                           
   764                           ; 1 bytes @ 0xD
   765     007D                     	ds	1
   766     007E                     ??_setup:
   767                           
   768                           	psect	cstackBANK0
   769     0020                     __pcstackBANK0:	
   770                           ; 1 bytes @ 0xE
   771                           
   772     0020                     ?_I2C_Master_Init:
   773     0020                     I2C_Master_Init@c:	
   774                           ; 1 bytes @ 0x0
   775                           
   776                           
   777                           ; 4 bytes @ 0x0
   778     0020                     	ds	4
   779     0024                     ??_I2C_Master_Init:
   780                           
   781                           ; 1 bytes @ 0x4
   782     0024                     	ds	4
   783     0028                     ??_main:
   784                           
   785                           ; 1 bytes @ 0x8
   786     0028                     	ds	2
   787                           
   788                           	psect	maintext
   789     0679                     __pmaintext:	
   790 ;;
   791 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   792 ;;
   793 ;; *************** function _main *****************
   794 ;; Defined at:
   795 ;;		line 56 in file "pruebaI2C.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;		None
   798 ;; Auto vars:     Size  Location     Type
   799 ;;		None
   800 ;; Return value:  Size  Location     Type
   801 ;;                  1    wreg      void 
   802 ;; Registers used:
   803 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   804 ;; Tracked objects:
   805 ;;		On entry : B00/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   809 ;;      Params:         0       0       0       0       0
   810 ;;      Locals:         0       0       0       0       0
   811 ;;      Temps:          0       2       0       0       0
   812 ;;      Totals:         0       2       0       0       0
   813 ;;Total ram usage:        2 bytes
   814 ;; Hardware stack levels required when called: 3
   815 ;; This function calls:
   816 ;;		_I2C_Master_Init
   817 ;;		_I2C_Master_Read
   818 ;;		_I2C_Master_Start
   819 ;;		_I2C_Master_Stop
   820 ;;		_I2C_Master_Write
   821 ;;		_Lcd_Init
   822 ;;		_Lcd_Set_Cursor
   823 ;;		_Lcd_Write_String
   824 ;;		___awdiv
   825 ;;		___awmod
   826 ;;		_setup
   827 ;; This function is called by:
   828 ;;		Startup code after reset
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832     0679                     _main:	
   833                           ;psect for function _main
   834                           
   835     0679                     l1422:	
   836                           ;incstack = 0
   837                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   838                           
   839                           
   840                           ;pruebaI2C.c: 57:     setup();
   841     0679  120A  118A  23B8  120A  118A  	fcall	_setup
   842     067E                     l1424:
   843                           
   844                           ;pruebaI2C.c: 58:    Lcd_Init();
   845     067E  120A  118A  254F  120A  118A  	fcall	_Lcd_Init
   846     0683                     l1426:
   847                           
   848                           ;pruebaI2C.c: 59:     I2C_Master_Init(100000);
   849     0683  3000               	movlw	0
   850     0684  1283               	bcf	3,5	;RP0=0, select bank0
   851     0685  1303               	bcf	3,6	;RP1=0, select bank0
   852     0686  00A3               	movwf	I2C_Master_Init@c+3
   853     0687  3001               	movlw	1
   854     0688  00A2               	movwf	I2C_Master_Init@c+2
   855     0689  3086               	movlw	134
   856     068A  00A1               	movwf	I2C_Master_Init@c+1
   857     068B  30A0               	movlw	160
   858     068C  00A0               	movwf	I2C_Master_Init@c
   859     068D  120A  118A  2478  120A  118A  	fcall	_I2C_Master_Init
   860     0692                     l214:	
   861                           ;pruebaI2C.c: 62:     while(1){
   862                           
   863                           
   864                           ;pruebaI2C.c: 84:         I2C_Master_Start();
   865     0692  120A  118A  2375  120A  118A  	fcall	_I2C_Master_Start
   866                           
   867                           ;pruebaI2C.c: 85:         I2C_Master_Write(0x24);
   868     0697  3024               	movlw	36
   869     0698  00F0               	movwf	I2C_Master_Write@d
   870     0699  3000               	movlw	0
   871     069A  00F1               	movwf	I2C_Master_Write@d+1
   872     069B  120A  118A  2387  120A  118A  	fcall	_I2C_Master_Write
   873                           
   874                           ;pruebaI2C.c: 86:         I2C_Master_Write('r');
   875     06A0  3072               	movlw	114
   876     06A1  00F0               	movwf	I2C_Master_Write@d
   877     06A2  3000               	movlw	0
   878     06A3  00F1               	movwf	I2C_Master_Write@d+1
   879     06A4  120A  118A  2387  120A  118A  	fcall	_I2C_Master_Write
   880                           
   881                           ;pruebaI2C.c: 87:         I2C_Master_Stop();
   882     06A9  120A  118A  237E  120A  118A  	fcall	_I2C_Master_Stop
   883     06AE                     l1428:
   884                           
   885                           ;pruebaI2C.c: 88:        _delay((unsigned long)((800)*(8000000/4000000.0)));
   886     06AE  30E4               	movlw	228
   887     06AF  1283               	bcf	3,5	;RP0=0, select bank0
   888     06B0  1303               	bcf	3,6	;RP1=0, select bank0
   889     06B1  00A8               	movwf	??_main
   890     06B2                     u957:
   891     06B2  2EB3               	nop2
   892     06B3  2EB4               	nop2
   893     06B4  0BA8               	decfsz	??_main,f
   894     06B5  2EB2               	goto	u957
   895     06B6  0000               	nop
   896     06B7                     l1430:
   897                           
   898                           ;pruebaI2C.c: 89:         I2C_Master_Start();
   899     06B7  120A  118A  2375  120A  118A  	fcall	_I2C_Master_Start
   900     06BC                     l1432:
   901                           
   902                           ;pruebaI2C.c: 90:         I2C_Master_Write(0x25);
   903     06BC  3025               	movlw	37
   904     06BD  00F0               	movwf	I2C_Master_Write@d
   905     06BE  3000               	movlw	0
   906     06BF  00F1               	movwf	I2C_Master_Write@d+1
   907     06C0  120A  118A  2387  120A  118A  	fcall	_I2C_Master_Write
   908     06C5                     l1434:
   909                           
   910                           ;pruebaI2C.c: 91:         x = I2C_Master_Read(0);
   911     06C5  3000               	movlw	0
   912     06C6  00F0               	movwf	I2C_Master_Read@a
   913     06C7  00F1               	movwf	I2C_Master_Read@a+1
   914     06C8  120A  118A  2415  120A  118A  	fcall	_I2C_Master_Read
   915     06CD  0870               	movf	?_I2C_Master_Read,w
   916     06CE  1283               	bcf	3,5	;RP0=0, select bank0
   917     06CF  1303               	bcf	3,6	;RP1=0, select bank0
   918     06D0  00AC               	movwf	_x
   919     06D1                     l1436:
   920                           
   921                           ;pruebaI2C.c: 92:         I2C_Master_Stop();
   922     06D1  120A  118A  237E  120A  118A  	fcall	_I2C_Master_Stop
   923     06D6                     l1438:
   924                           
   925                           ;pruebaI2C.c: 93:         _delay((unsigned long)((800)*(8000000/4000000.0)));
   926     06D6  30E4               	movlw	228
   927     06D7  1283               	bcf	3,5	;RP0=0, select bank0
   928     06D8  1303               	bcf	3,6	;RP1=0, select bank0
   929     06D9  00A8               	movwf	??_main
   930     06DA                     u967:
   931     06DA  2EDB               	nop2
   932     06DB  2EDC               	nop2
   933     06DC  0BA8               	decfsz	??_main,f
   934     06DD  2EDA               	goto	u967
   935     06DE  0000               	nop
   936                           
   937                           ;pruebaI2C.c: 95:          I2C_Master_Start();
   938     06DF  120A  118A  2375  120A  118A  	fcall	_I2C_Master_Start
   939                           
   940                           ;pruebaI2C.c: 96:         I2C_Master_Write(0x24);
   941     06E4  3024               	movlw	36
   942     06E5  00F0               	movwf	I2C_Master_Write@d
   943     06E6  3000               	movlw	0
   944     06E7  00F1               	movwf	I2C_Master_Write@d+1
   945     06E8  120A  118A  2387  120A  118A  	fcall	_I2C_Master_Write
   946                           
   947                           ;pruebaI2C.c: 97:         I2C_Master_Write('l');
   948     06ED  306C               	movlw	108
   949     06EE  00F0               	movwf	I2C_Master_Write@d
   950     06EF  3000               	movlw	0
   951     06F0  00F1               	movwf	I2C_Master_Write@d+1
   952     06F1  120A  118A  2387  120A  118A  	fcall	_I2C_Master_Write
   953                           
   954                           ;pruebaI2C.c: 98:         I2C_Master_Stop();
   955     06F6  120A  118A  237E  120A  118A  	fcall	_I2C_Master_Stop
   956     06FB                     l1440:
   957                           
   958                           ;pruebaI2C.c: 99:         _delay((unsigned long)((800)*(8000000/4000000.0)));
   959     06FB  30E4               	movlw	228
   960     06FC  1283               	bcf	3,5	;RP0=0, select bank0
   961     06FD  1303               	bcf	3,6	;RP1=0, select bank0
   962     06FE  00A8               	movwf	??_main
   963     06FF                     u977:
   964     06FF  2F00               	nop2
   965     0700  2F01               	nop2
   966     0701  0BA8               	decfsz	??_main,f
   967     0702  2EFF               	goto	u977
   968     0703  0000               	nop
   969     0704                     l1442:
   970                           
   971                           ;pruebaI2C.c: 100:         I2C_Master_Start();
   972     0704  120A  118A  2375  120A  118A  	fcall	_I2C_Master_Start
   973     0709                     l1444:
   974                           
   975                           ;pruebaI2C.c: 101:         I2C_Master_Write(0x25);
   976     0709  3025               	movlw	37
   977     070A  00F0               	movwf	I2C_Master_Write@d
   978     070B  3000               	movlw	0
   979     070C  00F1               	movwf	I2C_Master_Write@d+1
   980     070D  120A  118A  2387  120A  118A  	fcall	_I2C_Master_Write
   981     0712                     l1446:
   982                           
   983                           ;pruebaI2C.c: 102:         y = I2C_Master_Read(0);
   984     0712  3000               	movlw	0
   985     0713  00F0               	movwf	I2C_Master_Read@a
   986     0714  00F1               	movwf	I2C_Master_Read@a+1
   987     0715  120A  118A  2415  120A  118A  	fcall	_I2C_Master_Read
   988     071A  0870               	movf	?_I2C_Master_Read,w
   989     071B  1283               	bcf	3,5	;RP0=0, select bank0
   990     071C  1303               	bcf	3,6	;RP1=0, select bank0
   991     071D  00AB               	movwf	_y
   992     071E                     l1448:
   993                           
   994                           ;pruebaI2C.c: 103:         I2C_Master_Stop();
   995     071E  120A  118A  237E  120A  118A  	fcall	_I2C_Master_Stop
   996     0723                     l1450:
   997                           
   998                           ;pruebaI2C.c: 104:         _delay((unsigned long)((800)*(8000000/4000000.0)));
   999     0723  30E4               	movlw	228
  1000     0724  1283               	bcf	3,5	;RP0=0, select bank0
  1001     0725  1303               	bcf	3,6	;RP1=0, select bank0
  1002     0726  00A8               	movwf	??_main
  1003     0727                     u987:
  1004     0727  2F28               	nop2
  1005     0728  2F29               	nop2
  1006     0729  0BA8               	decfsz	??_main,f
  1007     072A  2F27               	goto	u987
  1008     072B  0000               	nop
  1009     072C                     l1452:
  1010                           
  1011                           ;pruebaI2C.c: 109:         datos[0]= (x/100) + '0';
  1012     072C  3064               	movlw	100
  1013     072D  00F0               	movwf	___awdiv@divisor
  1014     072E  3000               	movlw	0
  1015     072F  00F1               	movwf	___awdiv@divisor+1
  1016     0730  1283               	bcf	3,5	;RP0=0, select bank0
  1017     0731  1303               	bcf	3,6	;RP1=0, select bank0
  1018     0732  082C               	movf	_x,w
  1019     0733  00A8               	movwf	??_main
  1020     0734  01A9               	clrf	??_main+1
  1021     0735  0828               	movf	??_main,w
  1022     0736  00F2               	movwf	___awdiv@dividend
  1023     0737  0829               	movf	??_main+1,w
  1024     0738  00F3               	movwf	___awdiv@dividend+1
  1025     0739  120A  118A  2612  120A  118A  	fcall	___awdiv
  1026     073E  0870               	movf	?___awdiv,w
  1027     073F  3E30               	addlw	48
  1028     0740  1283               	bcf	3,5	;RP0=0, select bank0
  1029     0741  1303               	bcf	3,6	;RP1=0, select bank0
  1030     0742  00B0               	movwf	_datos
  1031     0743                     l1454:
  1032                           
  1033                           ;pruebaI2C.c: 110:       datos[1]= (x/10) % 10 + '0';
  1034     0743  300A               	movlw	10
  1035     0744  00F8               	movwf	___awmod@divisor
  1036     0745  3000               	movlw	0
  1037     0746  00F9               	movwf	___awmod@divisor+1
  1038     0747  300A               	movlw	10
  1039     0748  00F0               	movwf	___awdiv@divisor
  1040     0749  3000               	movlw	0
  1041     074A  00F1               	movwf	___awdiv@divisor+1
  1042     074B  082C               	movf	_x,w
  1043     074C  00A8               	movwf	??_main
  1044     074D  01A9               	clrf	??_main+1
  1045     074E  0828               	movf	??_main,w
  1046     074F  00F2               	movwf	___awdiv@dividend
  1047     0750  0829               	movf	??_main+1,w
  1048     0751  00F3               	movwf	___awdiv@dividend+1
  1049     0752  120A  118A  2612  120A  118A  	fcall	___awdiv
  1050     0757  0871               	movf	?___awdiv+1,w
  1051     0758  00FB               	movwf	___awmod@dividend+1
  1052     0759  0870               	movf	?___awdiv,w
  1053     075A  00FA               	movwf	___awmod@dividend
  1054     075B  120A  118A  24F6  120A  118A  	fcall	___awmod
  1055     0760  0878               	movf	?___awmod,w
  1056     0761  3E30               	addlw	48
  1057     0762  1283               	bcf	3,5	;RP0=0, select bank0
  1058     0763  1303               	bcf	3,6	;RP1=0, select bank0
  1059     0764  00B1               	movwf	_datos+1
  1060     0765                     l1456:
  1061                           
  1062                           ;pruebaI2C.c: 111:       datos[2]= (x%10) + '0';
  1063     0765  300A               	movlw	10
  1064     0766  00F8               	movwf	___awmod@divisor
  1065     0767  3000               	movlw	0
  1066     0768  00F9               	movwf	___awmod@divisor+1
  1067     0769  082C               	movf	_x,w
  1068     076A  00A8               	movwf	??_main
  1069     076B  01A9               	clrf	??_main+1
  1070     076C  0828               	movf	??_main,w
  1071     076D  00FA               	movwf	___awmod@dividend
  1072     076E  0829               	movf	??_main+1,w
  1073     076F  00FB               	movwf	___awmod@dividend+1
  1074     0770  120A  118A  24F6  120A  118A  	fcall	___awmod
  1075     0775  0878               	movf	?___awmod,w
  1076     0776  3E30               	addlw	48
  1077     0777  1283               	bcf	3,5	;RP0=0, select bank0
  1078     0778  1303               	bcf	3,6	;RP1=0, select bank0
  1079     0779  00B2               	movwf	_datos+2
  1080     077A                     l1458:
  1081                           
  1082                           ;pruebaI2C.c: 113:      datos2[0]= (y/100) + '0';
  1083     077A  3064               	movlw	100
  1084     077B  00F0               	movwf	___awdiv@divisor
  1085     077C  3000               	movlw	0
  1086     077D  00F1               	movwf	___awdiv@divisor+1
  1087     077E  082B               	movf	_y,w
  1088     077F  00A8               	movwf	??_main
  1089     0780  01A9               	clrf	??_main+1
  1090     0781  0828               	movf	??_main,w
  1091     0782  00F2               	movwf	___awdiv@dividend
  1092     0783  0829               	movf	??_main+1,w
  1093     0784  00F3               	movwf	___awdiv@dividend+1
  1094     0785  120A  118A  2612  120A  118A  	fcall	___awdiv
  1095     078A  0870               	movf	?___awdiv,w
  1096     078B  3E30               	addlw	48
  1097     078C  1283               	bcf	3,5	;RP0=0, select bank0
  1098     078D  1303               	bcf	3,6	;RP1=0, select bank0
  1099     078E  00AE               	movwf	_datos2
  1100     078F                     l1460:
  1101                           
  1102                           ;pruebaI2C.c: 114:       datos2[1]= (y/10) % 10 + '0';
  1103     078F  300A               	movlw	10
  1104     0790  00F8               	movwf	___awmod@divisor
  1105     0791  3000               	movlw	0
  1106     0792  00F9               	movwf	___awmod@divisor+1
  1107     0793  300A               	movlw	10
  1108     0794  00F0               	movwf	___awdiv@divisor
  1109     0795  3000               	movlw	0
  1110     0796  00F1               	movwf	___awdiv@divisor+1
  1111     0797  082B               	movf	_y,w
  1112     0798  00A8               	movwf	??_main
  1113     0799  01A9               	clrf	??_main+1
  1114     079A  0828               	movf	??_main,w
  1115     079B  00F2               	movwf	___awdiv@dividend
  1116     079C  0829               	movf	??_main+1,w
  1117     079D  00F3               	movwf	___awdiv@dividend+1
  1118     079E  120A  118A  2612  120A  118A  	fcall	___awdiv
  1119     07A3  0871               	movf	?___awdiv+1,w
  1120     07A4  00FB               	movwf	___awmod@dividend+1
  1121     07A5  0870               	movf	?___awdiv,w
  1122     07A6  00FA               	movwf	___awmod@dividend
  1123     07A7  120A  118A  24F6  120A  118A  	fcall	___awmod
  1124     07AC  0878               	movf	?___awmod,w
  1125     07AD  3E30               	addlw	48
  1126     07AE  1283               	bcf	3,5	;RP0=0, select bank0
  1127     07AF  1303               	bcf	3,6	;RP1=0, select bank0
  1128     07B0  00AF               	movwf	_datos2+1
  1129     07B1                     l1462:
  1130                           
  1131                           ;pruebaI2C.c: 115:      datos2[2]= (y%10) + '0';
  1132     07B1  300A               	movlw	10
  1133     07B2  00F8               	movwf	___awmod@divisor
  1134     07B3  3000               	movlw	0
  1135     07B4  00F9               	movwf	___awmod@divisor+1
  1136     07B5  082B               	movf	_y,w
  1137     07B6  00A8               	movwf	??_main
  1138     07B7  01A9               	clrf	??_main+1
  1139     07B8  0828               	movf	??_main,w
  1140     07B9  00FA               	movwf	___awmod@dividend
  1141     07BA  0829               	movf	??_main+1,w
  1142     07BB  00FB               	movwf	___awmod@dividend+1
  1143     07BC  120A  118A  24F6  120A  118A  	fcall	___awmod
  1144     07C1  0878               	movf	?___awmod,w
  1145     07C2  3E30               	addlw	48
  1146     07C3  1283               	bcf	3,5	;RP0=0, select bank0
  1147     07C4  1303               	bcf	3,6	;RP1=0, select bank0
  1148     07C5  00B0               	movwf	_datos2+2
  1149     07C6                     l1464:
  1150                           
  1151                           ;pruebaI2C.c: 116:          _delay((unsigned long)((400)*(8000000/4000000.0)));
  1152     07C6  309F               	movlw	159
  1153     07C7  1283               	bcf	3,5	;RP0=0, select bank0
  1154     07C8  1303               	bcf	3,6	;RP1=0, select bank0
  1155     07C9  00A8               	movwf	??_main
  1156     07CA                     u997:
  1157     07CA  2FCB               	nop2
  1158     07CB  0BA8               	decfsz	??_main,f
  1159     07CC  2FCA               	goto	u997
  1160     07CD  2FCE               	nop2
  1161     07CE                     l1466:
  1162                           
  1163                           ;pruebaI2C.c: 121:     Lcd_Set_Cursor(1,1);
  1164     07CE  01F4               	clrf	Lcd_Set_Cursor@b
  1165     07CF  0AF4               	incf	Lcd_Set_Cursor@b,f
  1166     07D0  3001               	movlw	1
  1167     07D1  120A  118A  24B0  120A  118A  	fcall	_Lcd_Set_Cursor
  1168     07D6                     l1468:
  1169                           
  1170                           ;pruebaI2C.c: 122:     Lcd_Write_String(datos);
  1171     07D6  3030               	movlw	(low (_datos| 0))& (0+255)
  1172     07D7  120A  118A  23D2  120A  118A  	fcall	_Lcd_Write_String
  1173     07DC                     l1470:
  1174                           
  1175                           ;pruebaI2C.c: 123:     Lcd_Set_Cursor(2,6);
  1176     07DC  3006               	movlw	6
  1177     07DD  00F4               	movwf	Lcd_Set_Cursor@b
  1178     07DE  3002               	movlw	2
  1179     07DF  120A  118A  24B0  120A  118A  	fcall	_Lcd_Set_Cursor
  1180     07E4                     l1472:
  1181                           
  1182                           ;pruebaI2C.c: 124:     Lcd_Write_String(datos2);
  1183     07E4  302E               	movlw	(low (_datos2| 0))& (0+255)
  1184     07E5  120A  118A  23D2  120A  118A  	fcall	_Lcd_Write_String
  1185     07EA  2E92               	goto	l214
  1186     07EB  120A  118A  2800   	ljmp	start
  1187     07EE                     __end_of_main:
  1188                           
  1189                           	psect	text1
  1190     03B8                     __ptext1:	
  1191 ;; *************** function _setup *****************
  1192 ;; Defined at:
  1193 ;;		line 131 in file "pruebaI2C.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;		None
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;		None
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  1    wreg      void 
  1200 ;; Registers used:
  1201 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1207 ;;      Params:         0       0       0       0       0
  1208 ;;      Locals:         0       0       0       0       0
  1209 ;;      Temps:          0       0       0       0       0
  1210 ;;      Totals:         0       0       0       0       0
  1211 ;;Total ram usage:        0 bytes
  1212 ;; Hardware stack levels used: 1
  1213 ;; Hardware stack levels required when called: 2
  1214 ;; This function calls:
  1215 ;;		_I2C_Master_Init
  1216 ;; This function is called by:
  1217 ;;		_main
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221     03B8                     _setup:	
  1222                           ;psect for function _setup
  1223                           
  1224     03B8                     l1310:	
  1225                           ;incstack = 0
  1226                           ; Regs used in _setup: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1227                           
  1228                           
  1229                           ;pruebaI2C.c: 132:     ANSEL = 0;
  1230     03B8  1683               	bsf	3,5	;RP0=1, select bank3
  1231     03B9  1703               	bsf	3,6	;RP1=1, select bank3
  1232     03BA  0188               	clrf	8	;volatile
  1233                           
  1234                           ;pruebaI2C.c: 133:     ANSELH = 0;
  1235     03BB  0189               	clrf	9	;volatile
  1236                           
  1237                           ;pruebaI2C.c: 134:     TRISB = 0;
  1238     03BC  1683               	bsf	3,5	;RP0=1, select bank1
  1239     03BD  1303               	bcf	3,6	;RP1=0, select bank1
  1240     03BE  0186               	clrf	6	;volatile
  1241                           
  1242                           ;pruebaI2C.c: 135:     TRISD = 0;
  1243     03BF  0188               	clrf	8	;volatile
  1244                           
  1245                           ;pruebaI2C.c: 136:     PORTB = 0;
  1246     03C0  1283               	bcf	3,5	;RP0=0, select bank0
  1247     03C1  1303               	bcf	3,6	;RP1=0, select bank0
  1248     03C2  0186               	clrf	6	;volatile
  1249                           
  1250                           ;pruebaI2C.c: 137:     PORTD = 0;
  1251     03C3  0188               	clrf	8	;volatile
  1252     03C4                     l1312:
  1253                           
  1254                           ;pruebaI2C.c: 138:     I2C_Master_Init(100000);
  1255     03C4  3000               	movlw	0
  1256     03C5  00A3               	movwf	I2C_Master_Init@c+3
  1257     03C6  3001               	movlw	1
  1258     03C7  00A2               	movwf	I2C_Master_Init@c+2
  1259     03C8  3086               	movlw	134
  1260     03C9  00A1               	movwf	I2C_Master_Init@c+1
  1261     03CA  30A0               	movlw	160
  1262     03CB  00A0               	movwf	I2C_Master_Init@c
  1263     03CC  120A  118A  2478  120A  118A  	fcall	_I2C_Master_Init
  1264     03D1                     l220:
  1265     03D1  0008               	return
  1266     03D2                     __end_of_setup:
  1267                           
  1268                           	psect	text2
  1269     0478                     __ptext2:	
  1270 ;; *************** function _I2C_Master_Init *****************
  1271 ;; Defined at:
  1272 ;;		line 16 in file "I2C.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;  c               4    0[BANK0 ] const unsigned long 
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;		None
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  1    wreg      void 
  1279 ;; Registers used:
  1280 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1286 ;;      Params:         0       4       0       0       0
  1287 ;;      Locals:         0       0       0       0       0
  1288 ;;      Temps:          0       4       0       0       0
  1289 ;;      Totals:         0       8       0       0       0
  1290 ;;Total ram usage:        8 bytes
  1291 ;; Hardware stack levels used: 1
  1292 ;; Hardware stack levels required when called: 1
  1293 ;; This function calls:
  1294 ;;		___lldiv
  1295 ;; This function is called by:
  1296 ;;		_main
  1297 ;;		_setup
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301     0478                     _I2C_Master_Init:	
  1302                           ;psect for function _I2C_Master_Init
  1303                           
  1304     0478                     l1198:	
  1305                           ;incstack = 0
  1306                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1307                           
  1308                           
  1309                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1310     0478  3028               	movlw	40
  1311     0479  1283               	bcf	3,5	;RP0=0, select bank0
  1312     047A  1303               	bcf	3,6	;RP1=0, select bank0
  1313     047B  0094               	movwf	20	;volatile
  1314     047C                     l1200:
  1315                           
  1316                           ;I2C.c: 19:     SSPCON2 = 0;
  1317     047C  1683               	bsf	3,5	;RP0=1, select bank1
  1318     047D  1303               	bcf	3,6	;RP1=0, select bank1
  1319     047E  0191               	clrf	17	;volatile
  1320     047F                     l1202:
  1321                           
  1322                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1323     047F  1283               	bcf	3,5	;RP0=0, select bank0
  1324     0480  1303               	bcf	3,6	;RP1=0, select bank0
  1325     0481  0820               	movf	I2C_Master_Init@c,w
  1326     0482  00A4               	movwf	??_I2C_Master_Init
  1327     0483  0821               	movf	I2C_Master_Init@c+1,w
  1328     0484  00A5               	movwf	??_I2C_Master_Init+1
  1329     0485  0822               	movf	I2C_Master_Init@c+2,w
  1330     0486  00A6               	movwf	??_I2C_Master_Init+2
  1331     0487  0823               	movf	I2C_Master_Init@c+3,w
  1332     0488  00A7               	movwf	??_I2C_Master_Init+3
  1333     0489  3002               	movlw	2
  1334     048A                     u615:
  1335     048A  1003               	clrc
  1336     048B  0DA4               	rlf	??_I2C_Master_Init,f
  1337     048C  0DA5               	rlf	??_I2C_Master_Init+1,f
  1338     048D  0DA6               	rlf	??_I2C_Master_Init+2,f
  1339     048E  0DA7               	rlf	??_I2C_Master_Init+3,f
  1340     048F                     u610:
  1341     048F  3EFF               	addlw	-1
  1342     0490  1D03               	skipz
  1343     0491  2C8A               	goto	u615
  1344     0492  0827               	movf	??_I2C_Master_Init+3,w
  1345     0493  00F3               	movwf	___lldiv@divisor+3
  1346     0494  0826               	movf	??_I2C_Master_Init+2,w
  1347     0495  00F2               	movwf	___lldiv@divisor+2
  1348     0496  0825               	movf	??_I2C_Master_Init+1,w
  1349     0497  00F1               	movwf	___lldiv@divisor+1
  1350     0498  0824               	movf	??_I2C_Master_Init,w
  1351     0499  00F0               	movwf	___lldiv@divisor
  1352     049A  3000               	movlw	0
  1353     049B  00F7               	movwf	___lldiv@dividend+3
  1354     049C  307A               	movlw	122
  1355     049D  00F6               	movwf	___lldiv@dividend+2
  1356     049E  3012               	movlw	18
  1357     049F  00F5               	movwf	___lldiv@dividend+1
  1358     04A0  3000               	movlw	0
  1359     04A1  00F4               	movwf	___lldiv@dividend
  1360     04A2  120A  118A  25AC  120A  118A  	fcall	___lldiv
  1361     04A7  0870               	movf	?___lldiv,w
  1362     04A8  3EFF               	addlw	255
  1363     04A9  1683               	bsf	3,5	;RP0=1, select bank1
  1364     04AA  1303               	bcf	3,6	;RP1=0, select bank1
  1365     04AB  0093               	movwf	19	;volatile
  1366     04AC                     l1204:
  1367                           
  1368                           ;I2C.c: 21:     SSPSTAT = 0;
  1369     04AC  0194               	clrf	20	;volatile
  1370     04AD                     l1206:
  1371                           
  1372                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1373     04AD  1587               	bsf	7,3	;volatile
  1374     04AE                     l1208:
  1375                           
  1376                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1377     04AE  1607               	bsf	7,4	;volatile
  1378     04AF                     l29:
  1379     04AF  0008               	return
  1380     04B0                     __end_of_I2C_Master_Init:
  1381                           
  1382                           	psect	text3
  1383     05AC                     __ptext3:	
  1384 ;; *************** function ___lldiv *****************
  1385 ;; Defined at:
  1386 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;  divisor         4    0[COMMON] unsigned long 
  1389 ;;  dividend        4    4[COMMON] unsigned long 
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;  quotient        4    9[COMMON] unsigned long 
  1392 ;;  counter         1   13[COMMON] unsigned char 
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  4    0[COMMON] unsigned long 
  1395 ;; Registers used:
  1396 ;;		wreg, status,2, status,0, btemp+1
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1402 ;;      Params:         8       0       0       0       0
  1403 ;;      Locals:         5       0       0       0       0
  1404 ;;      Temps:          1       0       0       0       0
  1405 ;;      Totals:        14       0       0       0       0
  1406 ;;Total ram usage:       14 bytes
  1407 ;; Hardware stack levels used: 1
  1408 ;; This function calls:
  1409 ;;		Nothing
  1410 ;; This function is called by:
  1411 ;;		_I2C_Master_Init
  1412 ;;		_UART_Init
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416     05AC                     ___lldiv:	
  1417                           ;psect for function ___lldiv
  1418                           
  1419     05AC                     l1172:	
  1420                           ;incstack = 0
  1421                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1422                           
  1423     05AC  3000               	movlw	0
  1424     05AD  00FC               	movwf	___lldiv@quotient+3
  1425     05AE  3000               	movlw	0
  1426     05AF  00FB               	movwf	___lldiv@quotient+2
  1427     05B0  3000               	movlw	0
  1428     05B1  00FA               	movwf	___lldiv@quotient+1
  1429     05B2  3000               	movlw	0
  1430     05B3  00F9               	movwf	___lldiv@quotient
  1431     05B4  0873               	movf	___lldiv@divisor+3,w
  1432     05B5  0472               	iorwf	___lldiv@divisor+2,w
  1433     05B6  0471               	iorwf	___lldiv@divisor+1,w
  1434     05B7  0470               	iorwf	___lldiv@divisor,w
  1435     05B8  1903               	skipnz
  1436     05B9  2DBB               	goto	u541
  1437     05BA  2DBC               	goto	u540
  1438     05BB                     u541:
  1439     05BB  2E09               	goto	l1194
  1440     05BC                     u540:
  1441     05BC                     l1174:
  1442     05BC  01FD               	clrf	___lldiv@counter
  1443     05BD  0AFD               	incf	___lldiv@counter,f
  1444     05BE  2DCC               	goto	l1180
  1445     05BF                     l1176:
  1446     05BF  3001               	movlw	1
  1447     05C0  00F8               	movwf	??___lldiv
  1448     05C1                     u555:
  1449     05C1  1003               	clrc
  1450     05C2  0DF0               	rlf	___lldiv@divisor,f
  1451     05C3  0DF1               	rlf	___lldiv@divisor+1,f
  1452     05C4  0DF2               	rlf	___lldiv@divisor+2,f
  1453     05C5  0DF3               	rlf	___lldiv@divisor+3,f
  1454     05C6  0BF8               	decfsz	??___lldiv,f
  1455     05C7  2DC1               	goto	u555
  1456     05C8                     l1178:
  1457     05C8  3001               	movlw	1
  1458     05C9  00FF               	movwf	btemp+1
  1459     05CA  087F               	movf	btemp+1,w
  1460     05CB  07FD               	addwf	___lldiv@counter,f
  1461     05CC                     l1180:
  1462     05CC  1FF3               	btfss	___lldiv@divisor+3,7
  1463     05CD  2DCF               	goto	u561
  1464     05CE  2DD0               	goto	u560
  1465     05CF                     u561:
  1466     05CF  2DBF               	goto	l1176
  1467     05D0                     u560:
  1468     05D0                     l1182:
  1469     05D0  3001               	movlw	1
  1470     05D1  00F8               	movwf	??___lldiv
  1471     05D2                     u575:
  1472     05D2  1003               	clrc
  1473     05D3  0DF9               	rlf	___lldiv@quotient,f
  1474     05D4  0DFA               	rlf	___lldiv@quotient+1,f
  1475     05D5  0DFB               	rlf	___lldiv@quotient+2,f
  1476     05D6  0DFC               	rlf	___lldiv@quotient+3,f
  1477     05D7  0BF8               	decfsz	??___lldiv,f
  1478     05D8  2DD2               	goto	u575
  1479     05D9                     l1184:
  1480     05D9  0873               	movf	___lldiv@divisor+3,w
  1481     05DA  0277               	subwf	___lldiv@dividend+3,w
  1482     05DB  1D03               	skipz
  1483     05DC  2DE7               	goto	u585
  1484     05DD  0872               	movf	___lldiv@divisor+2,w
  1485     05DE  0276               	subwf	___lldiv@dividend+2,w
  1486     05DF  1D03               	skipz
  1487     05E0  2DE7               	goto	u585
  1488     05E1  0871               	movf	___lldiv@divisor+1,w
  1489     05E2  0275               	subwf	___lldiv@dividend+1,w
  1490     05E3  1D03               	skipz
  1491     05E4  2DE7               	goto	u585
  1492     05E5  0870               	movf	___lldiv@divisor,w
  1493     05E6  0274               	subwf	___lldiv@dividend,w
  1494     05E7                     u585:
  1495     05E7  1C03               	skipc
  1496     05E8  2DEA               	goto	u581
  1497     05E9  2DEB               	goto	u580
  1498     05EA                     u581:
  1499     05EA  2DFA               	goto	l1190
  1500     05EB                     u580:
  1501     05EB                     l1186:
  1502     05EB  0870               	movf	___lldiv@divisor,w
  1503     05EC  02F4               	subwf	___lldiv@dividend,f
  1504     05ED  0871               	movf	___lldiv@divisor+1,w
  1505     05EE  1C03               	skipc
  1506     05EF  0F71               	incfsz	___lldiv@divisor+1,w
  1507     05F0  02F5               	subwf	___lldiv@dividend+1,f
  1508     05F1  0872               	movf	___lldiv@divisor+2,w
  1509     05F2  1C03               	skipc
  1510     05F3  0F72               	incfsz	___lldiv@divisor+2,w
  1511     05F4  02F6               	subwf	___lldiv@dividend+2,f
  1512     05F5  0873               	movf	___lldiv@divisor+3,w
  1513     05F6  1C03               	skipc
  1514     05F7  0F73               	incfsz	___lldiv@divisor+3,w
  1515     05F8  02F7               	subwf	___lldiv@dividend+3,f
  1516     05F9                     l1188:
  1517     05F9  1479               	bsf	___lldiv@quotient,0
  1518     05FA                     l1190:
  1519     05FA  3001               	movlw	1
  1520     05FB                     u595:
  1521     05FB  1003               	clrc
  1522     05FC  0CF3               	rrf	___lldiv@divisor+3,f
  1523     05FD  0CF2               	rrf	___lldiv@divisor+2,f
  1524     05FE  0CF1               	rrf	___lldiv@divisor+1,f
  1525     05FF  0CF0               	rrf	___lldiv@divisor,f
  1526     0600  3EFF               	addlw	-1
  1527     0601  1D03               	skipz
  1528     0602  2DFB               	goto	u595
  1529     0603                     l1192:
  1530     0603  3001               	movlw	1
  1531     0604  02FD               	subwf	___lldiv@counter,f
  1532     0605  1D03               	btfss	3,2
  1533     0606  2E08               	goto	u601
  1534     0607  2E09               	goto	u600
  1535     0608                     u601:
  1536     0608  2DD0               	goto	l1182
  1537     0609                     u600:
  1538     0609                     l1194:
  1539     0609  087C               	movf	___lldiv@quotient+3,w
  1540     060A  00F3               	movwf	?___lldiv+3
  1541     060B  087B               	movf	___lldiv@quotient+2,w
  1542     060C  00F2               	movwf	?___lldiv+2
  1543     060D  087A               	movf	___lldiv@quotient+1,w
  1544     060E  00F1               	movwf	?___lldiv+1
  1545     060F  0879               	movf	___lldiv@quotient,w
  1546     0610  00F0               	movwf	?___lldiv
  1547     0611                     l342:
  1548     0611  0008               	return
  1549     0612                     __end_of___lldiv:
  1550                           
  1551                           	psect	text4
  1552     04F6                     __ptext4:	
  1553 ;; *************** function ___awmod *****************
  1554 ;; Defined at:
  1555 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;  divisor         2    8[COMMON] int 
  1558 ;;  dividend        2   10[COMMON] int 
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;  sign            1   13[COMMON] unsigned char 
  1561 ;;  counter         1   12[COMMON] unsigned char 
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  2    8[COMMON] int 
  1564 ;; Registers used:
  1565 ;;		wreg, status,2, status,0, btemp+1
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1571 ;;      Params:         4       0       0       0       0
  1572 ;;      Locals:         2       0       0       0       0
  1573 ;;      Temps:          0       0       0       0       0
  1574 ;;      Totals:         6       0       0       0       0
  1575 ;;Total ram usage:        6 bytes
  1576 ;; Hardware stack levels used: 1
  1577 ;; This function calls:
  1578 ;;		Nothing
  1579 ;; This function is called by:
  1580 ;;		_main
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584     04F6                     ___awmod:	
  1585                           ;psect for function ___awmod
  1586                           
  1587     04F6                     l1358:	
  1588                           ;incstack = 0
  1589                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1590                           
  1591     04F6  01FD               	clrf	___awmod@sign
  1592     04F7                     l1360:
  1593     04F7  1FFB               	btfss	___awmod@dividend+1,7
  1594     04F8  2CFA               	goto	u811
  1595     04F9  2CFB               	goto	u810
  1596     04FA                     u811:
  1597     04FA  2D02               	goto	l1366
  1598     04FB                     u810:
  1599     04FB                     l1362:
  1600     04FB  09FA               	comf	___awmod@dividend,f
  1601     04FC  09FB               	comf	___awmod@dividend+1,f
  1602     04FD  0AFA               	incf	___awmod@dividend,f
  1603     04FE  1903               	skipnz
  1604     04FF  0AFB               	incf	___awmod@dividend+1,f
  1605     0500                     l1364:
  1606     0500  01FD               	clrf	___awmod@sign
  1607     0501  0AFD               	incf	___awmod@sign,f
  1608     0502                     l1366:
  1609     0502  1FF9               	btfss	___awmod@divisor+1,7
  1610     0503  2D05               	goto	u821
  1611     0504  2D06               	goto	u820
  1612     0505                     u821:
  1613     0505  2D0B               	goto	l1370
  1614     0506                     u820:
  1615     0506                     l1368:
  1616     0506  09F8               	comf	___awmod@divisor,f
  1617     0507  09F9               	comf	___awmod@divisor+1,f
  1618     0508  0AF8               	incf	___awmod@divisor,f
  1619     0509  1903               	skipnz
  1620     050A  0AF9               	incf	___awmod@divisor+1,f
  1621     050B                     l1370:
  1622     050B  0878               	movf	___awmod@divisor,w
  1623     050C  0479               	iorwf	___awmod@divisor+1,w
  1624     050D  1903               	btfsc	3,2
  1625     050E  2D10               	goto	u831
  1626     050F  2D11               	goto	u830
  1627     0510                     u831:
  1628     0510  2D40               	goto	l1388
  1629     0511                     u830:
  1630     0511                     l1372:
  1631     0511  01FC               	clrf	___awmod@counter
  1632     0512  0AFC               	incf	___awmod@counter,f
  1633     0513  2D1F               	goto	l1378
  1634     0514                     l1374:
  1635     0514  3001               	movlw	1
  1636     0515                     u845:
  1637     0515  1003               	clrc
  1638     0516  0DF8               	rlf	___awmod@divisor,f
  1639     0517  0DF9               	rlf	___awmod@divisor+1,f
  1640     0518  3EFF               	addlw	-1
  1641     0519  1D03               	skipz
  1642     051A  2D15               	goto	u845
  1643     051B                     l1376:
  1644     051B  3001               	movlw	1
  1645     051C  00FF               	movwf	btemp+1
  1646     051D  087F               	movf	btemp+1,w
  1647     051E  07FC               	addwf	___awmod@counter,f
  1648     051F                     l1378:
  1649     051F  1FF9               	btfss	___awmod@divisor+1,7
  1650     0520  2D22               	goto	u851
  1651     0521  2D23               	goto	u850
  1652     0522                     u851:
  1653     0522  2D14               	goto	l1374
  1654     0523                     u850:
  1655     0523                     l1380:
  1656     0523  0879               	movf	___awmod@divisor+1,w
  1657     0524  027B               	subwf	___awmod@dividend+1,w
  1658     0525  1D03               	skipz
  1659     0526  2D29               	goto	u865
  1660     0527  0878               	movf	___awmod@divisor,w
  1661     0528  027A               	subwf	___awmod@dividend,w
  1662     0529                     u865:
  1663     0529  1C03               	skipc
  1664     052A  2D2C               	goto	u861
  1665     052B  2D2D               	goto	u860
  1666     052C                     u861:
  1667     052C  2D33               	goto	l1384
  1668     052D                     u860:
  1669     052D                     l1382:
  1670     052D  0878               	movf	___awmod@divisor,w
  1671     052E  02FA               	subwf	___awmod@dividend,f
  1672     052F  0879               	movf	___awmod@divisor+1,w
  1673     0530  1C03               	skipc
  1674     0531  03FB               	decf	___awmod@dividend+1,f
  1675     0532  02FB               	subwf	___awmod@dividend+1,f
  1676     0533                     l1384:
  1677     0533  3001               	movlw	1
  1678     0534                     u875:
  1679     0534  1003               	clrc
  1680     0535  0CF9               	rrf	___awmod@divisor+1,f
  1681     0536  0CF8               	rrf	___awmod@divisor,f
  1682     0537  3EFF               	addlw	-1
  1683     0538  1D03               	skipz
  1684     0539  2D34               	goto	u875
  1685     053A                     l1386:
  1686     053A  3001               	movlw	1
  1687     053B  02FC               	subwf	___awmod@counter,f
  1688     053C  1D03               	btfss	3,2
  1689     053D  2D3F               	goto	u881
  1690     053E  2D40               	goto	u880
  1691     053F                     u881:
  1692     053F  2D23               	goto	l1380
  1693     0540                     u880:
  1694     0540                     l1388:
  1695     0540  087D               	movf	___awmod@sign,w
  1696     0541  1903               	btfsc	3,2
  1697     0542  2D44               	goto	u891
  1698     0543  2D45               	goto	u890
  1699     0544                     u891:
  1700     0544  2D4A               	goto	l1392
  1701     0545                     u890:
  1702     0545                     l1390:
  1703     0545  09FA               	comf	___awmod@dividend,f
  1704     0546  09FB               	comf	___awmod@dividend+1,f
  1705     0547  0AFA               	incf	___awmod@dividend,f
  1706     0548  1903               	skipnz
  1707     0549  0AFB               	incf	___awmod@dividend+1,f
  1708     054A                     l1392:
  1709     054A  087B               	movf	___awmod@dividend+1,w
  1710     054B  00F9               	movwf	?___awmod+1
  1711     054C  087A               	movf	___awmod@dividend,w
  1712     054D  00F8               	movwf	?___awmod
  1713     054E                     l472:
  1714     054E  0008               	return
  1715     054F                     __end_of___awmod:
  1716                           
  1717                           	psect	text5
  1718     0612                     __ptext5:	
  1719 ;; *************** function ___awdiv *****************
  1720 ;; Defined at:
  1721 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;  divisor         2    0[COMMON] int 
  1724 ;;  dividend        2    2[COMMON] int 
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;  quotient        2    6[COMMON] int 
  1727 ;;  sign            1    5[COMMON] unsigned char 
  1728 ;;  counter         1    4[COMMON] unsigned char 
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  2    0[COMMON] int 
  1731 ;; Registers used:
  1732 ;;		wreg, status,2, status,0, btemp+1
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1738 ;;      Params:         4       0       0       0       0
  1739 ;;      Locals:         4       0       0       0       0
  1740 ;;      Temps:          0       0       0       0       0
  1741 ;;      Totals:         8       0       0       0       0
  1742 ;;Total ram usage:        8 bytes
  1743 ;; Hardware stack levels used: 1
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751     0612                     ___awdiv:	
  1752                           ;psect for function ___awdiv
  1753                           
  1754     0612                     l1314:	
  1755                           ;incstack = 0
  1756                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  1757                           
  1758     0612  01F5               	clrf	___awdiv@sign
  1759     0613                     l1316:
  1760     0613  1FF1               	btfss	___awdiv@divisor+1,7
  1761     0614  2E16               	goto	u711
  1762     0615  2E17               	goto	u710
  1763     0616                     u711:
  1764     0616  2E1E               	goto	l1322
  1765     0617                     u710:
  1766     0617                     l1318:
  1767     0617  09F0               	comf	___awdiv@divisor,f
  1768     0618  09F1               	comf	___awdiv@divisor+1,f
  1769     0619  0AF0               	incf	___awdiv@divisor,f
  1770     061A  1903               	skipnz
  1771     061B  0AF1               	incf	___awdiv@divisor+1,f
  1772     061C                     l1320:
  1773     061C  01F5               	clrf	___awdiv@sign
  1774     061D  0AF5               	incf	___awdiv@sign,f
  1775     061E                     l1322:
  1776     061E  1FF3               	btfss	___awdiv@dividend+1,7
  1777     061F  2E21               	goto	u721
  1778     0620  2E22               	goto	u720
  1779     0621                     u721:
  1780     0621  2E2B               	goto	l1328
  1781     0622                     u720:
  1782     0622                     l1324:
  1783     0622  09F2               	comf	___awdiv@dividend,f
  1784     0623  09F3               	comf	___awdiv@dividend+1,f
  1785     0624  0AF2               	incf	___awdiv@dividend,f
  1786     0625  1903               	skipnz
  1787     0626  0AF3               	incf	___awdiv@dividend+1,f
  1788     0627                     l1326:
  1789     0627  3001               	movlw	1
  1790     0628  00FF               	movwf	btemp+1
  1791     0629  087F               	movf	btemp+1,w
  1792     062A  06F5               	xorwf	___awdiv@sign,f
  1793     062B                     l1328:
  1794     062B  01F6               	clrf	___awdiv@quotient
  1795     062C  01F7               	clrf	___awdiv@quotient+1
  1796     062D                     l1330:
  1797     062D  0870               	movf	___awdiv@divisor,w
  1798     062E  0471               	iorwf	___awdiv@divisor+1,w
  1799     062F  1903               	btfsc	3,2
  1800     0630  2E32               	goto	u731
  1801     0631  2E33               	goto	u730
  1802     0632                     u731:
  1803     0632  2E6A               	goto	l1350
  1804     0633                     u730:
  1805     0633                     l1332:
  1806     0633  01F4               	clrf	___awdiv@counter
  1807     0634  0AF4               	incf	___awdiv@counter,f
  1808     0635  2E41               	goto	l1338
  1809     0636                     l1334:
  1810     0636  3001               	movlw	1
  1811     0637                     u745:
  1812     0637  1003               	clrc
  1813     0638  0DF0               	rlf	___awdiv@divisor,f
  1814     0639  0DF1               	rlf	___awdiv@divisor+1,f
  1815     063A  3EFF               	addlw	-1
  1816     063B  1D03               	skipz
  1817     063C  2E37               	goto	u745
  1818     063D                     l1336:
  1819     063D  3001               	movlw	1
  1820     063E  00FF               	movwf	btemp+1
  1821     063F  087F               	movf	btemp+1,w
  1822     0640  07F4               	addwf	___awdiv@counter,f
  1823     0641                     l1338:
  1824     0641  1FF1               	btfss	___awdiv@divisor+1,7
  1825     0642  2E44               	goto	u751
  1826     0643  2E45               	goto	u750
  1827     0644                     u751:
  1828     0644  2E36               	goto	l1334
  1829     0645                     u750:
  1830     0645                     l1340:
  1831     0645  3001               	movlw	1
  1832     0646                     u765:
  1833     0646  1003               	clrc
  1834     0647  0DF6               	rlf	___awdiv@quotient,f
  1835     0648  0DF7               	rlf	___awdiv@quotient+1,f
  1836     0649  3EFF               	addlw	-1
  1837     064A  1D03               	skipz
  1838     064B  2E46               	goto	u765
  1839     064C  0871               	movf	___awdiv@divisor+1,w
  1840     064D  0273               	subwf	___awdiv@dividend+1,w
  1841     064E  1D03               	skipz
  1842     064F  2E52               	goto	u775
  1843     0650  0870               	movf	___awdiv@divisor,w
  1844     0651  0272               	subwf	___awdiv@dividend,w
  1845     0652                     u775:
  1846     0652  1C03               	skipc
  1847     0653  2E55               	goto	u771
  1848     0654  2E56               	goto	u770
  1849     0655                     u771:
  1850     0655  2E5D               	goto	l1346
  1851     0656                     u770:
  1852     0656                     l1342:
  1853     0656  0870               	movf	___awdiv@divisor,w
  1854     0657  02F2               	subwf	___awdiv@dividend,f
  1855     0658  0871               	movf	___awdiv@divisor+1,w
  1856     0659  1C03               	skipc
  1857     065A  03F3               	decf	___awdiv@dividend+1,f
  1858     065B  02F3               	subwf	___awdiv@dividend+1,f
  1859     065C                     l1344:
  1860     065C  1476               	bsf	___awdiv@quotient,0
  1861     065D                     l1346:
  1862     065D  3001               	movlw	1
  1863     065E                     u785:
  1864     065E  1003               	clrc
  1865     065F  0CF1               	rrf	___awdiv@divisor+1,f
  1866     0660  0CF0               	rrf	___awdiv@divisor,f
  1867     0661  3EFF               	addlw	-1
  1868     0662  1D03               	skipz
  1869     0663  2E5E               	goto	u785
  1870     0664                     l1348:
  1871     0664  3001               	movlw	1
  1872     0665  02F4               	subwf	___awdiv@counter,f
  1873     0666  1D03               	btfss	3,2
  1874     0667  2E69               	goto	u791
  1875     0668  2E6A               	goto	u790
  1876     0669                     u791:
  1877     0669  2E45               	goto	l1340
  1878     066A                     u790:
  1879     066A                     l1350:
  1880     066A  0875               	movf	___awdiv@sign,w
  1881     066B  1903               	btfsc	3,2
  1882     066C  2E6E               	goto	u801
  1883     066D  2E6F               	goto	u800
  1884     066E                     u801:
  1885     066E  2E74               	goto	l1354
  1886     066F                     u800:
  1887     066F                     l1352:
  1888     066F  09F6               	comf	___awdiv@quotient,f
  1889     0670  09F7               	comf	___awdiv@quotient+1,f
  1890     0671  0AF6               	incf	___awdiv@quotient,f
  1891     0672  1903               	skipnz
  1892     0673  0AF7               	incf	___awdiv@quotient+1,f
  1893     0674                     l1354:
  1894     0674  0877               	movf	___awdiv@quotient+1,w
  1895     0675  00F1               	movwf	?___awdiv+1
  1896     0676  0876               	movf	___awdiv@quotient,w
  1897     0677  00F0               	movwf	?___awdiv
  1898     0678                     l459:
  1899     0678  0008               	return
  1900     0679                     __end_of___awdiv:
  1901                           
  1902                           	psect	text6
  1903     03D2                     __ptext6:	
  1904 ;; *************** function _Lcd_Write_String *****************
  1905 ;; Defined at:
  1906 ;;		line 98 in file "LCD.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  a               1    wreg     PTR unsigned char 
  1909 ;;		 -> datos2(2), datos(2), 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  a               1    8[COMMON] PTR unsigned char 
  1912 ;;		 -> datos2(2), datos(2), 
  1913 ;;  i               2    6[COMMON] int 
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  1    wreg      void 
  1916 ;; Registers used:
  1917 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1923 ;;      Params:         0       0       0       0       0
  1924 ;;      Locals:         3       0       0       0       0
  1925 ;;      Temps:          1       0       0       0       0
  1926 ;;      Totals:         4       0       0       0       0
  1927 ;;Total ram usage:        4 bytes
  1928 ;; Hardware stack levels used: 1
  1929 ;; Hardware stack levels required when called: 2
  1930 ;; This function calls:
  1931 ;;		_Lcd_Write_Char
  1932 ;; This function is called by:
  1933 ;;		_main
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937     03D2                     _Lcd_Write_String:	
  1938                           ;psect for function _Lcd_Write_String
  1939                           
  1940                           
  1941                           ;incstack = 0
  1942                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1943                           ;Lcd_Write_String@a stored from wreg
  1944     03D2  00F8               	movwf	Lcd_Write_String@a
  1945     03D3                     l1302:
  1946                           
  1947                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  1948     03D3  01F6               	clrf	Lcd_Write_String@i
  1949     03D4  01F7               	clrf	Lcd_Write_String@i+1
  1950     03D5  2BE7               	goto	l1308
  1951     03D6                     l1304:
  1952                           
  1953                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  1954     03D6  0876               	movf	Lcd_Write_String@i,w
  1955     03D7  0778               	addwf	Lcd_Write_String@a,w
  1956     03D8  00F5               	movwf	??_Lcd_Write_String
  1957     03D9  0875               	movf	??_Lcd_Write_String,w
  1958     03DA  0084               	movwf	4
  1959     03DB  0800               	movf	0,w
  1960     03DC  120A  118A  2443  120A  118A  	fcall	_Lcd_Write_Char
  1961     03E1                     l1306:
  1962     03E1  3001               	movlw	1
  1963     03E2  07F6               	addwf	Lcd_Write_String@i,f
  1964     03E3  1803               	skipnc
  1965     03E4  0AF7               	incf	Lcd_Write_String@i+1,f
  1966     03E5  3000               	movlw	0
  1967     03E6  07F7               	addwf	Lcd_Write_String@i+1,f
  1968     03E7                     l1308:
  1969     03E7  0876               	movf	Lcd_Write_String@i,w
  1970     03E8  0778               	addwf	Lcd_Write_String@a,w
  1971     03E9  00F5               	movwf	??_Lcd_Write_String
  1972     03EA  0875               	movf	??_Lcd_Write_String,w
  1973     03EB  0084               	movwf	4
  1974     03EC  1383               	bcf	3,7	;select IRP bank0
  1975     03ED  0800               	movf	0,w
  1976     03EE  1D03               	btfss	3,2
  1977     03EF  2BF1               	goto	u701
  1978     03F0  2BF2               	goto	u700
  1979     03F1                     u701:
  1980     03F1  2BD6               	goto	l1304
  1981     03F2                     u700:
  1982     03F2                     l104:
  1983     03F2  0008               	return
  1984     03F3                     __end_of_Lcd_Write_String:
  1985                           
  1986                           	psect	text7
  1987     0443                     __ptext7:	
  1988 ;; *************** function _Lcd_Write_Char *****************
  1989 ;; Defined at:
  1990 ;;		line 83 in file "LCD.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;  a               1    wreg     unsigned char 
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;  a               1    4[COMMON] unsigned char 
  1995 ;;  y               1    3[COMMON] unsigned char 
  1996 ;;  temp            1    2[COMMON] unsigned char 
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  1    wreg      void 
  1999 ;; Registers used:
  2000 ;;		wreg, status,2, status,0, pclath, cstack
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2006 ;;      Params:         0       0       0       0       0
  2007 ;;      Locals:         3       0       0       0       0
  2008 ;;      Temps:          1       0       0       0       0
  2009 ;;      Totals:         4       0       0       0       0
  2010 ;;Total ram usage:        4 bytes
  2011 ;; Hardware stack levels used: 1
  2012 ;; Hardware stack levels required when called: 1
  2013 ;; This function calls:
  2014 ;;		_Lcd_Port
  2015 ;; This function is called by:
  2016 ;;		_Lcd_Write_String
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020     0443                     _Lcd_Write_Char:	
  2021                           ;psect for function _Lcd_Write_Char
  2022                           
  2023                           
  2024                           ;incstack = 0
  2025                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2026                           ;Lcd_Write_Char@a stored from wreg
  2027     0443  00F4               	movwf	Lcd_Write_Char@a
  2028     0444                     l1224:
  2029                           
  2030                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  2031     0444  0874               	movf	Lcd_Write_Char@a,w
  2032     0445  390F               	andlw	15
  2033     0446  00F2               	movwf	Lcd_Write_Char@temp
  2034                           
  2035                           ;LCD.c: 86:     y = a & 0xF0;
  2036     0447  0874               	movf	Lcd_Write_Char@a,w
  2037     0448  39F0               	andlw	240
  2038     0449  00F3               	movwf	Lcd_Write_Char@y
  2039     044A                     l1226:
  2040                           
  2041                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  2042     044A  1283               	bcf	3,5	;RP0=0, select bank0
  2043     044B  1303               	bcf	3,6	;RP1=0, select bank0
  2044     044C  1508               	bsf	8,2	;volatile
  2045     044D                     l1228:
  2046                           
  2047                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  2048     044D  0873               	movf	Lcd_Write_Char@y,w
  2049     044E  00F1               	movwf	??_Lcd_Write_Char
  2050     044F  3004               	movlw	4
  2051     0450                     u645:
  2052     0450  1003               	clrc
  2053     0451  0CF1               	rrf	??_Lcd_Write_Char,f
  2054     0452  3EFF               	addlw	-1
  2055     0453  1D03               	skipz
  2056     0454  2C50               	goto	u645
  2057     0455  0871               	movf	??_Lcd_Write_Char,w
  2058     0456  120A  118A  23F3  120A  118A  	fcall	_Lcd_Port
  2059     045B                     l1230:
  2060                           
  2061                           ;LCD.c: 89:     RD3 = 1;
  2062     045B  1283               	bcf	3,5	;RP0=0, select bank0
  2063     045C  1303               	bcf	3,6	;RP1=0, select bank0
  2064     045D  1588               	bsf	8,3	;volatile
  2065     045E                     l1232:
  2066                           
  2067                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2068     045E  301A               	movlw	26
  2069     045F  00F1               	movwf	??_Lcd_Write_Char
  2070     0460                     u1007:
  2071     0460  0BF1               	decfsz	??_Lcd_Write_Char,f
  2072     0461  2C60               	goto	u1007
  2073     0462  0000               	nop
  2074     0463                     l1234:
  2075                           
  2076                           ;LCD.c: 91:     RD3 = 0;
  2077     0463  1283               	bcf	3,5	;RP0=0, select bank0
  2078     0464  1303               	bcf	3,6	;RP1=0, select bank0
  2079     0465  1188               	bcf	8,3	;volatile
  2080     0466                     l1236:
  2081                           
  2082                           ;LCD.c: 92:     Lcd_Port(temp);
  2083     0466  0872               	movf	Lcd_Write_Char@temp,w
  2084     0467  120A  118A  23F3  120A  118A  	fcall	_Lcd_Port
  2085     046C                     l1238:
  2086                           
  2087                           ;LCD.c: 93:     RD3 = 1;
  2088     046C  1283               	bcf	3,5	;RP0=0, select bank0
  2089     046D  1303               	bcf	3,6	;RP1=0, select bank0
  2090     046E  1588               	bsf	8,3	;volatile
  2091     046F                     l1240:
  2092                           
  2093                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2094     046F  301A               	movlw	26
  2095     0470  00F1               	movwf	??_Lcd_Write_Char
  2096     0471                     u1017:
  2097     0471  0BF1               	decfsz	??_Lcd_Write_Char,f
  2098     0472  2C71               	goto	u1017
  2099     0473  0000               	nop
  2100     0474                     l1242:
  2101                           
  2102                           ;LCD.c: 95:     RD3 = 0;
  2103     0474  1283               	bcf	3,5	;RP0=0, select bank0
  2104     0475  1303               	bcf	3,6	;RP1=0, select bank0
  2105     0476  1188               	bcf	8,3	;volatile
  2106     0477                     l98:
  2107     0477  0008               	return
  2108     0478                     __end_of_Lcd_Write_Char:
  2109                           
  2110                           	psect	text8
  2111     04B0                     __ptext8:	
  2112 ;; *************** function _Lcd_Set_Cursor *****************
  2113 ;; Defined at:
  2114 ;;		line 48 in file "LCD.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  a               1    wreg     unsigned char 
  2117 ;;  b               1    4[COMMON] unsigned char 
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;  a               1    6[COMMON] unsigned char 
  2120 ;;  temp            1    9[COMMON] unsigned char 
  2121 ;;  y               1    8[COMMON] unsigned char 
  2122 ;;  z               1    7[COMMON] unsigned char 
  2123 ;; Return value:  Size  Location     Type
  2124 ;;                  1    wreg      void 
  2125 ;; Registers used:
  2126 ;;		wreg, status,2, status,0, pclath, cstack
  2127 ;; Tracked objects:
  2128 ;;		On entry : 0/0
  2129 ;;		On exit  : 0/0
  2130 ;;		Unchanged: 0/0
  2131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2132 ;;      Params:         1       0       0       0       0
  2133 ;;      Locals:         4       0       0       0       0
  2134 ;;      Temps:          1       0       0       0       0
  2135 ;;      Totals:         6       0       0       0       0
  2136 ;;Total ram usage:        6 bytes
  2137 ;; Hardware stack levels used: 1
  2138 ;; Hardware stack levels required when called: 2
  2139 ;; This function calls:
  2140 ;;		_Lcd_Cmd
  2141 ;; This function is called by:
  2142 ;;		_main
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146     04B0                     _Lcd_Set_Cursor:	
  2147                           ;psect for function _Lcd_Set_Cursor
  2148                           
  2149                           
  2150                           ;incstack = 0
  2151                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2152                           ;Lcd_Set_Cursor@a stored from wreg
  2153     04B0  00F6               	movwf	Lcd_Set_Cursor@a
  2154     04B1                     l1272:
  2155                           
  2156                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2157     04B1  0376               	decf	Lcd_Set_Cursor@a,w
  2158     04B2  1D03               	btfss	3,2
  2159     04B3  2CB5               	goto	u661
  2160     04B4  2CB6               	goto	u660
  2161     04B5                     u661:
  2162     04B5  2CD3               	goto	l1282
  2163     04B6                     u660:
  2164     04B6                     l1274:
  2165                           
  2166                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2167     04B6  0874               	movf	Lcd_Set_Cursor@b,w
  2168     04B7  3E7F               	addlw	127
  2169     04B8  00F9               	movwf	Lcd_Set_Cursor@temp
  2170                           
  2171                           ;LCD.c: 52:         z = temp >> 4;
  2172     04B9  0879               	movf	Lcd_Set_Cursor@temp,w
  2173     04BA  00F5               	movwf	??_Lcd_Set_Cursor
  2174     04BB  3004               	movlw	4
  2175     04BC                     u675:
  2176     04BC  1003               	clrc
  2177     04BD  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2178     04BE  3EFF               	addlw	-1
  2179     04BF  1D03               	skipz
  2180     04C0  2CBC               	goto	u675
  2181     04C1  0875               	movf	??_Lcd_Set_Cursor,w
  2182     04C2  00F7               	movwf	Lcd_Set_Cursor@z
  2183     04C3                     l1276:
  2184                           
  2185                           ;LCD.c: 53:         y = temp & 0x0F;
  2186     04C3  0879               	movf	Lcd_Set_Cursor@temp,w
  2187     04C4  390F               	andlw	15
  2188     04C5  00F8               	movwf	Lcd_Set_Cursor@y
  2189     04C6                     l1278:
  2190                           
  2191                           ;LCD.c: 54:         Lcd_Cmd(z);
  2192     04C6  0877               	movf	Lcd_Set_Cursor@z,w
  2193     04C7  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2194     04CC                     l1280:
  2195                           
  2196                           ;LCD.c: 55:         Lcd_Cmd(y);
  2197     04CC  0878               	movf	Lcd_Set_Cursor@y,w
  2198     04CD  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2199                           
  2200                           ;LCD.c: 56:     } else if (a == 2) {
  2201     04D2  2CF5               	goto	l92
  2202     04D3                     l1282:
  2203     04D3  3002               	movlw	2
  2204     04D4  0676               	xorwf	Lcd_Set_Cursor@a,w
  2205     04D5  1D03               	btfss	3,2
  2206     04D6  2CD8               	goto	u681
  2207     04D7  2CD9               	goto	u680
  2208     04D8                     u681:
  2209     04D8  2CF5               	goto	l92
  2210     04D9                     u680:
  2211     04D9                     l1284:
  2212                           
  2213                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2214     04D9  0874               	movf	Lcd_Set_Cursor@b,w
  2215     04DA  3EBF               	addlw	191
  2216     04DB  00F9               	movwf	Lcd_Set_Cursor@temp
  2217                           
  2218                           ;LCD.c: 58:         z = temp >> 4;
  2219     04DC  0879               	movf	Lcd_Set_Cursor@temp,w
  2220     04DD  00F5               	movwf	??_Lcd_Set_Cursor
  2221     04DE  3004               	movlw	4
  2222     04DF                     u695:
  2223     04DF  1003               	clrc
  2224     04E0  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2225     04E1  3EFF               	addlw	-1
  2226     04E2  1D03               	skipz
  2227     04E3  2CDF               	goto	u695
  2228     04E4  0875               	movf	??_Lcd_Set_Cursor,w
  2229     04E5  00F7               	movwf	Lcd_Set_Cursor@z
  2230     04E6                     l1286:
  2231                           
  2232                           ;LCD.c: 59:         y = temp & 0x0F;
  2233     04E6  0879               	movf	Lcd_Set_Cursor@temp,w
  2234     04E7  390F               	andlw	15
  2235     04E8  00F8               	movwf	Lcd_Set_Cursor@y
  2236     04E9                     l1288:
  2237                           
  2238                           ;LCD.c: 60:         Lcd_Cmd(z);
  2239     04E9  0877               	movf	Lcd_Set_Cursor@z,w
  2240     04EA  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2241     04EF                     l1290:
  2242                           
  2243                           ;LCD.c: 61:         Lcd_Cmd(y);
  2244     04EF  0878               	movf	Lcd_Set_Cursor@y,w
  2245     04F0  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2246     04F5                     l92:
  2247     04F5  0008               	return
  2248     04F6                     __end_of_Lcd_Set_Cursor:
  2249                           
  2250                           	psect	text9
  2251     054F                     __ptext9:	
  2252 ;; *************** function _Lcd_Init *****************
  2253 ;; Defined at:
  2254 ;;		line 65 in file "LCD.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;		None
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;		None
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  1    wreg      void 
  2261 ;; Registers used:
  2262 ;;		wreg, status,2, status,0, pclath, cstack
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2268 ;;      Params:         0       0       0       0       0
  2269 ;;      Locals:         0       0       0       0       0
  2270 ;;      Temps:          2       0       0       0       0
  2271 ;;      Totals:         2       0       0       0       0
  2272 ;;Total ram usage:        2 bytes
  2273 ;; Hardware stack levels used: 1
  2274 ;; Hardware stack levels required when called: 2
  2275 ;; This function calls:
  2276 ;;		_Lcd_Cmd
  2277 ;;		_Lcd_Port
  2278 ;; This function is called by:
  2279 ;;		_main
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283     054F                     _Lcd_Init:	
  2284                           ;psect for function _Lcd_Init
  2285                           
  2286     054F                     l1292:	
  2287                           ;incstack = 0
  2288                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2289                           
  2290                           
  2291                           ;LCD.c: 66:     Lcd_Port(0x00);
  2292     054F  3000               	movlw	0
  2293     0550  120A  118A  23F3  120A  118A  	fcall	_Lcd_Port
  2294     0555                     l1294:
  2295                           
  2296                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2297     0555  3034               	movlw	52
  2298     0556  00F5               	movwf	??_Lcd_Init+1
  2299     0557  30F1               	movlw	241
  2300     0558  00F4               	movwf	??_Lcd_Init
  2301     0559                     u1027:
  2302     0559  0BF4               	decfsz	??_Lcd_Init,f
  2303     055A  2D59               	goto	u1027
  2304     055B  0BF5               	decfsz	??_Lcd_Init+1,f
  2305     055C  2D59               	goto	u1027
  2306     055D  2D5E               	nop2
  2307     055E                     l1296:
  2308                           
  2309                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2310     055E  3003               	movlw	3
  2311     055F  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2312                           
  2313                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2314     0564  300D               	movlw	13
  2315     0565  00F5               	movwf	??_Lcd_Init+1
  2316     0566  30FB               	movlw	251
  2317     0567  00F4               	movwf	??_Lcd_Init
  2318     0568                     u1037:
  2319     0568  0BF4               	decfsz	??_Lcd_Init,f
  2320     0569  2D68               	goto	u1037
  2321     056A  0BF5               	decfsz	??_Lcd_Init+1,f
  2322     056B  2D68               	goto	u1037
  2323     056C  2D6D               	nop2
  2324     056D                     l1298:
  2325                           
  2326                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2327     056D  3003               	movlw	3
  2328     056E  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2329     0573                     l1300:
  2330                           
  2331                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2332     0573  301D               	movlw	29
  2333     0574  00F5               	movwf	??_Lcd_Init+1
  2334     0575  3091               	movlw	145
  2335     0576  00F4               	movwf	??_Lcd_Init
  2336     0577                     u1047:
  2337     0577  0BF4               	decfsz	??_Lcd_Init,f
  2338     0578  2D77               	goto	u1047
  2339     0579  0BF5               	decfsz	??_Lcd_Init+1,f
  2340     057A  2D77               	goto	u1047
  2341                           
  2342                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2343     057B  3003               	movlw	3
  2344     057C  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2345                           
  2346                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2347     0581  3002               	movlw	2
  2348     0582  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2349                           
  2350                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  2351     0587  3002               	movlw	2
  2352     0588  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2353                           
  2354                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  2355     058D  3008               	movlw	8
  2356     058E  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2357                           
  2358                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  2359     0593  3000               	movlw	0
  2360     0594  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2361                           
  2362                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  2363     0599  300C               	movlw	12
  2364     059A  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2365                           
  2366                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  2367     059F  3000               	movlw	0
  2368     05A0  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2369                           
  2370                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  2371     05A5  3006               	movlw	6
  2372     05A6  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2373     05AB                     l95:
  2374     05AB  0008               	return
  2375     05AC                     __end_of_Lcd_Init:
  2376                           
  2377                           	psect	text10
  2378     039E                     __ptext10:	
  2379 ;; *************** function _Lcd_Cmd *****************
  2380 ;; Defined at:
  2381 ;;		line 35 in file "LCD.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  a               1    wreg     unsigned char 
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;  a               1    3[COMMON] unsigned char 
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  1    wreg      void 
  2388 ;; Registers used:
  2389 ;;		wreg, status,2, status,0, pclath, cstack
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2395 ;;      Params:         0       0       0       0       0
  2396 ;;      Locals:         1       0       0       0       0
  2397 ;;      Temps:          2       0       0       0       0
  2398 ;;      Totals:         3       0       0       0       0
  2399 ;;Total ram usage:        3 bytes
  2400 ;; Hardware stack levels used: 1
  2401 ;; Hardware stack levels required when called: 1
  2402 ;; This function calls:
  2403 ;;		_Lcd_Port
  2404 ;; This function is called by:
  2405 ;;		_Lcd_Set_Cursor
  2406 ;;		_Lcd_Init
  2407 ;;		_Lcd_Clear
  2408 ;;		_Lcd_Shift_Right
  2409 ;;		_Lcd_Shift_Left
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413     039E                     _Lcd_Cmd:	
  2414                           ;psect for function _Lcd_Cmd
  2415                           
  2416                           
  2417                           ;incstack = 0
  2418                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2419                           ;Lcd_Cmd@a stored from wreg
  2420     039E  00F3               	movwf	Lcd_Cmd@a
  2421     039F                     l1214:
  2422                           
  2423                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  2424     039F  1283               	bcf	3,5	;RP0=0, select bank0
  2425     03A0  1303               	bcf	3,6	;RP1=0, select bank0
  2426     03A1  1108               	bcf	8,2	;volatile
  2427     03A2                     l1216:
  2428                           
  2429                           ;LCD.c: 37:     Lcd_Port(a);
  2430     03A2  0873               	movf	Lcd_Cmd@a,w
  2431     03A3  120A  118A  23F3  120A  118A  	fcall	_Lcd_Port
  2432     03A8                     l1218:
  2433                           
  2434                           ;LCD.c: 38:     RD3 = 1;
  2435     03A8  1283               	bcf	3,5	;RP0=0, select bank0
  2436     03A9  1303               	bcf	3,6	;RP1=0, select bank0
  2437     03AA  1588               	bsf	8,3	;volatile
  2438     03AB                     l1220:
  2439                           
  2440                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2441     03AB  300B               	movlw	11
  2442     03AC  00F2               	movwf	??_Lcd_Cmd+1
  2443     03AD  3062               	movlw	98
  2444     03AE  00F1               	movwf	??_Lcd_Cmd
  2445     03AF                     u1057:
  2446     03AF  0BF1               	decfsz	??_Lcd_Cmd,f
  2447     03B0  2BAF               	goto	u1057
  2448     03B1  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2449     03B2  2BAF               	goto	u1057
  2450     03B3  0000               	nop
  2451     03B4                     l1222:
  2452                           
  2453                           ;LCD.c: 40:     RD3 = 0;
  2454     03B4  1283               	bcf	3,5	;RP0=0, select bank0
  2455     03B5  1303               	bcf	3,6	;RP1=0, select bank0
  2456     03B6  1188               	bcf	8,3	;volatile
  2457     03B7                     l83:
  2458     03B7  0008               	return
  2459     03B8                     __end_of_Lcd_Cmd:
  2460                           
  2461                           	psect	text11
  2462     03F3                     __ptext11:	
  2463 ;; *************** function _Lcd_Port *****************
  2464 ;; Defined at:
  2465 ;;		line 13 in file "LCD.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;  a               1    wreg     unsigned char 
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;  a               1    0[COMMON] unsigned char 
  2470 ;; Return value:  Size  Location     Type
  2471 ;;                  1    wreg      void 
  2472 ;; Registers used:
  2473 ;;		wreg
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2479 ;;      Params:         0       0       0       0       0
  2480 ;;      Locals:         1       0       0       0       0
  2481 ;;      Temps:          0       0       0       0       0
  2482 ;;      Totals:         1       0       0       0       0
  2483 ;;Total ram usage:        1 bytes
  2484 ;; Hardware stack levels used: 1
  2485 ;; This function calls:
  2486 ;;		Nothing
  2487 ;; This function is called by:
  2488 ;;		_Lcd_Cmd
  2489 ;;		_Lcd_Init
  2490 ;;		_Lcd_Write_Char
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494     03F3                     _Lcd_Port:	
  2495                           ;psect for function _Lcd_Port
  2496                           
  2497                           
  2498                           ;incstack = 0
  2499                           ; Regs used in _Lcd_Port: [wreg]
  2500                           ;Lcd_Port@a stored from wreg
  2501     03F3  00F0               	movwf	Lcd_Port@a
  2502     03F4                     l1162:
  2503                           
  2504                           ;LCD.c: 14:     if (a & 1)
  2505     03F4  1C70               	btfss	Lcd_Port@a,0
  2506     03F5  2BF7               	goto	u501
  2507     03F6  2BF8               	goto	u500
  2508     03F7                     u501:
  2509     03F7  2BFC               	goto	l72
  2510     03F8                     u500:
  2511     03F8                     l1164:
  2512                           
  2513                           ;LCD.c: 15:         RD4 = 1;
  2514     03F8  1283               	bcf	3,5	;RP0=0, select bank0
  2515     03F9  1303               	bcf	3,6	;RP1=0, select bank0
  2516     03FA  1608               	bsf	8,4	;volatile
  2517     03FB  2BFF               	goto	l73
  2518     03FC                     l72:	
  2519                           ;LCD.c: 16:     else
  2520                           
  2521                           
  2522                           ;LCD.c: 17:         RD4 = 0;
  2523     03FC  1283               	bcf	3,5	;RP0=0, select bank0
  2524     03FD  1303               	bcf	3,6	;RP1=0, select bank0
  2525     03FE  1208               	bcf	8,4	;volatile
  2526     03FF                     l73:
  2527                           
  2528                           ;LCD.c: 19:     if (a & 2)
  2529     03FF  1CF0               	btfss	Lcd_Port@a,1
  2530     0400  2C02               	goto	u511
  2531     0401  2C03               	goto	u510
  2532     0402                     u511:
  2533     0402  2C05               	goto	l74
  2534     0403                     u510:
  2535     0403                     l1166:
  2536                           
  2537                           ;LCD.c: 20:         RD5 = 1;
  2538     0403  1688               	bsf	8,5	;volatile
  2539     0404  2C06               	goto	l75
  2540     0405                     l74:	
  2541                           ;LCD.c: 21:     else
  2542                           
  2543                           
  2544                           ;LCD.c: 22:         RD5 = 0;
  2545     0405  1288               	bcf	8,5	;volatile
  2546     0406                     l75:
  2547                           
  2548                           ;LCD.c: 24:     if (a & 4)
  2549     0406  1D70               	btfss	Lcd_Port@a,2
  2550     0407  2C09               	goto	u521
  2551     0408  2C0A               	goto	u520
  2552     0409                     u521:
  2553     0409  2C0C               	goto	l76
  2554     040A                     u520:
  2555     040A                     l1168:
  2556                           
  2557                           ;LCD.c: 25:         RD6 = 1;
  2558     040A  1708               	bsf	8,6	;volatile
  2559     040B  2C0D               	goto	l77
  2560     040C                     l76:	
  2561                           ;LCD.c: 26:     else
  2562                           
  2563                           
  2564                           ;LCD.c: 27:         RD6 = 0;
  2565     040C  1308               	bcf	8,6	;volatile
  2566     040D                     l77:
  2567                           
  2568                           ;LCD.c: 29:     if (a & 8)
  2569     040D  1DF0               	btfss	Lcd_Port@a,3
  2570     040E  2C10               	goto	u531
  2571     040F  2C11               	goto	u530
  2572     0410                     u531:
  2573     0410  2C13               	goto	l78
  2574     0411                     u530:
  2575     0411                     l1170:
  2576                           
  2577                           ;LCD.c: 30:         RD7 = 1;
  2578     0411  1788               	bsf	8,7	;volatile
  2579     0412  2C14               	goto	l80
  2580     0413                     l78:	
  2581                           ;LCD.c: 31:     else
  2582                           
  2583                           
  2584                           ;LCD.c: 32:         RD7 = 0;
  2585     0413  1388               	bcf	8,7	;volatile
  2586     0414                     l80:
  2587     0414  0008               	return
  2588     0415                     __end_of_Lcd_Port:
  2589                           
  2590                           	psect	text12
  2591     0387                     __ptext12:	
  2592 ;; *************** function _I2C_Master_Write *****************
  2593 ;; Defined at:
  2594 ;;		line 65 in file "I2C.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;  d               2    0[COMMON] unsigned int 
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;		None
  2599 ;; Return value:  Size  Location     Type
  2600 ;;                  1    wreg      void 
  2601 ;; Registers used:
  2602 ;;		wreg, status,2, status,0, pclath, cstack
  2603 ;; Tracked objects:
  2604 ;;		On entry : 0/0
  2605 ;;		On exit  : 0/0
  2606 ;;		Unchanged: 0/0
  2607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2608 ;;      Params:         2       0       0       0       0
  2609 ;;      Locals:         0       0       0       0       0
  2610 ;;      Temps:          0       0       0       0       0
  2611 ;;      Totals:         2       0       0       0       0
  2612 ;;Total ram usage:        2 bytes
  2613 ;; Hardware stack levels used: 1
  2614 ;; Hardware stack levels required when called: 1
  2615 ;; This function calls:
  2616 ;;		_I2C_Master_Wait
  2617 ;; This function is called by:
  2618 ;;		_main
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622     0387                     _I2C_Master_Write:	
  2623                           ;psect for function _I2C_Master_Write
  2624                           
  2625     0387                     l1252:	
  2626                           ;incstack = 0
  2627                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2628                           
  2629                           
  2630                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2631     0387  120A  118A  2391  120A  118A  	fcall	_I2C_Master_Wait
  2632     038C                     l1254:
  2633                           
  2634                           ;I2C.c: 68:     SSPBUF = d;
  2635     038C  0870               	movf	I2C_Master_Write@d,w
  2636     038D  1283               	bcf	3,5	;RP0=0, select bank0
  2637     038E  1303               	bcf	3,6	;RP1=0, select bank0
  2638     038F  0093               	movwf	19	;volatile
  2639     0390                     l47:
  2640     0390  0008               	return
  2641     0391                     __end_of_I2C_Master_Write:
  2642                           
  2643                           	psect	text13
  2644     037E                     __ptext13:	
  2645 ;; *************** function _I2C_Master_Stop *****************
  2646 ;; Defined at:
  2647 ;;		line 55 in file "I2C.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;		None
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;		None
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  1    wreg      void 
  2654 ;; Registers used:
  2655 ;;		wreg, status,2, status,0, pclath, cstack
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2661 ;;      Params:         0       0       0       0       0
  2662 ;;      Locals:         0       0       0       0       0
  2663 ;;      Temps:          0       0       0       0       0
  2664 ;;      Totals:         0       0       0       0       0
  2665 ;;Total ram usage:        0 bytes
  2666 ;; Hardware stack levels used: 1
  2667 ;; Hardware stack levels required when called: 1
  2668 ;; This function calls:
  2669 ;;		_I2C_Master_Wait
  2670 ;; This function is called by:
  2671 ;;		_main
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675     037E                     _I2C_Master_Stop:	
  2676                           ;psect for function _I2C_Master_Stop
  2677                           
  2678     037E                     l1248:	
  2679                           ;incstack = 0
  2680                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2681                           
  2682                           
  2683                           ;I2C.c: 57:     I2C_Master_Wait();
  2684     037E  120A  118A  2391  120A  118A  	fcall	_I2C_Master_Wait
  2685     0383                     l1250:
  2686                           
  2687                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2688     0383  1683               	bsf	3,5	;RP0=1, select bank1
  2689     0384  1303               	bcf	3,6	;RP1=0, select bank1
  2690     0385  1511               	bsf	17,2	;volatile
  2691     0386                     l44:
  2692     0386  0008               	return
  2693     0387                     __end_of_I2C_Master_Stop:
  2694                           
  2695                           	psect	text14
  2696     0375                     __ptext14:	
  2697 ;; *************** function _I2C_Master_Start *****************
  2698 ;; Defined at:
  2699 ;;		line 39 in file "I2C.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;		None
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;		None
  2704 ;; Return value:  Size  Location     Type
  2705 ;;                  1    wreg      void 
  2706 ;; Registers used:
  2707 ;;		wreg, status,2, status,0, pclath, cstack
  2708 ;; Tracked objects:
  2709 ;;		On entry : 0/0
  2710 ;;		On exit  : 0/0
  2711 ;;		Unchanged: 0/0
  2712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2713 ;;      Params:         0       0       0       0       0
  2714 ;;      Locals:         0       0       0       0       0
  2715 ;;      Temps:          0       0       0       0       0
  2716 ;;      Totals:         0       0       0       0       0
  2717 ;;Total ram usage:        0 bytes
  2718 ;; Hardware stack levels used: 1
  2719 ;; Hardware stack levels required when called: 1
  2720 ;; This function calls:
  2721 ;;		_I2C_Master_Wait
  2722 ;; This function is called by:
  2723 ;;		_main
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727     0375                     _I2C_Master_Start:	
  2728                           ;psect for function _I2C_Master_Start
  2729                           
  2730     0375                     l1244:	
  2731                           ;incstack = 0
  2732                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2733                           
  2734                           
  2735                           ;I2C.c: 41:     I2C_Master_Wait();
  2736     0375  120A  118A  2391  120A  118A  	fcall	_I2C_Master_Wait
  2737     037A                     l1246:
  2738                           
  2739                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2740     037A  1683               	bsf	3,5	;RP0=1, select bank1
  2741     037B  1303               	bcf	3,6	;RP1=0, select bank1
  2742     037C  1411               	bsf	17,0	;volatile
  2743     037D                     l38:
  2744     037D  0008               	return
  2745     037E                     __end_of_I2C_Master_Start:
  2746                           
  2747                           	psect	text15
  2748     0415                     __ptext15:	
  2749 ;; *************** function _I2C_Master_Read *****************
  2750 ;; Defined at:
  2751 ;;		line 74 in file "I2C.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  a               2    0[COMMON] unsigned short 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;  temp            2    4[COMMON] unsigned short 
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  2    0[COMMON] unsigned short 
  2758 ;; Registers used:
  2759 ;;		wreg, status,2, status,0, pclath, cstack
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2765 ;;      Params:         2       0       0       0       0
  2766 ;;      Locals:         2       0       0       0       0
  2767 ;;      Temps:          2       0       0       0       0
  2768 ;;      Totals:         6       0       0       0       0
  2769 ;;Total ram usage:        6 bytes
  2770 ;; Hardware stack levels used: 1
  2771 ;; Hardware stack levels required when called: 1
  2772 ;; This function calls:
  2773 ;;		_I2C_Master_Wait
  2774 ;; This function is called by:
  2775 ;;		_main
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779     0415                     _I2C_Master_Read:	
  2780                           ;psect for function _I2C_Master_Read
  2781                           
  2782     0415                     l1256:	
  2783                           ;incstack = 0
  2784                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2785                           
  2786                           
  2787                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2788     0415  120A  118A  2391  120A  118A  	fcall	_I2C_Master_Wait
  2789     041A                     l1258:
  2790                           
  2791                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2792     041A  1683               	bsf	3,5	;RP0=1, select bank1
  2793     041B  1303               	bcf	3,6	;RP1=0, select bank1
  2794     041C  1591               	bsf	17,3	;volatile
  2795                           
  2796                           ;I2C.c: 79:     I2C_Master_Wait();
  2797     041D  120A  118A  2391  120A  118A  	fcall	_I2C_Master_Wait
  2798     0422                     l1260:
  2799                           
  2800                           ;I2C.c: 80:     temp = SSPBUF;
  2801     0422  1283               	bcf	3,5	;RP0=0, select bank0
  2802     0423  1303               	bcf	3,6	;RP1=0, select bank0
  2803     0424  0813               	movf	19,w	;volatile
  2804     0425  00F2               	movwf	??_I2C_Master_Read
  2805     0426  01F3               	clrf	??_I2C_Master_Read+1
  2806     0427  0872               	movf	??_I2C_Master_Read,w
  2807     0428  00F4               	movwf	I2C_Master_Read@temp
  2808     0429  0873               	movf	??_I2C_Master_Read+1,w
  2809     042A  00F5               	movwf	I2C_Master_Read@temp+1
  2810     042B                     l1262:
  2811                           
  2812                           ;I2C.c: 81:     I2C_Master_Wait();
  2813     042B  120A  118A  2391  120A  118A  	fcall	_I2C_Master_Wait
  2814     0430                     l1264:
  2815                           
  2816                           ;I2C.c: 82:     if(a == 1){
  2817     0430  0370               	decf	I2C_Master_Read@a,w
  2818     0431  0471               	iorwf	I2C_Master_Read@a+1,w
  2819     0432  1D03               	btfss	3,2
  2820     0433  2C35               	goto	u651
  2821     0434  2C36               	goto	u650
  2822     0435                     u651:
  2823     0435  2C3A               	goto	l50
  2824     0436                     u650:
  2825     0436                     l1266:
  2826                           
  2827                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2828     0436  1683               	bsf	3,5	;RP0=1, select bank1
  2829     0437  1303               	bcf	3,6	;RP1=0, select bank1
  2830     0438  1291               	bcf	17,5	;volatile
  2831                           
  2832                           ;I2C.c: 84:     }else{
  2833     0439  2C3D               	goto	l51
  2834     043A                     l50:
  2835                           
  2836                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2837     043A  1683               	bsf	3,5	;RP0=1, select bank1
  2838     043B  1303               	bcf	3,6	;RP1=0, select bank1
  2839     043C  1691               	bsf	17,5	;volatile
  2840     043D                     l51:	
  2841                           ;I2C.c: 86:     }
  2842                           
  2843                           
  2844                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2845     043D  1611               	bsf	17,4	;volatile
  2846     043E                     l1268:
  2847                           
  2848                           ;I2C.c: 88:     return temp;
  2849     043E  0875               	movf	I2C_Master_Read@temp+1,w
  2850     043F  00F1               	movwf	?_I2C_Master_Read+1
  2851     0440  0874               	movf	I2C_Master_Read@temp,w
  2852     0441  00F0               	movwf	?_I2C_Master_Read
  2853     0442                     l52:
  2854     0442  0008               	return
  2855     0443                     __end_of_I2C_Master_Read:
  2856                           
  2857                           	psect	text16
  2858     0391                     __ptext16:	
  2859 ;; *************** function _I2C_Master_Wait *****************
  2860 ;; Defined at:
  2861 ;;		line 32 in file "I2C.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;		None
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;		None
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1    wreg      void 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2875 ;;      Params:         0       0       0       0       0
  2876 ;;      Locals:         0       0       0       0       0
  2877 ;;      Temps:          0       0       0       0       0
  2878 ;;      Totals:         0       0       0       0       0
  2879 ;;Total ram usage:        0 bytes
  2880 ;; Hardware stack levels used: 1
  2881 ;; This function calls:
  2882 ;;		Nothing
  2883 ;; This function is called by:
  2884 ;;		_I2C_Master_Start
  2885 ;;		_I2C_Master_Stop
  2886 ;;		_I2C_Master_Write
  2887 ;;		_I2C_Master_Read
  2888 ;;		_I2C_Master_RepeatedStart
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892     0391                     _I2C_Master_Wait:	
  2893                           ;psect for function _I2C_Master_Wait
  2894                           
  2895     0391                     l1210:	
  2896                           ;incstack = 0
  2897                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2898                           
  2899     0391                     l32:	
  2900                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2901                           
  2902     0391  1683               	bsf	3,5	;RP0=1, select bank1
  2903     0392  1303               	bcf	3,6	;RP1=0, select bank1
  2904     0393  1914               	btfsc	20,2	;volatile
  2905     0394  2B96               	goto	u621
  2906     0395  2B97               	goto	u620
  2907     0396                     u621:
  2908     0396  2B91               	goto	l32
  2909     0397                     u620:
  2910     0397                     l1212:
  2911     0397  0811               	movf	17,w	;volatile
  2912     0398  391F               	andlw	31
  2913     0399  1D03               	btfss	3,2
  2914     039A  2B9C               	goto	u631
  2915     039B  2B9D               	goto	u630
  2916     039C                     u631:
  2917     039C  2B91               	goto	l32
  2918     039D                     u630:
  2919     039D                     l35:
  2920     039D  0008               	return
  2921     039E                     __end_of_I2C_Master_Wait:
  2922     007E                     btemp	set	126	;btemp
  2923     007E                     wtemp0	set	126
  2924                           
  2925                           	psect	idloc
  2926                           
  2927                           ;Config register IDLOC0 @ 0x2000
  2928                           ;	unspecified, using default values
  2929     2000                     	org	8192
  2930     2000  3FFF               	dw	16383
  2931                           
  2932                           ;Config register IDLOC1 @ 0x2001
  2933                           ;	unspecified, using default values
  2934     2001                     	org	8193
  2935     2001  3FFF               	dw	16383
  2936                           
  2937                           ;Config register IDLOC2 @ 0x2002
  2938                           ;	unspecified, using default values
  2939     2002                     	org	8194
  2940     2002  3FFF               	dw	16383
  2941                           
  2942                           ;Config register IDLOC3 @ 0x2003
  2943                           ;	unspecified, using default values
  2944     2003                     	org	8195
  2945     2003  3FFF               	dw	16383
  2946                           
  2947                           	psect	config
  2948                           
  2949                           ;Config register CONFIG1 @ 0x2007
  2950                           ;	Oscillator Selection bits
  2951                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  2952                           ;	Watchdog Timer Enable bit
  2953                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2954                           ;	Power-up Timer Enable bit
  2955                           ;	PWRTE = OFF, PWRT disabled
  2956                           ;	RE3/MCLR pin function select bit
  2957                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2958                           ;	Code Protection bit
  2959                           ;	CP = OFF, Program memory code protection is disabled
  2960                           ;	Data Code Protection bit
  2961                           ;	CPD = OFF, Data memory code protection is disabled
  2962                           ;	Brown Out Reset Selection bits
  2963                           ;	BOREN = OFF, BOR disabled
  2964                           ;	Internal External Switchover bit
  2965                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2966                           ;	Fail-Safe Clock Monitor Enabled bit
  2967                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2968                           ;	Low Voltage Programming Enable bit
  2969                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2970                           ;	In-Circuit Debugger Mode bit
  2971                           ;	DEBUG = 0x1, unprogrammed default
  2972     2007                     	org	8199
  2973     2007  20D6               	dw	8406
  2974                           
  2975                           ;Config register CONFIG2 @ 0x2008
  2976                           ;	Brown-out Reset Selection bit
  2977                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2978                           ;	Flash Program Memory Self Write Enable bits
  2979                           ;	WRT = OFF, Write protection off
  2980     2008                     	org	8200
  2981     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    15
    Data        1
    BSS         8
>>>>>>> Stashed changes
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
<<<<<<< Updated upstream
    BANK0            80     16      67
    BANK1            80      0      20
=======
    BANK0            80     10      19
    BANK1            80      0       0
>>>>>>> Stashed changes
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

<<<<<<< Updated upstream
    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> s3(BANK1[20]), s2(BANK0[20]), s(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_4(CODE[4]), s3(BANK1[20]), s2(BANK0[20]), s(BANK0[20]), 
=======
    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 2
		 -> datos2(BANK0[2]), datos(BANK0[2]), 
>>>>>>> Stashed changes


Critical Paths under _main in COMMON

<<<<<<< Updated upstream
    _sprintf->___lwmod
    ___lwmod->___lwdiv
=======
    _main->___awmod
    _I2C_Master_Init->___lldiv
    ___awmod->___awdiv
>>>>>>> Stashed changes
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (0) _main                                                 3     3      0    6418
                                             13 BANK0      3     3      0
                           _I2C_Init
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
=======
 (0) _main                                                 2     2      0    5135
                                              8 BANK0      2     2      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
>>>>>>> Stashed changes
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1339
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     572
                                              5 COMMON     7     5      2
=======
 (3) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     904
                                              8 COMMON     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     908
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     334
                                              5 COMMON     4     4      0
>>>>>>> Stashed changes
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     684
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (1) _I2C_Master_Write                                     2     0      2    1694
=======
 (1) _I2C_Master_Write                                     2     0      2     478
>>>>>>> Stashed changes
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     501
=======
 (1) _I2C_Master_Read                                      6     4      2     197
>>>>>>> Stashed changes
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (1) _I2C_Init                                             8     4      4     868
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     770
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
=======
>>>>>>> Stashed changes
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
<<<<<<< Updated upstream
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
=======
>>>>>>> Stashed changes
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
<<<<<<< Updated upstream
   _Lcd_Clear
=======
   _Lcd_Init
>>>>>>> Stashed changes
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___awdiv
<<<<<<< Updated upstream
=======
   ___awmod
     ___awdiv (ARG)
>>>>>>> Stashed changes
   _setup
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
<<<<<<< Updated upstream
BITCOMMON            E      0       0       0        0.0%
=======
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      13       5       23.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      21      12        0.0%
ABS                  0      0      21       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
>>>>>>> Stashed changes
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      65       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      43       5       83.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      14       7       25.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      65      12        0.0%


<<<<<<< Updated upstream
Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Aug 24 02:03:01 2023

                               _i 002A                                 _s 003F                                 _x 0029  
                               _y 0028                                 _z 0027                                 pc 0002  
                              l32 01E6                                l41 01C9                                l50 027B  
                              l35 01F2                                l51 027E                                l52 0283  
                              l44 01DB                                l38 01D2                                l47 01E5  
                              l80 0255                                l72 023D                                l73 0240  
                              l74 0246                                l75 0247                                l83 0219  
                              l76 024D                                l92 03EF                                l77 024E  
                              l78 0254                                l86 01FF                                l95 044C  
                              l98 02E9                      ___awdiv@sign 0076                                _s2 002B  
                              _s3 00A0                                _x2 0026                                fsr 0004  
                             l104 0365                               l410 04B2                               l252 02B4  
                             l263 0233                               l257 0655                               l370 05DA  
                             l527 0519                               l646 03A9                               l656 0323  
                             _GIE 005F                               _RD3 0043                               _RD4 0044  
                             _RD5 0045                               _RD6 0046                               _RD7 0047  
                             u620 0239                               u621 0238                               u710 0471  
                             u630 0244                               u711 0470                               u631 0243  
                             u640 024B                               u800 0391                               u705 0462  
                             u641 024A                               u801 0390                               u730 048C  
                             u650 0252                               u731 048B                               u651 0251  
                             u660 01EC                               u900 03B0                               u820 03A5  
                             u725 0473                               u661 01EB                               u901 03AF  
                             u821 03A4                               u805 038D                               u750 04AA  
                             u670 01F2                               u830 02F0                               u751 04A9  
                             u735 0488                               u671 01F1                               u815 0399  
                             u831 02EF                               u920 03D3                               u760 036E  
                             u745 049C                               u921 03D2                               u761 036D  
                             u690 045D                               u850 0302                               u691 045C  
                             u915 03B6                               u851 0301                               u940 0331  
                             u780 0380                               u860 030C                               u685 02C2  
                             u781 037F                               u861 030B                               u845 02F4  
                             u950 0353                               u935 03D9                               u775 0372  
                             u960 0365                               u880 031F                               u961 0364  
                             u881 031E                               u865 0308                               u970 0296  
                             u890 0277                               u891 0276                               u795 0381  
                             u875 0313                               u980 0526                               u981 0525  
                             u990 057A                               u975 0291                               u991 0579  
                             u995 0576                               fsr0 0004                               indf 0000  
                            l1310 0239                              l1320 01EC                              l1312 0244  
                            l1314 024B                              l1330 0216                              l1322 0201  
                            l1410 02FE                              l1402 02EA                              l1500 02B3  
                            l1316 0252                              l1308 0235                              l1324 0204  
                            l1340 02D0                              l1332 02B6                              l1412 0302  
                            l1404 02F0                              l1420 031F                              l1318 01E6  
                            l1430 01C6                              l1326 020A                              l1350 02E6  
                            l1342 02D5                              l1334 02BC                              l1510 0223  
                            l1502 021A                              l1414 030C                              l1406 02F3  
                            l1360 0471                              l1352 044D                              l1440 0256  
                            l1424 01CA                              l1432 01D3                              l1328 020D  
                            l1344 02D8                              l1336 02BF                              l1600 04F7  
                            l1512 022C                              l1504 021E                              l1416 0312  
                            l1408 02FA                              l1520 051D                              l1370 04A4  
                            l1362 047A                              l1354 045D                              l1450 0277  
                            l1442 025B                              l1426 01CF                              l1434 01D8  
                            l1346 02DE                              l1338 02CD                              l1610 0510  
                            l1602 04FD                              l1514 022D                              l1506 0221  
                            l1418 0319                              l1530 0532                              l1522 0520  
                            l1364 048C                              l1356 0460                              l1372 04AA  
                            l1452 027F                              l1444 0263                              l1428 01C1  
                            l1436 01DC                              l1460 03B0                              l1348 02E1  
                            l1612 0515                              l1604 04FE                              l1516 022E  
                            l1508 0222                              l1380 036E                              l1540 055D  
                            l1524 0526                              l1366 049A                              l1358 046D  
                            l1446 026C                              l1438 01E1                              l1470 03D3  
                            l1462 03BD                              l1606 0505                              l1518 0232  
                            l1390 0391                              l1382 0371                              l1550 057B  
                            l1534 0537                              l1526 052B                              l1368 049B  
                            l1448 0271                              l1456 01F3                              l1480 03F6  
                            l1472 03E0                              l1464 03C0                              l1608 050B  
                            l1392 0397                              l1384 0378                              l1376 0366  
                            l1560 05BD                              l1552 0585                              l1536 0551  
                            l1528 0530                              l1482 03FF                              l1474 03E3  
                            l1466 03C6                              l1458 03AB                              l1490 0327  
                            l1394 0398                              l1386 037C                              l1378 0368  
                            l1554 0588                              l1546 055F                              l1538 0559  
                            l1562 05C6                              l1650 0743                              l1484 040E  
                            l1476 03E9                              l1468 03CD                              l1492 0343  
                            l1580 04BF                              l1572 04B3                              l1396 039F  
                            l1388 0380                              l1556 05B4                              l1564 05D6  
                            l1660 0792                              l1652 0751                              l1486 0414  
                            l1478 03F0                              l1494 0349                              l1590 04D4  
                            l1582 04C3                              l1574 04B4                              l1398 03A5  
                            l1558 05B9                              l1670 07C5                              l1662 07A3  
                            l1654 075E                              l1496 0284                              l1488 0324  
                            l1592 04D7                              l1584 04C8                              l1576 04B8  
                            l1672 07CD                              l1664 07AB                              l1656 0772  
                            l1648 05DB                              l1498 0288                              l1594 04DE  
                            l1586 04CC                              l1578 04BD                              l1674 07D6  
                            l1666 07B4                              l1658 0781                              l1596 04E2  
                            l1588 04CE                              l1676 07DE                              l1668 07BC  
                            l1598 04E6                              l1698 0549                              STR_1 0030  
                            STR_2 0030                              STR_3 0030                              STR_4 002C  
                            u1000 0585                              _CREN 00C4                              u1001 0584  
                            u1010 05C6                              u1011 05C5                              u1020 05D6  
                            u1021 05D5                              u1110 050B                              u1030 04B8  
                            u1111 050A                              u1031 04B7                              u1120 0510  
                            u1040 04C3                              u1121 050F                              u1105 04FF  
                            u1041 04C2                              u1050 04D4                              u1051 04D3  
                            u1070 04E6                              u1207 02D2                              u1071 04E5  
                            u1217 02E3                              u1065 04D8                              u1090 04F7  
                            u1227 03FA                              u1091 04F6                              u1237 0409  
                            u1085 04E7                              u1247 0418                              u1095 04F3  
                            u1257 0211                              u1197 074B                              _PEIE 005E  
                            _RCIF 0065                              _OERR 00C1                              _TRMT 04C1  
                            _Xval 0025                              _Yval 0023                              _Zval 0021  
               ?_Lcd_Write_String 0075  __end_of_I2C_Master_RepeatedStart 01CA                              _main 05DB  
                __end_of_I2C_Init 02B5                              btemp 007E                              start 0000  
              ??_Lcd_Write_String 0077                   __end_of_Lcd_Cmd 021A                  ?_I2C_Master_Read 0070  
                ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070                             ?_main 0070  
                 __end_of___awdiv 051A                             _ANSEL 0188                   __end_of___lldiv 04B3  
                 ___awdiv@divisor 0070                   __end_of___lwdiv 03AA                   __end_of___lwmod 0324  
                 ___awdiv@counter 0075                             _RCREG 001A                             _RCSTA 0018  
                           _SPBRG 0099                             _PORTA 0005                             _PORTB 0006  
                           _PORTD 0008                             _TRISA 0085                             _TRISB 0086  
                           _TRISD 0088                             _SSPIE 0463                             _SSPIF 0063  
                           _TXREG 0019                             _TXSTA 0098                             _Xval2 0024  
                           _Yval2 0022                             _Zval2 0020                   __end_of_dpowers 002C  
                 __end_of_message 0022                             _setup 021A                             pclath 000A  
                           status 0003                             wtemp0 007E                   __end_of_sprintf 05DB  
            I2C_Init@i2c_clk_freq 0053                  __end_of_Lcd_Init 044D                  __end_of_Lcd_Port 0256  
                 __initialization 07EB                      __end_of_main 07EB                            ??_main 0060  
               ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0070                ??_I2C_Master_Start 0070  
              ??_I2C_Master_Write 0072                  ___awdiv@dividend 0072                            ?_setup 0070  
                          _ANSELH 0189                         ??_Lcd_Cmd 0071                            _SSPADD 0093  
                          _TRISC1 0439                            _TRISC2 043A                            _TRISC3 043B  
                          _TRISC4 043C                            _TRISC6 043E                            _TRISC7 043F  
                          _SSPCON 0014                            _SSPBUF 0013          _I2C_Master_RepeatedStart 01C1  
                       ??___awdiv 0074                         ??___lldiv 0078                         ??___lwdiv 0074  
                       ??___lwmod 007C                  ___awdiv@quotient 0077                         ?_I2C_Init 0053  
                       ??_sprintf 0056                   Lcd_Set_Cursor@a 0076                   Lcd_Set_Cursor@b 0074  
                 Lcd_Set_Cursor@y 0078                   Lcd_Set_Cursor@z 0077           __end_of__initialization 07FC  
               __end_of_Lcd_Clear 0200                    __pcstackCOMMON 0070                     __end_of_setup 0234  
                  _Lcd_Set_Cursor 03AA                        ??_I2C_Init 0057                         ?_Lcd_Init 0070  
                       ?_Lcd_Port 0070                           ??_setup 0070                        __pbssBANK0 0020  
                      __pbssBANK1 00A0                        __pmaintext 05DB            __end_of_Lcd_Set_Cursor 03F0  
                      ??_Lcd_Init 0074                        ??_Lcd_Port 0070                           _SSPCON2 0091  
                         _SSPSTAT 0094                        __stringtab 0003                    _Lcd_Write_Char 02B5  
                         _Lcd_Cmd 0200                           ___awdiv 04B3                           ___lldiv 044D  
                         ___lwdiv 0366                           ___lwmod 02EA                   ?_Lcd_Set_Cursor 0074  
                         __ptext1 051A                           __ptext2 02EA                           __ptext3 0366  
                         __ptext4 021A                           __ptext5 04B3                           __ptext6 0324  
                         __ptext7 02B5                           __ptext8 03AA                           __ptext9 03F0  
                         _dpowers 0022                           _message 0013                           _sprintf 051A  
                         clrloop0 01BA            __end_of_Lcd_Write_Char 02EA              end_of_initialization 07FC  
      ??_I2C_Master_RepeatedStart 0070                   ___lldiv@divisor 0070                   ___lldiv@counter 007D  
                I2C_Master_Read@a 0070                         Lcd_Port@a 0070                         _PORTCbits 0007  
                       _PORTDbits 0008                         _TRISCbits 0087                   ?_Lcd_Write_Char 0070  
               Lcd_Write_String@a 0075                 Lcd_Write_String@i 007A                         _Lcd_Clear 01F3  
                _Lcd_Write_String 0324               start_initialization 07EB                 ??_I2C_Master_Read 0072  
               ??_I2C_Master_Wait 0070                 ??_I2C_Master_Stop 0070                        ?_Lcd_Clear 0070  
                 Lcd_Write_Char@a 0074                   Lcd_Write_Char@y 0073                         ___latbits 0002  
                   __pcstackBANK0 0053                          ?_Lcd_Cmd 0070                       sprintf@flag 0059  
                     sprintf@prec 005D                  _I2C_Master_Start 01CA                  _I2C_Master_Write 01DC  
                ___lwdiv@dividend 0072                  ??_Lcd_Set_Cursor 0075                          ?___awdiv 0070  
                        ?___lldiv 0070                          ?___lwdiv 0070                          ?___lwmod 0078  
                       __pstrings 0003                          _I2C_Init 0284                  ___lwdiv@quotient 0075  
                        ?_sprintf 0053                         clear_ram0 01B9                          Lcd_Cmd@a 0073  
                     ??_Lcd_Clear 0074                       __stringbase 0012                  ??_Lcd_Write_Char 0071  
                        _Lcd_Init 03F0                          _Lcd_Port 0234               I2C_Master_Read@temp 0074  
        __end_of_Lcd_Write_String 0366         ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 0013  
                      sprintf@val 005B                   _I2C_Master_Read 0256                   _I2C_Master_Wait 01E6  
                 _I2C_Master_Stop 01D3                   ___lwdiv@divisor 0070                   ___lwdiv@counter 0077  
                        __ptext10 01F3                          __ptext11 0200                          __ptext20 044D  
                        __ptext12 0234                          __ptext13 01DC                          __ptext14 01D3  
                        __ptext15 01CA                          __ptext16 01C1                          __ptext17 0256  
                        __ptext18 01E6                          __ptext19 0284          __end_of_I2C_Master_Start 01D3  
        __end_of_I2C_Master_Write 01E6                Lcd_Write_Char@temp 0072                         sprintf@ap 005A  
                       sprintf@sp 005E                  ___lwmod@dividend 007A                  ___lldiv@dividend 0074  
                       stringcode 000D                        _OSCCONbits 008F           __end_of_I2C_Master_Read 0284  
         __end_of_I2C_Master_Wait 01F3           __end_of_I2C_Master_Stop 01DC                Lcd_Set_Cursor@temp 0079  
                        sprintf@c 005F                          sprintf@f 0053                  ___lldiv@quotient 0079  
               I2C_Master_Write@d 0070                   ___lwmod@divisor 0078                   ___lwmod@counter 007D  
                        stringdir 000D                          stringtab 0003                       _SSPCON2bits 0091  
=======
Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Aug 24 18:31:10 2023

                       _x 002C                         _y 002B                         _z 0032  
                       pc 0002                        l32 0391                        l50 043A  
                      l35 039D                        l51 043D                        l52 0442  
                      l44 0386                        l29 04AF                        l38 037D  
                      l47 0390                        l80 0414                        l72 03FC  
                      l73 03FF                        l74 0405                        l75 0406  
                      l83 03B7                        l76 040C                        l92 04F5  
                      l77 040D                        l78 0413                        l95 05AB  
                      l98 0477              ___awdiv@sign 0075                        fsr 0004  
                     l104 03F2                       l220 03D1                       l214 0692  
                     l342 0611                       l472 054E                       l459 0678  
                     _GIE 005F                       _RD3 0043                       _RD4 0044  
                     _RD5 0045                       _RD6 0046                       _RD7 0047  
                     u500 03F8                       u501 03F7                       u510 0403  
                     u511 0402                       u520 040A                       u600 0609  
                     u521 0409                       u601 0608                       u530 0411  
                     u610 048F                       u531 0410                       u620 0397  
                     u700 03F2                       u540 05BC                       u621 0396  
                     u701 03F1                       u541 05BB                       u630 039D  
                     u710 0617                       u631 039C                       u711 0616  
                     u615 048A                       u800 066F                       u720 0622  
                     u560 05D0                       u801 066E                       u721 0621  
                     u561 05CF                       u650 0436                       u730 0633  
                     u810 04FB                       u651 0435                       u731 0632  
                     u811 04FA                       u555 05C1                       u660 04B6  
                     u820 0506                       u580 05EB                       u661 04B5  
                     u645 0450                       u821 0505                       u581 05EA  
                     u750 0645                       u830 0511                       u751 0644  
                     u831 0510                       u575 05D2                       u680 04D9  
                     u681 04D8                       u745 0637                       u585 05E7  
                     u770 0656                       u850 0523                       u675 04BC  
                     u771 0655                       u851 0522                       u595 05FB  
                     u860 052D                       u765 0646                       u861 052C  
                     u845 0515                       u790 066A                       u695 04DF  
                     u791 0669                       u775 0652                       u880 0540  
                     u785 065E                       u881 053F                       u865 0529  
                     u890 0545                       u891 0544                       u875 0534  
                     u957 06B2                       u967 06DA                       u977 06FF  
                     u987 0727                       u997 07CA                       _mot 002A  
                     fsr0 0004                       indf 0000              ___awmod@sign 007D  
                    l1200 047C                      l1210 0391                      l1202 047F  
                    l1212 0397                      l1220 03AB                      l1300 0573  
                    l1204 04AC                      l1222 03B4                      l1214 039F  
                    l1230 045B                      l1302 03D3                      l1206 04AD  
                    l1310 03B8                      l1216 03A2                      l1240 046F  
                    l1232 045E                      l1224 0444                      l1304 03D6  
                    l1320 061C                      l1208 04AE                      l1312 03C4  
                    l1250 0383                      l1170 0411                      l1162 03F4  
                    l1218 03A8                      l1242 0474                      l1234 0463  
                    l1226 044A                      l1306 03E1                      l1330 062D  
                    l1322 061E                      l1314 0612                      l1260 0422  
                    l1244 0375                      l1252 0387                      l1164 03F8  
                    l1236 0466                      l1228 044D                      l1308 03E7  
                    l1340 0645                      l1332 0633                      l1324 0622  
                    l1316 0613                      l1180 05CC                      l1172 05AC  
                    l1262 042B                      l1246 037A                      l1254 038C  
                    l1166 0403                      l1238 046C                      l1342 0656  
                    l1334 0636                      l1350 066A                      l1326 0627  
                    l1318 0617                      l1190 05FA                      l1182 05D0  
                    l1174 05BC                      l1430 06B7                      l1422 0679  
                    l1264 0430                      l1256 0415                      l1248 037E  
                    l1168 040A                      l1280 04CC                      l1272 04B1  
                    l1352 066F                      l1344 065C                      l1336 063D  
                    l1328 062B                      l1360 04F7                      l1192 0603  
                    l1184 05D9                      l1176 05BF                      l1440 06FB  
                    l1432 06BC                      l1424 067E                      l1266 0436  
                    l1258 041A                      l1290 04EF                      l1274 04B6  
                    l1282 04D3                      l1354 0674                      l1346 065D  
                    l1338 0641                      l1370 050B                      l1362 04FB  
                    l1186 05EB                      l1178 05C8                      l1194 0609  
                    l1450 0723                      l1442 0704                      l1434 06C5  
                    l1426 0683                      l1268 043E                      l1292 054F  
                    l1284 04D9                      l1276 04C3                      l1348 0664  
                    l1380 0523                      l1372 0511                      l1364 0500  
                    l1188 05F9                      l1460 078F                      l1452 072C  
                    l1444 0709                      l1436 06D1                      l1428 06AE  
                    l1294 0555                      l1286 04E6                      l1278 04C6  
                    l1390 0545                      l1382 052D                      l1374 0514  
                    l1366 0502                      l1358 04F6                      l1198 0478  
                    l1470 07DC                      l1462 07B1                      l1454 0743  
                    l1446 0712                      l1438 06D6                      l1296 055E  
                    l1288 04E9                      l1392 054A                      l1384 0533  
                    l1376 051B                      l1368 0506                      l1472 07E4  
                    l1464 07C6                      l1456 0765                      l1448 071E  
                    l1298 056D                      l1386 053A                      l1378 051F  
                    l1466 07CE                      l1458 077A                      l1388 0540  
                    l1468 07D6                      _CREN 00C4                      u1007 0460  
                    u1017 0471                      u1027 0559                      u1037 0568  
                    u1047 0577                      u1057 03AF                      _PEIE 005E  
                    _RCIF 0065                      _OERR 00C1                      _TRMT 04C1  
       ?_Lcd_Write_String 0070                      _dato 002D                      _main 0679  
                    btemp 007E                      start 0000        ??_Lcd_Write_String 0075  
         __end_of_Lcd_Cmd 03B8          ?_I2C_Master_Init 0020          ?_I2C_Master_Read 0070  
        ?_I2C_Master_Wait 0070          ?_I2C_Master_Stop 0070                     ?_main 0070  
         __end_of___awdiv 0679           __end_of___awmod 054F                     _ANSEL 0188  
         __end_of___lldiv 0612           ___awdiv@divisor 0070           ___awdiv@counter 0074  
                   _RCREG 001A                     _RCSTA 0018                     _SPBRG 0099  
                   _PORTB 0006                     _PORTD 0008                     _TRISB 0086  
                   _TRISD 0088                     _SSPIE 0463                     _SSPIF 0063  
                   _TXREG 0019                     _TXSTA 0098                     _datos 0030  
         __end_of_message 0018                     _setup 03B8                     pclath 000A  
                   status 0003                     wtemp0 007E          __end_of_Lcd_Init 05AC  
        __end_of_Lcd_Port 0415           __initialization 07EE              __end_of_main 07EE  
                  ??_main 0028         ?_I2C_Master_Start 0070         ?_I2C_Master_Write 0070  
      ??_I2C_Master_Start 0070        ??_I2C_Master_Write 0072          ___awdiv@dividend 0072  
                  ?_setup 0070                    _ANSELH 0189                 ??_Lcd_Cmd 0071  
                  _SSPADD 0093                    _TRISC3 043B                    _TRISC4 043C  
                  _SSPCON 0014                    _SSPBUF 0013                 ??___awdiv 0074  
               ??___awmod 007C                    _datos2 002E                 ??___lldiv 0078  
        ___awdiv@quotient 0076           ___awmod@divisor 0078           ___awmod@counter 007C  
         Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078  
         Lcd_Set_Cursor@z 0077   __end_of__initialization 07FC            __pcstackCOMMON 0070  
            __pidataBANK0 0374             __end_of_setup 03D2            _Lcd_Set_Cursor 04B0  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070                   ??_setup 007E  
              __pbssBANK0 002A                __pmaintext 0679    __end_of_Lcd_Set_Cursor 04F6  
              ??_Lcd_Init 0074                ??_Lcd_Port 0070                   _SSPCON2 0091  
                 _SSPSTAT 0094                __stringtab 0003            _Lcd_Write_Char 0443  
                 _Lcd_Cmd 039E                   ___awdiv 0612                   ___awmod 04F6  
                 ___lldiv 05AC           ?_Lcd_Set_Cursor 0074                   __ptext1 03B8  
                 __ptext2 0478                   __ptext3 05AC                   __ptext4 04F6  
                 __ptext5 0612                   __ptext6 03D2                   __ptext7 0443  
                 __ptext8 04B0                   __ptext9 054F                   _message 0009  
        ___awmod@dividend 007A    __end_of_Lcd_Write_Char 0478      end_of_initialization 07FC  
         ___lldiv@divisor 0070           ___lldiv@counter 007D          I2C_Master_Init@c 0020  
        I2C_Master_Read@a 0070                 Lcd_Port@a 0070                 _PORTDbits 0008  
               _TRISCbits 0087           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0078  
       Lcd_Write_String@i 0076          _Lcd_Write_String 03D2       start_initialization 07EE  
       ??_I2C_Master_Init 0024         ??_I2C_Master_Read 0072         ??_I2C_Master_Wait 0070  
       ??_I2C_Master_Stop 0070               __pdataBANK0 0032           Lcd_Write_Char@a 0074  
         Lcd_Write_Char@y 0073                 ___latbits 0002             __pcstackBANK0 0020  
                ?_Lcd_Cmd 0070          _I2C_Master_Start 0375          _I2C_Master_Write 0387  
        ??_Lcd_Set_Cursor 0075                  ?___awdiv 0070                  ?___awmod 0078  
                ?___lldiv 0070                 __pstrings 0003                  Lcd_Cmd@a 0073  
             __stringbase 0008          ??_Lcd_Write_Char 0071                  _Lcd_Init 054F  
                _Lcd_Port 03F3       I2C_Master_Read@temp 0074  __end_of_Lcd_Write_String 03F3  
      __end_of__stringtab 0009           _I2C_Master_Init 0478           _I2C_Master_Read 0415  
         _I2C_Master_Wait 0391           _I2C_Master_Stop 037E                  __ptext10 039E  
                __ptext11 03F3                  __ptext12 0387                  __ptext13 037E  
                __ptext14 0375                  __ptext15 0415                  __ptext16 0391  
__end_of_I2C_Master_Start 037E  __end_of_I2C_Master_Write 0391        Lcd_Write_Char@temp 0072  
        ___lldiv@dividend 0074                 stringcode 0003   __end_of_I2C_Master_Init 04B0  
 __end_of_I2C_Master_Read 0443   __end_of_I2C_Master_Wait 039E   __end_of_I2C_Master_Stop 0387  
      Lcd_Set_Cursor@temp 0079          ___lldiv@quotient 0079         I2C_Master_Write@d 0070  
                stringdir 0003                  stringtab 0003               _SSPCON2bits 0091  
>>>>>>> Stashed changes
