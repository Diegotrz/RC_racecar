

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Aug 30 11:59:06 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    43                           	dabs	1,0x7E,2
    44     0000                     
    45                           ; Version 2.40
    46                           ; Generated 17/11/2021 GMT
    47                           ; 
    48                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F887 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80     0000                     	;# 
    81     0001                     	;# 
    82     0002                     	;# 
    83     0003                     	;# 
    84     0004                     	;# 
    85     0005                     	;# 
    86     0006                     	;# 
    87     0007                     	;# 
    88     0008                     	;# 
    89     0009                     	;# 
    90     000A                     	;# 
    91     000B                     	;# 
    92     000C                     	;# 
    93     000D                     	;# 
    94     000E                     	;# 
    95     000E                     	;# 
    96     000F                     	;# 
    97     0010                     	;# 
    98     0011                     	;# 
    99     0012                     	;# 
   100     0013                     	;# 
   101     0014                     	;# 
   102     0015                     	;# 
   103     0015                     	;# 
   104     0016                     	;# 
   105     0017                     	;# 
   106     0018                     	;# 
   107     0019                     	;# 
   108     001A                     	;# 
   109     001B                     	;# 
   110     001B                     	;# 
   111     001C                     	;# 
   112     001D                     	;# 
   113     001E                     	;# 
   114     001F                     	;# 
   115     0081                     	;# 
   116     0085                     	;# 
   117     0086                     	;# 
   118     0087                     	;# 
   119     0088                     	;# 
   120     0089                     	;# 
   121     008C                     	;# 
   122     008D                     	;# 
   123     008E                     	;# 
   124     008F                     	;# 
   125     0090                     	;# 
   126     0091                     	;# 
   127     0092                     	;# 
   128     0093                     	;# 
   129     0093                     	;# 
   130     0093                     	;# 
   131     0094                     	;# 
   132     0095                     	;# 
   133     0096                     	;# 
   134     0097                     	;# 
   135     0098                     	;# 
   136     0099                     	;# 
   137     009A                     	;# 
   138     009B                     	;# 
   139     009C                     	;# 
   140     009D                     	;# 
   141     009E                     	;# 
   142     009F                     	;# 
   143     0105                     	;# 
   144     0107                     	;# 
   145     0108                     	;# 
   146     0109                     	;# 
   147     010C                     	;# 
   148     010C                     	;# 
   149     010D                     	;# 
   150     010E                     	;# 
   151     010F                     	;# 
   152     0185                     	;# 
   153     0187                     	;# 
   154     0188                     	;# 
   155     0189                     	;# 
   156     018C                     	;# 
   157     018D                     	;# 
   158     0000                     	;# 
   159     0001                     	;# 
   160     0002                     	;# 
   161     0003                     	;# 
   162     0004                     	;# 
   163     0005                     	;# 
   164     0006                     	;# 
   165     0007                     	;# 
   166     0008                     	;# 
   167     0009                     	;# 
   168     000A                     	;# 
   169     000B                     	;# 
   170     000C                     	;# 
   171     000D                     	;# 
   172     000E                     	;# 
   173     000E                     	;# 
   174     000F                     	;# 
   175     0010                     	;# 
   176     0011                     	;# 
   177     0012                     	;# 
   178     0013                     	;# 
   179     0014                     	;# 
   180     0015                     	;# 
   181     0015                     	;# 
   182     0016                     	;# 
   183     0017                     	;# 
   184     0018                     	;# 
   185     0019                     	;# 
   186     001A                     	;# 
   187     001B                     	;# 
   188     001B                     	;# 
   189     001C                     	;# 
   190     001D                     	;# 
   191     001E                     	;# 
   192     001F                     	;# 
   193     0081                     	;# 
   194     0085                     	;# 
   195     0086                     	;# 
   196     0087                     	;# 
   197     0088                     	;# 
   198     0089                     	;# 
   199     008C                     	;# 
   200     008D                     	;# 
   201     008E                     	;# 
   202     008F                     	;# 
   203     0090                     	;# 
   204     0091                     	;# 
   205     0092                     	;# 
   206     0093                     	;# 
   207     0093                     	;# 
   208     0093                     	;# 
   209     0094                     	;# 
   210     0095                     	;# 
   211     0096                     	;# 
   212     0097                     	;# 
   213     0098                     	;# 
   214     0099                     	;# 
   215     009A                     	;# 
   216     009B                     	;# 
   217     009C                     	;# 
   218     009D                     	;# 
   219     009E                     	;# 
   220     009F                     	;# 
   221     0105                     	;# 
   222     0107                     	;# 
   223     0108                     	;# 
   224     0109                     	;# 
   225     010C                     	;# 
   226     010C                     	;# 
   227     010D                     	;# 
   228     010E                     	;# 
   229     010F                     	;# 
   230     0185                     	;# 
   231     0187                     	;# 
   232     0188                     	;# 
   233     0189                     	;# 
   234     018C                     	;# 
   235     018D                     	;# 
   236     0000                     	;# 
   237     0001                     	;# 
   238     0002                     	;# 
   239     0003                     	;# 
   240     0004                     	;# 
   241     0005                     	;# 
   242     0006                     	;# 
   243     0007                     	;# 
   244     0008                     	;# 
   245     0009                     	;# 
   246     000A                     	;# 
   247     000B                     	;# 
   248     000C                     	;# 
   249     000D                     	;# 
   250     000E                     	;# 
   251     000E                     	;# 
   252     000F                     	;# 
   253     0010                     	;# 
   254     0011                     	;# 
   255     0012                     	;# 
   256     0013                     	;# 
   257     0014                     	;# 
   258     0015                     	;# 
   259     0015                     	;# 
   260     0016                     	;# 
   261     0017                     	;# 
   262     0018                     	;# 
   263     0019                     	;# 
   264     001A                     	;# 
   265     001B                     	;# 
   266     001B                     	;# 
   267     001C                     	;# 
   268     001D                     	;# 
   269     001E                     	;# 
   270     001F                     	;# 
   271     0081                     	;# 
   272     0085                     	;# 
   273     0086                     	;# 
   274     0087                     	;# 
   275     0088                     	;# 
   276     0089                     	;# 
   277     008C                     	;# 
   278     008D                     	;# 
   279     008E                     	;# 
   280     008F                     	;# 
   281     0090                     	;# 
   282     0091                     	;# 
   283     0092                     	;# 
   284     0093                     	;# 
   285     0093                     	;# 
   286     0093                     	;# 
   287     0094                     	;# 
   288     0095                     	;# 
   289     0096                     	;# 
   290     0097                     	;# 
   291     0098                     	;# 
   292     0099                     	;# 
   293     009A                     	;# 
   294     009B                     	;# 
   295     009C                     	;# 
   296     009D                     	;# 
   297     009E                     	;# 
   298     009F                     	;# 
   299     0105                     	;# 
   300     0107                     	;# 
   301     0108                     	;# 
   302     0109                     	;# 
   303     010C                     	;# 
   304     010C                     	;# 
   305     010D                     	;# 
   306     010E                     	;# 
   307     010F                     	;# 
   308     0185                     	;# 
   309     0187                     	;# 
   310     0188                     	;# 
   311     0189                     	;# 
   312     018C                     	;# 
   313     018D                     	;# 
   314     0000                     	;# 
   315     0001                     	;# 
   316     0002                     	;# 
   317     0003                     	;# 
   318     0004                     	;# 
   319     0005                     	;# 
   320     0006                     	;# 
   321     0007                     	;# 
   322     0008                     	;# 
   323     0009                     	;# 
   324     000A                     	;# 
   325     000B                     	;# 
   326     000C                     	;# 
   327     000D                     	;# 
   328     000E                     	;# 
   329     000E                     	;# 
   330     000F                     	;# 
   331     0010                     	;# 
   332     0011                     	;# 
   333     0012                     	;# 
   334     0013                     	;# 
   335     0014                     	;# 
   336     0015                     	;# 
   337     0015                     	;# 
   338     0016                     	;# 
   339     0017                     	;# 
   340     0018                     	;# 
   341     0019                     	;# 
   342     001A                     	;# 
   343     001B                     	;# 
   344     001B                     	;# 
   345     001C                     	;# 
   346     001D                     	;# 
   347     001E                     	;# 
   348     001F                     	;# 
   349     0081                     	;# 
   350     0085                     	;# 
   351     0086                     	;# 
   352     0087                     	;# 
   353     0088                     	;# 
   354     0089                     	;# 
   355     008C                     	;# 
   356     008D                     	;# 
   357     008E                     	;# 
   358     008F                     	;# 
   359     0090                     	;# 
   360     0091                     	;# 
   361     0092                     	;# 
   362     0093                     	;# 
   363     0093                     	;# 
   364     0093                     	;# 
   365     0094                     	;# 
   366     0095                     	;# 
   367     0096                     	;# 
   368     0097                     	;# 
   369     0098                     	;# 
   370     0099                     	;# 
   371     009A                     	;# 
   372     009B                     	;# 
   373     009C                     	;# 
   374     009D                     	;# 
   375     009E                     	;# 
   376     009F                     	;# 
   377     0105                     	;# 
   378     0107                     	;# 
   379     0108                     	;# 
   380     0109                     	;# 
   381     010C                     	;# 
   382     010C                     	;# 
   383     010D                     	;# 
   384     010E                     	;# 
   385     010F                     	;# 
   386     0185                     	;# 
   387     0187                     	;# 
   388     0188                     	;# 
   389     0189                     	;# 
   390     018C                     	;# 
   391     018D                     	;# 
   392     0000                     	;# 
   393     0001                     	;# 
   394     0002                     	;# 
   395     0003                     	;# 
   396     0004                     	;# 
   397     0005                     	;# 
   398     0006                     	;# 
   399     0007                     	;# 
   400     0008                     	;# 
   401     0009                     	;# 
   402     000A                     	;# 
   403     000B                     	;# 
   404     000C                     	;# 
   405     000D                     	;# 
   406     000E                     	;# 
   407     000E                     	;# 
   408     000F                     	;# 
   409     0010                     	;# 
   410     0011                     	;# 
   411     0012                     	;# 
   412     0013                     	;# 
   413     0014                     	;# 
   414     0015                     	;# 
   415     0015                     	;# 
   416     0016                     	;# 
   417     0017                     	;# 
   418     0018                     	;# 
   419     0019                     	;# 
   420     001A                     	;# 
   421     001B                     	;# 
   422     001B                     	;# 
   423     001C                     	;# 
   424     001D                     	;# 
   425     001E                     	;# 
   426     001F                     	;# 
   427     0081                     	;# 
   428     0085                     	;# 
   429     0086                     	;# 
   430     0087                     	;# 
   431     0088                     	;# 
   432     0089                     	;# 
   433     008C                     	;# 
   434     008D                     	;# 
   435     008E                     	;# 
   436     008F                     	;# 
   437     0090                     	;# 
   438     0091                     	;# 
   439     0092                     	;# 
   440     0093                     	;# 
   441     0093                     	;# 
   442     0093                     	;# 
   443     0094                     	;# 
   444     0095                     	;# 
   445     0096                     	;# 
   446     0097                     	;# 
   447     0098                     	;# 
   448     0099                     	;# 
   449     009A                     	;# 
   450     009B                     	;# 
   451     009C                     	;# 
   452     009D                     	;# 
   453     009E                     	;# 
   454     009F                     	;# 
   455     0105                     	;# 
   456     0107                     	;# 
   457     0108                     	;# 
   458     0109                     	;# 
   459     010C                     	;# 
   460     010C                     	;# 
   461     010D                     	;# 
   462     010E                     	;# 
   463     010F                     	;# 
   464     0185                     	;# 
   465     0187                     	;# 
   466     0188                     	;# 
   467     0189                     	;# 
   468     018C                     	;# 
   469     018D                     	;# 
   470                           
   471                           	psect	idataBANK0
   472     0610                     __pidataBANK0:
   473                           
   474                           ;initializer for RTC_display@Date
   475     0610  3444               	retlw	68
   476     0611  3441               	retlw	65
   477     0612  3454               	retlw	84
   478     0613  3445               	retlw	69
   479     0614  343A               	retlw	58
   480     0615  3420               	retlw	32
   481     0616  3430               	retlw	48
   482     0617  3430               	retlw	48
   483     0618  342F               	retlw	47
   484     0619  3430               	retlw	48
   485     061A  3430               	retlw	48
   486     061B  342F               	retlw	47
   487     061C  3432               	retlw	50
   488     061D  3430               	retlw	48
   489     061E  3430               	retlw	48
   490     061F  3430               	retlw	48
   491     0620  3400               	retlw	0
   492                           
   493                           ;initializer for RTC_display@Time
   494     0621  3454               	retlw	84
   495     0622  3449               	retlw	73
   496     0623  344D               	retlw	77
   497     0624  3445               	retlw	69
   498     0625  343A               	retlw	58
   499     0626  3420               	retlw	32
   500     0627  3430               	retlw	48
   501     0628  3430               	retlw	48
   502     0629  343A               	retlw	58
   503     062A  3430               	retlw	48
   504     062B  3430               	retlw	48
   505     062C  343A               	retlw	58
   506     062D  3430               	retlw	48
   507     062E  3430               	retlw	48
   508     062F  3400               	retlw	0
   509                           
   510                           	psect	strings
   511     05CC                     __pstrings:
   512     05CC                     stringtab:
   513     05CC                     __stringtab:
   514                           
   515                           ;	String table - string pointers are 1 byte each
   516     05CC  1BFF               	btfsc	btemp+1,7
   517     05CD  2DD6               	ljmp	stringcode
   518     05CE  1383               	bcf	3,7
   519     05CF  187F               	btfsc	btemp+1,0
   520     05D0  1783               	bsf	3,7
   521     05D1  0800               	movf	0,w
   522     05D2  0A84               	incf	4,f
   523     05D3  1903               	skipnz
   524     05D4  0AFF               	incf	btemp+1,f
   525     05D5  0008               	return
   526     05D6                     stringcode:
   527     05D6                     stringdir:
   528     05D6  3005               	movlw	high stringdir
   529     05D7  008A               	movwf	10
   530     05D8  0804               	movf	4,w
   531     05D9  0A84               	incf	4,f
   532     05DA  0782               	addwf	2,f
   533     05DB                     __stringbase:
   534     05DB  3400               	retlw	0
   535     05DC                     __end_of__stringtab:
   536     05DC                     _message:
   537     05DC  3432               	retlw	50
   538     05DD  342E               	retlw	46
   539     05DE  3445               	retlw	69
   540     05DF  346E               	retlw	110
   541     05E0  3476               	retlw	118
   542     05E1  3469               	retlw	105
   543     05E2  3461               	retlw	97
   544     05E3  3472               	retlw	114
   545     05E4  3420               	retlw	32
   546     05E5  3441               	retlw	65
   547     05E6  3473               	retlw	115
   548     05E7  3463               	retlw	99
   549     05E8  3469               	retlw	105
   550     05E9  3469               	retlw	105
   551     05EA  3400               	retlw	0
   552     05EB                     __end_of_message:
   553     0019                     _TXREG	set	25
   554     0018                     _RCSTA	set	24
   555     0008                     _PORTDbits	set	8
   556     0013                     _SSPBUF	set	19
   557     0014                     _SSPCON	set	20
   558     000B                     _INTCONbits	set	11
   559     0008                     _PORTD	set	8
   560     001A                     _RCREG	set	26
   561     0018                     _RCSTAbits	set	24
   562     000C                     _PIR1bits	set	12
   563     00C4                     _CREN	set	196
   564     00C1                     _OERR	set	193
   565     0065                     _RCIF	set	101
   566     0043                     _RD3	set	67
   567     0047                     _RD7	set	71
   568     0046                     _RD6	set	70
   569     0045                     _RD5	set	69
   570     0044                     _RD4	set	68
   571     0063                     _SSPIF	set	99
   572     005E                     _PEIE	set	94
   573     005F                     _GIE	set	95
   574     0098                     _TXSTA	set	152
   575     0099                     _SPBRG	set	153
   576     0091                     _SSPCON2bits	set	145
   577     0087                     _TRISCbits	set	135
   578     0094                     _SSPSTAT	set	148
   579     0093                     _SSPADD	set	147
   580     0091                     _SSPCON2	set	145
   581     008F                     _OSCCONbits	set	143
   582     0088                     _TRISD	set	136
   583     008F                     _OSCCON	set	143
   584     04C1                     _TRMT	set	1217
   585     0463                     _SSPIE	set	1123
   586     043C                     _TRISC4	set	1084
   587     043B                     _TRISC3	set	1083
   588     0189                     _ANSELH	set	393
   589     0188                     _ANSEL	set	392
   590     05EB                     STR_1:
   591     05EB  340D               	retlw	13
   592     05EC  340A               	retlw	10
   593     05ED  3400               	retlw	0
   594     05EB                     
   595                           	psect	cinit
   596     000F                     start_initialization:	
   597                           ; #config settings
   598                           
   599     000F                     __initialization:
   600                           
   601                           ; Initialize objects allocated to BANK0
   602     000F  1383               	bcf	3,7	;select IRP bank0
   603     0010  3040               	movlw	low (__pdataBANK0+32)
   604     0011  00FD               	movwf	btemp+-1
   605     0012  3006               	movlw	high __pidataBANK0
   606     0013  00FE               	movwf	btemp
   607     0014  3010               	movlw	low __pidataBANK0
   608     0015  00FF               	movwf	btemp+1
   609     0016  3020               	movlw	low __pdataBANK0
   610     0017  0084               	movwf	4
   611     0018  120A  118A  2679  120A  118A  	fcall	init_ram0
   612                           
   613                           ; Clear objects allocated to BANK0
   614     001D  3040               	movlw	low __pbssBANK0
   615     001E  0084               	movwf	4
   616     001F  305C               	movlw	low (__pbssBANK0+28)
   617     0020  120A  118A  26F0  120A  118A  	fcall	clear_ram0
   618                           
   619                           ; Clear objects allocated to COMMON
   620     0025  01FA               	clrf	__pbssCOMMON& (0+127)
   621     0026  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   622     0027                     end_of_initialization:	
   623                           ;End of C runtime variable initialization code
   624                           
   625     0027                     __end_of__initialization:
   626     0027  0183               	clrf	3
   627     0028  120A  118A  282B   	ljmp	_main	;jump to C main() function
   628                           
   629                           	psect	bssCOMMON
   630     007A                     __pbssCOMMON:
   631     007A                     _minute:
   632     007A                     	ds	1
   633     007B                     _second:
   634     007B                     	ds	1
   635                           
   636                           	psect	bssBANK0
   637     0040                     __pbssBANK0:
   638     0040                     _year:
   639     0040                     	ds	1
   640     0041                     _month:
   641     0041                     	ds	1
   642     0042                     _m_day:
   643     0042                     	ds	1
   644     0043                     _hour:
   645     0043                     	ds	1
   646     0044                     _i:
   647     0044                     	ds	1
   648     0045                     _aceleracX:
   649     0045                     	ds	1
   650     0046                     _RPML:
   651     0046                     	ds	1
   652     0047                     _RPMR:
   653     0047                     	ds	1
   654     0048                     _datos:
   655     0048                     	ds	20
   656                           
   657                           	psect	dataBANK0
   658     0020                     __pdataBANK0:
   659     0020                     RTC_display@Date:
   660     0020                     	ds	17
   661     0031                     RTC_display@Time:
   662     0031                     	ds	15
   663                           
   664                           	psect	inittext
   665     0675                     init_fetch0:	
   666                           ;	Called with low address in FSR and high address in W
   667                           
   668     0675  087E               	movf	btemp,w
   669     0676  008A               	movwf	10
   670     0677  087F               	movf	btemp+1,w
   671     0678  0082               	movwf	2
   672     0679                     init_ram0:	
   673                           ;Called with:
   674                           ;	high address of idata address in btemp 
   675                           ;	low address of idata address in btemp+1 
   676                           ;	low address of data in FSR
   677                           ;	high address + 1 of data in btemp-1
   678                           
   679     0679  120A  118A  2675  120A  118A  	fcall	init_fetch0
   680     067E  0080               	movwf	0
   681     067F  0A84               	incf	4,f
   682     0680  0804               	movf	4,w
   683     0681  067D               	xorwf	btemp+-1,w
   684     0682  1903               	btfsc	3,2
   685     0683  3400               	retlw	0
   686     0684  0AFF               	incf	btemp+1,f
   687     0685  1903               	btfsc	3,2
   688     0686  0AFE               	incf	btemp,f
   689     0687  2E79               	goto	init_ram0
   690                           
   691                           	psect	clrtext
   692     06F0                     clear_ram0:	
   693                           ;	Called with FSR containing the base address, and
   694                           ;	W with the last address+1
   695                           
   696     06F0  0064               	clrwdt	;clear the watchdog before getting into this loop
   697     06F1                     clrloop0:
   698     06F1  0180               	clrf	0	;clear RAM location pointed to by FSR
   699     06F2  0A84               	incf	4,f	;increment pointer
   700     06F3  0604               	xorwf	4,w	;XOR with final address
   701     06F4  1903               	btfsc	3,2	;have we reached the end yet?
   702     06F5  3400               	retlw	0	;all done for this memory range, return
   703     06F6  0604               	xorwf	4,w	;XOR again to restore value
   704     06F7  2EF1               	goto	clrloop0	;do the next byte
   705                           
   706                           	psect	cstackCOMMON
   707     0070                     __pcstackCOMMON:
   708     0070                     ?_UART_Data_Ready:
   709     0070                     ?_Lcd_Write_String:	
   710                           ; 1 bit 
   711                           
   712     0070                     ?_setup:	
   713                           ; 1 bytes @ 0x0
   714                           
   715     0070                     ?_I2C_Master_Start:	
   716                           ; 1 bytes @ 0x0
   717                           
   718     0070                     ?_I2C_Master_Stop:	
   719                           ; 1 bytes @ 0x0
   720                           
   721     0070                     ?_I2C_Master_RepeatedStart:	
   722                           ; 1 bytes @ 0x0
   723                           
   724     0070                     ?_UART_GetC:	
   725                           ; 1 bytes @ 0x0
   726                           
   727     0070                     ?_UART_PutC:	
   728                           ; 1 bytes @ 0x0
   729                           
   730     0070                     ?_isr:	
   731                           ; 1 bytes @ 0x0
   732                           
   733     0070                     ??_isr:	
   734                           ; 1 bytes @ 0x0
   735                           
   736     0070                     ?_bcd_to_decimal:	
   737                           ; 1 bytes @ 0x0
   738                           
   739     0070                     ?_decimal_to_bcd:	
   740                           ; 1 bytes @ 0x0
   741                           
   742     0070                     ?_RTC_display:	
   743                           ; 1 bytes @ 0x0
   744                           
   745     0070                     ?_main:	
   746                           ; 1 bytes @ 0x0
   747                           
   748     0070                     ?_I2C_Master_Wait:	
   749                           ; 1 bytes @ 0x0
   750                           
   751     0070                     ?_Lcd_Port:	
   752                           ; 1 bytes @ 0x0
   753                           
   754     0070                     ?_Lcd_Cmd:	
   755                           ; 1 bytes @ 0x0
   756                           
   757     0070                     ?_Lcd_Write_Char:	
   758                           ; 1 bytes @ 0x0
   759                           
   760                           
   761                           ; 1 bytes @ 0x0
   762     0070                     	ds	2
   763     0072                     ??_setup:
   764     0072                     ??_I2C_Master_Start:	
   765                           ; 1 bytes @ 0x2
   766                           
   767     0072                     ?_I2C_Master_Write:	
   768                           ; 1 bytes @ 0x2
   769                           
   770     0072                     ??_I2C_Master_Stop:	
   771                           ; 1 bytes @ 0x2
   772                           
   773     0072                     ??_I2C_Master_RepeatedStart:	
   774                           ; 1 bytes @ 0x2
   775                           
   776     0072                     ??_UART_Data_Ready:	
   777                           ; 1 bytes @ 0x2
   778                           
   779     0072                     ??_UART_GetC:	
   780                           ; 1 bytes @ 0x2
   781                           
   782     0072                     ??_UART_PutC:	
   783                           ; 1 bytes @ 0x2
   784                           
   785     0072                     ??_I2C_Master_Wait:	
   786                           ; 1 bytes @ 0x2
   787                           
   788     0072                     ??_Lcd_Port:	
   789                           ; 1 bytes @ 0x2
   790                           
   791     0072                     ?___bmul:	
   792                           ; 1 bytes @ 0x2
   793                           
   794     0072                     ?_I2C_Master_Read:	
   795                           ; 1 bytes @ 0x2
   796                           
   797     0072                     ?___awdiv:	
   798                           ; 2 bytes @ 0x2
   799                           
   800     0072                     ?___awmod:	
   801                           ; 2 bytes @ 0x2
   802                           
   803     0072                     ?___lldiv:	
   804                           ; 2 bytes @ 0x2
   805                           
   806     0072                     Lcd_Port@a:	
   807                           ; 4 bytes @ 0x2
   808                           
   809     0072                     UART_PutC@data:	
   810                           ; 1 bytes @ 0x2
   811                           
   812     0072                     ___bmul@multiplicand:	
   813                           ; 1 bytes @ 0x2
   814                           
   815     0072                     I2C_Master_Write@d:	
   816                           ; 1 bytes @ 0x2
   817                           
   818     0072                     I2C_Master_Read@a:	
   819                           ; 2 bytes @ 0x2
   820                           
   821     0072                     ___awdiv@divisor:	
   822                           ; 2 bytes @ 0x2
   823                           
   824     0072                     ___awmod@divisor:	
   825                           ; 2 bytes @ 0x2
   826                           
   827     0072                     ___lldiv@divisor:	
   828                           ; 2 bytes @ 0x2
   829                           
   830                           
   831                           ; 4 bytes @ 0x2
   832     0072                     	ds	1
   833     0073                     ?_UART_Print:
   834     0073                     ??_Lcd_Cmd:	
   835                           ; 1 bytes @ 0x3
   836                           
   837     0073                     ??_Lcd_Write_Char:	
   838                           ; 1 bytes @ 0x3
   839                           
   840     0073                     ??___bmul:	
   841                           ; 1 bytes @ 0x3
   842                           
   843     0073                     UART_Print@data:	
   844                           ; 1 bytes @ 0x3
   845                           
   846                           
   847                           ; 2 bytes @ 0x3
   848     0073                     	ds	1
   849     0074                     ??_I2C_Master_Write:
   850     0074                     ??_I2C_Master_Read:	
   851                           ; 1 bytes @ 0x4
   852                           
   853     0074                     Lcd_Write_Char@temp:	
   854                           ; 1 bytes @ 0x4
   855                           
   856     0074                     ___bmul@product:	
   857                           ; 1 bytes @ 0x4
   858                           
   859     0074                     ___awdiv@dividend:	
   860                           ; 1 bytes @ 0x4
   861                           
   862     0074                     ___awmod@dividend:	
   863                           ; 2 bytes @ 0x4
   864                           
   865                           
   866                           ; 2 bytes @ 0x4
   867     0074                     	ds	1
   868     0075                     ??_UART_Print:
   869     0075                     Lcd_Cmd@a:	
   870                           ; 1 bytes @ 0x5
   871                           
   872     0075                     Lcd_Write_Char@y:	
   873                           ; 1 bytes @ 0x5
   874                           
   875     0075                     ___bmul@multiplier:	
   876                           ; 1 bytes @ 0x5
   877                           
   878                           
   879                           ; 1 bytes @ 0x5
   880     0075                     	ds	1
   881     0076                     ?_Lcd_Set_Cursor:
   882     0076                     ??_bcd_to_decimal:	
   883                           ; 1 bytes @ 0x6
   884                           
   885     0076                     ??___awdiv:	
   886                           ; 1 bytes @ 0x6
   887                           
   888     0076                     ??___awmod:	
   889                           ; 1 bytes @ 0x6
   890                           
   891     0076                     Lcd_Set_Cursor@b:	
   892                           ; 1 bytes @ 0x6
   893                           
   894     0076                     Lcd_Write_Char@a:	
   895                           ; 1 bytes @ 0x6
   896                           
   897     0076                     UART_Print@i:	
   898                           ; 1 bytes @ 0x6
   899                           
   900     0076                     I2C_Master_Read@temp:	
   901                           ; 1 bytes @ 0x6
   902                           
   903     0076                     ___lldiv@dividend:	
   904                           ; 2 bytes @ 0x6
   905                           
   906                           
   907                           ; 4 bytes @ 0x6
   908     0076                     	ds	1
   909     0077                     ??_Lcd_Set_Cursor:
   910     0077                     ??_Lcd_Write_String:	
   911                           ; 1 bytes @ 0x7
   912                           
   913     0077                     ___awmod@counter:	
   914                           ; 1 bytes @ 0x7
   915                           
   916                           
   917                           ; 1 bytes @ 0x7
   918     0077                     	ds	1
   919     0078                     bcd_to_decimal@number:
   920     0078                     ___awmod@sign:	
   921                           ; 1 bytes @ 0x8
   922                           
   923                           
   924                           ; 1 bytes @ 0x8
   925     0078                     	ds	1
   926     0079                     decimal_to_bcd@number:
   927                           
   928                           ; 1 bytes @ 0x9
   929     0079                     	ds	1
   930                           
   931                           	psect	cstackBANK0
   932     005C                     __pcstackBANK0:
   933     005C                     ??___lldiv:
   934     005C                     Lcd_Set_Cursor@a:	
   935                           ; 1 bytes @ 0x0
   936                           
   937     005C                     Lcd_Write_String@a:	
   938                           ; 1 bytes @ 0x0
   939                           
   940     005C                     ___awdiv@counter:	
   941                           ; 1 bytes @ 0x0
   942                           
   943                           
   944                           ; 1 bytes @ 0x0
   945     005C                     	ds	1
   946     005D                     Lcd_Set_Cursor@z:
   947     005D                     ___awdiv@sign:	
   948                           ; 1 bytes @ 0x1
   949                           
   950     005D                     Lcd_Write_String@i:	
   951                           ; 1 bytes @ 0x1
   952                           
   953     005D                     ___lldiv@quotient:	
   954                           ; 2 bytes @ 0x1
   955                           
   956                           
   957                           ; 4 bytes @ 0x1
   958     005D                     	ds	1
   959     005E                     Lcd_Set_Cursor@y:
   960     005E                     ___awdiv@quotient:	
   961                           ; 1 bytes @ 0x2
   962                           
   963                           
   964                           ; 2 bytes @ 0x2
   965     005E                     	ds	1
   966     005F                     Lcd_Set_Cursor@temp:
   967                           
   968                           ; 1 bytes @ 0x3
   969     005F                     	ds	1
   970     0060                     ??_decimal_to_bcd:
   971     0060                     ??_RTC_display:	
   972                           ; 1 bytes @ 0x4
   973                           
   974                           
   975                           ; 1 bytes @ 0x4
   976     0060                     	ds	1
   977     0061                     ___lldiv@counter:
   978                           
   979                           ; 1 bytes @ 0x5
   980     0061                     	ds	1
   981     0062                     ?_UART_Init:
   982     0062                     UART_Init@baud_rate:	
   983                           ; 1 bytes @ 0x6
   984                           
   985                           
   986                           ; 4 bytes @ 0x6
   987     0062                     	ds	4
   988     0066                     ??_UART_Init:
   989                           
   990                           ; 1 bytes @ 0xA
   991     0066                     	ds	4
   992     006A                     UART_Init@n:
   993                           
   994                           ; 2 bytes @ 0xE
   995     006A                     	ds	2
   996     006C                     ??_main:
   997                           
   998                           ; 1 bytes @ 0x10
   999     006C                     	ds	3
  1000     006F                     main@c:
  1001                           
  1002                           ; 1 bytes @ 0x13
  1003     006F                     	ds	1
  1004                           
  1005                           	psect	maintext
  1006     002B                     __pmaintext:	
  1007 ;;
  1008 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1009 ;;
  1010 ;; *************** function _main *****************
  1011 ;; Defined at:
  1012 ;;		line 98 in file "Masterpic.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;  c               1   19[BANK0 ] unsigned char 
  1017 ;;  text            9    0        unsigned char [9]
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  1    wreg      void 
  1020 ;; Registers used:
  1021 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1022 ;; Tracked objects:
  1023 ;;		On entry : B00/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1027 ;;      Params:         0       0       0       0       0
  1028 ;;      Locals:         0       1       0       0       0
  1029 ;;      Temps:          0       3       0       0       0
  1030 ;;      Totals:         0       4       0       0       0
  1031 ;;Total ram usage:        4 bytes
  1032 ;; Hardware stack levels required when called: 5
  1033 ;; This function calls:
  1034 ;;		_I2C_Master_Read
  1035 ;;		_I2C_Master_RepeatedStart
  1036 ;;		_I2C_Master_Start
  1037 ;;		_I2C_Master_Stop
  1038 ;;		_I2C_Master_Write
  1039 ;;		_RTC_display
  1040 ;;		_UART_Data_Ready
  1041 ;;		_UART_GetC
  1042 ;;		_UART_Init
  1043 ;;		_UART_Print
  1044 ;;		_UART_PutC
  1045 ;;		_decimal_to_bcd
  1046 ;;		_setup
  1047 ;; This function is called by:
  1048 ;;		Startup code after reset
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           
  1052     002B                     _main:	
  1053                           ;psect for function _main
  1054                           
  1055     002B                     l1865:	
  1056                           ;incstack = 0
  1057                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1058                           
  1059                           
  1060                           ;Masterpic.c: 100:     setup();
  1061     002B  120A  118A  2688  120A  118A  	fcall	_setup
  1062     0030                     l1867:
  1063                           
  1064                           ;Masterpic.c: 101:   OSCCON = 0x70;
  1065     0030  3070               	movlw	112
  1066     0031  1683               	bsf	3,5	;RP0=1, select bank1
  1067     0032  1303               	bcf	3,6	;RP1=0, select bank1
  1068     0033  008F               	movwf	15	;volatile
  1069     0034                     l1869:
  1070                           
  1071                           ;Masterpic.c: 103:   UART_Init(9600);
  1072     0034  3000               	movlw	0
  1073     0035  1283               	bcf	3,5	;RP0=0, select bank0
  1074     0036  1303               	bcf	3,6	;RP1=0, select bank0
  1075     0037  00E5               	movwf	UART_Init@baud_rate+3
  1076     0038  3000               	movlw	0
  1077     0039  00E4               	movwf	UART_Init@baud_rate+2
  1078     003A  3025               	movlw	37
  1079     003B  00E3               	movwf	UART_Init@baud_rate+1
  1080     003C  3080               	movlw	128
  1081     003D  00E2               	movwf	UART_Init@baud_rate
  1082     003E  120A  118A  22D1  120A  118A  	fcall	_UART_Init
  1083     0043                     l1871:
  1084                           
  1085                           ;Masterpic.c: 105:   _delay((unsigned long)((2000)*(8000000/4000.0)));
  1086     0043  3015               	movlw	21
  1087     0044  1283               	bcf	3,5	;RP0=0, select bank0
  1088     0045  1303               	bcf	3,6	;RP1=0, select bank0
  1089     0046  00EE               	movwf	??_main+2
  1090     0047  304B               	movlw	75
  1091     0048  00ED               	movwf	??_main+1
  1092     0049  30BD               	movlw	189
  1093     004A  00EC               	movwf	??_main
  1094     004B                     u1487:
  1095     004B  0BEC               	decfsz	??_main,f
  1096     004C  284B               	goto	u1487
  1097     004D  0BED               	decfsz	??_main+1,f
  1098     004E  284B               	goto	u1487
  1099     004F  0BEE               	decfsz	??_main+2,f
  1100     0050  284B               	goto	u1487
  1101     0051  2852               	nop2
  1102     0052                     l1873:
  1103                           
  1104                           ;Masterpic.c: 106:   minute = decimal_to_bcd(0);
  1105     0052  3000               	movlw	0
  1106     0053  120A  118A  251C  120A  118A  	fcall	_decimal_to_bcd
  1107     0058  00FA               	movwf	_minute
  1108     0059                     l1875:
  1109                           
  1110                           ;Masterpic.c: 107:     second = decimal_to_bcd(0);
  1111     0059  3000               	movlw	0
  1112     005A  120A  118A  251C  120A  118A  	fcall	_decimal_to_bcd
  1113     005F  00FB               	movwf	_second
  1114     0060                     l1877:
  1115                           
  1116                           ;Masterpic.c: 108:     I2C_Master_Start();
  1117     0060  120A  118A  26DE  120A  118A  	fcall	_I2C_Master_Start
  1118     0065                     l1879:
  1119                           
  1120                           ;Masterpic.c: 109:         I2C_Master_Write(0xD0);
  1121     0065  30D0               	movlw	208
  1122     0066  00F2               	movwf	I2C_Master_Write@d
  1123     0067  3000               	movlw	0
  1124     0068  00F3               	movwf	I2C_Master_Write@d+1
  1125     0069  120A  118A  26CB  120A  118A  	fcall	_I2C_Master_Write
  1126     006E                     l1881:
  1127                           
  1128                           ;Masterpic.c: 110:         I2C_Master_Write(0x01);
  1129     006E  3001               	movlw	1
  1130     006F  00F2               	movwf	I2C_Master_Write@d
  1131     0070  3000               	movlw	0
  1132     0071  00F3               	movwf	I2C_Master_Write@d+1
  1133     0072  120A  118A  26CB  120A  118A  	fcall	_I2C_Master_Write
  1134     0077                     l1883:
  1135                           
  1136                           ;Masterpic.c: 111:         I2C_Master_Write(minute);
  1137     0077  087A               	movf	_minute,w
  1138     0078  1283               	bcf	3,5	;RP0=0, select bank0
  1139     0079  1303               	bcf	3,6	;RP1=0, select bank0
  1140     007A  00EC               	movwf	??_main
  1141     007B  01ED               	clrf	??_main+1
  1142     007C  086C               	movf	??_main,w
  1143     007D  00F2               	movwf	I2C_Master_Write@d
  1144     007E  086D               	movf	??_main+1,w
  1145     007F  00F3               	movwf	I2C_Master_Write@d+1
  1146     0080  120A  118A  26CB  120A  118A  	fcall	_I2C_Master_Write
  1147     0085                     l1885:
  1148                           
  1149                           ;Masterpic.c: 113:         I2C_Master_Stop();
  1150     0085  120A  118A  26D5  120A  118A  	fcall	_I2C_Master_Stop
  1151     008A                     l1887:
  1152                           
  1153                           ;Masterpic.c: 114:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1154     008A  3003               	movlw	3
  1155     008B  1283               	bcf	3,5	;RP0=0, select bank0
  1156     008C  1303               	bcf	3,6	;RP1=0, select bank0
  1157     008D  00EE               	movwf	??_main+2
  1158     008E  3008               	movlw	8
  1159     008F  00ED               	movwf	??_main+1
  1160     0090  3076               	movlw	118
  1161     0091  00EC               	movwf	??_main
  1162     0092                     u1497:
  1163     0092  0BEC               	decfsz	??_main,f
  1164     0093  2892               	goto	u1497
  1165     0094  0BED               	decfsz	??_main+1,f
  1166     0095  2892               	goto	u1497
  1167     0096  0BEE               	decfsz	??_main+2,f
  1168     0097  2892               	goto	u1497
  1169     0098  0000               	nop
  1170     0099                     l1889:
  1171                           
  1172                           ;Masterpic.c: 115:         I2C_Master_Start();
  1173     0099  120A  118A  26DE  120A  118A  	fcall	_I2C_Master_Start
  1174     009E                     l1891:
  1175                           
  1176                           ;Masterpic.c: 116:         I2C_Master_Write(0xD0);
  1177     009E  30D0               	movlw	208
  1178     009F  00F2               	movwf	I2C_Master_Write@d
  1179     00A0  3000               	movlw	0
  1180     00A1  00F3               	movwf	I2C_Master_Write@d+1
  1181     00A2  120A  118A  26CB  120A  118A  	fcall	_I2C_Master_Write
  1182     00A7                     l1893:
  1183                           
  1184                           ;Masterpic.c: 117:         I2C_Master_Write(0x00);
  1185     00A7  3000               	movlw	0
  1186     00A8  00F2               	movwf	I2C_Master_Write@d
  1187     00A9  00F3               	movwf	I2C_Master_Write@d+1
  1188     00AA  120A  118A  26CB  120A  118A  	fcall	_I2C_Master_Write
  1189     00AF                     l1895:
  1190                           
  1191                           ;Masterpic.c: 118:         I2C_Master_Write(second);
  1192     00AF  087B               	movf	_second,w
  1193     00B0  1283               	bcf	3,5	;RP0=0, select bank0
  1194     00B1  1303               	bcf	3,6	;RP1=0, select bank0
  1195     00B2  00EC               	movwf	??_main
  1196     00B3  01ED               	clrf	??_main+1
  1197     00B4  086C               	movf	??_main,w
  1198     00B5  00F2               	movwf	I2C_Master_Write@d
  1199     00B6  086D               	movf	??_main+1,w
  1200     00B7  00F3               	movwf	I2C_Master_Write@d+1
  1201     00B8  120A  118A  26CB  120A  118A  	fcall	_I2C_Master_Write
  1202     00BD                     l1897:
  1203                           
  1204                           ;Masterpic.c: 120:         I2C_Master_Stop();
  1205     00BD  120A  118A  26D5  120A  118A  	fcall	_I2C_Master_Stop
  1206     00C2                     l1899:
  1207                           
  1208                           ;Masterpic.c: 126:   {;Masterpic.c: 141:         I2C_Master_Start();
  1209     00C2  120A  118A  26DE  120A  118A  	fcall	_I2C_Master_Start
  1210     00C7                     l1901:
  1211                           
  1212                           ;Masterpic.c: 142:         I2C_Master_Write(0xD0);
  1213     00C7  30D0               	movlw	208
  1214     00C8  00F2               	movwf	I2C_Master_Write@d
  1215     00C9  3000               	movlw	0
  1216     00CA  00F3               	movwf	I2C_Master_Write@d+1
  1217     00CB  120A  118A  26CB  120A  118A  	fcall	_I2C_Master_Write
  1218     00D0                     l1903:
  1219                           
  1220                           ;Masterpic.c: 143:         I2C_Master_Write(0x00);
  1221     00D0  3000               	movlw	0
  1222     00D1  00F2               	movwf	I2C_Master_Write@d
  1223     00D2  00F3               	movwf	I2C_Master_Write@d+1
  1224     00D3  120A  118A  26CB  120A  118A  	fcall	_I2C_Master_Write
  1225     00D8                     l1905:
  1226                           
  1227                           ;Masterpic.c: 144:         I2C_Master_Stop();
  1228     00D8  120A  118A  26D5  120A  118A  	fcall	_I2C_Master_Stop
  1229     00DD                     l1907:
  1230                           
  1231                           ;Masterpic.c: 146:         I2C_Master_Start();
  1232     00DD  120A  118A  26DE  120A  118A  	fcall	_I2C_Master_Start
  1233     00E2                     l1909:
  1234                           
  1235                           ;Masterpic.c: 147:         I2C_Master_Write(0xD0);
  1236     00E2  30D0               	movlw	208
  1237     00E3  00F2               	movwf	I2C_Master_Write@d
  1238     00E4  3000               	movlw	0
  1239     00E5  00F3               	movwf	I2C_Master_Write@d+1
  1240     00E6  120A  118A  26CB  120A  118A  	fcall	_I2C_Master_Write
  1241     00EB                     l1911:
  1242                           
  1243                           ;Masterpic.c: 148:         I2C_Master_Write(0x00);
  1244     00EB  3000               	movlw	0
  1245     00EC  00F2               	movwf	I2C_Master_Write@d
  1246     00ED  00F3               	movwf	I2C_Master_Write@d+1
  1247     00EE  120A  118A  26CB  120A  118A  	fcall	_I2C_Master_Write
  1248     00F3                     l1913:
  1249                           
  1250                           ;Masterpic.c: 149:         I2C_Master_RepeatedStart();
  1251     00F3  120A  118A  26E7  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1252     00F8                     l1915:
  1253                           
  1254                           ;Masterpic.c: 150:         I2C_Master_Write(0xD1);
  1255     00F8  30D1               	movlw	209
  1256     00F9  00F2               	movwf	I2C_Master_Write@d
  1257     00FA  3000               	movlw	0
  1258     00FB  00F3               	movwf	I2C_Master_Write@d+1
  1259     00FC  120A  118A  26CB  120A  118A  	fcall	_I2C_Master_Write
  1260     0101                     l1917:
  1261                           
  1262                           ;Masterpic.c: 151:         second = I2C_Master_Read(0);
  1263     0101  3000               	movlw	0
  1264     0102  00F2               	movwf	I2C_Master_Read@a
  1265     0103  00F3               	movwf	I2C_Master_Read@a+1
  1266     0104  120A  118A  254E  120A  118A  	fcall	_I2C_Master_Read
  1267     0109  0872               	movf	?_I2C_Master_Read,w
  1268     010A  00FB               	movwf	_second
  1269     010B                     l1919:
  1270                           
  1271                           ;Masterpic.c: 152:         I2C_Master_Write(0x01);
  1272     010B  3001               	movlw	1
  1273     010C  00F2               	movwf	I2C_Master_Write@d
  1274     010D  3000               	movlw	0
  1275     010E  00F3               	movwf	I2C_Master_Write@d+1
  1276     010F  120A  118A  26CB  120A  118A  	fcall	_I2C_Master_Write
  1277     0114                     l1921:
  1278                           
  1279                           ;Masterpic.c: 153:         I2C_Master_RepeatedStart();
  1280     0114  120A  118A  26E7  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1281     0119                     l1923:
  1282                           
  1283                           ;Masterpic.c: 154:         I2C_Master_Write(0xD1);
  1284     0119  30D1               	movlw	209
  1285     011A  00F2               	movwf	I2C_Master_Write@d
  1286     011B  3000               	movlw	0
  1287     011C  00F3               	movwf	I2C_Master_Write@d+1
  1288     011D  120A  118A  26CB  120A  118A  	fcall	_I2C_Master_Write
  1289     0122                     l1925:
  1290                           
  1291                           ;Masterpic.c: 155:         minute = I2C_Master_Read(0);
  1292     0122  3000               	movlw	0
  1293     0123  00F2               	movwf	I2C_Master_Read@a
  1294     0124  00F3               	movwf	I2C_Master_Read@a+1
  1295     0125  120A  118A  254E  120A  118A  	fcall	_I2C_Master_Read
  1296     012A  0872               	movf	?_I2C_Master_Read,w
  1297     012B  00FA               	movwf	_minute
  1298     012C                     l1927:
  1299                           
  1300                           ;Masterpic.c: 156:         I2C_Master_Stop();
  1301     012C  120A  118A  26D5  120A  118A  	fcall	_I2C_Master_Stop
  1302     0131                     l1929:
  1303                           
  1304                           ;Masterpic.c: 157:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1305     0131  3003               	movlw	3
  1306     0132  1283               	bcf	3,5	;RP0=0, select bank0
  1307     0133  1303               	bcf	3,6	;RP1=0, select bank0
  1308     0134  00EE               	movwf	??_main+2
  1309     0135  3008               	movlw	8
  1310     0136  00ED               	movwf	??_main+1
  1311     0137  3076               	movlw	118
  1312     0138  00EC               	movwf	??_main
  1313     0139                     u1507:
  1314     0139  0BEC               	decfsz	??_main,f
  1315     013A  2939               	goto	u1507
  1316     013B  0BED               	decfsz	??_main+1,f
  1317     013C  2939               	goto	u1507
  1318     013D  0BEE               	decfsz	??_main+2,f
  1319     013E  2939               	goto	u1507
  1320     013F  0000               	nop
  1321     0140                     l1931:
  1322                           
  1323                           ;Masterpic.c: 165:       datos[0]= (RPMR/100) + '0';
  1324     0140  3030               	movlw	48
  1325     0141  1283               	bcf	3,5	;RP0=0, select bank0
  1326     0142  1303               	bcf	3,6	;RP1=0, select bank0
  1327     0143  00C8               	movwf	_datos
  1328     0144                     l1933:
  1329                           
  1330                           ;Masterpic.c: 166:       datos[1]= (RPMR/10) % 10 + '0';
  1331     0144  3030               	movlw	48
  1332     0145  00C9               	movwf	_datos+1
  1333     0146                     l1935:
  1334                           
  1335                           ;Masterpic.c: 167:       datos[2]= (RPMR%10) + '0';
  1336     0146  3030               	movlw	48
  1337     0147  00CA               	movwf	_datos+2
  1338     0148                     l1937:
  1339                           
  1340                           ;Masterpic.c: 171:       RTC_display();
  1341     0148  120A  118A  2192  120A  118A  	fcall	_RTC_display
  1342     014D                     l1939:
  1343                           
  1344                           ;Masterpic.c: 172:       UART_Print ("\r\n");
  1345     014D  3010               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1346     014E  00F3               	movwf	UART_Print@data
  1347     014F  3080               	movlw	128
  1348     0150  00F4               	movwf	UART_Print@data+1
  1349     0151  120A  118A  257C  120A  118A  	fcall	_UART_Print
  1350     0156                     l1941:
  1351                           
  1352                           ;Masterpic.c: 174:              UART_Print(datos);
  1353     0156  3048               	movlw	(low (_datos| 0))& (0+255)
  1354     0157  00F3               	movwf	UART_Print@data
  1355     0158  3000               	movlw	0
  1356     0159  00F4               	movwf	UART_Print@data+1
  1357     015A  120A  118A  257C  120A  118A  	fcall	_UART_Print
  1358     015F                     l1943:
  1359                           
  1360                           ;Masterpic.c: 175:              UART_Print ("\r\n");
  1361     015F  3010               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1362     0160  00F3               	movwf	UART_Print@data
  1363     0161  3080               	movlw	128
  1364     0162  00F4               	movwf	UART_Print@data+1
  1365     0163  120A  118A  257C  120A  118A  	fcall	_UART_Print
  1366     0168                     l1945:
  1367                           
  1368                           ;Masterpic.c: 177:              _delay((unsigned long)((700)*(8000000/4000.0)));
  1369     0168  3008               	movlw	8
  1370     0169  1283               	bcf	3,5	;RP0=0, select bank0
  1371     016A  1303               	bcf	3,6	;RP1=0, select bank0
  1372     016B  00EE               	movwf	??_main+2
  1373     016C  301B               	movlw	27
  1374     016D  00ED               	movwf	??_main+1
  1375     016E  3026               	movlw	38
  1376     016F  00EC               	movwf	??_main
  1377     0170                     u1517:
  1378     0170  0BEC               	decfsz	??_main,f
  1379     0171  2970               	goto	u1517
  1380     0172  0BED               	decfsz	??_main+1,f
  1381     0173  2970               	goto	u1517
  1382     0174  0BEE               	decfsz	??_main+2,f
  1383     0175  2970               	goto	u1517
  1384     0176  0000               	nop
  1385     0177                     l1947:
  1386                           
  1387                           ;Masterpic.c: 179:     if ( UART_Data_Ready() )
  1388     0177  120A  118A  26C1  120A  118A  	fcall	_UART_Data_Ready
  1389     017C  1C03               	btfss	3,0
  1390     017D  297F               	goto	u1461
  1391     017E  2980               	goto	u1460
  1392     017F                     u1461:
  1393     017F  28C2               	goto	l1899
  1394     0180                     u1460:
  1395     0180                     l1949:
  1396                           
  1397                           ;Masterpic.c: 180:     {;Masterpic.c: 181:       uint8_t c = UART_GetC();
  1398     0180  120A  118A  269A  120A  118A  	fcall	_UART_GetC
  1399     0185  1283               	bcf	3,5	;RP0=0, select bank0
  1400     0186  1303               	bcf	3,6	;RP1=0, select bank0
  1401     0187  00EF               	movwf	main@c
  1402     0188                     l1951:
  1403                           
  1404                           ;Masterpic.c: 182:       UART_PutC(c);
  1405     0188  086F               	movf	main@c,w
  1406     0189  120A  118A  26B5  120A  118A  	fcall	_UART_PutC
  1407     018E  28C2               	goto	l1899
  1408     018F  120A  118A  280C   	ljmp	start
  1409     0192                     __end_of_main:
  1410                           
  1411                           	psect	text1
  1412     0688                     __ptext1:	
  1413 ;; *************** function _setup *****************
  1414 ;; Defined at:
  1415 ;;		line 193 in file "Masterpic.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;		None
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;		None
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      void 
  1422 ;; Registers used:
  1423 ;;		wreg, status,2, status,0
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1429 ;;      Params:         0       0       0       0       0
  1430 ;;      Locals:         0       0       0       0       0
  1431 ;;      Temps:          0       0       0       0       0
  1432 ;;      Totals:         0       0       0       0       0
  1433 ;;Total ram usage:        0 bytes
  1434 ;; Hardware stack levels used: 1
  1435 ;; Hardware stack levels required when called: 1
  1436 ;; This function calls:
  1437 ;;		Nothing
  1438 ;; This function is called by:
  1439 ;;		_main
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443     0688                     _setup:	
  1444                           ;psect for function _setup
  1445                           
  1446     0688                     l1507:	
  1447                           ;incstack = 0
  1448                           ; Regs used in _setup: [wreg+status,2+status,0]
  1449                           
  1450                           
  1451                           ;Masterpic.c: 194:     ANSEL = 0;
  1452     0688  1683               	bsf	3,5	;RP0=1, select bank3
  1453     0689  1703               	bsf	3,6	;RP1=1, select bank3
  1454     068A  0188               	clrf	8	;volatile
  1455                           
  1456                           ;Masterpic.c: 195:     ANSELH = 0;
  1457     068B  0189               	clrf	9	;volatile
  1458                           
  1459                           ;Masterpic.c: 198:     TRISD= 0;
  1460     068C  1683               	bsf	3,5	;RP0=1, select bank1
  1461     068D  1303               	bcf	3,6	;RP1=0, select bank1
  1462     068E  0188               	clrf	8	;volatile
  1463                           
  1464                           ;Masterpic.c: 199:     PORTD = 0;
  1465     068F  1283               	bcf	3,5	;RP0=0, select bank0
  1466     0690  1303               	bcf	3,6	;RP1=0, select bank0
  1467     0691  0188               	clrf	8	;volatile
  1468     0692                     l1509:
  1469                           
  1470                           ;Masterpic.c: 204:     INTCONbits.PEIE = 1;
  1471     0692  170B               	bsf	11,6	;volatile
  1472     0693                     l1511:
  1473                           
  1474                           ;Masterpic.c: 205:     INTCONbits.GIE = 1;
  1475     0693  178B               	bsf	11,7	;volatile
  1476     0694                     l1513:
  1477                           
  1478                           ;Masterpic.c: 207:     OSCCONbits.IRCF = 0b0111;
  1479     0694  3070               	movlw	112
  1480     0695  1683               	bsf	3,5	;RP0=1, select bank1
  1481     0696  1303               	bcf	3,6	;RP1=0, select bank1
  1482     0697  048F               	iorwf	15,f	;volatile
  1483     0698                     l1515:
  1484                           
  1485                           ;Masterpic.c: 208:     OSCCONbits.SCS = 1;
  1486     0698  140F               	bsf	15,0	;volatile
  1487     0699                     l110:
  1488     0699  0008               	return
  1489     069A                     __end_of_setup:
  1490                           
  1491                           	psect	text2
  1492     051C                     __ptext2:	
  1493 ;; *************** function _decimal_to_bcd *****************
  1494 ;; Defined at:
  1495 ;;		line 47 in file "Masterpic.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;  number          1    wreg     unsigned char 
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;  number          1    9[COMMON] unsigned char 
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  1    wreg      unsigned char 
  1502 ;; Registers used:
  1503 ;;		wreg, status,2, status,0, pclath, cstack
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1509 ;;      Params:         0       0       0       0       0
  1510 ;;      Locals:         1       0       0       0       0
  1511 ;;      Temps:          0       5       0       0       0
  1512 ;;      Totals:         1       5       0       0       0
  1513 ;;Total ram usage:        6 bytes
  1514 ;; Hardware stack levels used: 1
  1515 ;; Hardware stack levels required when called: 2
  1516 ;; This function calls:
  1517 ;;		___awdiv
  1518 ;;		___awmod
  1519 ;; This function is called by:
  1520 ;;		_main
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524     051C                     _decimal_to_bcd:	
  1525                           ;psect for function _decimal_to_bcd
  1526                           
  1527                           
  1528                           ;incstack = 0
  1529                           ; Regs used in _decimal_to_bcd: [wreg+status,2+status,0+pclath+cstack]
  1530                           ;decimal_to_bcd@number stored from wreg
  1531     051C  00F9               	movwf	decimal_to_bcd@number
  1532     051D                     l1841:
  1533                           
  1534                           ;Masterpic.c: 48:   return(((number / 10) << 4) + (number % 10));
  1535     051D  300A               	movlw	10
  1536     051E  00F2               	movwf	___awdiv@divisor
  1537     051F  3000               	movlw	0
  1538     0520  00F3               	movwf	___awdiv@divisor+1
  1539     0521  0879               	movf	decimal_to_bcd@number,w
  1540     0522  1283               	bcf	3,5	;RP0=0, select bank0
  1541     0523  1303               	bcf	3,6	;RP1=0, select bank0
  1542     0524  00E0               	movwf	??_decimal_to_bcd
  1543     0525  01E1               	clrf	??_decimal_to_bcd+1
  1544     0526  0860               	movf	??_decimal_to_bcd,w
  1545     0527  00F4               	movwf	___awdiv@dividend
  1546     0528  0861               	movf	??_decimal_to_bcd+1,w
  1547     0529  00F5               	movwf	___awdiv@dividend+1
  1548     052A  120A  118A  2371  120A  118A  	fcall	___awdiv
  1549     052F  0872               	movf	?___awdiv,w
  1550     0530  1283               	bcf	3,5	;RP0=0, select bank0
  1551     0531  1303               	bcf	3,6	;RP1=0, select bank0
  1552     0532  00E2               	movwf	??_decimal_to_bcd+2
  1553     0533  3004               	movlw	4
  1554     0534                     u1405:
  1555     0534  1003               	clrc
  1556     0535  0DE2               	rlf	??_decimal_to_bcd+2,f
  1557     0536  3EFF               	addlw	-1
  1558     0537  1D03               	skipz
  1559     0538  2D34               	goto	u1405
  1560     0539  300A               	movlw	10
  1561     053A  00F2               	movwf	___awmod@divisor
  1562     053B  3000               	movlw	0
  1563     053C  00F3               	movwf	___awmod@divisor+1
  1564     053D  0879               	movf	decimal_to_bcd@number,w
  1565     053E  00E3               	movwf	??_decimal_to_bcd+3
  1566     053F  01E4               	clrf	??_decimal_to_bcd+4
  1567     0540  0863               	movf	??_decimal_to_bcd+3,w
  1568     0541  00F4               	movwf	___awmod@dividend
  1569     0542  0864               	movf	??_decimal_to_bcd+4,w
  1570     0543  00F5               	movwf	___awmod@dividend+1
  1571     0544  120A  118A  2442  120A  118A  	fcall	___awmod
  1572     0549  0872               	movf	?___awmod,w
  1573     054A  1283               	bcf	3,5	;RP0=0, select bank0
  1574     054B  1303               	bcf	3,6	;RP1=0, select bank0
  1575     054C  0762               	addwf	??_decimal_to_bcd+2,w
  1576     054D                     l85:
  1577     054D  0008               	return
  1578     054E                     __end_of_decimal_to_bcd:
  1579                           
  1580                           	psect	text3
  1581     057C                     __ptext3:	
  1582 ;; *************** function _UART_Print *****************
  1583 ;; Defined at:
  1584 ;;		line 65 in file "USARTmodl.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;  data            2    3[COMMON] PTR const unsigned char 
  1587 ;;		 -> STR_2(3), STR_1(3), datos(20), 
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;  i               1    6[COMMON] unsigned char 
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  1    wreg      void 
  1592 ;; Registers used:
  1593 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1599 ;;      Params:         2       0       0       0       0
  1600 ;;      Locals:         1       0       0       0       0
  1601 ;;      Temps:          1       0       0       0       0
  1602 ;;      Totals:         4       0       0       0       0
  1603 ;;Total ram usage:        4 bytes
  1604 ;; Hardware stack levels used: 1
  1605 ;; Hardware stack levels required when called: 2
  1606 ;; This function calls:
  1607 ;;		_UART_PutC
  1608 ;; This function is called by:
  1609 ;;		_main
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613     057C                     _UART_Print:	
  1614                           ;psect for function _UART_Print
  1615                           
  1616     057C                     l1565:	
  1617                           ;incstack = 0
  1618                           ; Regs used in _UART_Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1619                           
  1620                           
  1621                           ;USARTmodl.c: 65: void UART_Print(const char *data);USARTmodl.c: 66: {;USARTmodl.c: 67: 
      +                            uint8_t i = 0;
  1622     057C  01F6               	clrf	UART_Print@i
  1623                           
  1624                           ;USARTmodl.c: 68:   while (data[i] != '\0')
  1625     057D  2D93               	goto	l1571
  1626     057E                     l1567:
  1627                           
  1628                           ;USARTmodl.c: 69:     UART_PutC (data[i++]);
  1629     057E  0876               	movf	UART_Print@i,w
  1630     057F  0773               	addwf	UART_Print@data,w
  1631     0580  0084               	movwf	4
  1632     0581  0874               	movf	UART_Print@data+1,w
  1633     0582  1803               	skipnc
  1634     0583  0A74               	incf	UART_Print@data+1,w
  1635     0584  00FF               	movwf	btemp+1
  1636     0585  120A  118A  25CC  120A  118A  	fcall	stringtab
  1637     058A  120A  118A  26B5  120A  118A  	fcall	_UART_PutC
  1638     058F                     l1569:
  1639     058F  3001               	movlw	1
  1640     0590  00F5               	movwf	??_UART_Print
  1641     0591  0875               	movf	??_UART_Print,w
  1642     0592  07F6               	addwf	UART_Print@i,f
  1643     0593                     l1571:
  1644                           
  1645                           ;USARTmodl.c: 68:   while (data[i] != '\0')
  1646     0593  0876               	movf	UART_Print@i,w
  1647     0594  0773               	addwf	UART_Print@data,w
  1648     0595  0084               	movwf	4
  1649     0596  0874               	movf	UART_Print@data+1,w
  1650     0597  1803               	skipnc
  1651     0598  0A74               	incf	UART_Print@data+1,w
  1652     0599  1283               	bcf	3,5	;RP0=0, select bank0
  1653     059A  1303               	bcf	3,6	;RP1=0, select bank0
  1654     059B  00FF               	movwf	btemp+1
  1655     059C  120A  118A  25CC  120A  118A  	fcall	stringtab
  1656     05A1  3A00               	xorlw	0
  1657     05A2  1D03               	skipz
  1658     05A3  2DA5               	goto	u1071
  1659     05A4  2DA6               	goto	u1070
  1660     05A5                     u1071:
  1661     05A5  2D7E               	goto	l1567
  1662     05A6                     u1070:
  1663     05A6                     l273:
  1664     05A6  0008               	return
  1665     05A7                     __end_of_UART_Print:
  1666                           
  1667                           	psect	text4
  1668     06B5                     __ptext4:	
  1669 ;; *************** function _UART_PutC *****************
  1670 ;; Defined at:
  1671 ;;		line 59 in file "USARTmodl.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  data            1    wreg     const unsigned char 
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  data            1    2[COMMON] const unsigned char 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      void 
  1678 ;; Registers used:
  1679 ;;		wreg
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1685 ;;      Params:         0       0       0       0       0
  1686 ;;      Locals:         1       0       0       0       0
  1687 ;;      Temps:          0       0       0       0       0
  1688 ;;      Totals:         1       0       0       0       0
  1689 ;;Total ram usage:        1 bytes
  1690 ;; Hardware stack levels used: 1
  1691 ;; Hardware stack levels required when called: 1
  1692 ;; This function calls:
  1693 ;;		Nothing
  1694 ;; This function is called by:
  1695 ;;		_main
  1696 ;;		_UART_Print
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700     06B5                     _UART_PutC:	
  1701                           ;psect for function _UART_PutC
  1702                           
  1703                           
  1704                           ;incstack = 0
  1705                           ; Regs used in _UART_PutC: [wreg]
  1706                           ;UART_PutC@data stored from wreg
  1707     06B5  00F2               	movwf	UART_PutC@data
  1708     06B6                     l1385:
  1709     06B6                     l264:	
  1710                           ;USARTmodl.c: 59: void UART_PutC(const char data);USARTmodl.c: 60: {;USARTmodl.c: 61:   
      +                          while (TRMT == 0);
  1711                           
  1712     06B6  1683               	bsf	3,5	;RP0=1, select bank1
  1713     06B7  1303               	bcf	3,6	;RP1=0, select bank1
  1714     06B8  1C98               	btfss	24,1	;volatile
  1715     06B9  2EBB               	goto	u711
  1716     06BA  2EBC               	goto	u710
  1717     06BB                     u711:
  1718     06BB  2EB6               	goto	l264
  1719     06BC                     u710:
  1720     06BC                     l1387:
  1721                           
  1722                           ;USARTmodl.c: 62:   TXREG = data;
  1723     06BC  0872               	movf	UART_PutC@data,w
  1724     06BD  1283               	bcf	3,5	;RP0=0, select bank0
  1725     06BE  1303               	bcf	3,6	;RP1=0, select bank0
  1726     06BF  0099               	movwf	25	;volatile
  1727     06C0                     l267:
  1728     06C0  0008               	return
  1729     06C1                     __end_of_UART_PutC:
  1730                           
  1731                           	psect	text5
  1732     02D1                     __ptext5:	
  1733 ;; *************** function _UART_Init *****************
  1734 ;; Defined at:
  1735 ;;		line 14 in file "USARTmodl.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  baud_rate       4    6[BANK0 ] const unsigned long 
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;  n               2   14[BANK0 ] int 
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  1    wreg      void 
  1742 ;; Registers used:
  1743 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1749 ;;      Params:         0       4       0       0       0
  1750 ;;      Locals:         0       2       0       0       0
  1751 ;;      Temps:          0       4       0       0       0
  1752 ;;      Totals:         0      10       0       0       0
  1753 ;;Total ram usage:       10 bytes
  1754 ;; Hardware stack levels used: 1
  1755 ;; Hardware stack levels required when called: 2
  1756 ;; This function calls:
  1757 ;;		___lldiv
  1758 ;; This function is called by:
  1759 ;;		_main
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763     02D1                     _UART_Init:	
  1764                           ;psect for function _UART_Init
  1765                           
  1766     02D1                     l1849:	
  1767                           ;incstack = 0
  1768                           ; Regs used in _UART_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1769                           
  1770                           
  1771                           ;USARTmodl.c: 14: void UART_Init(const uint32_t baud_rate);USARTmodl.c: 15: {;USARTmodl.
      +                          c: 16:   int16_t n = ( 8000000 / (16 * baud_rate) ) - 1;
  1772     02D1  1283               	bcf	3,5	;RP0=0, select bank0
  1773     02D2  1303               	bcf	3,6	;RP1=0, select bank0
  1774     02D3  0862               	movf	UART_Init@baud_rate,w
  1775     02D4  00E6               	movwf	??_UART_Init
  1776     02D5  0863               	movf	UART_Init@baud_rate+1,w
  1777     02D6  00E7               	movwf	??_UART_Init+1
  1778     02D7  0864               	movf	UART_Init@baud_rate+2,w
  1779     02D8  00E8               	movwf	??_UART_Init+2
  1780     02D9  0865               	movf	UART_Init@baud_rate+3,w
  1781     02DA  00E9               	movwf	??_UART_Init+3
  1782     02DB  3004               	movlw	4
  1783     02DC                     u1415:
  1784     02DC  1003               	clrc
  1785     02DD  0DE6               	rlf	??_UART_Init,f
  1786     02DE  0DE7               	rlf	??_UART_Init+1,f
  1787     02DF  0DE8               	rlf	??_UART_Init+2,f
  1788     02E0  0DE9               	rlf	??_UART_Init+3,f
  1789     02E1                     u1410:
  1790     02E1  3EFF               	addlw	-1
  1791     02E2  1D03               	skipz
  1792     02E3  2ADC               	goto	u1415
  1793     02E4  0869               	movf	??_UART_Init+3,w
  1794     02E5  00F5               	movwf	___lldiv@divisor+3
  1795     02E6  0868               	movf	??_UART_Init+2,w
  1796     02E7  00F4               	movwf	___lldiv@divisor+2
  1797     02E8  0867               	movf	??_UART_Init+1,w
  1798     02E9  00F3               	movwf	___lldiv@divisor+1
  1799     02EA  0866               	movf	??_UART_Init,w
  1800     02EB  00F2               	movwf	___lldiv@divisor
  1801     02EC  3000               	movlw	0
  1802     02ED  00F9               	movwf	___lldiv@dividend+3
  1803     02EE  307A               	movlw	122
  1804     02EF  00F8               	movwf	___lldiv@dividend+2
  1805     02F0  3012               	movlw	18
  1806     02F1  00F7               	movwf	___lldiv@dividend+1
  1807     02F2  3000               	movlw	0
  1808     02F3  00F6               	movwf	___lldiv@dividend
  1809     02F4  120A  118A  23DA  120A  118A  	fcall	___lldiv
  1810     02F9  0872               	movf	?___lldiv,w
  1811     02FA  3EFF               	addlw	255
  1812     02FB  1283               	bcf	3,5	;RP0=0, select bank0
  1813     02FC  1303               	bcf	3,6	;RP1=0, select bank0
  1814     02FD  00EA               	movwf	UART_Init@n
  1815     02FE  0873               	movf	?___lldiv+1,w
  1816     02FF  1803               	skipnc
  1817     0300  3E01               	addlw	1
  1818     0301  3EFF               	addlw	255
  1819     0302  00EB               	movwf	UART_Init@n+1
  1820     0303                     l1851:
  1821                           
  1822                           ;USARTmodl.c: 18:   if (n < 0)
  1823     0303  1FEB               	btfss	UART_Init@n+1,7
  1824     0304  2B06               	goto	u1421
  1825     0305  2B07               	goto	u1420
  1826     0306                     u1421:
  1827     0306  2B09               	goto	l1855
  1828     0307                     u1420:
  1829     0307                     l1853:
  1830                           
  1831                           ;USARTmodl.c: 19:     n = 0;
  1832     0307  01EA               	clrf	UART_Init@n
  1833     0308  01EB               	clrf	UART_Init@n+1
  1834     0309                     l1855:
  1835                           
  1836                           ;USARTmodl.c: 21:   if (n > 255)
  1837     0309  086B               	movf	UART_Init@n+1,w
  1838     030A  3A80               	xorlw	128
  1839     030B  00FF               	movwf	btemp+1
  1840     030C  3081               	movlw	129
  1841     030D  027F               	subwf	btemp+1,w
  1842     030E  1D03               	skipz
  1843     030F  2B12               	goto	u1435
  1844     0310  3000               	movlw	0
  1845     0311  026A               	subwf	UART_Init@n,w
  1846     0312                     u1435:
  1847     0312  1C03               	skipc
  1848     0313  2B15               	goto	u1431
  1849     0314  2B16               	goto	u1430
  1850     0315                     u1431:
  1851     0315  2B64               	goto	l1863
  1852     0316                     u1430:
  1853     0316                     l1857:
  1854                           
  1855                           ;USARTmodl.c: 22:   {;USARTmodl.c: 23:     n = ( 8000000 / (64 * baud_rate) ) - 1;
  1856     0316  1283               	bcf	3,5	;RP0=0, select bank0
  1857     0317  1303               	bcf	3,6	;RP1=0, select bank0
  1858     0318  0862               	movf	UART_Init@baud_rate,w
  1859     0319  00E6               	movwf	??_UART_Init
  1860     031A  0863               	movf	UART_Init@baud_rate+1,w
  1861     031B  00E7               	movwf	??_UART_Init+1
  1862     031C  0864               	movf	UART_Init@baud_rate+2,w
  1863     031D  00E8               	movwf	??_UART_Init+2
  1864     031E  0865               	movf	UART_Init@baud_rate+3,w
  1865     031F  00E9               	movwf	??_UART_Init+3
  1866     0320  3006               	movlw	6
  1867     0321                     u1445:
  1868     0321  1003               	clrc
  1869     0322  0DE6               	rlf	??_UART_Init,f
  1870     0323  0DE7               	rlf	??_UART_Init+1,f
  1871     0324  0DE8               	rlf	??_UART_Init+2,f
  1872     0325  0DE9               	rlf	??_UART_Init+3,f
  1873     0326                     u1440:
  1874     0326  3EFF               	addlw	-1
  1875     0327  1D03               	skipz
  1876     0328  2B21               	goto	u1445
  1877     0329  0869               	movf	??_UART_Init+3,w
  1878     032A  00F5               	movwf	___lldiv@divisor+3
  1879     032B  0868               	movf	??_UART_Init+2,w
  1880     032C  00F4               	movwf	___lldiv@divisor+2
  1881     032D  0867               	movf	??_UART_Init+1,w
  1882     032E  00F3               	movwf	___lldiv@divisor+1
  1883     032F  0866               	movf	??_UART_Init,w
  1884     0330  00F2               	movwf	___lldiv@divisor
  1885     0331  3000               	movlw	0
  1886     0332  00F9               	movwf	___lldiv@dividend+3
  1887     0333  307A               	movlw	122
  1888     0334  00F8               	movwf	___lldiv@dividend+2
  1889     0335  3012               	movlw	18
  1890     0336  00F7               	movwf	___lldiv@dividend+1
  1891     0337  3000               	movlw	0
  1892     0338  00F6               	movwf	___lldiv@dividend
  1893     0339  120A  118A  23DA  120A  118A  	fcall	___lldiv
  1894     033E  0872               	movf	?___lldiv,w
  1895     033F  3EFF               	addlw	255
  1896     0340  1283               	bcf	3,5	;RP0=0, select bank0
  1897     0341  1303               	bcf	3,6	;RP1=0, select bank0
  1898     0342  00EA               	movwf	UART_Init@n
  1899     0343  0873               	movf	?___lldiv+1,w
  1900     0344  1803               	skipnc
  1901     0345  3E01               	addlw	1
  1902     0346  3EFF               	addlw	255
  1903     0347  00EB               	movwf	UART_Init@n+1
  1904     0348                     l1859:
  1905                           
  1906                           ;USARTmodl.c: 24:     if (n > 255)
  1907     0348  086B               	movf	UART_Init@n+1,w
  1908     0349  3A80               	xorlw	128
  1909     034A  00FF               	movwf	btemp+1
  1910     034B  3081               	movlw	129
  1911     034C  027F               	subwf	btemp+1,w
  1912     034D  1D03               	skipz
  1913     034E  2B51               	goto	u1455
  1914     034F  3000               	movlw	0
  1915     0350  026A               	subwf	UART_Init@n,w
  1916     0351                     u1455:
  1917     0351  1C03               	skipc
  1918     0352  2B54               	goto	u1451
  1919     0353  2B55               	goto	u1450
  1920     0354                     u1451:
  1921     0354  2B5B               	goto	l245
  1922     0355                     u1450:
  1923     0355                     l1861:
  1924                           
  1925                           ;USARTmodl.c: 25:       n = 255;
  1926     0355  30FF               	movlw	255
  1927     0356  1283               	bcf	3,5	;RP0=0, select bank0
  1928     0357  1303               	bcf	3,6	;RP1=0, select bank0
  1929     0358  00EA               	movwf	UART_Init@n
  1930     0359  3000               	movlw	0
  1931     035A  00EB               	movwf	UART_Init@n+1
  1932     035B                     l245:
  1933                           
  1934                           ;USARTmodl.c: 26:     SPBRG = n;
  1935     035B  1283               	bcf	3,5	;RP0=0, select bank0
  1936     035C  1303               	bcf	3,6	;RP1=0, select bank0
  1937     035D  086A               	movf	UART_Init@n,w
  1938     035E  1683               	bsf	3,5	;RP0=1, select bank1
  1939     035F  1303               	bcf	3,6	;RP1=0, select bank1
  1940     0360  0099               	movwf	25	;volatile
  1941                           
  1942                           ;USARTmodl.c: 27:     TXSTA = 0x20;
  1943     0361  3020               	movlw	32
  1944     0362  0098               	movwf	24	;volatile
  1945                           
  1946                           ;USARTmodl.c: 28:   }
  1947     0363  2B6C               	goto	l246
  1948     0364                     l1863:
  1949                           
  1950                           ;USARTmodl.c: 31:   {;USARTmodl.c: 32:     SPBRG = n;
  1951     0364  1283               	bcf	3,5	;RP0=0, select bank0
  1952     0365  1303               	bcf	3,6	;RP1=0, select bank0
  1953     0366  086A               	movf	UART_Init@n,w
  1954     0367  1683               	bsf	3,5	;RP0=1, select bank1
  1955     0368  1303               	bcf	3,6	;RP1=0, select bank1
  1956     0369  0099               	movwf	25	;volatile
  1957                           
  1958                           ;USARTmodl.c: 33:     TXSTA = 0x24;
  1959     036A  3024               	movlw	36
  1960     036B  0098               	movwf	24	;volatile
  1961     036C                     l246:	
  1962                           ;USARTmodl.c: 34:   }
  1963                           
  1964                           
  1965                           ;USARTmodl.c: 36:   RCSTA = 0x90;
  1966     036C  3090               	movlw	144
  1967     036D  1283               	bcf	3,5	;RP0=0, select bank0
  1968     036E  1303               	bcf	3,6	;RP1=0, select bank0
  1969     036F  0098               	movwf	24	;volatile
  1970     0370                     l247:
  1971     0370  0008               	return
  1972     0371                     __end_of_UART_Init:
  1973                           
  1974                           	psect	text6
  1975     03DA                     __ptext6:	
  1976 ;; *************** function ___lldiv *****************
  1977 ;; Defined at:
  1978 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;  divisor         4    2[COMMON] unsigned long 
  1981 ;;  dividend        4    6[COMMON] unsigned long 
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;  quotient        4    1[BANK0 ] unsigned long 
  1984 ;;  counter         1    5[BANK0 ] unsigned char 
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  4    2[COMMON] unsigned long 
  1987 ;; Registers used:
  1988 ;;		wreg, status,2, status,0
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1994 ;;      Params:         8       0       0       0       0
  1995 ;;      Locals:         0       5       0       0       0
  1996 ;;      Temps:          0       1       0       0       0
  1997 ;;      Totals:         8       6       0       0       0
  1998 ;;Total ram usage:       14 bytes
  1999 ;; Hardware stack levels used: 1
  2000 ;; Hardware stack levels required when called: 1
  2001 ;; This function calls:
  2002 ;;		Nothing
  2003 ;; This function is called by:
  2004 ;;		_UART_Init
  2005 ;;		_I2C_Master_Init
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009     03DA                     ___lldiv:	
  2010                           ;psect for function ___lldiv
  2011                           
  2012     03DA                     l1773:	
  2013                           ;incstack = 0
  2014                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2015                           
  2016     03DA  3000               	movlw	0
  2017     03DB  1283               	bcf	3,5	;RP0=0, select bank0
  2018     03DC  1303               	bcf	3,6	;RP1=0, select bank0
  2019     03DD  00E0               	movwf	___lldiv@quotient+3
  2020     03DE  3000               	movlw	0
  2021     03DF  00DF               	movwf	___lldiv@quotient+2
  2022     03E0  3000               	movlw	0
  2023     03E1  00DE               	movwf	___lldiv@quotient+1
  2024     03E2  3000               	movlw	0
  2025     03E3  00DD               	movwf	___lldiv@quotient
  2026     03E4  0875               	movf	___lldiv@divisor+3,w
  2027     03E5  0474               	iorwf	___lldiv@divisor+2,w
  2028     03E6  0473               	iorwf	___lldiv@divisor+1,w
  2029     03E7  0472               	iorwf	___lldiv@divisor,w
  2030     03E8  1903               	skipnz
  2031     03E9  2BEB               	goto	u1231
  2032     03EA  2BEC               	goto	u1230
  2033     03EB                     u1231:
  2034     03EB  2C39               	goto	l1793
  2035     03EC                     u1230:
  2036     03EC                     l1775:
  2037     03EC  01E1               	clrf	___lldiv@counter
  2038     03ED  0AE1               	incf	___lldiv@counter,f
  2039     03EE  2BFC               	goto	l1779
  2040     03EF                     l1777:
  2041     03EF  3001               	movlw	1
  2042     03F0  00DC               	movwf	??___lldiv
  2043     03F1                     u1245:
  2044     03F1  1003               	clrc
  2045     03F2  0DF2               	rlf	___lldiv@divisor,f
  2046     03F3  0DF3               	rlf	___lldiv@divisor+1,f
  2047     03F4  0DF4               	rlf	___lldiv@divisor+2,f
  2048     03F5  0DF5               	rlf	___lldiv@divisor+3,f
  2049     03F6  0BDC               	decfsz	??___lldiv,f
  2050     03F7  2BF1               	goto	u1245
  2051     03F8  3001               	movlw	1
  2052     03F9  00DC               	movwf	??___lldiv
  2053     03FA  085C               	movf	??___lldiv,w
  2054     03FB  07E1               	addwf	___lldiv@counter,f
  2055     03FC                     l1779:
  2056     03FC  1FF5               	btfss	___lldiv@divisor+3,7
  2057     03FD  2BFF               	goto	u1251
  2058     03FE  2C00               	goto	u1250
  2059     03FF                     u1251:
  2060     03FF  2BEF               	goto	l1777
  2061     0400                     u1250:
  2062     0400                     l1781:
  2063     0400  3001               	movlw	1
  2064     0401  00DC               	movwf	??___lldiv
  2065     0402                     u1265:
  2066     0402  1003               	clrc
  2067     0403  0DDD               	rlf	___lldiv@quotient,f
  2068     0404  0DDE               	rlf	___lldiv@quotient+1,f
  2069     0405  0DDF               	rlf	___lldiv@quotient+2,f
  2070     0406  0DE0               	rlf	___lldiv@quotient+3,f
  2071     0407  0BDC               	decfsz	??___lldiv,f
  2072     0408  2C02               	goto	u1265
  2073     0409                     l1783:
  2074     0409  0875               	movf	___lldiv@divisor+3,w
  2075     040A  0279               	subwf	___lldiv@dividend+3,w
  2076     040B  1D03               	skipz
  2077     040C  2C17               	goto	u1275
  2078     040D  0874               	movf	___lldiv@divisor+2,w
  2079     040E  0278               	subwf	___lldiv@dividend+2,w
  2080     040F  1D03               	skipz
  2081     0410  2C17               	goto	u1275
  2082     0411  0873               	movf	___lldiv@divisor+1,w
  2083     0412  0277               	subwf	___lldiv@dividend+1,w
  2084     0413  1D03               	skipz
  2085     0414  2C17               	goto	u1275
  2086     0415  0872               	movf	___lldiv@divisor,w
  2087     0416  0276               	subwf	___lldiv@dividend,w
  2088     0417                     u1275:
  2089     0417  1C03               	skipc
  2090     0418  2C1A               	goto	u1271
  2091     0419  2C1B               	goto	u1270
  2092     041A                     u1271:
  2093     041A  2C2A               	goto	l1789
  2094     041B                     u1270:
  2095     041B                     l1785:
  2096     041B  0872               	movf	___lldiv@divisor,w
  2097     041C  02F6               	subwf	___lldiv@dividend,f
  2098     041D  0873               	movf	___lldiv@divisor+1,w
  2099     041E  1C03               	skipc
  2100     041F  0F73               	incfsz	___lldiv@divisor+1,w
  2101     0420  02F7               	subwf	___lldiv@dividend+1,f
  2102     0421  0874               	movf	___lldiv@divisor+2,w
  2103     0422  1C03               	skipc
  2104     0423  0F74               	incfsz	___lldiv@divisor+2,w
  2105     0424  02F8               	subwf	___lldiv@dividend+2,f
  2106     0425  0875               	movf	___lldiv@divisor+3,w
  2107     0426  1C03               	skipc
  2108     0427  0F75               	incfsz	___lldiv@divisor+3,w
  2109     0428  02F9               	subwf	___lldiv@dividend+3,f
  2110     0429                     l1787:
  2111     0429  145D               	bsf	___lldiv@quotient,0
  2112     042A                     l1789:
  2113     042A  3001               	movlw	1
  2114     042B                     u1285:
  2115     042B  1003               	clrc
  2116     042C  0CF5               	rrf	___lldiv@divisor+3,f
  2117     042D  0CF4               	rrf	___lldiv@divisor+2,f
  2118     042E  0CF3               	rrf	___lldiv@divisor+1,f
  2119     042F  0CF2               	rrf	___lldiv@divisor,f
  2120     0430  3EFF               	addlw	-1
  2121     0431  1D03               	skipz
  2122     0432  2C2B               	goto	u1285
  2123     0433                     l1791:
  2124     0433  3001               	movlw	1
  2125     0434  02E1               	subwf	___lldiv@counter,f
  2126     0435  1D03               	btfss	3,2
  2127     0436  2C38               	goto	u1291
  2128     0437  2C39               	goto	u1290
  2129     0438                     u1291:
  2130     0438  2C00               	goto	l1781
  2131     0439                     u1290:
  2132     0439                     l1793:
  2133     0439  0860               	movf	___lldiv@quotient+3,w
  2134     043A  00F5               	movwf	?___lldiv+3
  2135     043B  085F               	movf	___lldiv@quotient+2,w
  2136     043C  00F4               	movwf	?___lldiv+2
  2137     043D  085E               	movf	___lldiv@quotient+1,w
  2138     043E  00F3               	movwf	?___lldiv+1
  2139     043F  085D               	movf	___lldiv@quotient,w
  2140     0440  00F2               	movwf	?___lldiv
  2141     0441                     l395:
  2142     0441  0008               	return
  2143     0442                     __end_of___lldiv:
  2144                           
  2145                           	psect	text7
  2146     069A                     __ptext7:	
  2147 ;; *************** function _UART_GetC *****************
  2148 ;; Defined at:
  2149 ;;		line 46 in file "USARTmodl.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;		None
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;		None
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  1    wreg      unsigned char 
  2156 ;; Registers used:
  2157 ;;		wreg
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2163 ;;      Params:         0       0       0       0       0
  2164 ;;      Locals:         0       0       0       0       0
  2165 ;;      Temps:          0       0       0       0       0
  2166 ;;      Totals:         0       0       0       0       0
  2167 ;;Total ram usage:        0 bytes
  2168 ;; Hardware stack levels used: 1
  2169 ;; Hardware stack levels required when called: 1
  2170 ;; This function calls:
  2171 ;;		Nothing
  2172 ;; This function is called by:
  2173 ;;		_main
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177     069A                     _UART_GetC:	
  2178                           ;psect for function _UART_GetC
  2179                           
  2180     069A                     l1581:	
  2181                           ;incstack = 0
  2182                           ; Regs used in _UART_GetC: [wreg]
  2183                           
  2184     069A                     l257:	
  2185                           ;USARTmodl.c: 48:   while (RCIF == 0) ;
  2186                           
  2187     069A  1283               	bcf	3,5	;RP0=0, select bank0
  2188     069B  1303               	bcf	3,6	;RP1=0, select bank0
  2189     069C  1E8C               	btfss	12,5	;volatile
  2190     069D  2E9F               	goto	u1091
  2191     069E  2EA0               	goto	u1090
  2192     069F                     u1091:
  2193     069F  2E9A               	goto	l257
  2194     06A0                     u1090:
  2195     06A0                     l259:
  2196                           
  2197                           ;USARTmodl.c: 49:   if (OERR)
  2198     06A0  1C98               	btfss	24,1	;volatile
  2199     06A1  2EA3               	goto	u1101
  2200     06A2  2EA4               	goto	u1100
  2201     06A3                     u1101:
  2202     06A3  2EA6               	goto	l1585
  2203     06A4                     u1100:
  2204     06A4                     l1583:
  2205                           
  2206                           ;USARTmodl.c: 50:   {;USARTmodl.c: 51:     CREN = 0;
  2207     06A4  1218               	bcf	24,4	;volatile
  2208                           
  2209                           ;USARTmodl.c: 52:     CREN = 1;
  2210     06A5  1618               	bsf	24,4	;volatile
  2211     06A6                     l1585:
  2212                           
  2213                           ;USARTmodl.c: 54:   return RCREG;
  2214     06A6  081A               	movf	26,w	;volatile
  2215     06A7                     l261:
  2216     06A7  0008               	return
  2217     06A8                     __end_of_UART_GetC:
  2218                           
  2219                           	psect	text8
  2220     06C1                     __ptext8:	
  2221 ;; *************** function _UART_Data_Ready *****************
  2222 ;; Defined at:
  2223 ;;		line 41 in file "USARTmodl.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;		None
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;		None
  2228 ;; Return value:  Size  Location     Type
  2229 ;;		None               void
  2230 ;; Registers used:
  2231 ;;		status,2, status,0
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2237 ;;      Params:         0       0       0       0       0
  2238 ;;      Locals:         0       0       0       0       0
  2239 ;;      Temps:          0       0       0       0       0
  2240 ;;      Totals:         0       0       0       0       0
  2241 ;;Total ram usage:        0 bytes
  2242 ;; Hardware stack levels used: 1
  2243 ;; Hardware stack levels required when called: 1
  2244 ;; This function calls:
  2245 ;;		Nothing
  2246 ;; This function is called by:
  2247 ;;		_main
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251     06C1                     _UART_Data_Ready:	
  2252                           ;psect for function _UART_Data_Ready
  2253                           
  2254     06C1                     l1573:	
  2255                           ;incstack = 0
  2256                           ; Regs used in _UART_Data_Ready: [status]
  2257                           
  2258                           
  2259                           ;USARTmodl.c: 43:   return RCIF;
  2260     06C1  1283               	bcf	3,5	;RP0=0, select bank0
  2261     06C2  1303               	bcf	3,6	;RP1=0, select bank0
  2262     06C3  1A8C               	btfsc	12,5	;volatile
  2263     06C4  2EC6               	goto	u1081
  2264     06C5  2EC7               	goto	u1080
  2265     06C6                     u1081:
  2266     06C6  2EC9               	goto	l1577
  2267     06C7                     u1080:
  2268     06C7                     l1575:
  2269     06C7  1003               	clrc
  2270     06C8  2ECA               	goto	l254
  2271     06C9                     l1577:
  2272     06C9  1403               	setc
  2273     06CA                     l254:
  2274     06CA  0008               	return
  2275     06CB                     __end_of_UART_Data_Ready:
  2276                           
  2277                           	psect	text9
  2278     0192                     __ptext9:	
  2279 ;; *************** function _RTC_display *****************
  2280 ;; Defined at:
  2281 ;;		line 50 in file "Masterpic.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;		None
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;		None
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      void 
  2288 ;; Registers used:
  2289 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2295 ;;      Params:         0       0       0       0       0
  2296 ;;      Locals:         0       0       0       0       0
  2297 ;;      Temps:          0       2       0       0       0
  2298 ;;      Totals:         0       2       0       0       0
  2299 ;;Total ram usage:        2 bytes
  2300 ;; Hardware stack levels used: 1
  2301 ;; Hardware stack levels required when called: 4
  2302 ;; This function calls:
  2303 ;;		_Lcd_Set_Cursor
  2304 ;;		_Lcd_Write_String
  2305 ;;		___awdiv
  2306 ;;		___awmod
  2307 ;;		_bcd_to_decimal
  2308 ;; This function is called by:
  2309 ;;		_main
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313     0192                     _RTC_display:	
  2314                           ;psect for function _RTC_display
  2315                           
  2316     0192                     l1845:	
  2317                           ;incstack = 0
  2318                           ; Regs used in _RTC_display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2319                           
  2320                           
  2321                           ;Masterpic.c: 52:   static char Time[] = "TIME: 00:00:00";;Masterpic.c: 53:   static cha
      +                          r Date[] = "DATE: 00/00/2000";;Masterpic.c: 56:   second = bcd_to_decimal(second);
  2322     0192  087B               	movf	_second,w
  2323     0193  120A  118A  264A  120A  118A  	fcall	_bcd_to_decimal
  2324     0198  00FB               	movwf	_second
  2325                           
  2326                           ;Masterpic.c: 57:   minute = bcd_to_decimal(minute);
  2327     0199  087A               	movf	_minute,w
  2328     019A  120A  118A  264A  120A  118A  	fcall	_bcd_to_decimal
  2329     019F  00FA               	movwf	_minute
  2330                           
  2331                           ;Masterpic.c: 58:   hour = bcd_to_decimal(hour);
  2332     01A0  1283               	bcf	3,5	;RP0=0, select bank0
  2333     01A1  1303               	bcf	3,6	;RP1=0, select bank0
  2334     01A2  0843               	movf	_hour,w
  2335     01A3  120A  118A  264A  120A  118A  	fcall	_bcd_to_decimal
  2336     01A8  1283               	bcf	3,5	;RP0=0, select bank0
  2337     01A9  1303               	bcf	3,6	;RP1=0, select bank0
  2338     01AA  00C3               	movwf	_hour
  2339                           
  2340                           ;Masterpic.c: 59:   m_day = bcd_to_decimal(m_day);
  2341     01AB  0842               	movf	_m_day,w
  2342     01AC  120A  118A  264A  120A  118A  	fcall	_bcd_to_decimal
  2343     01B1  1283               	bcf	3,5	;RP0=0, select bank0
  2344     01B2  1303               	bcf	3,6	;RP1=0, select bank0
  2345     01B3  00C2               	movwf	_m_day
  2346                           
  2347                           ;Masterpic.c: 60:   month = bcd_to_decimal(month);
  2348     01B4  0841               	movf	_month,w
  2349     01B5  120A  118A  264A  120A  118A  	fcall	_bcd_to_decimal
  2350     01BA  1283               	bcf	3,5	;RP0=0, select bank0
  2351     01BB  1303               	bcf	3,6	;RP1=0, select bank0
  2352     01BC  00C1               	movwf	_month
  2353                           
  2354                           ;Masterpic.c: 61:   year = bcd_to_decimal(year);
  2355     01BD  0840               	movf	_year,w
  2356     01BE  120A  118A  264A  120A  118A  	fcall	_bcd_to_decimal
  2357     01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2358     01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2359     01C5  00C0               	movwf	_year
  2360                           
  2361                           ;Masterpic.c: 65:   Time[6] = hour / 10 + '0';
  2362     01C6  300A               	movlw	10
  2363     01C7  00F2               	movwf	___awdiv@divisor
  2364     01C8  3000               	movlw	0
  2365     01C9  00F3               	movwf	___awdiv@divisor+1
  2366     01CA  0843               	movf	_hour,w
  2367     01CB  00E0               	movwf	??_RTC_display
  2368     01CC  01E1               	clrf	??_RTC_display+1
  2369     01CD  0860               	movf	??_RTC_display,w
  2370     01CE  00F4               	movwf	___awdiv@dividend
  2371     01CF  0861               	movf	??_RTC_display+1,w
  2372     01D0  00F5               	movwf	___awdiv@dividend+1
  2373     01D1  120A  118A  2371  120A  118A  	fcall	___awdiv
  2374     01D6  0872               	movf	?___awdiv,w
  2375     01D7  3E30               	addlw	48
  2376     01D8  1283               	bcf	3,5	;RP0=0, select bank0
  2377     01D9  1303               	bcf	3,6	;RP1=0, select bank0
  2378     01DA  00B7               	movwf	RTC_display@Time+6
  2379                           
  2380                           ;Masterpic.c: 66:   Time[7] = hour % 10 + '0';
  2381     01DB  300A               	movlw	10
  2382     01DC  00F2               	movwf	___awmod@divisor
  2383     01DD  3000               	movlw	0
  2384     01DE  00F3               	movwf	___awmod@divisor+1
  2385     01DF  0843               	movf	_hour,w
  2386     01E0  00E0               	movwf	??_RTC_display
  2387     01E1  01E1               	clrf	??_RTC_display+1
  2388     01E2  0860               	movf	??_RTC_display,w
  2389     01E3  00F4               	movwf	___awmod@dividend
  2390     01E4  0861               	movf	??_RTC_display+1,w
  2391     01E5  00F5               	movwf	___awmod@dividend+1
  2392     01E6  120A  118A  2442  120A  118A  	fcall	___awmod
  2393     01EB  0872               	movf	?___awmod,w
  2394     01EC  3E30               	addlw	48
  2395     01ED  1283               	bcf	3,5	;RP0=0, select bank0
  2396     01EE  1303               	bcf	3,6	;RP1=0, select bank0
  2397     01EF  00B8               	movwf	RTC_display@Time+7
  2398                           
  2399                           ;Masterpic.c: 67:   Time[9] = minute / 10 + '0';
  2400     01F0  300A               	movlw	10
  2401     01F1  00F2               	movwf	___awdiv@divisor
  2402     01F2  3000               	movlw	0
  2403     01F3  00F3               	movwf	___awdiv@divisor+1
  2404     01F4  087A               	movf	_minute,w
  2405     01F5  00E0               	movwf	??_RTC_display
  2406     01F6  01E1               	clrf	??_RTC_display+1
  2407     01F7  0860               	movf	??_RTC_display,w
  2408     01F8  00F4               	movwf	___awdiv@dividend
  2409     01F9  0861               	movf	??_RTC_display+1,w
  2410     01FA  00F5               	movwf	___awdiv@dividend+1
  2411     01FB  120A  118A  2371  120A  118A  	fcall	___awdiv
  2412     0200  0872               	movf	?___awdiv,w
  2413     0201  3E30               	addlw	48
  2414     0202  1283               	bcf	3,5	;RP0=0, select bank0
  2415     0203  1303               	bcf	3,6	;RP1=0, select bank0
  2416     0204  00BA               	movwf	RTC_display@Time+9
  2417                           
  2418                           ;Masterpic.c: 68:   Time[10] = minute % 10 + '0';
  2419     0205  300A               	movlw	10
  2420     0206  00F2               	movwf	___awmod@divisor
  2421     0207  3000               	movlw	0
  2422     0208  00F3               	movwf	___awmod@divisor+1
  2423     0209  087A               	movf	_minute,w
  2424     020A  00E0               	movwf	??_RTC_display
  2425     020B  01E1               	clrf	??_RTC_display+1
  2426     020C  0860               	movf	??_RTC_display,w
  2427     020D  00F4               	movwf	___awmod@dividend
  2428     020E  0861               	movf	??_RTC_display+1,w
  2429     020F  00F5               	movwf	___awmod@dividend+1
  2430     0210  120A  118A  2442  120A  118A  	fcall	___awmod
  2431     0215  0872               	movf	?___awmod,w
  2432     0216  3E30               	addlw	48
  2433     0217  1283               	bcf	3,5	;RP0=0, select bank0
  2434     0218  1303               	bcf	3,6	;RP1=0, select bank0
  2435     0219  00BB               	movwf	RTC_display@Time+10
  2436                           
  2437                           ;Masterpic.c: 69:   Time[12] = second / 10 + '0';
  2438     021A  300A               	movlw	10
  2439     021B  00F2               	movwf	___awdiv@divisor
  2440     021C  3000               	movlw	0
  2441     021D  00F3               	movwf	___awdiv@divisor+1
  2442     021E  087B               	movf	_second,w
  2443     021F  00E0               	movwf	??_RTC_display
  2444     0220  01E1               	clrf	??_RTC_display+1
  2445     0221  0860               	movf	??_RTC_display,w
  2446     0222  00F4               	movwf	___awdiv@dividend
  2447     0223  0861               	movf	??_RTC_display+1,w
  2448     0224  00F5               	movwf	___awdiv@dividend+1
  2449     0225  120A  118A  2371  120A  118A  	fcall	___awdiv
  2450     022A  0872               	movf	?___awdiv,w
  2451     022B  3E30               	addlw	48
  2452     022C  1283               	bcf	3,5	;RP0=0, select bank0
  2453     022D  1303               	bcf	3,6	;RP1=0, select bank0
  2454     022E  00BD               	movwf	RTC_display@Time+12
  2455                           
  2456                           ;Masterpic.c: 70:   Time[13] = second % 10 + '0';
  2457     022F  300A               	movlw	10
  2458     0230  00F2               	movwf	___awmod@divisor
  2459     0231  3000               	movlw	0
  2460     0232  00F3               	movwf	___awmod@divisor+1
  2461     0233  087B               	movf	_second,w
  2462     0234  00E0               	movwf	??_RTC_display
  2463     0235  01E1               	clrf	??_RTC_display+1
  2464     0236  0860               	movf	??_RTC_display,w
  2465     0237  00F4               	movwf	___awmod@dividend
  2466     0238  0861               	movf	??_RTC_display+1,w
  2467     0239  00F5               	movwf	___awmod@dividend+1
  2468     023A  120A  118A  2442  120A  118A  	fcall	___awmod
  2469     023F  0872               	movf	?___awmod,w
  2470     0240  3E30               	addlw	48
  2471     0241  1283               	bcf	3,5	;RP0=0, select bank0
  2472     0242  1303               	bcf	3,6	;RP1=0, select bank0
  2473     0243  00BE               	movwf	RTC_display@Time+13
  2474                           
  2475                           ;Masterpic.c: 72:   Date[6] = m_day / 10 + '0';
  2476     0244  300A               	movlw	10
  2477     0245  00F2               	movwf	___awdiv@divisor
  2478     0246  3000               	movlw	0
  2479     0247  00F3               	movwf	___awdiv@divisor+1
  2480     0248  0842               	movf	_m_day,w
  2481     0249  00E0               	movwf	??_RTC_display
  2482     024A  01E1               	clrf	??_RTC_display+1
  2483     024B  0860               	movf	??_RTC_display,w
  2484     024C  00F4               	movwf	___awdiv@dividend
  2485     024D  0861               	movf	??_RTC_display+1,w
  2486     024E  00F5               	movwf	___awdiv@dividend+1
  2487     024F  120A  118A  2371  120A  118A  	fcall	___awdiv
  2488     0254  0872               	movf	?___awdiv,w
  2489     0255  3E30               	addlw	48
  2490     0256  1283               	bcf	3,5	;RP0=0, select bank0
  2491     0257  1303               	bcf	3,6	;RP1=0, select bank0
  2492     0258  00A6               	movwf	RTC_display@Date+6
  2493                           
  2494                           ;Masterpic.c: 73:   Date[7] = m_day % 10 + '0';
  2495     0259  300A               	movlw	10
  2496     025A  00F2               	movwf	___awmod@divisor
  2497     025B  3000               	movlw	0
  2498     025C  00F3               	movwf	___awmod@divisor+1
  2499     025D  0842               	movf	_m_day,w
  2500     025E  00E0               	movwf	??_RTC_display
  2501     025F  01E1               	clrf	??_RTC_display+1
  2502     0260  0860               	movf	??_RTC_display,w
  2503     0261  00F4               	movwf	___awmod@dividend
  2504     0262  0861               	movf	??_RTC_display+1,w
  2505     0263  00F5               	movwf	___awmod@dividend+1
  2506     0264  120A  118A  2442  120A  118A  	fcall	___awmod
  2507     0269  0872               	movf	?___awmod,w
  2508     026A  3E30               	addlw	48
  2509     026B  1283               	bcf	3,5	;RP0=0, select bank0
  2510     026C  1303               	bcf	3,6	;RP1=0, select bank0
  2511     026D  00A7               	movwf	RTC_display@Date+7
  2512                           
  2513                           ;Masterpic.c: 74:   Date[9] = month / 10 + '0';
  2514     026E  300A               	movlw	10
  2515     026F  00F2               	movwf	___awdiv@divisor
  2516     0270  3000               	movlw	0
  2517     0271  00F3               	movwf	___awdiv@divisor+1
  2518     0272  0841               	movf	_month,w
  2519     0273  00E0               	movwf	??_RTC_display
  2520     0274  01E1               	clrf	??_RTC_display+1
  2521     0275  0860               	movf	??_RTC_display,w
  2522     0276  00F4               	movwf	___awdiv@dividend
  2523     0277  0861               	movf	??_RTC_display+1,w
  2524     0278  00F5               	movwf	___awdiv@dividend+1
  2525     0279  120A  118A  2371  120A  118A  	fcall	___awdiv
  2526     027E  0872               	movf	?___awdiv,w
  2527     027F  3E30               	addlw	48
  2528     0280  1283               	bcf	3,5	;RP0=0, select bank0
  2529     0281  1303               	bcf	3,6	;RP1=0, select bank0
  2530     0282  00A9               	movwf	RTC_display@Date+9
  2531                           
  2532                           ;Masterpic.c: 75:   Date[10] = month % 10 + '0';
  2533     0283  300A               	movlw	10
  2534     0284  00F2               	movwf	___awmod@divisor
  2535     0285  3000               	movlw	0
  2536     0286  00F3               	movwf	___awmod@divisor+1
  2537     0287  0841               	movf	_month,w
  2538     0288  00E0               	movwf	??_RTC_display
  2539     0289  01E1               	clrf	??_RTC_display+1
  2540     028A  0860               	movf	??_RTC_display,w
  2541     028B  00F4               	movwf	___awmod@dividend
  2542     028C  0861               	movf	??_RTC_display+1,w
  2543     028D  00F5               	movwf	___awmod@dividend+1
  2544     028E  120A  118A  2442  120A  118A  	fcall	___awmod
  2545     0293  0872               	movf	?___awmod,w
  2546     0294  3E30               	addlw	48
  2547     0295  1283               	bcf	3,5	;RP0=0, select bank0
  2548     0296  1303               	bcf	3,6	;RP1=0, select bank0
  2549     0297  00AA               	movwf	RTC_display@Date+10
  2550                           
  2551                           ;Masterpic.c: 76:   Date[14] = year / 10 + '0';
  2552     0298  300A               	movlw	10
  2553     0299  00F2               	movwf	___awdiv@divisor
  2554     029A  3000               	movlw	0
  2555     029B  00F3               	movwf	___awdiv@divisor+1
  2556     029C  0840               	movf	_year,w
  2557     029D  00E0               	movwf	??_RTC_display
  2558     029E  01E1               	clrf	??_RTC_display+1
  2559     029F  0860               	movf	??_RTC_display,w
  2560     02A0  00F4               	movwf	___awdiv@dividend
  2561     02A1  0861               	movf	??_RTC_display+1,w
  2562     02A2  00F5               	movwf	___awdiv@dividend+1
  2563     02A3  120A  118A  2371  120A  118A  	fcall	___awdiv
  2564     02A8  0872               	movf	?___awdiv,w
  2565     02A9  3E30               	addlw	48
  2566     02AA  1283               	bcf	3,5	;RP0=0, select bank0
  2567     02AB  1303               	bcf	3,6	;RP1=0, select bank0
  2568     02AC  00AE               	movwf	RTC_display@Date+14
  2569                           
  2570                           ;Masterpic.c: 77:   Date[15] = year % 10 + '0';
  2571     02AD  300A               	movlw	10
  2572     02AE  00F2               	movwf	___awmod@divisor
  2573     02AF  3000               	movlw	0
  2574     02B0  00F3               	movwf	___awmod@divisor+1
  2575     02B1  0840               	movf	_year,w
  2576     02B2  00E0               	movwf	??_RTC_display
  2577     02B3  01E1               	clrf	??_RTC_display+1
  2578     02B4  0860               	movf	??_RTC_display,w
  2579     02B5  00F4               	movwf	___awmod@dividend
  2580     02B6  0861               	movf	??_RTC_display+1,w
  2581     02B7  00F5               	movwf	___awmod@dividend+1
  2582     02B8  120A  118A  2442  120A  118A  	fcall	___awmod
  2583     02BD  0872               	movf	?___awmod,w
  2584     02BE  3E30               	addlw	48
  2585     02BF  1283               	bcf	3,5	;RP0=0, select bank0
  2586     02C0  1303               	bcf	3,6	;RP1=0, select bank0
  2587     02C1  00AF               	movwf	RTC_display@Date+15
  2588                           
  2589                           ;Masterpic.c: 79:  Lcd_Set_Cursor(1,1);
  2590     02C2  01F6               	clrf	Lcd_Set_Cursor@b
  2591     02C3  0AF6               	incf	Lcd_Set_Cursor@b,f
  2592     02C4  3001               	movlw	1
  2593     02C5  120A  118A  249B  120A  118A  	fcall	_Lcd_Set_Cursor
  2594     02CA                     l1847:
  2595                           
  2596                           ;Masterpic.c: 81:   Lcd_Write_String(Time);
  2597     02CA  3031               	movlw	(low (RTC_display@Time| 0))& (0+255)
  2598     02CB  120A  118A  25A7  120A  118A  	fcall	_Lcd_Write_String
  2599     02D0                     l92:
  2600     02D0  0008               	return
  2601     02D1                     __end_of_RTC_display:
  2602                           
  2603                           	psect	text10
  2604     064A                     __ptext10:	
  2605 ;; *************** function _bcd_to_decimal *****************
  2606 ;; Defined at:
  2607 ;;		line 42 in file "Masterpic.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;  number          1    wreg     unsigned char 
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;  number          1    8[COMMON] unsigned char 
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  1    wreg      unsigned char 
  2614 ;; Registers used:
  2615 ;;		wreg, status,2, status,0, pclath, cstack
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2621 ;;      Params:         0       0       0       0       0
  2622 ;;      Locals:         1       0       0       0       0
  2623 ;;      Temps:          2       0       0       0       0
  2624 ;;      Totals:         3       0       0       0       0
  2625 ;;Total ram usage:        3 bytes
  2626 ;; Hardware stack levels used: 1
  2627 ;; Hardware stack levels required when called: 2
  2628 ;; This function calls:
  2629 ;;		___bmul
  2630 ;; This function is called by:
  2631 ;;		_RTC_display
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635     064A                     _bcd_to_decimal:	
  2636                           ;psect for function _bcd_to_decimal
  2637                           
  2638                           
  2639                           ;incstack = 0
  2640                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  2641                           ;bcd_to_decimal@number stored from wreg
  2642     064A  00F8               	movwf	bcd_to_decimal@number
  2643     064B                     l1353:
  2644                           
  2645                           ;Masterpic.c: 43:   return((number >> 4) * 10 + (number & 0x0F));
  2646     064B  300F               	movlw	15
  2647     064C  0578               	andwf	bcd_to_decimal@number,w
  2648     064D  00F6               	movwf	??_bcd_to_decimal
  2649     064E  300A               	movlw	10
  2650     064F  00F2               	movwf	___bmul@multiplicand
  2651     0650  0878               	movf	bcd_to_decimal@number,w
  2652     0651  00F7               	movwf	??_bcd_to_decimal+1
  2653     0652  3004               	movlw	4
  2654     0653                     u655:
  2655     0653  1003               	clrc
  2656     0654  0CF7               	rrf	??_bcd_to_decimal+1,f
  2657     0655  3EFF               	addlw	-1
  2658     0656  1D03               	skipz
  2659     0657  2E53               	goto	u655
  2660     0658  0877               	movf	??_bcd_to_decimal+1,w
  2661     0659  120A  118A  2660  120A  118A  	fcall	___bmul
  2662     065E  0776               	addwf	??_bcd_to_decimal,w
  2663     065F                     l82:
  2664     065F  0008               	return
  2665     0660                     __end_of_bcd_to_decimal:
  2666                           
  2667                           	psect	text11
  2668     0660                     __ptext11:	
  2669 ;; *************** function ___bmul *****************
  2670 ;; Defined at:
  2671 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;  multiplier      1    wreg     unsigned char 
  2674 ;;  multiplicand    1    2[COMMON] unsigned char 
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;  multiplier      1    5[COMMON] unsigned char 
  2677 ;;  product         1    4[COMMON] unsigned char 
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  1    wreg      unsigned char 
  2680 ;; Registers used:
  2681 ;;		wreg, status,2, status,0
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2687 ;;      Params:         1       0       0       0       0
  2688 ;;      Locals:         2       0       0       0       0
  2689 ;;      Temps:          1       0       0       0       0
  2690 ;;      Totals:         4       0       0       0       0
  2691 ;;Total ram usage:        4 bytes
  2692 ;; Hardware stack levels used: 1
  2693 ;; Hardware stack levels required when called: 1
  2694 ;; This function calls:
  2695 ;;		Nothing
  2696 ;; This function is called by:
  2697 ;;		_bcd_to_decimal
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701     0660                     ___bmul:	
  2702                           ;psect for function ___bmul
  2703                           
  2704                           
  2705                           ;incstack = 0
  2706                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2707                           ;___bmul@multiplier stored from wreg
  2708     0660  00F5               	movwf	___bmul@multiplier
  2709     0661                     l1339:
  2710     0661  01F4               	clrf	___bmul@product
  2711     0662                     l1341:
  2712     0662  1C75               	btfss	___bmul@multiplier,0
  2713     0663  2E65               	goto	u631
  2714     0664  2E66               	goto	u630
  2715     0665                     u631:
  2716     0665  2E6A               	goto	l1345
  2717     0666                     u630:
  2718     0666                     l1343:
  2719     0666  0872               	movf	___bmul@multiplicand,w
  2720     0667  00F3               	movwf	??___bmul
  2721     0668  0873               	movf	??___bmul,w
  2722     0669  07F4               	addwf	___bmul@product,f
  2723     066A                     l1345:
  2724     066A  1003               	clrc
  2725     066B  0DF2               	rlf	___bmul@multiplicand,f
  2726     066C                     l1347:
  2727     066C  1003               	clrc
  2728     066D  0CF5               	rrf	___bmul@multiplier,f
  2729     066E  0875               	movf	___bmul@multiplier,w
  2730     066F  1D03               	btfss	3,2
  2731     0670  2E72               	goto	u641
  2732     0671  2E73               	goto	u640
  2733     0672                     u641:
  2734     0672  2E62               	goto	l1341
  2735     0673                     u640:
  2736     0673                     l1349:
  2737     0673  0874               	movf	___bmul@product,w
  2738     0674                     l385:
  2739     0674  0008               	return
  2740     0675                     __end_of___bmul:
  2741                           
  2742                           	psect	text12
  2743     0442                     __ptext12:	
  2744 ;; *************** function ___awmod *****************
  2745 ;; Defined at:
  2746 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;  divisor         2    2[COMMON] int 
  2749 ;;  dividend        2    4[COMMON] int 
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;  sign            1    8[COMMON] unsigned char 
  2752 ;;  counter         1    7[COMMON] unsigned char 
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  2    2[COMMON] int 
  2755 ;; Registers used:
  2756 ;;		wreg, status,2, status,0
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2762 ;;      Params:         4       0       0       0       0
  2763 ;;      Locals:         2       0       0       0       0
  2764 ;;      Temps:          1       0       0       0       0
  2765 ;;      Totals:         7       0       0       0       0
  2766 ;;Total ram usage:        7 bytes
  2767 ;; Hardware stack levels used: 1
  2768 ;; Hardware stack levels required when called: 1
  2769 ;; This function calls:
  2770 ;;		Nothing
  2771 ;; This function is called by:
  2772 ;;		_decimal_to_bcd
  2773 ;;		_RTC_display
  2774 ;;		_main
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778     0442                     ___awmod:	
  2779                           ;psect for function ___awmod
  2780                           
  2781     0442                     l1461:	
  2782                           ;incstack = 0
  2783                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2784                           
  2785     0442  01F8               	clrf	___awmod@sign
  2786     0443                     l1463:
  2787     0443  1FF5               	btfss	___awmod@dividend+1,7
  2788     0444  2C46               	goto	u911
  2789     0445  2C47               	goto	u910
  2790     0446                     u911:
  2791     0446  2C4E               	goto	l1469
  2792     0447                     u910:
  2793     0447                     l1465:
  2794     0447  09F4               	comf	___awmod@dividend,f
  2795     0448  09F5               	comf	___awmod@dividend+1,f
  2796     0449  0AF4               	incf	___awmod@dividend,f
  2797     044A  1903               	skipnz
  2798     044B  0AF5               	incf	___awmod@dividend+1,f
  2799     044C                     l1467:
  2800     044C  01F8               	clrf	___awmod@sign
  2801     044D  0AF8               	incf	___awmod@sign,f
  2802     044E                     l1469:
  2803     044E  1FF3               	btfss	___awmod@divisor+1,7
  2804     044F  2C51               	goto	u921
  2805     0450  2C52               	goto	u920
  2806     0451                     u921:
  2807     0451  2C57               	goto	l1473
  2808     0452                     u920:
  2809     0452                     l1471:
  2810     0452  09F2               	comf	___awmod@divisor,f
  2811     0453  09F3               	comf	___awmod@divisor+1,f
  2812     0454  0AF2               	incf	___awmod@divisor,f
  2813     0455  1903               	skipnz
  2814     0456  0AF3               	incf	___awmod@divisor+1,f
  2815     0457                     l1473:
  2816     0457  0872               	movf	___awmod@divisor,w
  2817     0458  0473               	iorwf	___awmod@divisor+1,w
  2818     0459  1903               	btfsc	3,2
  2819     045A  2C5C               	goto	u931
  2820     045B  2C5D               	goto	u930
  2821     045C                     u931:
  2822     045C  2C8C               	goto	l1491
  2823     045D                     u930:
  2824     045D                     l1475:
  2825     045D  01F7               	clrf	___awmod@counter
  2826     045E  0AF7               	incf	___awmod@counter,f
  2827     045F  2C6B               	goto	l1481
  2828     0460                     l1477:
  2829     0460  3001               	movlw	1
  2830     0461                     u945:
  2831     0461  1003               	clrc
  2832     0462  0DF2               	rlf	___awmod@divisor,f
  2833     0463  0DF3               	rlf	___awmod@divisor+1,f
  2834     0464  3EFF               	addlw	-1
  2835     0465  1D03               	skipz
  2836     0466  2C61               	goto	u945
  2837     0467                     l1479:
  2838     0467  3001               	movlw	1
  2839     0468  00F6               	movwf	??___awmod
  2840     0469  0876               	movf	??___awmod,w
  2841     046A  07F7               	addwf	___awmod@counter,f
  2842     046B                     l1481:
  2843     046B  1FF3               	btfss	___awmod@divisor+1,7
  2844     046C  2C6E               	goto	u951
  2845     046D  2C6F               	goto	u950
  2846     046E                     u951:
  2847     046E  2C60               	goto	l1477
  2848     046F                     u950:
  2849     046F                     l1483:
  2850     046F  0873               	movf	___awmod@divisor+1,w
  2851     0470  0275               	subwf	___awmod@dividend+1,w
  2852     0471  1D03               	skipz
  2853     0472  2C75               	goto	u965
  2854     0473  0872               	movf	___awmod@divisor,w
  2855     0474  0274               	subwf	___awmod@dividend,w
  2856     0475                     u965:
  2857     0475  1C03               	skipc
  2858     0476  2C78               	goto	u961
  2859     0477  2C79               	goto	u960
  2860     0478                     u961:
  2861     0478  2C7F               	goto	l1487
  2862     0479                     u960:
  2863     0479                     l1485:
  2864     0479  0872               	movf	___awmod@divisor,w
  2865     047A  02F4               	subwf	___awmod@dividend,f
  2866     047B  0873               	movf	___awmod@divisor+1,w
  2867     047C  1C03               	skipc
  2868     047D  03F5               	decf	___awmod@dividend+1,f
  2869     047E  02F5               	subwf	___awmod@dividend+1,f
  2870     047F                     l1487:
  2871     047F  3001               	movlw	1
  2872     0480                     u975:
  2873     0480  1003               	clrc
  2874     0481  0CF3               	rrf	___awmod@divisor+1,f
  2875     0482  0CF2               	rrf	___awmod@divisor,f
  2876     0483  3EFF               	addlw	-1
  2877     0484  1D03               	skipz
  2878     0485  2C80               	goto	u975
  2879     0486                     l1489:
  2880     0486  3001               	movlw	1
  2881     0487  02F7               	subwf	___awmod@counter,f
  2882     0488  1D03               	btfss	3,2
  2883     0489  2C8B               	goto	u981
  2884     048A  2C8C               	goto	u980
  2885     048B                     u981:
  2886     048B  2C6F               	goto	l1483
  2887     048C                     u980:
  2888     048C                     l1491:
  2889     048C  0878               	movf	___awmod@sign,w
  2890     048D  1903               	btfsc	3,2
  2891     048E  2C90               	goto	u991
  2892     048F  2C91               	goto	u990
  2893     0490                     u991:
  2894     0490  2C96               	goto	l1495
  2895     0491                     u990:
  2896     0491                     l1493:
  2897     0491  09F4               	comf	___awmod@dividend,f
  2898     0492  09F5               	comf	___awmod@dividend+1,f
  2899     0493  0AF4               	incf	___awmod@dividend,f
  2900     0494  1903               	skipnz
  2901     0495  0AF5               	incf	___awmod@dividend+1,f
  2902     0496                     l1495:
  2903     0496  0875               	movf	___awmod@dividend+1,w
  2904     0497  00F3               	movwf	?___awmod+1
  2905     0498  0874               	movf	___awmod@dividend,w
  2906     0499  00F2               	movwf	?___awmod
  2907     049A                     l525:
  2908     049A  0008               	return
  2909     049B                     __end_of___awmod:
  2910                           
  2911                           	psect	text13
  2912     0371                     __ptext13:	
  2913 ;; *************** function ___awdiv *****************
  2914 ;; Defined at:
  2915 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;  divisor         2    2[COMMON] int 
  2918 ;;  dividend        2    4[COMMON] int 
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;  quotient        2    2[BANK0 ] int 
  2921 ;;  sign            1    1[BANK0 ] unsigned char 
  2922 ;;  counter         1    0[BANK0 ] unsigned char 
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  2    2[COMMON] int 
  2925 ;; Registers used:
  2926 ;;		wreg, status,2, status,0
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2932 ;;      Params:         4       0       0       0       0
  2933 ;;      Locals:         0       4       0       0       0
  2934 ;;      Temps:          1       0       0       0       0
  2935 ;;      Totals:         5       4       0       0       0
  2936 ;;Total ram usage:        9 bytes
  2937 ;; Hardware stack levels used: 1
  2938 ;; Hardware stack levels required when called: 1
  2939 ;; This function calls:
  2940 ;;		Nothing
  2941 ;; This function is called by:
  2942 ;;		_decimal_to_bcd
  2943 ;;		_RTC_display
  2944 ;;		_main
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948     0371                     ___awdiv:	
  2949                           ;psect for function ___awdiv
  2950                           
  2951     0371                     l1797:	
  2952                           ;incstack = 0
  2953                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2954                           
  2955     0371  1283               	bcf	3,5	;RP0=0, select bank0
  2956     0372  1303               	bcf	3,6	;RP1=0, select bank0
  2957     0373  01DD               	clrf	___awdiv@sign
  2958     0374                     l1799:
  2959     0374  1FF3               	btfss	___awdiv@divisor+1,7
  2960     0375  2B77               	goto	u1301
  2961     0376  2B78               	goto	u1300
  2962     0377                     u1301:
  2963     0377  2B7F               	goto	l1805
  2964     0378                     u1300:
  2965     0378                     l1801:
  2966     0378  09F2               	comf	___awdiv@divisor,f
  2967     0379  09F3               	comf	___awdiv@divisor+1,f
  2968     037A  0AF2               	incf	___awdiv@divisor,f
  2969     037B  1903               	skipnz
  2970     037C  0AF3               	incf	___awdiv@divisor+1,f
  2971     037D                     l1803:
  2972     037D  01DD               	clrf	___awdiv@sign
  2973     037E  0ADD               	incf	___awdiv@sign,f
  2974     037F                     l1805:
  2975     037F  1FF5               	btfss	___awdiv@dividend+1,7
  2976     0380  2B82               	goto	u1311
  2977     0381  2B83               	goto	u1310
  2978     0382                     u1311:
  2979     0382  2B8C               	goto	l1811
  2980     0383                     u1310:
  2981     0383                     l1807:
  2982     0383  09F4               	comf	___awdiv@dividend,f
  2983     0384  09F5               	comf	___awdiv@dividend+1,f
  2984     0385  0AF4               	incf	___awdiv@dividend,f
  2985     0386  1903               	skipnz
  2986     0387  0AF5               	incf	___awdiv@dividend+1,f
  2987     0388                     l1809:
  2988     0388  3001               	movlw	1
  2989     0389  00F6               	movwf	??___awdiv
  2990     038A  0876               	movf	??___awdiv,w
  2991     038B  06DD               	xorwf	___awdiv@sign,f
  2992     038C                     l1811:
  2993     038C  01DE               	clrf	___awdiv@quotient
  2994     038D  01DF               	clrf	___awdiv@quotient+1
  2995     038E                     l1813:
  2996     038E  0872               	movf	___awdiv@divisor,w
  2997     038F  0473               	iorwf	___awdiv@divisor+1,w
  2998     0390  1903               	btfsc	3,2
  2999     0391  2B93               	goto	u1321
  3000     0392  2B94               	goto	u1320
  3001     0393                     u1321:
  3002     0393  2BCB               	goto	l1833
  3003     0394                     u1320:
  3004     0394                     l1815:
  3005     0394  01DC               	clrf	___awdiv@counter
  3006     0395  0ADC               	incf	___awdiv@counter,f
  3007     0396  2BA2               	goto	l1821
  3008     0397                     l1817:
  3009     0397  3001               	movlw	1
  3010     0398                     u1335:
  3011     0398  1003               	clrc
  3012     0399  0DF2               	rlf	___awdiv@divisor,f
  3013     039A  0DF3               	rlf	___awdiv@divisor+1,f
  3014     039B  3EFF               	addlw	-1
  3015     039C  1D03               	skipz
  3016     039D  2B98               	goto	u1335
  3017     039E                     l1819:
  3018     039E  3001               	movlw	1
  3019     039F  00F6               	movwf	??___awdiv
  3020     03A0  0876               	movf	??___awdiv,w
  3021     03A1  07DC               	addwf	___awdiv@counter,f
  3022     03A2                     l1821:
  3023     03A2  1FF3               	btfss	___awdiv@divisor+1,7
  3024     03A3  2BA5               	goto	u1341
  3025     03A4  2BA6               	goto	u1340
  3026     03A5                     u1341:
  3027     03A5  2B97               	goto	l1817
  3028     03A6                     u1340:
  3029     03A6                     l1823:
  3030     03A6  3001               	movlw	1
  3031     03A7                     u1355:
  3032     03A7  1003               	clrc
  3033     03A8  0DDE               	rlf	___awdiv@quotient,f
  3034     03A9  0DDF               	rlf	___awdiv@quotient+1,f
  3035     03AA  3EFF               	addlw	-1
  3036     03AB  1D03               	skipz
  3037     03AC  2BA7               	goto	u1355
  3038     03AD  0873               	movf	___awdiv@divisor+1,w
  3039     03AE  0275               	subwf	___awdiv@dividend+1,w
  3040     03AF  1D03               	skipz
  3041     03B0  2BB3               	goto	u1365
  3042     03B1  0872               	movf	___awdiv@divisor,w
  3043     03B2  0274               	subwf	___awdiv@dividend,w
  3044     03B3                     u1365:
  3045     03B3  1C03               	skipc
  3046     03B4  2BB6               	goto	u1361
  3047     03B5  2BB7               	goto	u1360
  3048     03B6                     u1361:
  3049     03B6  2BBE               	goto	l1829
  3050     03B7                     u1360:
  3051     03B7                     l1825:
  3052     03B7  0872               	movf	___awdiv@divisor,w
  3053     03B8  02F4               	subwf	___awdiv@dividend,f
  3054     03B9  0873               	movf	___awdiv@divisor+1,w
  3055     03BA  1C03               	skipc
  3056     03BB  03F5               	decf	___awdiv@dividend+1,f
  3057     03BC  02F5               	subwf	___awdiv@dividend+1,f
  3058     03BD                     l1827:
  3059     03BD  145E               	bsf	___awdiv@quotient,0
  3060     03BE                     l1829:
  3061     03BE  3001               	movlw	1
  3062     03BF                     u1375:
  3063     03BF  1003               	clrc
  3064     03C0  0CF3               	rrf	___awdiv@divisor+1,f
  3065     03C1  0CF2               	rrf	___awdiv@divisor,f
  3066     03C2  3EFF               	addlw	-1
  3067     03C3  1D03               	skipz
  3068     03C4  2BBF               	goto	u1375
  3069     03C5                     l1831:
  3070     03C5  3001               	movlw	1
  3071     03C6  02DC               	subwf	___awdiv@counter,f
  3072     03C7  1D03               	btfss	3,2
  3073     03C8  2BCA               	goto	u1381
  3074     03C9  2BCB               	goto	u1380
  3075     03CA                     u1381:
  3076     03CA  2BA6               	goto	l1823
  3077     03CB                     u1380:
  3078     03CB                     l1833:
  3079     03CB  085D               	movf	___awdiv@sign,w
  3080     03CC  1903               	btfsc	3,2
  3081     03CD  2BCF               	goto	u1391
  3082     03CE  2BD0               	goto	u1390
  3083     03CF                     u1391:
  3084     03CF  2BD5               	goto	l1837
  3085     03D0                     u1390:
  3086     03D0                     l1835:
  3087     03D0  09DE               	comf	___awdiv@quotient,f
  3088     03D1  09DF               	comf	___awdiv@quotient+1,f
  3089     03D2  0ADE               	incf	___awdiv@quotient,f
  3090     03D3  1903               	skipnz
  3091     03D4  0ADF               	incf	___awdiv@quotient+1,f
  3092     03D5                     l1837:
  3093     03D5  085F               	movf	___awdiv@quotient+1,w
  3094     03D6  00F3               	movwf	?___awdiv+1
  3095     03D7  085E               	movf	___awdiv@quotient,w
  3096     03D8  00F2               	movwf	?___awdiv
  3097     03D9                     l512:
  3098     03D9  0008               	return
  3099     03DA                     __end_of___awdiv:
  3100                           
  3101                           	psect	text14
  3102     05A7                     __ptext14:	
  3103 ;; *************** function _Lcd_Write_String *****************
  3104 ;; Defined at:
  3105 ;;		line 98 in file "LCD.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;  a               1    wreg     PTR unsigned char 
  3108 ;;		 -> RTC_display@Time(15), 
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;  a               1    0[BANK0 ] PTR unsigned char 
  3111 ;;		 -> RTC_display@Time(15), 
  3112 ;;  i               2    1[BANK0 ] int 
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  1    wreg      void 
  3115 ;; Registers used:
  3116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3122 ;;      Params:         0       0       0       0       0
  3123 ;;      Locals:         0       3       0       0       0
  3124 ;;      Temps:          1       0       0       0       0
  3125 ;;      Totals:         1       3       0       0       0
  3126 ;;Total ram usage:        4 bytes
  3127 ;; Hardware stack levels used: 1
  3128 ;; Hardware stack levels required when called: 3
  3129 ;; This function calls:
  3130 ;;		_Lcd_Write_Char
  3131 ;; This function is called by:
  3132 ;;		_RTC_display
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136     05A7                     _Lcd_Write_String:	
  3137                           ;psect for function _Lcd_Write_String
  3138                           
  3139                           
  3140                           ;incstack = 0
  3141                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3142                           ;Lcd_Write_String@a stored from wreg
  3143     05A7  1283               	bcf	3,5	;RP0=0, select bank0
  3144     05A8  1303               	bcf	3,6	;RP1=0, select bank0
  3145     05A9  00DC               	movwf	Lcd_Write_String@a
  3146     05AA                     l1765:
  3147                           
  3148                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  3149     05AA  01DD               	clrf	Lcd_Write_String@i
  3150     05AB  01DE               	clrf	Lcd_Write_String@i+1
  3151     05AC  2DC0               	goto	l1771
  3152     05AD                     l1767:
  3153                           
  3154                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  3155     05AD  085D               	movf	Lcd_Write_String@i,w
  3156     05AE  075C               	addwf	Lcd_Write_String@a,w
  3157     05AF  00F7               	movwf	??_Lcd_Write_String
  3158     05B0  0877               	movf	??_Lcd_Write_String,w
  3159     05B1  0084               	movwf	4
  3160     05B2  0800               	movf	0,w
  3161     05B3  120A  118A  24E7  120A  118A  	fcall	_Lcd_Write_Char
  3162     05B8                     l1769:
  3163     05B8  3001               	movlw	1
  3164     05B9  1283               	bcf	3,5	;RP0=0, select bank0
  3165     05BA  1303               	bcf	3,6	;RP1=0, select bank0
  3166     05BB  07DD               	addwf	Lcd_Write_String@i,f
  3167     05BC  1803               	skipnc
  3168     05BD  0ADE               	incf	Lcd_Write_String@i+1,f
  3169     05BE  3000               	movlw	0
  3170     05BF  07DE               	addwf	Lcd_Write_String@i+1,f
  3171     05C0                     l1771:
  3172     05C0  085D               	movf	Lcd_Write_String@i,w
  3173     05C1  075C               	addwf	Lcd_Write_String@a,w
  3174     05C2  00F7               	movwf	??_Lcd_Write_String
  3175     05C3  0877               	movf	??_Lcd_Write_String,w
  3176     05C4  0084               	movwf	4
  3177     05C5  1383               	bcf	3,7	;select IRP bank0
  3178     05C6  0800               	movf	0,w
  3179     05C7  1D03               	btfss	3,2
  3180     05C8  2DCA               	goto	u1221
  3181     05C9  2DCB               	goto	u1220
  3182     05CA                     u1221:
  3183     05CA  2DAD               	goto	l1767
  3184     05CB                     u1220:
  3185     05CB                     l214:
  3186     05CB  0008               	return
  3187     05CC                     __end_of_Lcd_Write_String:
  3188                           
  3189                           	psect	text15
  3190     04E7                     __ptext15:	
  3191 ;; *************** function _Lcd_Write_Char *****************
  3192 ;; Defined at:
  3193 ;;		line 83 in file "LCD.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;  a               1    wreg     unsigned char 
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;  a               1    6[COMMON] unsigned char 
  3198 ;;  y               1    5[COMMON] unsigned char 
  3199 ;;  temp            1    4[COMMON] unsigned char 
  3200 ;; Return value:  Size  Location     Type
  3201 ;;                  1    wreg      void 
  3202 ;; Registers used:
  3203 ;;		wreg, status,2, status,0, pclath, cstack
  3204 ;; Tracked objects:
  3205 ;;		On entry : 0/0
  3206 ;;		On exit  : 0/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3209 ;;      Params:         0       0       0       0       0
  3210 ;;      Locals:         3       0       0       0       0
  3211 ;;      Temps:          1       0       0       0       0
  3212 ;;      Totals:         4       0       0       0       0
  3213 ;;Total ram usage:        4 bytes
  3214 ;; Hardware stack levels used: 1
  3215 ;; Hardware stack levels required when called: 2
  3216 ;; This function calls:
  3217 ;;		_Lcd_Port
  3218 ;; This function is called by:
  3219 ;;		_Lcd_Write_String
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223     04E7                     _Lcd_Write_Char:	
  3224                           ;psect for function _Lcd_Write_Char
  3225                           
  3226                           
  3227                           ;incstack = 0
  3228                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3229                           ;Lcd_Write_Char@a stored from wreg
  3230     04E7  00F6               	movwf	Lcd_Write_Char@a
  3231     04E8                     l1725:
  3232                           
  3233                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  3234     04E8  0876               	movf	Lcd_Write_Char@a,w
  3235     04E9  390F               	andlw	15
  3236     04EA  00F4               	movwf	Lcd_Write_Char@temp
  3237                           
  3238                           ;LCD.c: 86:     y = a & 0xF0;
  3239     04EB  0876               	movf	Lcd_Write_Char@a,w
  3240     04EC  39F0               	andlw	240
  3241     04ED  00F5               	movwf	Lcd_Write_Char@y
  3242     04EE                     l1727:
  3243                           
  3244                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  3245     04EE  1283               	bcf	3,5	;RP0=0, select bank0
  3246     04EF  1303               	bcf	3,6	;RP1=0, select bank0
  3247     04F0  1508               	bsf	8,2	;volatile
  3248     04F1                     l1729:
  3249                           
  3250                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  3251     04F1  0875               	movf	Lcd_Write_Char@y,w
  3252     04F2  00F3               	movwf	??_Lcd_Write_Char
  3253     04F3  3004               	movlw	4
  3254     04F4                     u1175:
  3255     04F4  1003               	clrc
  3256     04F5  0CF3               	rrf	??_Lcd_Write_Char,f
  3257     04F6  3EFF               	addlw	-1
  3258     04F7  1D03               	skipz
  3259     04F8  2CF4               	goto	u1175
  3260     04F9  0873               	movf	??_Lcd_Write_Char,w
  3261     04FA  120A  118A  25EE  120A  118A  	fcall	_Lcd_Port
  3262     04FF                     l1731:
  3263                           
  3264                           ;LCD.c: 89:     RD3 = 1;
  3265     04FF  1283               	bcf	3,5	;RP0=0, select bank0
  3266     0500  1303               	bcf	3,6	;RP1=0, select bank0
  3267     0501  1588               	bsf	8,3	;volatile
  3268     0502                     l1733:
  3269                           
  3270                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3271     0502  301A               	movlw	26
  3272     0503  00F3               	movwf	??_Lcd_Write_Char
  3273     0504                     u1527:
  3274     0504  0BF3               	decfsz	??_Lcd_Write_Char,f
  3275     0505  2D04               	goto	u1527
  3276     0506  0000               	nop
  3277     0507                     l1735:
  3278                           
  3279                           ;LCD.c: 91:     RD3 = 0;
  3280     0507  1283               	bcf	3,5	;RP0=0, select bank0
  3281     0508  1303               	bcf	3,6	;RP1=0, select bank0
  3282     0509  1188               	bcf	8,3	;volatile
  3283     050A                     l1737:
  3284                           
  3285                           ;LCD.c: 92:     Lcd_Port(temp);
  3286     050A  0874               	movf	Lcd_Write_Char@temp,w
  3287     050B  120A  118A  25EE  120A  118A  	fcall	_Lcd_Port
  3288     0510                     l1739:
  3289                           
  3290                           ;LCD.c: 93:     RD3 = 1;
  3291     0510  1283               	bcf	3,5	;RP0=0, select bank0
  3292     0511  1303               	bcf	3,6	;RP1=0, select bank0
  3293     0512  1588               	bsf	8,3	;volatile
  3294     0513                     l1741:
  3295                           
  3296                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3297     0513  301A               	movlw	26
  3298     0514  00F3               	movwf	??_Lcd_Write_Char
  3299     0515                     u1537:
  3300     0515  0BF3               	decfsz	??_Lcd_Write_Char,f
  3301     0516  2D15               	goto	u1537
  3302     0517  0000               	nop
  3303     0518                     l1743:
  3304                           
  3305                           ;LCD.c: 95:     RD3 = 0;
  3306     0518  1283               	bcf	3,5	;RP0=0, select bank0
  3307     0519  1303               	bcf	3,6	;RP1=0, select bank0
  3308     051A  1188               	bcf	8,3	;volatile
  3309     051B                     l208:
  3310     051B  0008               	return
  3311     051C                     __end_of_Lcd_Write_Char:
  3312                           
  3313                           	psect	text16
  3314     049B                     __ptext16:	
  3315 ;; *************** function _Lcd_Set_Cursor *****************
  3316 ;; Defined at:
  3317 ;;		line 48 in file "LCD.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;  a               1    wreg     unsigned char 
  3320 ;;  b               1    6[COMMON] unsigned char 
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;  a               1    0[BANK0 ] unsigned char 
  3323 ;;  temp            1    3[BANK0 ] unsigned char 
  3324 ;;  y               1    2[BANK0 ] unsigned char 
  3325 ;;  z               1    1[BANK0 ] unsigned char 
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  1    wreg      void 
  3328 ;; Registers used:
  3329 ;;		wreg, status,2, status,0, pclath, cstack
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3335 ;;      Params:         1       0       0       0       0
  3336 ;;      Locals:         0       4       0       0       0
  3337 ;;      Temps:          1       0       0       0       0
  3338 ;;      Totals:         2       4       0       0       0
  3339 ;;Total ram usage:        6 bytes
  3340 ;; Hardware stack levels used: 1
  3341 ;; Hardware stack levels required when called: 3
  3342 ;; This function calls:
  3343 ;;		_Lcd_Cmd
  3344 ;; This function is called by:
  3345 ;;		_RTC_display
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349     049B                     _Lcd_Set_Cursor:	
  3350                           ;psect for function _Lcd_Set_Cursor
  3351                           
  3352                           
  3353                           ;incstack = 0
  3354                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3355                           ;Lcd_Set_Cursor@a stored from wreg
  3356     049B  1283               	bcf	3,5	;RP0=0, select bank0
  3357     049C  1303               	bcf	3,6	;RP1=0, select bank0
  3358     049D  00DC               	movwf	Lcd_Set_Cursor@a
  3359     049E                     l1745:
  3360                           
  3361                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  3362     049E  035C               	decf	Lcd_Set_Cursor@a,w
  3363     049F  1D03               	btfss	3,2
  3364     04A0  2CA2               	goto	u1181
  3365     04A1  2CA3               	goto	u1180
  3366     04A2                     u1181:
  3367     04A2  2CC2               	goto	l1755
  3368     04A3                     u1180:
  3369     04A3                     l1747:
  3370                           
  3371                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  3372     04A3  0876               	movf	Lcd_Set_Cursor@b,w
  3373     04A4  3E7F               	addlw	127
  3374     04A5  00DF               	movwf	Lcd_Set_Cursor@temp
  3375                           
  3376                           ;LCD.c: 52:         z = temp >> 4;
  3377     04A6  085F               	movf	Lcd_Set_Cursor@temp,w
  3378     04A7  00F7               	movwf	??_Lcd_Set_Cursor
  3379     04A8  3004               	movlw	4
  3380     04A9                     u1195:
  3381     04A9  1003               	clrc
  3382     04AA  0CF7               	rrf	??_Lcd_Set_Cursor,f
  3383     04AB  3EFF               	addlw	-1
  3384     04AC  1D03               	skipz
  3385     04AD  2CA9               	goto	u1195
  3386     04AE  0877               	movf	??_Lcd_Set_Cursor,w
  3387     04AF  00DD               	movwf	Lcd_Set_Cursor@z
  3388     04B0                     l1749:
  3389                           
  3390                           ;LCD.c: 53:         y = temp & 0x0F;
  3391     04B0  085F               	movf	Lcd_Set_Cursor@temp,w
  3392     04B1  390F               	andlw	15
  3393     04B2  00DE               	movwf	Lcd_Set_Cursor@y
  3394     04B3                     l1751:
  3395                           
  3396                           ;LCD.c: 54:         Lcd_Cmd(z);
  3397     04B3  085D               	movf	Lcd_Set_Cursor@z,w
  3398     04B4  120A  118A  2630  120A  118A  	fcall	_Lcd_Cmd
  3399     04B9                     l1753:
  3400                           
  3401                           ;LCD.c: 55:         Lcd_Cmd(y);
  3402     04B9  1283               	bcf	3,5	;RP0=0, select bank0
  3403     04BA  1303               	bcf	3,6	;RP1=0, select bank0
  3404     04BB  085E               	movf	Lcd_Set_Cursor@y,w
  3405     04BC  120A  118A  2630  120A  118A  	fcall	_Lcd_Cmd
  3406                           
  3407                           ;LCD.c: 56:     } else if (a == 2) {
  3408     04C1  2CE6               	goto	l202
  3409     04C2                     l1755:
  3410     04C2  3002               	movlw	2
  3411     04C3  065C               	xorwf	Lcd_Set_Cursor@a,w
  3412     04C4  1D03               	btfss	3,2
  3413     04C5  2CC7               	goto	u1201
  3414     04C6  2CC8               	goto	u1200
  3415     04C7                     u1201:
  3416     04C7  2CE6               	goto	l202
  3417     04C8                     u1200:
  3418     04C8                     l1757:
  3419                           
  3420                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  3421     04C8  0876               	movf	Lcd_Set_Cursor@b,w
  3422     04C9  3EBF               	addlw	191
  3423     04CA  00DF               	movwf	Lcd_Set_Cursor@temp
  3424                           
  3425                           ;LCD.c: 58:         z = temp >> 4;
  3426     04CB  085F               	movf	Lcd_Set_Cursor@temp,w
  3427     04CC  00F7               	movwf	??_Lcd_Set_Cursor
  3428     04CD  3004               	movlw	4
  3429     04CE                     u1215:
  3430     04CE  1003               	clrc
  3431     04CF  0CF7               	rrf	??_Lcd_Set_Cursor,f
  3432     04D0  3EFF               	addlw	-1
  3433     04D1  1D03               	skipz
  3434     04D2  2CCE               	goto	u1215
  3435     04D3  0877               	movf	??_Lcd_Set_Cursor,w
  3436     04D4  00DD               	movwf	Lcd_Set_Cursor@z
  3437     04D5                     l1759:
  3438                           
  3439                           ;LCD.c: 59:         y = temp & 0x0F;
  3440     04D5  085F               	movf	Lcd_Set_Cursor@temp,w
  3441     04D6  390F               	andlw	15
  3442     04D7  00DE               	movwf	Lcd_Set_Cursor@y
  3443     04D8                     l1761:
  3444                           
  3445                           ;LCD.c: 60:         Lcd_Cmd(z);
  3446     04D8  085D               	movf	Lcd_Set_Cursor@z,w
  3447     04D9  120A  118A  2630  120A  118A  	fcall	_Lcd_Cmd
  3448     04DE                     l1763:
  3449                           
  3450                           ;LCD.c: 61:         Lcd_Cmd(y);
  3451     04DE  1283               	bcf	3,5	;RP0=0, select bank0
  3452     04DF  1303               	bcf	3,6	;RP1=0, select bank0
  3453     04E0  085E               	movf	Lcd_Set_Cursor@y,w
  3454     04E1  120A  118A  2630  120A  118A  	fcall	_Lcd_Cmd
  3455     04E6                     l202:
  3456     04E6  0008               	return
  3457     04E7                     __end_of_Lcd_Set_Cursor:
  3458                           
  3459                           	psect	text17
  3460     0630                     __ptext17:	
  3461 ;; *************** function _Lcd_Cmd *****************
  3462 ;; Defined at:
  3463 ;;		line 35 in file "LCD.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;  a               1    wreg     unsigned char 
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;  a               1    5[COMMON] unsigned char 
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  1    wreg      void 
  3470 ;; Registers used:
  3471 ;;		wreg, status,2, status,0, pclath, cstack
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3477 ;;      Params:         0       0       0       0       0
  3478 ;;      Locals:         1       0       0       0       0
  3479 ;;      Temps:          2       0       0       0       0
  3480 ;;      Totals:         3       0       0       0       0
  3481 ;;Total ram usage:        3 bytes
  3482 ;; Hardware stack levels used: 1
  3483 ;; Hardware stack levels required when called: 2
  3484 ;; This function calls:
  3485 ;;		_Lcd_Port
  3486 ;; This function is called by:
  3487 ;;		_Lcd_Set_Cursor
  3488 ;;		_Lcd_Clear
  3489 ;;		_Lcd_Init
  3490 ;;		_Lcd_Shift_Right
  3491 ;;		_Lcd_Shift_Left
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495     0630                     _Lcd_Cmd:	
  3496                           ;psect for function _Lcd_Cmd
  3497                           
  3498                           
  3499                           ;incstack = 0
  3500                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3501                           ;Lcd_Cmd@a stored from wreg
  3502     0630  00F5               	movwf	Lcd_Cmd@a
  3503     0631                     l1715:
  3504                           
  3505                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  3506     0631  1283               	bcf	3,5	;RP0=0, select bank0
  3507     0632  1303               	bcf	3,6	;RP1=0, select bank0
  3508     0633  1108               	bcf	8,2	;volatile
  3509     0634                     l1717:
  3510                           
  3511                           ;LCD.c: 37:     Lcd_Port(a);
  3512     0634  0875               	movf	Lcd_Cmd@a,w
  3513     0635  120A  118A  25EE  120A  118A  	fcall	_Lcd_Port
  3514     063A                     l1719:
  3515                           
  3516                           ;LCD.c: 38:     RD3 = 1;
  3517     063A  1283               	bcf	3,5	;RP0=0, select bank0
  3518     063B  1303               	bcf	3,6	;RP1=0, select bank0
  3519     063C  1588               	bsf	8,3	;volatile
  3520     063D                     l1721:
  3521                           
  3522                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3523     063D  300B               	movlw	11
  3524     063E  00F4               	movwf	??_Lcd_Cmd+1
  3525     063F  3062               	movlw	98
  3526     0640  00F3               	movwf	??_Lcd_Cmd
  3527     0641                     u1547:
  3528     0641  0BF3               	decfsz	??_Lcd_Cmd,f
  3529     0642  2E41               	goto	u1547
  3530     0643  0BF4               	decfsz	??_Lcd_Cmd+1,f
  3531     0644  2E41               	goto	u1547
  3532     0645  0000               	nop
  3533     0646                     l1723:
  3534                           
  3535                           ;LCD.c: 40:     RD3 = 0;
  3536     0646  1283               	bcf	3,5	;RP0=0, select bank0
  3537     0647  1303               	bcf	3,6	;RP1=0, select bank0
  3538     0648  1188               	bcf	8,3	;volatile
  3539     0649                     l193:
  3540     0649  0008               	return
  3541     064A                     __end_of_Lcd_Cmd:
  3542                           
  3543                           	psect	text18
  3544     05EE                     __ptext18:	
  3545 ;; *************** function _Lcd_Port *****************
  3546 ;; Defined at:
  3547 ;;		line 13 in file "LCD.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;  a               1    wreg     unsigned char 
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;  a               1    2[COMMON] unsigned char 
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  1    wreg      void 
  3554 ;; Registers used:
  3555 ;;		wreg
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3561 ;;      Params:         0       0       0       0       0
  3562 ;;      Locals:         1       0       0       0       0
  3563 ;;      Temps:          0       0       0       0       0
  3564 ;;      Totals:         1       0       0       0       0
  3565 ;;Total ram usage:        1 bytes
  3566 ;; Hardware stack levels used: 1
  3567 ;; Hardware stack levels required when called: 1
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		_Lcd_Cmd
  3572 ;;		_Lcd_Write_Char
  3573 ;;		_Lcd_Init
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577     05EE                     _Lcd_Port:	
  3578                           ;psect for function _Lcd_Port
  3579                           
  3580                           
  3581                           ;incstack = 0
  3582                           ; Regs used in _Lcd_Port: [wreg]
  3583                           ;Lcd_Port@a stored from wreg
  3584     05EE  00F2               	movwf	Lcd_Port@a
  3585     05EF                     l1705:
  3586                           
  3587                           ;LCD.c: 14:     if (a & 1)
  3588     05EF  1C72               	btfss	Lcd_Port@a,0
  3589     05F0  2DF2               	goto	u1131
  3590     05F1  2DF3               	goto	u1130
  3591     05F2                     u1131:
  3592     05F2  2DF7               	goto	l182
  3593     05F3                     u1130:
  3594     05F3                     l1707:
  3595                           
  3596                           ;LCD.c: 15:         RD4 = 1;
  3597     05F3  1283               	bcf	3,5	;RP0=0, select bank0
  3598     05F4  1303               	bcf	3,6	;RP1=0, select bank0
  3599     05F5  1608               	bsf	8,4	;volatile
  3600     05F6  2DFA               	goto	l183
  3601     05F7                     l182:	
  3602                           ;LCD.c: 16:     else
  3603                           
  3604                           
  3605                           ;LCD.c: 17:         RD4 = 0;
  3606     05F7  1283               	bcf	3,5	;RP0=0, select bank0
  3607     05F8  1303               	bcf	3,6	;RP1=0, select bank0
  3608     05F9  1208               	bcf	8,4	;volatile
  3609     05FA                     l183:
  3610                           
  3611                           ;LCD.c: 19:     if (a & 2)
  3612     05FA  1CF2               	btfss	Lcd_Port@a,1
  3613     05FB  2DFD               	goto	u1141
  3614     05FC  2DFE               	goto	u1140
  3615     05FD                     u1141:
  3616     05FD  2E00               	goto	l184
  3617     05FE                     u1140:
  3618     05FE                     l1709:
  3619                           
  3620                           ;LCD.c: 20:         RD5 = 1;
  3621     05FE  1688               	bsf	8,5	;volatile
  3622     05FF  2E01               	goto	l185
  3623     0600                     l184:	
  3624                           ;LCD.c: 21:     else
  3625                           
  3626                           
  3627                           ;LCD.c: 22:         RD5 = 0;
  3628     0600  1288               	bcf	8,5	;volatile
  3629     0601                     l185:
  3630                           
  3631                           ;LCD.c: 24:     if (a & 4)
  3632     0601  1D72               	btfss	Lcd_Port@a,2
  3633     0602  2E04               	goto	u1151
  3634     0603  2E05               	goto	u1150
  3635     0604                     u1151:
  3636     0604  2E07               	goto	l186
  3637     0605                     u1150:
  3638     0605                     l1711:
  3639                           
  3640                           ;LCD.c: 25:         RD6 = 1;
  3641     0605  1708               	bsf	8,6	;volatile
  3642     0606  2E08               	goto	l187
  3643     0607                     l186:	
  3644                           ;LCD.c: 26:     else
  3645                           
  3646                           
  3647                           ;LCD.c: 27:         RD6 = 0;
  3648     0607  1308               	bcf	8,6	;volatile
  3649     0608                     l187:
  3650                           
  3651                           ;LCD.c: 29:     if (a & 8)
  3652     0608  1DF2               	btfss	Lcd_Port@a,3
  3653     0609  2E0B               	goto	u1161
  3654     060A  2E0C               	goto	u1160
  3655     060B                     u1161:
  3656     060B  2E0E               	goto	l188
  3657     060C                     u1160:
  3658     060C                     l1713:
  3659                           
  3660                           ;LCD.c: 30:         RD7 = 1;
  3661     060C  1788               	bsf	8,7	;volatile
  3662     060D  2E0F               	goto	l190
  3663     060E                     l188:	
  3664                           ;LCD.c: 31:     else
  3665                           
  3666                           
  3667                           ;LCD.c: 32:         RD7 = 0;
  3668     060E  1388               	bcf	8,7	;volatile
  3669     060F                     l190:
  3670     060F  0008               	return
  3671     0610                     __end_of_Lcd_Port:
  3672                           
  3673                           	psect	text19
  3674     06CB                     __ptext19:	
  3675 ;; *************** function _I2C_Master_Write *****************
  3676 ;; Defined at:
  3677 ;;		line 65 in file "I2C.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;  d               2    2[COMMON] unsigned int 
  3680 ;; Auto vars:     Size  Location     Type
  3681 ;;		None
  3682 ;; Return value:  Size  Location     Type
  3683 ;;                  1    wreg      void 
  3684 ;; Registers used:
  3685 ;;		wreg, status,2, status,0, pclath, cstack
  3686 ;; Tracked objects:
  3687 ;;		On entry : 0/0
  3688 ;;		On exit  : 0/0
  3689 ;;		Unchanged: 0/0
  3690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3691 ;;      Params:         2       0       0       0       0
  3692 ;;      Locals:         0       0       0       0       0
  3693 ;;      Temps:          0       0       0       0       0
  3694 ;;      Totals:         2       0       0       0       0
  3695 ;;Total ram usage:        2 bytes
  3696 ;; Hardware stack levels used: 1
  3697 ;; Hardware stack levels required when called: 2
  3698 ;; This function calls:
  3699 ;;		_I2C_Master_Wait
  3700 ;; This function is called by:
  3701 ;;		_main
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705     06CB                     _I2C_Master_Write:	
  3706                           ;psect for function _I2C_Master_Write
  3707                           
  3708     06CB                     l1537:	
  3709                           ;incstack = 0
  3710                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3711                           
  3712                           
  3713                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3714     06CB  120A  118A  26A8  120A  118A  	fcall	_I2C_Master_Wait
  3715     06D0                     l1539:
  3716                           
  3717                           ;I2C.c: 68:     SSPBUF = d;
  3718     06D0  0872               	movf	I2C_Master_Write@d,w
  3719     06D1  1283               	bcf	3,5	;RP0=0, select bank0
  3720     06D2  1303               	bcf	3,6	;RP1=0, select bank0
  3721     06D3  0093               	movwf	19	;volatile
  3722     06D4                     l157:
  3723     06D4  0008               	return
  3724     06D5                     __end_of_I2C_Master_Write:
  3725                           
  3726                           	psect	text20
  3727     06D5                     __ptext20:	
  3728 ;; *************** function _I2C_Master_Stop *****************
  3729 ;; Defined at:
  3730 ;;		line 55 in file "I2C.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;		None
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;		None
  3735 ;; Return value:  Size  Location     Type
  3736 ;;                  1    wreg      void 
  3737 ;; Registers used:
  3738 ;;		wreg, status,2, status,0, pclath, cstack
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3744 ;;      Params:         0       0       0       0       0
  3745 ;;      Locals:         0       0       0       0       0
  3746 ;;      Temps:          0       0       0       0       0
  3747 ;;      Totals:         0       0       0       0       0
  3748 ;;Total ram usage:        0 bytes
  3749 ;; Hardware stack levels used: 1
  3750 ;; Hardware stack levels required when called: 2
  3751 ;; This function calls:
  3752 ;;		_I2C_Master_Wait
  3753 ;; This function is called by:
  3754 ;;		_main
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758     06D5                     _I2C_Master_Stop:	
  3759                           ;psect for function _I2C_Master_Stop
  3760                           
  3761     06D5                     l1541:	
  3762                           ;incstack = 0
  3763                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3764                           
  3765                           
  3766                           ;I2C.c: 57:     I2C_Master_Wait();
  3767     06D5  120A  118A  26A8  120A  118A  	fcall	_I2C_Master_Wait
  3768     06DA                     l1543:
  3769                           
  3770                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3771     06DA  1683               	bsf	3,5	;RP0=1, select bank1
  3772     06DB  1303               	bcf	3,6	;RP1=0, select bank1
  3773     06DC  1511               	bsf	17,2	;volatile
  3774     06DD                     l154:
  3775     06DD  0008               	return
  3776     06DE                     __end_of_I2C_Master_Stop:
  3777                           
  3778                           	psect	text21
  3779     06DE                     __ptext21:	
  3780 ;; *************** function _I2C_Master_Start *****************
  3781 ;; Defined at:
  3782 ;;		line 39 in file "I2C.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;		None
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;		None
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  1    wreg      void 
  3789 ;; Registers used:
  3790 ;;		wreg, status,2, status,0, pclath, cstack
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3796 ;;      Params:         0       0       0       0       0
  3797 ;;      Locals:         0       0       0       0       0
  3798 ;;      Temps:          0       0       0       0       0
  3799 ;;      Totals:         0       0       0       0       0
  3800 ;;Total ram usage:        0 bytes
  3801 ;; Hardware stack levels used: 1
  3802 ;; Hardware stack levels required when called: 2
  3803 ;; This function calls:
  3804 ;;		_I2C_Master_Wait
  3805 ;; This function is called by:
  3806 ;;		_main
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810     06DE                     _I2C_Master_Start:	
  3811                           ;psect for function _I2C_Master_Start
  3812                           
  3813     06DE                     l1533:	
  3814                           ;incstack = 0
  3815                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3816                           
  3817                           
  3818                           ;I2C.c: 41:     I2C_Master_Wait();
  3819     06DE  120A  118A  26A8  120A  118A  	fcall	_I2C_Master_Wait
  3820     06E3                     l1535:
  3821                           
  3822                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3823     06E3  1683               	bsf	3,5	;RP0=1, select bank1
  3824     06E4  1303               	bcf	3,6	;RP1=0, select bank1
  3825     06E5  1411               	bsf	17,0	;volatile
  3826     06E6                     l148:
  3827     06E6  0008               	return
  3828     06E7                     __end_of_I2C_Master_Start:
  3829                           
  3830                           	psect	text22
  3831     06E7                     __ptext22:	
  3832 ;; *************** function _I2C_Master_RepeatedStart *****************
  3833 ;; Defined at:
  3834 ;;		line 47 in file "I2C.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;		None
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;		None
  3839 ;; Return value:  Size  Location     Type
  3840 ;;                  1    wreg      void 
  3841 ;; Registers used:
  3842 ;;		wreg, status,2, status,0, pclath, cstack
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3848 ;;      Params:         0       0       0       0       0
  3849 ;;      Locals:         0       0       0       0       0
  3850 ;;      Temps:          0       0       0       0       0
  3851 ;;      Totals:         0       0       0       0       0
  3852 ;;Total ram usage:        0 bytes
  3853 ;; Hardware stack levels used: 1
  3854 ;; Hardware stack levels required when called: 2
  3855 ;; This function calls:
  3856 ;;		_I2C_Master_Wait
  3857 ;; This function is called by:
  3858 ;;		_main
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861                           
  3862     06E7                     _I2C_Master_RepeatedStart:	
  3863                           ;psect for function _I2C_Master_RepeatedStart
  3864                           
  3865     06E7                     l1545:	
  3866                           ;incstack = 0
  3867                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3868                           
  3869                           
  3870                           ;I2C.c: 49:     I2C_Master_Wait();
  3871     06E7  120A  118A  26A8  120A  118A  	fcall	_I2C_Master_Wait
  3872     06EC                     l1547:
  3873                           
  3874                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  3875     06EC  1683               	bsf	3,5	;RP0=1, select bank1
  3876     06ED  1303               	bcf	3,6	;RP1=0, select bank1
  3877     06EE  1491               	bsf	17,1	;volatile
  3878     06EF                     l151:
  3879     06EF  0008               	return
  3880     06F0                     __end_of_I2C_Master_RepeatedStart:
  3881                           
  3882                           	psect	text23
  3883     054E                     __ptext23:	
  3884 ;; *************** function _I2C_Master_Read *****************
  3885 ;; Defined at:
  3886 ;;		line 74 in file "I2C.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;  a               2    2[COMMON] unsigned short 
  3889 ;; Auto vars:     Size  Location     Type
  3890 ;;  temp            2    6[COMMON] unsigned short 
  3891 ;; Return value:  Size  Location     Type
  3892 ;;                  2    2[COMMON] unsigned short 
  3893 ;; Registers used:
  3894 ;;		wreg, status,2, status,0, pclath, cstack
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3900 ;;      Params:         2       0       0       0       0
  3901 ;;      Locals:         2       0       0       0       0
  3902 ;;      Temps:          2       0       0       0       0
  3903 ;;      Totals:         6       0       0       0       0
  3904 ;;Total ram usage:        6 bytes
  3905 ;; Hardware stack levels used: 1
  3906 ;; Hardware stack levels required when called: 2
  3907 ;; This function calls:
  3908 ;;		_I2C_Master_Wait
  3909 ;; This function is called by:
  3910 ;;		_main
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           
  3914     054E                     _I2C_Master_Read:	
  3915                           ;psect for function _I2C_Master_Read
  3916                           
  3917     054E                     l1549:	
  3918                           ;incstack = 0
  3919                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3920                           
  3921                           
  3922                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3923     054E  120A  118A  26A8  120A  118A  	fcall	_I2C_Master_Wait
  3924     0553                     l1551:
  3925                           
  3926                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3927     0553  1683               	bsf	3,5	;RP0=1, select bank1
  3928     0554  1303               	bcf	3,6	;RP1=0, select bank1
  3929     0555  1591               	bsf	17,3	;volatile
  3930                           
  3931                           ;I2C.c: 79:     I2C_Master_Wait();
  3932     0556  120A  118A  26A8  120A  118A  	fcall	_I2C_Master_Wait
  3933     055B                     l1553:
  3934                           
  3935                           ;I2C.c: 80:     temp = SSPBUF;
  3936     055B  1283               	bcf	3,5	;RP0=0, select bank0
  3937     055C  1303               	bcf	3,6	;RP1=0, select bank0
  3938     055D  0813               	movf	19,w	;volatile
  3939     055E  00F4               	movwf	??_I2C_Master_Read
  3940     055F  01F5               	clrf	??_I2C_Master_Read+1
  3941     0560  0874               	movf	??_I2C_Master_Read,w
  3942     0561  00F6               	movwf	I2C_Master_Read@temp
  3943     0562  0875               	movf	??_I2C_Master_Read+1,w
  3944     0563  00F7               	movwf	I2C_Master_Read@temp+1
  3945     0564                     l1555:
  3946                           
  3947                           ;I2C.c: 81:     I2C_Master_Wait();
  3948     0564  120A  118A  26A8  120A  118A  	fcall	_I2C_Master_Wait
  3949     0569                     l1557:
  3950                           
  3951                           ;I2C.c: 82:     if(a == 1){
  3952     0569  0372               	decf	I2C_Master_Read@a,w
  3953     056A  0473               	iorwf	I2C_Master_Read@a+1,w
  3954     056B  1D03               	btfss	3,2
  3955     056C  2D6E               	goto	u1061
  3956     056D  2D6F               	goto	u1060
  3957     056E                     u1061:
  3958     056E  2D73               	goto	l160
  3959     056F                     u1060:
  3960     056F                     l1559:
  3961                           
  3962                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3963     056F  1683               	bsf	3,5	;RP0=1, select bank1
  3964     0570  1303               	bcf	3,6	;RP1=0, select bank1
  3965     0571  1291               	bcf	17,5	;volatile
  3966                           
  3967                           ;I2C.c: 84:     }else{
  3968     0572  2D76               	goto	l161
  3969     0573                     l160:
  3970                           
  3971                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3972     0573  1683               	bsf	3,5	;RP0=1, select bank1
  3973     0574  1303               	bcf	3,6	;RP1=0, select bank1
  3974     0575  1691               	bsf	17,5	;volatile
  3975     0576                     l161:	
  3976                           ;I2C.c: 86:     }
  3977                           
  3978                           
  3979                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3980     0576  1611               	bsf	17,4	;volatile
  3981     0577                     l1561:
  3982                           
  3983                           ;I2C.c: 88:     return temp;
  3984     0577  0877               	movf	I2C_Master_Read@temp+1,w
  3985     0578  00F3               	movwf	?_I2C_Master_Read+1
  3986     0579  0876               	movf	I2C_Master_Read@temp,w
  3987     057A  00F2               	movwf	?_I2C_Master_Read
  3988     057B                     l162:
  3989     057B  0008               	return
  3990     057C                     __end_of_I2C_Master_Read:
  3991                           
  3992                           	psect	text24
  3993     06A8                     __ptext24:	
  3994 ;; *************** function _I2C_Master_Wait *****************
  3995 ;; Defined at:
  3996 ;;		line 32 in file "I2C.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;		None
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;		None
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  1    wreg      void 
  4003 ;; Registers used:
  4004 ;;		wreg, status,2
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4010 ;;      Params:         0       0       0       0       0
  4011 ;;      Locals:         0       0       0       0       0
  4012 ;;      Temps:          0       0       0       0       0
  4013 ;;      Totals:         0       0       0       0       0
  4014 ;;Total ram usage:        0 bytes
  4015 ;; Hardware stack levels used: 1
  4016 ;; Hardware stack levels required when called: 1
  4017 ;; This function calls:
  4018 ;;		Nothing
  4019 ;; This function is called by:
  4020 ;;		_I2C_Master_Start
  4021 ;;		_I2C_Master_RepeatedStart
  4022 ;;		_I2C_Master_Stop
  4023 ;;		_I2C_Master_Write
  4024 ;;		_I2C_Master_Read
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028     06A8                     _I2C_Master_Wait:	
  4029                           ;psect for function _I2C_Master_Wait
  4030                           
  4031     06A8                     l1389:	
  4032                           ;incstack = 0
  4033                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4034                           
  4035     06A8                     l142:	
  4036                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4037                           
  4038     06A8  1683               	bsf	3,5	;RP0=1, select bank1
  4039     06A9  1303               	bcf	3,6	;RP1=0, select bank1
  4040     06AA  1914               	btfsc	20,2	;volatile
  4041     06AB  2EAD               	goto	u721
  4042     06AC  2EAE               	goto	u720
  4043     06AD                     u721:
  4044     06AD  2EA8               	goto	l142
  4045     06AE                     u720:
  4046     06AE                     l1391:
  4047     06AE  0811               	movf	17,w	;volatile
  4048     06AF  391F               	andlw	31
  4049     06B0  1D03               	btfss	3,2
  4050     06B1  2EB3               	goto	u731
  4051     06B2  2EB4               	goto	u730
  4052     06B3                     u731:
  4053     06B3  2EA8               	goto	l142
  4054     06B4                     u730:
  4055     06B4                     l145:
  4056     06B4  0008               	return
  4057     06B5                     __end_of_I2C_Master_Wait:
  4058                           
  4059                           	psect	text25
  4060     06F8                     __ptext25:	
  4061 ;; *************** function _isr *****************
  4062 ;; Defined at:
  4063 ;;		line 37 in file "Masterpic.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;		None
  4066 ;; Auto vars:     Size  Location     Type
  4067 ;;		None
  4068 ;; Return value:  Size  Location     Type
  4069 ;;                  1    wreg      void 
  4070 ;; Registers used:
  4071 ;;		None
  4072 ;; Tracked objects:
  4073 ;;		On entry : 0/0
  4074 ;;		On exit  : 0/0
  4075 ;;		Unchanged: 0/0
  4076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4077 ;;      Params:         0       0       0       0       0
  4078 ;;      Locals:         0       0       0       0       0
  4079 ;;      Temps:          2       0       0       0       0
  4080 ;;      Totals:         2       0       0       0       0
  4081 ;;Total ram usage:        2 bytes
  4082 ;; Hardware stack levels used: 1
  4083 ;; This function calls:
  4084 ;;		Nothing
  4085 ;; This function is called by:
  4086 ;;		Interrupt level 1
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089                           
  4090     06F8                     _isr:	
  4091                           ;psect for function _isr
  4092                           
  4093     06F8                     i1l1155:
  4094                           
  4095                           ;Masterpic.c: 39:     __nop();
  4096     06F8  0000               	nop
  4097     06F9                     i1l79:
  4098     06F9  0871               	movf	??_isr+1,w
  4099     06FA  008A               	movwf	10
  4100     06FB  0E70               	swapf	??_isr,w
  4101     06FC  0083               	movwf	3
  4102     06FD  0EFE               	swapf	btemp,f
  4103     06FE  0E7E               	swapf	btemp,w
  4104     06FF  0009               	retfie
  4105     0700                     __end_of_isr:
  4106     007E                     btemp	set	126	;btemp
  4107     007E                     wtemp0	set	126
  4108                           
  4109                           	psect	intentry
  4110     0004                     __pintentry:	
  4111                           ;incstack = 0
  4112                           ; Regs used in _isr: []
  4113                           
  4114     0004                     interrupt_function:
  4115     007E                     saved_w	set	btemp
  4116     0004  00FE               	movwf	btemp
  4117     0005  0E03               	swapf	3,w
  4118     0006  00F0               	movwf	??_isr
  4119     0007  080A               	movf	10,w
  4120     0008  00F1               	movwf	??_isr+1
  4121     0009  120A  118A  2EF8   	ljmp	_isr
  4122                           
  4123                           	psect	idloc
  4124                           
  4125                           ;Config register IDLOC0 @ 0x2000
  4126                           ;	unspecified, using default values
  4127     2000                     	org	8192
  4128     2000  3FFF               	dw	16383
  4129                           
  4130                           ;Config register IDLOC1 @ 0x2001
  4131                           ;	unspecified, using default values
  4132     2001                     	org	8193
  4133     2001  3FFF               	dw	16383
  4134                           
  4135                           ;Config register IDLOC2 @ 0x2002
  4136                           ;	unspecified, using default values
  4137     2002                     	org	8194
  4138     2002  3FFF               	dw	16383
  4139                           
  4140                           ;Config register IDLOC3 @ 0x2003
  4141                           ;	unspecified, using default values
  4142     2003                     	org	8195
  4143     2003  3FFF               	dw	16383
  4144                           
  4145                           	psect	config
  4146                           
  4147                           ;Config register CONFIG1 @ 0x2007
  4148                           ;	Oscillator Selection bits
  4149                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  4150                           ;	Watchdog Timer Enable bit
  4151                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4152                           ;	Power-up Timer Enable bit
  4153                           ;	PWRTE = OFF, PWRT disabled
  4154                           ;	RE3/MCLR pin function select bit
  4155                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4156                           ;	Code Protection bit
  4157                           ;	CP = OFF, Program memory code protection is disabled
  4158                           ;	Data Code Protection bit
  4159                           ;	CPD = OFF, Data memory code protection is disabled
  4160                           ;	Brown Out Reset Selection bits
  4161                           ;	BOREN = OFF, BOR disabled
  4162                           ;	Internal External Switchover bit
  4163                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4164                           ;	Fail-Safe Clock Monitor Enabled bit
  4165                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4166                           ;	Low Voltage Programming Enable bit
  4167                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  4168                           ;	In-Circuit Debugger Mode bit
  4169                           ;	DEBUG = 0x1, unprogrammed default
  4170     2007                     	org	8199
  4171     2007  38D5               	dw	14549
  4172                           
  4173                           ;Config register CONFIG2 @ 0x2008
  4174                           ;	Brown-out Reset Selection bit
  4175                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4176                           ;	Flash Program Memory Self Write Enable bits
  4177                           ;	WRT = OFF, Write protection off
  4178     2008                     	org	8200
  4179     2008  3FFF               	dw	16383

Data Sizes:
    Strings     3
    Constant    15
    Data        32
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     20      80
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_Print@data	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[3]), STR_1(CODE[3]), datos(BANK0[20]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> RTC_display@Time(BANK0[15]), 


Critical Paths under _main in COMMON

    _main->_decimal_to_bcd
    _decimal_to_bcd->___awmod
    _UART_Print->_UART_PutC
    _UART_Init->___lldiv
    _RTC_display->___awmod
    _RTC_display->_bcd_to_decimal
    _bcd_to_decimal->___bmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_UART_Init
    _decimal_to_bcd->___awdiv
    _UART_Init->___lldiv
    _RTC_display->_Lcd_Set_Cursor
    _RTC_display->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0   11314
                                             16 BANK0      4     4      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                        _RTC_display
                    _UART_Data_Ready
                          _UART_GetC
                          _UART_Init
                         _UART_Print
                          _UART_PutC
                     _decimal_to_bcd
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _decimal_to_bcd                                       6     6      0    3703
                                              9 COMMON     1     1      0
                                              4 BANK0      5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _UART_Print                                           4     2      2     340
                                              3 COMMON     4     2      2
                          _UART_PutC
 ---------------------------------------------------------------------------------
 (1) _UART_PutC                                            1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           10     6      4    1100
                                              6 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     781
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _UART_GetC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RTC_display                                          2     2      0    4908
                                              4 BANK0      2     2      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                     _bcd_to_decimal
 ---------------------------------------------------------------------------------
 (2) _bcd_to_decimal                                       3     3      0     212
                                              6 COMMON     3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1632
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    2009
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     4     4      0     420
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     254
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1     635
                                              6 COMMON     2     1      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     155
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    1010
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     197
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _RTC_display
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___awdiv
     ___awmod
     _bcd_to_decimal
       ___bmul
   _UART_Data_Ready
   _UART_GetC
   _UART_Init
     ___lldiv
   _UART_Print
     _UART_PutC
   _UART_PutC
   _decimal_to_bcd
     ___awdiv
     ___awmod
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     14      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5C      12        0.0%
ABS                  0      0      5C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Aug 30 11:59:06 2023

                               _i 0044                                 pc 0002                    ___bmul@product 0074  
                              l82 065F                                l92 02D0                                l85 054D  
                    ___awdiv@sign 005D                                fsr 0004                    _decimal_to_bcd 051C  
                     _RTC_display 0192                               l110 0699                               l202 04E6  
                             l142 06A8                               l214 05CB                               l151 06EF  
                             l160 0573                               l208 051B                               l145 06B4  
                             l161 0576                               l162 057B                               l154 06DD  
                             l148 06E6                               l157 06D4                               l261 06A7  
                             l245 035B                               l190 060F                               l182 05F7  
                             l254 06CA                               l246 036C                               l183 05FA  
                             l247 0370                               l184 0600                               l512 03D9  
                             l264 06B6                               l185 0601                               l193 0649  
                             l257 069A                               l273 05A6                               l186 0607  
                             l187 0608                               l259 06A0                               l267 06C0  
                             l188 060E                               l525 049A                               l385 0674  
                             l395 0441                               _GIE 005F                               _RD3 0043  
                             _RD4 0044                               _RD5 0045                               _RD6 0046  
                             _RD7 0047                               u630 0666                               u710 06BC  
                             u631 0665                               u711 06BB                               u720 06AE  
                             u640 0673                               u721 06AD                               u641 0672  
                             u730 06B4                               u731 06B3                               u910 0447  
                             u911 0446                               u655 0653                               u920 0452  
                             u921 0451                               u930 045D                               u931 045C  
                             u950 046F                               u951 046E                               u960 0479  
                             u961 0478                               u945 0461                               u980 048C  
                             u981 048B                               u965 0475                               u990 0491  
                             u991 0490                               u975 0480                               _isr 06F8  
                             fsr0 0004                               indf 0000                      ___awmod@sign 0078  
                            l1341 0662                              l1343 0666                              l1511 0693  
                            l1345 066A                              l1353 064B                              l1513 0694  
                            l1347 066C                              l1339 0661                              l1515 0698  
                            l1507 0688                              l1533 06DE                              l1541 06D5  
                            l1461 0442                              l1349 0673                              l1509 0692  
                            l1391 06AE                              l1551 0553                              l1535 06E3  
                            l1543 06DA                              l1711 0605                              l1471 0452  
                            l1463 0443                              l1561 0577                              l1553 055B  
                            l1545 06E7                              l1537 06CB                              l1713 060C  
                            l1705 05EF                              l1721 063D                              l1801 0378  
                            l1481 046B                              l1473 0457                              l1465 0447  
                            l1385 06B6                              l1555 0564                              l1547 06EC  
                            l1539 06D0                              l1707 05F3                              l1723 0646  
                            l1715 0631                              l1731 04FF                              l1811 038C  
                            l1803 037D                              l1483 046F                              l1475 045D  
                            l1491 048C                              l1467 044C                              l1387 06BC  
                            l1571 0593                              l1389 06A8                              l1557 0569  
                            l1549 054E                              l1709 05FE                              l1717 0634  
                            l1741 0513                              l1733 0502                              l1725 04E8  
                            l1821 03A2                              l1813 038E                              l1805 037F  
                            l1493 0491                              l1485 0479                              l1477 0460  
                            l1469 044E                              l1573 06C1                              l1581 069A  
                            l1565 057C                              l1901 00C7                              l1559 056F  
                            l1719 063A                              l1751 04B3                              l1743 0518  
                            l1735 0507                              l1727 04EE                              l1831 03C5  
                            l1823 03A6                              l1815 0394                              l1807 0383  
                            l1495 0496                              l1487 047F                              l1479 0467  
                            l1575 06C7                              l1583 06A4                              l1567 057E  
                            l1911 00EB                              l1903 00D0                              l1761 04D8  
                            l1753 04B9                              l1745 049E                              l1737 050A  
                            l1729 04F1                              l1825 03B7                              l1817 0397  
                            l1833 03CB                              l1809 0388                              l1489 0486  
                            l1577 06C9                              l1585 06A6                              l1569 058F  
                            l1841 051D                              l1921 0114                              l1913 00F3  
                            l1905 00D8                              l1763 04DE                              l1747 04A3  
                            l1755 04C2                              l1739 0510                              l1771 05C0  
                            l1835 03D0                              l1827 03BD                              l1819 039E  
                            l1851 0303                              l1931 0140                              l1923 0119  
                            l1915 00F8                              l1907 00DD                              l1757 04C8  
                            l1749 04B0                              l1765 05AA                              l1837 03D5  
                            l1829 03BE                              l1845 0192                              l1781 0400  
                            l1773 03DA                              l1861 0355                              l1853 0307  
                            l1941 0156                              l1933 0144                              l1925 0122  
                            l1917 0101                              l1909 00E2                              l1759 04D5  
                            l1767 05AD                              l1847 02CA                              l1791 0433  
                            l1783 0409                              l1775 03EC                              l1863 0364  
                            l1855 0309                              l1951 0188                              l1943 015F  
                            l1935 0146                              l1927 012C                              l1919 010B  
                            l1871 0043                              l1769 05B8                              l1785 041B  
                            l1777 03EF                              l1793 0439                              l1857 0316  
                            l1849 02D1                              l1945 0168                              l1937 0148  
                            l1929 0131                              l1881 006E                              l1873 0052  
                            l1865 002B                              l1787 0429                              l1779 03FC  
                            l1859 0348                              l1947 0177                              l1939 014D  
                            l1891 009E                              l1883 0077                              l1875 0059  
                            l1867 0030                              l1797 0371                              l1789 042A  
                            l1949 0180                              l1893 00A7                              l1885 0085  
                            l1877 0060                              l1869 0034                              l1799 0374  
                            l1895 00AF                              l1887 008A                              l1879 0065  
                            l1897 00BD                              l1889 0099                              l1899 00C2  
                            ?_isr 0070                              STR_1 05EB                              STR_2 05EB  
                            _CREN 00C4                              u1100 06A4                              u1101 06A3  
                            u1200 04C8                              u1201 04C7                              u1130 05F3  
                            u1131 05F2                              u1060 056F                              u1140 05FE  
                            u1220 05CB                              u1300 0378                              u1061 056E  
                            u1141 05FD                              u1221 05CA                              u1301 0377  
                            u1150 0605                              u1310 0383                              u1230 03EC  
                            u1070 05A6                              u1151 0604                              u1215 04CE  
                            u1311 0382                              u1231 03EB                              u1071 05A5  
                            u1160 060C                              u1320 0394                              u1080 06C7  
                            u1161 060B                              u1321 0393                              u1081 06C6  
                            u1090 06A0                              u1250 0400                              u1410 02E1  
                            u1091 069F                              u1251 03FF                              u1180 04A3  
                            u1340 03A6                              u1420 0307                              u1181 04A2  
                            u1341 03A5                              u1245 03F1                              u1421 0306  
                            u1405 0534                              u1270 041B                              u1430 0316  
                            u1175 04F4                              u1335 0398                              u1271 041A  
                            u1431 0315                              u1415 02DC                              u1360 03B7  
                            u1440 0326                              u1361 03B6                              u1265 0402  
                            u1290 0439                              u1450 0355                              u1195 04A9  
                            u1355 03A7                              u1291 0438                              u1275 0417  
                            u1451 0354                              u1435 0312                              u1507 0139  
                            u1380 03CB                              u1460 0180                              u1381 03CA  
                            u1365 03B3                              u1285 042B                              u1445 0321  
                            u1461 017F                              u1517 0170                              u1390 03D0  
                            u1527 0504                              u1391 03CF                              u1375 03BF  
                            u1455 0351                              u1537 0515                              u1547 0641  
                            u1487 004B                              u1497 0092                              _PEIE 005E  
                            _RCIF 0065                              i1l79 06F9                              _OERR 00C1  
                            _RPML 0046                              _RPMR 0047                              _TRMT 04C1  
               ?_Lcd_Write_String 0070  __end_of_I2C_Master_RepeatedStart 06F0                              _main 002B  
                            _hour 0043                              _year 0040                              btemp 007E  
                            start 000C                ??_Lcd_Write_String 0077                   __end_of_Lcd_Cmd 064A  
               ___bmul@multiplier 0075            __end_of_decimal_to_bcd 054E                             ??_isr 0070  
                ?_I2C_Master_Read 0072                  ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070  
                           ?_main 0070                   __end_of___awdiv 03DA                   __end_of___awmod 049B  
                           _ANSEL 0188                   __end_of___lldiv 0442                   ___awdiv@divisor 0072  
                 ___awdiv@counter 005C                             _RCREG 001A                             _RCSTA 0018  
                           _SPBRG 0099                             _PORTD 0008                             _TRISD 0088  
                           _SSPIE 0463                             _SSPIF 0063                             _TXREG 0019  
                           _TXSTA 0098                       ?_UART_Print 0073                             _datos 0048  
                           _m_day 0042                             _month 0041                   __end_of_message 05EB  
                           _setup 0688                             main@c 006F                             pclath 000A  
                           status 0003                             wtemp0 007E                  __end_of_Lcd_Port 0610  
                 __initialization 000F                      __end_of_main 0192                   ?_decimal_to_bcd 0070  
                          ??_main 006C                 ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0072  
              ??_I2C_Master_Start 0072                ??_I2C_Master_Write 0074                  ___awdiv@dividend 0074  
                          ?_setup 0070                            _ANSELH 0189                            i1l1155 06F8  
                          _OSCCON 008F                         ??_Lcd_Cmd 0073                            _SSPADD 0093  
                          _TRISC3 043B                            _TRISC4 043C                            _SSPCON 0014  
                          _SSPBUF 0013          _I2C_Master_RepeatedStart 06E7                 __end_of_UART_GetC 06A8  
               __end_of_UART_Init 0371                 __end_of_UART_PutC 06C1                            ___bmul 0660  
                       ??___awdiv 0076                         ??___awmod 0076                         ??___lldiv 005C  
                ___awdiv@quotient 005E                            _minute 007A                            _second 007B  
                 ___awmod@divisor 0072                   ___awmod@counter 0077                            saved_w 007E  
                 Lcd_Set_Cursor@a 005C                   Lcd_Set_Cursor@b 0076                   Lcd_Set_Cursor@y 005E  
                 Lcd_Set_Cursor@z 005D           __end_of__initialization 0027               ___bmul@multiplicand 0072  
                  __pcstackCOMMON 0070                      __pidataBANK0 0610                     __end_of_setup 069A  
                    ?_RTC_display 0070                    _Lcd_Set_Cursor 049B                         ?_Lcd_Port 0070  
                         ??_setup 0072                        __pbssBANK0 0040                        __pmaintext 002B  
                         ?___bmul 0072                        __pintentry 0004            __end_of_Lcd_Set_Cursor 04E7  
                    ??_UART_Print 0075                        ??_Lcd_Port 0072                           _SSPCON2 0091  
                         _SSPSTAT 0094                        __stringtab 05CC                    _Lcd_Write_Char 04E7  
                         _Lcd_Cmd 0630                  ??_decimal_to_bcd 0060                __end_of_UART_Print 05A7  
                         ___awdiv 0371                           ___awmod 0442                           ___lldiv 03DA  
                 ?_Lcd_Set_Cursor 0076                           __ptext1 0688                           __ptext2 051C  
                         __ptext3 057C                           __ptext4 06B5                           __ptext5 02D1  
                         __ptext6 03DA                           __ptext7 069A                           __ptext8 06C1  
                         __ptext9 0192                           _message 05DC                  ___awmod@dividend 0074  
                     UART_Print@i 0076                    UART_Print@data 0073                           clrloop0 06F1  
          __end_of_Lcd_Write_Char 051C              end_of_initialization 0027        ??_I2C_Master_RepeatedStart 0072  
                 ___lldiv@divisor 0072                   ___lldiv@counter 0061                         _RCSTAbits 0018  
                I2C_Master_Read@a 0072                         Lcd_Port@a 0072                 ??_UART_Data_Ready 0072  
                       _UART_GetC 069A                         _UART_Init 02D1                         _UART_PutC 06B5  
                       _PORTDbits 0008                UART_Init@baud_rate 0062                         _TRISCbits 0087  
                 ?_Lcd_Write_Char 0070                 Lcd_Write_String@a 005C                 Lcd_Write_String@i 005D  
                  __end_of___bmul 0675                        ?_UART_GetC 0070                  _Lcd_Write_String 05A7  
                      ?_UART_Init 0062                        ?_UART_PutC 0070               start_initialization 000F  
                  _bcd_to_decimal 064A                       __end_of_isr 0700                 ??_I2C_Master_Read 0074  
               ??_I2C_Master_Wait 0072                 ??_I2C_Master_Stop 0072                          ??___bmul 0073  
                      init_fetch0 0675                       __pdataBANK0 0020                   Lcd_Write_Char@a 0076  
                 Lcd_Write_Char@y 0075            __end_of_bcd_to_decimal 0660                       __pbssCOMMON 007A  
                       ___latbits 0002                     __pcstackBANK0 005C                         _aceleracX 0045  
                        ?_Lcd_Cmd 0070                  _I2C_Master_Start 06DE                  _I2C_Master_Write 06CB  
                ??_Lcd_Set_Cursor 0077                          ?___awdiv 0072                          ?___awmod 0072  
                        ?___lldiv 0072                       ??_UART_GetC 0072                       ??_UART_Init 0066  
                     ??_UART_PutC 0072                         __pstrings 05CC                   ?_bcd_to_decimal 0070  
                   UART_PutC@data 0072                        UART_Init@n 006A              bcd_to_decimal@number 0078  
               interrupt_function 0004                   RTC_display@Date 0020                   _UART_Data_Ready 06C1  
                 RTC_display@Time 0031                         clear_ram0 06F0                          Lcd_Cmd@a 0075  
                        _PIR1bits 000C                       __stringbase 05DB                  ??_Lcd_Write_Char 0073  
                        _Lcd_Port 05EE               I2C_Master_Read@temp 0076          __end_of_Lcd_Write_String 05CC  
       ?_I2C_Master_RepeatedStart 0070                     ??_RTC_display 0060                __end_of__stringtab 05DC  
                 _I2C_Master_Read 054E                   _I2C_Master_Wait 06A8                   _I2C_Master_Stop 06D5  
                        __ptext10 064A                          __ptext11 0660                          __ptext20 06D5  
                        __ptext12 0442                          __ptext21 06DE                          __ptext13 0371  
                        __ptext22 06E7                          __ptext14 05A7                          __ptext23 054E  
                        __ptext15 04E7                          __ptext24 06A8                          __ptext16 049B  
                        __ptext25 06F8                          __ptext17 0630                          __ptext18 05EE  
                        __ptext19 06CB           __end_of_UART_Data_Ready 06CB              decimal_to_bcd@number 0079  
        __end_of_I2C_Master_Start 06E7          __end_of_I2C_Master_Write 06D5                        _INTCONbits 000B  
                        init_ram0 0679               __end_of_RTC_display 02D1                Lcd_Write_Char@temp 0074  
                        intlevel1 0000                  ___lldiv@dividend 0076                         stringcode 05D6  
                      _OSCCONbits 008F                  ??_bcd_to_decimal 0076           __end_of_I2C_Master_Read 057C  
         __end_of_I2C_Master_Wait 06B5           __end_of_I2C_Master_Stop 06DE                Lcd_Set_Cursor@temp 005F  
                ___lldiv@quotient 005D                 I2C_Master_Write@d 0072                          stringdir 05D6  
                        stringtab 05CC                        _UART_Print 057C                       _SSPCON2bits 0091  
                ?_UART_Data_Ready 0070  
