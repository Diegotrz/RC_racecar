

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Aug 25 09:20:43 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31     0000                     
    32                           ; Generated 09/02/2023 GMT
    33                           ; 
    34                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66     0000                     	;# 
    67     0001                     	;# 
    68     0002                     	;# 
    69     0003                     	;# 
    70     0004                     	;# 
    71     0005                     	;# 
    72     0006                     	;# 
    73     0007                     	;# 
    74     0008                     	;# 
    75     0009                     	;# 
    76     000A                     	;# 
    77     000B                     	;# 
    78     000C                     	;# 
    79     000D                     	;# 
    80     000E                     	;# 
    81     000E                     	;# 
    82     000F                     	;# 
    83     0010                     	;# 
    84     0011                     	;# 
    85     0012                     	;# 
    86     0013                     	;# 
    87     0014                     	;# 
    88     0015                     	;# 
    89     0015                     	;# 
    90     0016                     	;# 
    91     0017                     	;# 
    92     0018                     	;# 
    93     0019                     	;# 
    94     001A                     	;# 
    95     001B                     	;# 
    96     001B                     	;# 
    97     001C                     	;# 
    98     001D                     	;# 
    99     001E                     	;# 
   100     001F                     	;# 
   101     0081                     	;# 
   102     0085                     	;# 
   103     0086                     	;# 
   104     0087                     	;# 
   105     0088                     	;# 
   106     0089                     	;# 
   107     008C                     	;# 
   108     008D                     	;# 
   109     008E                     	;# 
   110     008F                     	;# 
   111     0090                     	;# 
   112     0091                     	;# 
   113     0092                     	;# 
   114     0093                     	;# 
   115     0093                     	;# 
   116     0093                     	;# 
   117     0094                     	;# 
   118     0095                     	;# 
   119     0096                     	;# 
   120     0097                     	;# 
   121     0098                     	;# 
   122     0099                     	;# 
   123     009A                     	;# 
   124     009B                     	;# 
   125     009C                     	;# 
   126     009D                     	;# 
   127     009E                     	;# 
   128     009F                     	;# 
   129     0105                     	;# 
   130     0107                     	;# 
   131     0108                     	;# 
   132     0109                     	;# 
   133     010C                     	;# 
   134     010C                     	;# 
   135     010D                     	;# 
   136     010E                     	;# 
   137     010F                     	;# 
   138     0185                     	;# 
   139     0187                     	;# 
   140     0188                     	;# 
   141     0189                     	;# 
   142     018C                     	;# 
   143     018D                     	;# 
   144     0000                     	;# 
   145     0001                     	;# 
   146     0002                     	;# 
   147     0003                     	;# 
   148     0004                     	;# 
   149     0005                     	;# 
   150     0006                     	;# 
   151     0007                     	;# 
   152     0008                     	;# 
   153     0009                     	;# 
   154     000A                     	;# 
   155     000B                     	;# 
   156     000C                     	;# 
   157     000D                     	;# 
   158     000E                     	;# 
   159     000E                     	;# 
   160     000F                     	;# 
   161     0010                     	;# 
   162     0011                     	;# 
   163     0012                     	;# 
   164     0013                     	;# 
   165     0014                     	;# 
   166     0015                     	;# 
   167     0015                     	;# 
   168     0016                     	;# 
   169     0017                     	;# 
   170     0018                     	;# 
   171     0019                     	;# 
   172     001A                     	;# 
   173     001B                     	;# 
   174     001B                     	;# 
   175     001C                     	;# 
   176     001D                     	;# 
   177     001E                     	;# 
   178     001F                     	;# 
   179     0081                     	;# 
   180     0085                     	;# 
   181     0086                     	;# 
   182     0087                     	;# 
   183     0088                     	;# 
   184     0089                     	;# 
   185     008C                     	;# 
   186     008D                     	;# 
   187     008E                     	;# 
   188     008F                     	;# 
   189     0090                     	;# 
   190     0091                     	;# 
   191     0092                     	;# 
   192     0093                     	;# 
   193     0093                     	;# 
   194     0093                     	;# 
   195     0094                     	;# 
   196     0095                     	;# 
   197     0096                     	;# 
   198     0097                     	;# 
   199     0098                     	;# 
   200     0099                     	;# 
   201     009A                     	;# 
   202     009B                     	;# 
   203     009C                     	;# 
   204     009D                     	;# 
   205     009E                     	;# 
   206     009F                     	;# 
   207     0105                     	;# 
   208     0107                     	;# 
   209     0108                     	;# 
   210     0109                     	;# 
   211     010C                     	;# 
   212     010C                     	;# 
   213     010D                     	;# 
   214     010E                     	;# 
   215     010F                     	;# 
   216     0185                     	;# 
   217     0187                     	;# 
   218     0188                     	;# 
   219     0189                     	;# 
   220     018C                     	;# 
   221     018D                     	;# 
   222     0000                     	;# 
   223     0001                     	;# 
   224     0002                     	;# 
   225     0003                     	;# 
   226     0004                     	;# 
   227     0005                     	;# 
   228     0006                     	;# 
   229     0007                     	;# 
   230     0008                     	;# 
   231     0009                     	;# 
   232     000A                     	;# 
   233     000B                     	;# 
   234     000C                     	;# 
   235     000D                     	;# 
   236     000E                     	;# 
   237     000E                     	;# 
   238     000F                     	;# 
   239     0010                     	;# 
   240     0011                     	;# 
   241     0012                     	;# 
   242     0013                     	;# 
   243     0014                     	;# 
   244     0015                     	;# 
   245     0015                     	;# 
   246     0016                     	;# 
   247     0017                     	;# 
   248     0018                     	;# 
   249     0019                     	;# 
   250     001A                     	;# 
   251     001B                     	;# 
   252     001B                     	;# 
   253     001C                     	;# 
   254     001D                     	;# 
   255     001E                     	;# 
   256     001F                     	;# 
   257     0081                     	;# 
   258     0085                     	;# 
   259     0086                     	;# 
   260     0087                     	;# 
   261     0088                     	;# 
   262     0089                     	;# 
   263     008C                     	;# 
   264     008D                     	;# 
   265     008E                     	;# 
   266     008F                     	;# 
   267     0090                     	;# 
   268     0091                     	;# 
   269     0092                     	;# 
   270     0093                     	;# 
   271     0093                     	;# 
   272     0093                     	;# 
   273     0094                     	;# 
   274     0095                     	;# 
   275     0096                     	;# 
   276     0097                     	;# 
   277     0098                     	;# 
   278     0099                     	;# 
   279     009A                     	;# 
   280     009B                     	;# 
   281     009C                     	;# 
   282     009D                     	;# 
   283     009E                     	;# 
   284     009F                     	;# 
   285     0105                     	;# 
   286     0107                     	;# 
   287     0108                     	;# 
   288     0109                     	;# 
   289     010C                     	;# 
   290     010C                     	;# 
   291     010D                     	;# 
   292     010E                     	;# 
   293     010F                     	;# 
   294     0185                     	;# 
   295     0187                     	;# 
   296     0188                     	;# 
   297     0189                     	;# 
   298     018C                     	;# 
   299     018D                     	;# 
   300     0000                     	;# 
   301     0001                     	;# 
   302     0002                     	;# 
   303     0003                     	;# 
   304     0004                     	;# 
   305     0005                     	;# 
   306     0006                     	;# 
   307     0007                     	;# 
   308     0008                     	;# 
   309     0009                     	;# 
   310     000A                     	;# 
   311     000B                     	;# 
   312     000C                     	;# 
   313     000D                     	;# 
   314     000E                     	;# 
   315     000E                     	;# 
   316     000F                     	;# 
   317     0010                     	;# 
   318     0011                     	;# 
   319     0012                     	;# 
   320     0013                     	;# 
   321     0014                     	;# 
   322     0015                     	;# 
   323     0015                     	;# 
   324     0016                     	;# 
   325     0017                     	;# 
   326     0018                     	;# 
   327     0019                     	;# 
   328     001A                     	;# 
   329     001B                     	;# 
   330     001B                     	;# 
   331     001C                     	;# 
   332     001D                     	;# 
   333     001E                     	;# 
   334     001F                     	;# 
   335     0081                     	;# 
   336     0085                     	;# 
   337     0086                     	;# 
   338     0087                     	;# 
   339     0088                     	;# 
   340     0089                     	;# 
   341     008C                     	;# 
   342     008D                     	;# 
   343     008E                     	;# 
   344     008F                     	;# 
   345     0090                     	;# 
   346     0091                     	;# 
   347     0092                     	;# 
   348     0093                     	;# 
   349     0093                     	;# 
   350     0093                     	;# 
   351     0094                     	;# 
   352     0095                     	;# 
   353     0096                     	;# 
   354     0097                     	;# 
   355     0098                     	;# 
   356     0099                     	;# 
   357     009A                     	;# 
   358     009B                     	;# 
   359     009C                     	;# 
   360     009D                     	;# 
   361     009E                     	;# 
   362     009F                     	;# 
   363     0105                     	;# 
   364     0107                     	;# 
   365     0108                     	;# 
   366     0109                     	;# 
   367     010C                     	;# 
   368     010C                     	;# 
   369     010D                     	;# 
   370     010E                     	;# 
   371     010F                     	;# 
   372     0185                     	;# 
   373     0187                     	;# 
   374     0188                     	;# 
   375     0189                     	;# 
   376     018C                     	;# 
   377     018D                     	;# 
   378     0000                     	;# 
   379     0001                     	;# 
   380     0002                     	;# 
   381     0003                     	;# 
   382     0004                     	;# 
   383     0005                     	;# 
   384     0006                     	;# 
   385     0007                     	;# 
   386     0008                     	;# 
   387     0009                     	;# 
   388     000A                     	;# 
   389     000B                     	;# 
   390     000C                     	;# 
   391     000D                     	;# 
   392     000E                     	;# 
   393     000E                     	;# 
   394     000F                     	;# 
   395     0010                     	;# 
   396     0011                     	;# 
   397     0012                     	;# 
   398     0013                     	;# 
   399     0014                     	;# 
   400     0015                     	;# 
   401     0015                     	;# 
   402     0016                     	;# 
   403     0017                     	;# 
   404     0018                     	;# 
   405     0019                     	;# 
   406     001A                     	;# 
   407     001B                     	;# 
   408     001B                     	;# 
   409     001C                     	;# 
   410     001D                     	;# 
   411     001E                     	;# 
   412     001F                     	;# 
   413     0081                     	;# 
   414     0085                     	;# 
   415     0086                     	;# 
   416     0087                     	;# 
   417     0088                     	;# 
   418     0089                     	;# 
   419     008C                     	;# 
   420     008D                     	;# 
   421     008E                     	;# 
   422     008F                     	;# 
   423     0090                     	;# 
   424     0091                     	;# 
   425     0092                     	;# 
   426     0093                     	;# 
   427     0093                     	;# 
   428     0093                     	;# 
   429     0094                     	;# 
   430     0095                     	;# 
   431     0096                     	;# 
   432     0097                     	;# 
   433     0098                     	;# 
   434     0099                     	;# 
   435     009A                     	;# 
   436     009B                     	;# 
   437     009C                     	;# 
   438     009D                     	;# 
   439     009E                     	;# 
   440     009F                     	;# 
   441     0105                     	;# 
   442     0107                     	;# 
   443     0108                     	;# 
   444     0109                     	;# 
   445     010C                     	;# 
   446     010C                     	;# 
   447     010D                     	;# 
   448     010E                     	;# 
   449     010F                     	;# 
   450     0185                     	;# 
   451     0187                     	;# 
   452     0188                     	;# 
   453     0189                     	;# 
   454     018C                     	;# 
   455     018D                     	;# 
   456                           
   457                           	psect	idataBANK0
   458     03D5                     __pidataBANK0:
   459                           
   460                           ;initializer for _z
   461     03D5  3402               	retlw	2
   462                           
   463                           	psect	strings
   464     0003                     __pstrings:
   465     0003                     stringtab:
   466     0003                     __stringtab:
   467     0003                     stringcode:	
   468                           ;	String table - string pointers are 1 byte each
   469                           
   470     0003                     stringdir:
   471     0003  3000               	movlw	high stringdir
   472     0004  008A               	movwf	10
   473     0005  0804               	movf	4,w
   474     0006  0A84               	incf	4,f
   475     0007  0782               	addwf	2,f
   476     0008                     __stringbase:
   477     0008  3400               	retlw	0
   478     0009                     __end_of__stringtab:
   479     0009                     _message:
   480     0009  3432               	retlw	50
   481     000A  342E               	retlw	46
   482     000B  3445               	retlw	69
   483     000C  346E               	retlw	110
   484     000D  3476               	retlw	118
   485     000E  3469               	retlw	105
   486     000F  3461               	retlw	97
   487     0010  3472               	retlw	114
   488     0011  3420               	retlw	32
   489     0012  3441               	retlw	65
   490     0013  3473               	retlw	115
   491     0014  3463               	retlw	99
   492     0015  3469               	retlw	105
   493     0016  3469               	retlw	105
   494     0017  3400               	retlw	0
   495     0018                     __end_of_message:
   496     0008                     _PORTD	set	8
   497     0006                     _PORTB	set	6
   498     0019                     _TXREG	set	25
   499     001A                     _RCREG	set	26
   500     0018                     _RCSTA	set	24
   501     0008                     _PORTDbits	set	8
   502     0013                     _SSPBUF	set	19
   503     0014                     _SSPCON	set	20
   504     00C4                     _CREN	set	196
   505     00C1                     _OERR	set	193
   506     0065                     _RCIF	set	101
   507     0043                     _RD3	set	67
   508     0047                     _RD7	set	71
   509     0046                     _RD6	set	70
   510     0045                     _RD5	set	69
   511     0044                     _RD4	set	68
   512     0063                     _SSPIF	set	99
   513     005E                     _PEIE	set	94
   514     005F                     _GIE	set	95
   515     0088                     _TRISD	set	136
   516     0086                     _TRISB	set	134
   517     0098                     _TXSTA	set	152
   518     0099                     _SPBRG	set	153
   519     0091                     _SSPCON2bits	set	145
   520     0087                     _TRISCbits	set	135
   521     0094                     _SSPSTAT	set	148
   522     0093                     _SSPADD	set	147
   523     0091                     _SSPCON2	set	145
   524     04C1                     _TRMT	set	1217
   525     0463                     _SSPIE	set	1123
   526     043C                     _TRISC4	set	1084
   527     043B                     _TRISC3	set	1083
   528     0189                     _ANSELH	set	393
   529     0188                     _ANSEL	set	392
   530                           
   531                           	psect	cinit
   532     07EB                     start_initialization:	
   533                           ; #config settings
   534                           
   535     07EB                     __initialization:
   536                           
   537                           ; Initialize objects allocated to BANK0
   538     07EB  120A  118A  23D5  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   539     07F0  00B5               	movwf	__pdataBANK0& (0+127)
   540                           
   541                           ; Clear objects allocated to BANK0
   542     07F1  01A0               	clrf	__pbssBANK0& (0+127)
   543     07F2  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   544     07F3  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   545     07F4  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   546     07F5  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   547     07F6  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   548     07F7  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   549     07F8  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   550     07F9  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   551     07FA  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   552     07FB  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   553     07FC                     end_of_initialization:	
   554                           ;End of C runtime variable initialization code
   555                           
   556     07FC                     __end_of__initialization:
   557     07FC  0183               	clrf	3
   558     07FD  120A  118A  2EDA   	ljmp	_main	;jump to C main() function
   559                           
   560                           	psect	bssBANK0
   561     0020                     __pbssBANK0:
   562     0020                     _s:
   563     0020                     	ds	3
   564     0023                     _mot:
   565     0023                     	ds	1
   566     0024                     _y:
   567     0024                     	ds	1
   568     0025                     _x:
   569     0025                     	ds	1
   570     0026                     _dato:
   571     0026                     	ds	1
   572     0027                     _datos2:
   573     0027                     	ds	2
   574     0029                     _datos:
   575     0029                     	ds	2
   576                           
   577                           	psect	dataBANK0
   578     0035                     __pdataBANK0:
   579     0035                     _z:
   580     0035                     	ds	1
   581                           
   582                           	psect	cstackCOMMON
   583     0070                     __pcstackCOMMON:
   584     0070                     ?_setup:
   585     0070                     ?_I2C_Master_Wait:	
   586                           ; 1 bytes @ 0x0
   587                           
   588     0070                     ??_I2C_Master_Wait:	
   589                           ; 1 bytes @ 0x0
   590                           
   591     0070                     ?_I2C_Master_Start:	
   592                           ; 1 bytes @ 0x0
   593                           
   594     0070                     ??_I2C_Master_Start:	
   595                           ; 1 bytes @ 0x0
   596                           
   597     0070                     ?_I2C_Master_Stop:	
   598                           ; 1 bytes @ 0x0
   599                           
   600     0070                     ??_I2C_Master_Stop:	
   601                           ; 1 bytes @ 0x0
   602                           
   603     0070                     ?_I2C_Master_Write:	
   604                           ; 1 bytes @ 0x0
   605                           
   606     0070                     ?_Lcd_Port:	
   607                           ; 1 bytes @ 0x0
   608                           
   609     0070                     ??_Lcd_Port:	
   610                           ; 1 bytes @ 0x0
   611                           
   612     0070                     ?_Lcd_Cmd:	
   613                           ; 1 bytes @ 0x0
   614                           
   615     0070                     ?_Lcd_Init:	
   616                           ; 1 bytes @ 0x0
   617                           
   618     0070                     ?_Lcd_Write_Char:	
   619                           ; 1 bytes @ 0x0
   620                           
   621     0070                     ?_Lcd_Write_String:	
   622                           ; 1 bytes @ 0x0
   623                           
   624     0070                     ?_main:	
   625                           ; 1 bytes @ 0x0
   626                           
   627     0070                     ?_I2C_Master_Read:	
   628                           ; 1 bytes @ 0x0
   629                           
   630     0070                     ?___awdiv:	
   631                           ; 2 bytes @ 0x0
   632                           
   633     0070                     ?___lldiv:	
   634                           ; 2 bytes @ 0x0
   635                           
   636     0070                     Lcd_Port@a:	
   637                           ; 4 bytes @ 0x0
   638                           
   639     0070                     I2C_Master_Write@d:	
   640                           ; 1 bytes @ 0x0
   641                           
   642     0070                     I2C_Master_Read@a:	
   643                           ; 2 bytes @ 0x0
   644                           
   645     0070                     ___awdiv@divisor:	
   646                           ; 2 bytes @ 0x0
   647                           
   648     0070                     ___lldiv@divisor:	
   649                           ; 2 bytes @ 0x0
   650                           
   651                           
   652                           ; 4 bytes @ 0x0
   653     0070                     	ds	1
   654     0071                     ??_Lcd_Cmd:
   655     0071                     ??_Lcd_Write_Char:	
   656                           ; 1 bytes @ 0x1
   657                           
   658                           
   659                           ; 1 bytes @ 0x1
   660     0071                     	ds	1
   661     0072                     ??_I2C_Master_Write:
   662     0072                     ??_I2C_Master_Read:	
   663                           ; 1 bytes @ 0x2
   664                           
   665     0072                     Lcd_Write_Char@temp:	
   666                           ; 1 bytes @ 0x2
   667                           
   668     0072                     ___awdiv@dividend:	
   669                           ; 1 bytes @ 0x2
   670                           
   671                           
   672                           ; 2 bytes @ 0x2
   673     0072                     	ds	1
   674     0073                     Lcd_Cmd@a:
   675     0073                     Lcd_Write_Char@y:	
   676                           ; 1 bytes @ 0x3
   677                           
   678                           
   679                           ; 1 bytes @ 0x3
   680     0073                     	ds	1
   681     0074                     ?_Lcd_Set_Cursor:
   682     0074                     ??_Lcd_Init:	
   683                           ; 1 bytes @ 0x4
   684                           
   685     0074                     ??___awdiv:	
   686                           ; 1 bytes @ 0x4
   687                           
   688     0074                     Lcd_Set_Cursor@b:	
   689                           ; 1 bytes @ 0x4
   690                           
   691     0074                     Lcd_Write_Char@a:	
   692                           ; 1 bytes @ 0x4
   693                           
   694     0074                     ___awdiv@counter:	
   695                           ; 1 bytes @ 0x4
   696                           
   697     0074                     I2C_Master_Read@temp:	
   698                           ; 1 bytes @ 0x4
   699                           
   700     0074                     ___lldiv@dividend:	
   701                           ; 2 bytes @ 0x4
   702                           
   703                           
   704                           ; 4 bytes @ 0x4
   705     0074                     	ds	1
   706     0075                     ??_Lcd_Set_Cursor:
   707     0075                     ??_Lcd_Write_String:	
   708                           ; 1 bytes @ 0x5
   709                           
   710     0075                     ___awdiv@sign:	
   711                           ; 1 bytes @ 0x5
   712                           
   713                           
   714                           ; 1 bytes @ 0x5
   715     0075                     	ds	1
   716     0076                     Lcd_Set_Cursor@a:
   717     0076                     Lcd_Write_String@i:	
   718                           ; 1 bytes @ 0x6
   719                           
   720     0076                     ___awdiv@quotient:	
   721                           ; 2 bytes @ 0x6
   722                           
   723                           
   724                           ; 2 bytes @ 0x6
   725     0076                     	ds	1
   726     0077                     Lcd_Set_Cursor@z:
   727                           
   728                           ; 1 bytes @ 0x7
   729     0077                     	ds	1
   730     0078                     ??___lldiv:
   731     0078                     ?___awmod:	
   732                           ; 1 bytes @ 0x8
   733                           
   734     0078                     Lcd_Set_Cursor@y:	
   735                           ; 2 bytes @ 0x8
   736                           
   737     0078                     Lcd_Write_String@a:	
   738                           ; 1 bytes @ 0x8
   739                           
   740     0078                     ___awmod@divisor:	
   741                           ; 1 bytes @ 0x8
   742                           
   743                           
   744                           ; 2 bytes @ 0x8
   745     0078                     	ds	1
   746     0079                     Lcd_Set_Cursor@temp:
   747     0079                     ___lldiv@quotient:	
   748                           ; 1 bytes @ 0x9
   749                           
   750                           
   751                           ; 4 bytes @ 0x9
   752     0079                     	ds	1
   753     007A                     ___awmod@dividend:
   754                           
   755                           ; 2 bytes @ 0xA
   756     007A                     	ds	2
   757     007C                     ??___awmod:
   758     007C                     ___awmod@counter:	
   759                           ; 1 bytes @ 0xC
   760                           
   761                           
   762                           ; 1 bytes @ 0xC
   763     007C                     	ds	1
   764     007D                     ___lldiv@counter:
   765     007D                     ___awmod@sign:	
   766                           ; 1 bytes @ 0xD
   767                           
   768                           
   769                           ; 1 bytes @ 0xD
   770     007D                     	ds	1
   771     007E                     ??_setup:
   772                           
   773                           	psect	cstackBANK0
   774     002B                     __pcstackBANK0:	
   775                           ; 1 bytes @ 0xE
   776                           
   777     002B                     ?_I2C_Master_Init:
   778     002B                     I2C_Master_Init@c:	
   779                           ; 1 bytes @ 0x0
   780                           
   781                           
   782                           ; 4 bytes @ 0x0
   783     002B                     	ds	4
   784     002F                     ??_I2C_Master_Init:
   785                           
   786                           ; 1 bytes @ 0x4
   787     002F                     	ds	4
   788     0033                     ??_main:
   789                           
   790                           ; 1 bytes @ 0x8
   791     0033                     	ds	2
   792                           
   793                           	psect	maintext
   794     06DA                     __pmaintext:	
   795 ;;
   796 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   797 ;;
   798 ;; *************** function _main *****************
   799 ;; Defined at:
   800 ;;		line 60 in file "pruebaI2C.c"
   801 ;; Parameters:    Size  Location     Type
   802 ;;		None
   803 ;; Auto vars:     Size  Location     Type
   804 ;;		None
   805 ;; Return value:  Size  Location     Type
   806 ;;                  1    wreg      void 
   807 ;; Registers used:
   808 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   809 ;; Tracked objects:
   810 ;;		On entry : B00/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   814 ;;      Params:         0       0       0       0       0
   815 ;;      Locals:         0       0       0       0       0
   816 ;;      Temps:          0       2       0       0       0
   817 ;;      Totals:         0       2       0       0       0
   818 ;;Total ram usage:        2 bytes
   819 ;; Hardware stack levels required when called: 3
   820 ;; This function calls:
   821 ;;		_I2C_Master_Init
   822 ;;		_I2C_Master_Read
   823 ;;		_I2C_Master_Start
   824 ;;		_I2C_Master_Stop
   825 ;;		_I2C_Master_Write
   826 ;;		_Lcd_Init
   827 ;;		_Lcd_Set_Cursor
   828 ;;		_Lcd_Write_String
   829 ;;		___awdiv
   830 ;;		___awmod
   831 ;;		_setup
   832 ;; This function is called by:
   833 ;;		Startup code after reset
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837     06DA                     _main:	
   838                           ;psect for function _main
   839                           
   840     06DA                     l1416:	
   841                           ;incstack = 0
   842                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   843                           
   844                           
   845                           ;pruebaI2C.c: 61:     setup();
   846     06DA  120A  118A  2419  120A  118A  	fcall	_setup
   847     06DF                     l1418:
   848                           
   849                           ;pruebaI2C.c: 62:    Lcd_Init();
   850     06DF  120A  118A  25B0  120A  118A  	fcall	_Lcd_Init
   851     06E4                     l1420:
   852                           
   853                           ;pruebaI2C.c: 63:     I2C_Master_Init(100000);
   854     06E4  3000               	movlw	0
   855     06E5  1283               	bcf	3,5	;RP0=0, select bank0
   856     06E6  1303               	bcf	3,6	;RP1=0, select bank0
   857     06E7  00AE               	movwf	I2C_Master_Init@c+3
   858     06E8  3001               	movlw	1
   859     06E9  00AD               	movwf	I2C_Master_Init@c+2
   860     06EA  3086               	movlw	134
   861     06EB  00AC               	movwf	I2C_Master_Init@c+1
   862     06EC  30A0               	movlw	160
   863     06ED  00AB               	movwf	I2C_Master_Init@c
   864     06EE  120A  118A  24D9  120A  118A  	fcall	_I2C_Master_Init
   865     06F3                     l216:	
   866                           ;pruebaI2C.c: 66:     while(1){
   867                           
   868                           
   869                           ;pruebaI2C.c: 88:         I2C_Master_Start();
   870     06F3  120A  118A  23D6  120A  118A  	fcall	_I2C_Master_Start
   871                           
   872                           ;pruebaI2C.c: 89:         I2C_Master_Write(0x24);
   873     06F8  3024               	movlw	36
   874     06F9  00F0               	movwf	I2C_Master_Write@d
   875     06FA  3000               	movlw	0
   876     06FB  00F1               	movwf	I2C_Master_Write@d+1
   877     06FC  120A  118A  23E8  120A  118A  	fcall	_I2C_Master_Write
   878                           
   879                           ;pruebaI2C.c: 90:         I2C_Master_Write('r');
   880     0701  3072               	movlw	114
   881     0702  00F0               	movwf	I2C_Master_Write@d
   882     0703  3000               	movlw	0
   883     0704  00F1               	movwf	I2C_Master_Write@d+1
   884     0705  120A  118A  23E8  120A  118A  	fcall	_I2C_Master_Write
   885                           
   886                           ;pruebaI2C.c: 92:         I2C_Master_Stop();
   887     070A  120A  118A  23DF  120A  118A  	fcall	_I2C_Master_Stop
   888     070F                     l1422:
   889                           
   890                           ;pruebaI2C.c: 95:        _delay((unsigned long)((800)*(8000000/4000000.0)));
   891     070F  30E4               	movlw	228
   892     0710  1283               	bcf	3,5	;RP0=0, select bank0
   893     0711  1303               	bcf	3,6	;RP1=0, select bank0
   894     0712  00B3               	movwf	??_main
   895     0713                     u957:
   896     0713  2F14               	nop2
   897     0714  2F15               	nop2
   898     0715  0BB3               	decfsz	??_main,f
   899     0716  2F13               	goto	u957
   900     0717  0000               	nop
   901     0718                     l1424:
   902                           
   903                           ;pruebaI2C.c: 97:         I2C_Master_Start();
   904     0718  120A  118A  23D6  120A  118A  	fcall	_I2C_Master_Start
   905     071D                     l1426:
   906                           
   907                           ;pruebaI2C.c: 98:         I2C_Master_Write(0x25);
   908     071D  3025               	movlw	37
   909     071E  00F0               	movwf	I2C_Master_Write@d
   910     071F  3000               	movlw	0
   911     0720  00F1               	movwf	I2C_Master_Write@d+1
   912     0721  120A  118A  23E8  120A  118A  	fcall	_I2C_Master_Write
   913     0726                     l1428:
   914                           
   915                           ;pruebaI2C.c: 99:         x = I2C_Master_Read(0);
   916     0726  3000               	movlw	0
   917     0727  00F0               	movwf	I2C_Master_Read@a
   918     0728  00F1               	movwf	I2C_Master_Read@a+1
   919     0729  120A  118A  2476  120A  118A  	fcall	_I2C_Master_Read
   920     072E  0870               	movf	?_I2C_Master_Read,w
   921     072F  1283               	bcf	3,5	;RP0=0, select bank0
   922     0730  1303               	bcf	3,6	;RP1=0, select bank0
   923     0731  00A5               	movwf	_x
   924     0732                     l1430:
   925                           
   926                           ;pruebaI2C.c: 100:         I2C_Master_Stop();
   927     0732  120A  118A  23DF  120A  118A  	fcall	_I2C_Master_Stop
   928     0737                     l1432:
   929                           
   930                           ;pruebaI2C.c: 101:         _delay((unsigned long)((800)*(8000000/4000000.0)));
   931     0737  30E4               	movlw	228
   932     0738  1283               	bcf	3,5	;RP0=0, select bank0
   933     0739  1303               	bcf	3,6	;RP1=0, select bank0
   934     073A  00B3               	movwf	??_main
   935     073B                     u967:
   936     073B  2F3C               	nop2
   937     073C  2F3D               	nop2
   938     073D  0BB3               	decfsz	??_main,f
   939     073E  2F3B               	goto	u967
   940     073F  0000               	nop
   941                           
   942                           ;pruebaI2C.c: 103:          I2C_Master_Start();
   943     0740  120A  118A  23D6  120A  118A  	fcall	_I2C_Master_Start
   944                           
   945                           ;pruebaI2C.c: 104:         I2C_Master_Write(0x24);
   946     0745  3024               	movlw	36
   947     0746  00F0               	movwf	I2C_Master_Write@d
   948     0747  3000               	movlw	0
   949     0748  00F1               	movwf	I2C_Master_Write@d+1
   950     0749  120A  118A  23E8  120A  118A  	fcall	_I2C_Master_Write
   951                           
   952                           ;pruebaI2C.c: 105:         I2C_Master_Write('l');
   953     074E  306C               	movlw	108
   954     074F  00F0               	movwf	I2C_Master_Write@d
   955     0750  3000               	movlw	0
   956     0751  00F1               	movwf	I2C_Master_Write@d+1
   957     0752  120A  118A  23E8  120A  118A  	fcall	_I2C_Master_Write
   958                           
   959                           ;pruebaI2C.c: 106:         I2C_Master_Stop();
   960     0757  120A  118A  23DF  120A  118A  	fcall	_I2C_Master_Stop
   961     075C                     l1434:
   962                           
   963                           ;pruebaI2C.c: 107:         _delay((unsigned long)((800)*(8000000/4000000.0)));
   964     075C  30E4               	movlw	228
   965     075D  1283               	bcf	3,5	;RP0=0, select bank0
   966     075E  1303               	bcf	3,6	;RP1=0, select bank0
   967     075F  00B3               	movwf	??_main
   968     0760                     u977:
   969     0760  2F61               	nop2
   970     0761  2F62               	nop2
   971     0762  0BB3               	decfsz	??_main,f
   972     0763  2F60               	goto	u977
   973     0764  0000               	nop
   974     0765                     l1436:
   975                           
   976                           ;pruebaI2C.c: 118:         datos[0]= (x/100) + '0';
   977     0765  3064               	movlw	100
   978     0766  00F0               	movwf	___awdiv@divisor
   979     0767  3000               	movlw	0
   980     0768  00F1               	movwf	___awdiv@divisor+1
   981     0769  1283               	bcf	3,5	;RP0=0, select bank0
   982     076A  1303               	bcf	3,6	;RP1=0, select bank0
   983     076B  0825               	movf	_x,w
   984     076C  00B3               	movwf	??_main
   985     076D  01B4               	clrf	??_main+1
   986     076E  0833               	movf	??_main,w
   987     076F  00F2               	movwf	___awdiv@dividend
   988     0770  0834               	movf	??_main+1,w
   989     0771  00F3               	movwf	___awdiv@dividend+1
   990     0772  120A  118A  2673  120A  118A  	fcall	___awdiv
   991     0777  0870               	movf	?___awdiv,w
   992     0778  3E30               	addlw	48
   993     0779  1283               	bcf	3,5	;RP0=0, select bank0
   994     077A  1303               	bcf	3,6	;RP1=0, select bank0
   995     077B  00A9               	movwf	_datos
   996     077C                     l1438:
   997                           
   998                           ;pruebaI2C.c: 119:       datos[1]= (x/10) % 10 + '0';
   999     077C  300A               	movlw	10
  1000     077D  00F8               	movwf	___awmod@divisor
  1001     077E  3000               	movlw	0
  1002     077F  00F9               	movwf	___awmod@divisor+1
  1003     0780  300A               	movlw	10
  1004     0781  00F0               	movwf	___awdiv@divisor
  1005     0782  3000               	movlw	0
  1006     0783  00F1               	movwf	___awdiv@divisor+1
  1007     0784  0825               	movf	_x,w
  1008     0785  00B3               	movwf	??_main
  1009     0786  01B4               	clrf	??_main+1
  1010     0787  0833               	movf	??_main,w
  1011     0788  00F2               	movwf	___awdiv@dividend
  1012     0789  0834               	movf	??_main+1,w
  1013     078A  00F3               	movwf	___awdiv@dividend+1
  1014     078B  120A  118A  2673  120A  118A  	fcall	___awdiv
  1015     0790  0871               	movf	?___awdiv+1,w
  1016     0791  00FB               	movwf	___awmod@dividend+1
  1017     0792  0870               	movf	?___awdiv,w
  1018     0793  00FA               	movwf	___awmod@dividend
  1019     0794  120A  118A  2557  120A  118A  	fcall	___awmod
  1020     0799  0878               	movf	?___awmod,w
  1021     079A  3E30               	addlw	48
  1022     079B  1283               	bcf	3,5	;RP0=0, select bank0
  1023     079C  1303               	bcf	3,6	;RP1=0, select bank0
  1024     079D  00AA               	movwf	_datos+1
  1025     079E                     l1440:
  1026                           
  1027                           ;pruebaI2C.c: 120:       datos[2]= (x%10) + '0';
  1028     079E  300A               	movlw	10
  1029     079F  00F8               	movwf	___awmod@divisor
  1030     07A0  3000               	movlw	0
  1031     07A1  00F9               	movwf	___awmod@divisor+1
  1032     07A2  0825               	movf	_x,w
  1033     07A3  00B3               	movwf	??_main
  1034     07A4  01B4               	clrf	??_main+1
  1035     07A5  0833               	movf	??_main,w
  1036     07A6  00FA               	movwf	___awmod@dividend
  1037     07A7  0834               	movf	??_main+1,w
  1038     07A8  00FB               	movwf	___awmod@dividend+1
  1039     07A9  120A  118A  2557  120A  118A  	fcall	___awmod
  1040     07AE  0878               	movf	?___awmod,w
  1041     07AF  3E30               	addlw	48
  1042     07B0  1283               	bcf	3,5	;RP0=0, select bank0
  1043     07B1  1303               	bcf	3,6	;RP1=0, select bank0
  1044     07B2  00AB               	movwf	_datos+2
  1045     07B3                     l1442:
  1046                           
  1047                           ;pruebaI2C.c: 121:        _delay((unsigned long)((400)*(8000000/4000000.0)));
  1048     07B3  309F               	movlw	159
  1049     07B4  1283               	bcf	3,5	;RP0=0, select bank0
  1050     07B5  1303               	bcf	3,6	;RP1=0, select bank0
  1051     07B6  00B3               	movwf	??_main
  1052     07B7                     u987:
  1053     07B7  2FB8               	nop2
  1054     07B8  0BB3               	decfsz	??_main,f
  1055     07B9  2FB7               	goto	u987
  1056     07BA  2FBB               	nop2
  1057     07BB                     l1444:
  1058                           
  1059                           ;pruebaI2C.c: 122:      datos2[0]= (y/100) + '0';
  1060     07BB  3030               	movlw	48
  1061     07BC  1283               	bcf	3,5	;RP0=0, select bank0
  1062     07BD  1303               	bcf	3,6	;RP1=0, select bank0
  1063     07BE  00A7               	movwf	_datos2
  1064     07BF                     l1446:
  1065                           
  1066                           ;pruebaI2C.c: 123:       datos2[1]= (y/10) % 10 + '0';
  1067     07BF  3030               	movlw	48
  1068     07C0  00A8               	movwf	_datos2+1
  1069     07C1                     l1448:
  1070                           
  1071                           ;pruebaI2C.c: 124:      datos2[2]= (y%10) + '0';
  1072     07C1  3030               	movlw	48
  1073     07C2  00A9               	movwf	_datos2+2
  1074     07C3                     l1450:
  1075                           
  1076                           ;pruebaI2C.c: 125:          _delay((unsigned long)((400)*(8000000/4000000.0)));
  1077     07C3  309F               	movlw	159
  1078     07C4  1283               	bcf	3,5	;RP0=0, select bank0
  1079     07C5  1303               	bcf	3,6	;RP1=0, select bank0
  1080     07C6  00B3               	movwf	??_main
  1081     07C7                     u997:
  1082     07C7  2FC8               	nop2
  1083     07C8  0BB3               	decfsz	??_main,f
  1084     07C9  2FC7               	goto	u997
  1085     07CA  2FCB               	nop2
  1086     07CB                     l1452:
  1087                           
  1088                           ;pruebaI2C.c: 130:     Lcd_Set_Cursor(1,1);
  1089     07CB  01F4               	clrf	Lcd_Set_Cursor@b
  1090     07CC  0AF4               	incf	Lcd_Set_Cursor@b,f
  1091     07CD  3001               	movlw	1
  1092     07CE  120A  118A  2511  120A  118A  	fcall	_Lcd_Set_Cursor
  1093     07D3                     l1454:
  1094                           
  1095                           ;pruebaI2C.c: 131:     Lcd_Write_String(datos);
  1096     07D3  3029               	movlw	(low (_datos| 0))& (0+255)
  1097     07D4  120A  118A  2433  120A  118A  	fcall	_Lcd_Write_String
  1098     07D9                     l1456:
  1099                           
  1100                           ;pruebaI2C.c: 132:     Lcd_Set_Cursor(2,6);
  1101     07D9  3006               	movlw	6
  1102     07DA  00F4               	movwf	Lcd_Set_Cursor@b
  1103     07DB  3002               	movlw	2
  1104     07DC  120A  118A  2511  120A  118A  	fcall	_Lcd_Set_Cursor
  1105     07E1                     l1458:
  1106                           
  1107                           ;pruebaI2C.c: 133:     Lcd_Write_String(datos2);
  1108     07E1  3027               	movlw	(low (_datos2| 0))& (0+255)
  1109     07E2  120A  118A  2433  120A  118A  	fcall	_Lcd_Write_String
  1110     07E7  2EF3               	goto	l216
  1111     07E8  120A  118A  2800   	ljmp	start
  1112     07EB                     __end_of_main:
  1113                           
  1114                           	psect	text1
  1115     0419                     __ptext1:	
  1116 ;; *************** function _setup *****************
  1117 ;; Defined at:
  1118 ;;		line 141 in file "pruebaI2C.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;		None
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1132 ;;      Params:         0       0       0       0       0
  1133 ;;      Locals:         0       0       0       0       0
  1134 ;;      Temps:          0       0       0       0       0
  1135 ;;      Totals:         0       0       0       0       0
  1136 ;;Total ram usage:        0 bytes
  1137 ;; Hardware stack levels used: 1
  1138 ;; Hardware stack levels required when called: 2
  1139 ;; This function calls:
  1140 ;;		_I2C_Master_Init
  1141 ;; This function is called by:
  1142 ;;		_main
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146     0419                     _setup:	
  1147                           ;psect for function _setup
  1148                           
  1149     0419                     l1304:	
  1150                           ;incstack = 0
  1151                           ; Regs used in _setup: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1152                           
  1153                           
  1154                           ;pruebaI2C.c: 142:     ANSEL = 0;
  1155     0419  1683               	bsf	3,5	;RP0=1, select bank3
  1156     041A  1703               	bsf	3,6	;RP1=1, select bank3
  1157     041B  0188               	clrf	8	;volatile
  1158                           
  1159                           ;pruebaI2C.c: 143:     ANSELH = 0;
  1160     041C  0189               	clrf	9	;volatile
  1161                           
  1162                           ;pruebaI2C.c: 144:     TRISB = 0;
  1163     041D  1683               	bsf	3,5	;RP0=1, select bank1
  1164     041E  1303               	bcf	3,6	;RP1=0, select bank1
  1165     041F  0186               	clrf	6	;volatile
  1166                           
  1167                           ;pruebaI2C.c: 145:     TRISD = 0;
  1168     0420  0188               	clrf	8	;volatile
  1169                           
  1170                           ;pruebaI2C.c: 146:     PORTB = 0;
  1171     0421  1283               	bcf	3,5	;RP0=0, select bank0
  1172     0422  1303               	bcf	3,6	;RP1=0, select bank0
  1173     0423  0186               	clrf	6	;volatile
  1174                           
  1175                           ;pruebaI2C.c: 147:     PORTD = 0;
  1176     0424  0188               	clrf	8	;volatile
  1177     0425                     l1306:
  1178                           
  1179                           ;pruebaI2C.c: 148:     I2C_Master_Init(100000);
  1180     0425  3000               	movlw	0
  1181     0426  00AE               	movwf	I2C_Master_Init@c+3
  1182     0427  3001               	movlw	1
  1183     0428  00AD               	movwf	I2C_Master_Init@c+2
  1184     0429  3086               	movlw	134
  1185     042A  00AC               	movwf	I2C_Master_Init@c+1
  1186     042B  30A0               	movlw	160
  1187     042C  00AB               	movwf	I2C_Master_Init@c
  1188     042D  120A  118A  24D9  120A  118A  	fcall	_I2C_Master_Init
  1189     0432                     l222:
  1190     0432  0008               	return
  1191     0433                     __end_of_setup:
  1192                           
  1193                           	psect	text2
  1194     04D9                     __ptext2:	
  1195 ;; *************** function _I2C_Master_Init *****************
  1196 ;; Defined at:
  1197 ;;		line 16 in file "I2C.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;  c               4    0[BANK0 ] const unsigned long 
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;		None
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      void 
  1204 ;; Registers used:
  1205 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1211 ;;      Params:         0       4       0       0       0
  1212 ;;      Locals:         0       0       0       0       0
  1213 ;;      Temps:          0       4       0       0       0
  1214 ;;      Totals:         0       8       0       0       0
  1215 ;;Total ram usage:        8 bytes
  1216 ;; Hardware stack levels used: 1
  1217 ;; Hardware stack levels required when called: 1
  1218 ;; This function calls:
  1219 ;;		___lldiv
  1220 ;; This function is called by:
  1221 ;;		_main
  1222 ;;		_setup
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226     04D9                     _I2C_Master_Init:	
  1227                           ;psect for function _I2C_Master_Init
  1228                           
  1229     04D9                     l1192:	
  1230                           ;incstack = 0
  1231                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1232                           
  1233                           
  1234                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1235     04D9  3028               	movlw	40
  1236     04DA  1283               	bcf	3,5	;RP0=0, select bank0
  1237     04DB  1303               	bcf	3,6	;RP1=0, select bank0
  1238     04DC  0094               	movwf	20	;volatile
  1239     04DD                     l1194:
  1240                           
  1241                           ;I2C.c: 19:     SSPCON2 = 0;
  1242     04DD  1683               	bsf	3,5	;RP0=1, select bank1
  1243     04DE  1303               	bcf	3,6	;RP1=0, select bank1
  1244     04DF  0191               	clrf	17	;volatile
  1245     04E0                     l1196:
  1246                           
  1247                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1248     04E0  1283               	bcf	3,5	;RP0=0, select bank0
  1249     04E1  1303               	bcf	3,6	;RP1=0, select bank0
  1250     04E2  082B               	movf	I2C_Master_Init@c,w
  1251     04E3  00AF               	movwf	??_I2C_Master_Init
  1252     04E4  082C               	movf	I2C_Master_Init@c+1,w
  1253     04E5  00B0               	movwf	??_I2C_Master_Init+1
  1254     04E6  082D               	movf	I2C_Master_Init@c+2,w
  1255     04E7  00B1               	movwf	??_I2C_Master_Init+2
  1256     04E8  082E               	movf	I2C_Master_Init@c+3,w
  1257     04E9  00B2               	movwf	??_I2C_Master_Init+3
  1258     04EA  3002               	movlw	2
  1259     04EB                     u615:
  1260     04EB  1003               	clrc
  1261     04EC  0DAF               	rlf	??_I2C_Master_Init,f
  1262     04ED  0DB0               	rlf	??_I2C_Master_Init+1,f
  1263     04EE  0DB1               	rlf	??_I2C_Master_Init+2,f
  1264     04EF  0DB2               	rlf	??_I2C_Master_Init+3,f
  1265     04F0                     u610:
  1266     04F0  3EFF               	addlw	-1
  1267     04F1  1D03               	skipz
  1268     04F2  2CEB               	goto	u615
  1269     04F3  0832               	movf	??_I2C_Master_Init+3,w
  1270     04F4  00F3               	movwf	___lldiv@divisor+3
  1271     04F5  0831               	movf	??_I2C_Master_Init+2,w
  1272     04F6  00F2               	movwf	___lldiv@divisor+2
  1273     04F7  0830               	movf	??_I2C_Master_Init+1,w
  1274     04F8  00F1               	movwf	___lldiv@divisor+1
  1275     04F9  082F               	movf	??_I2C_Master_Init,w
  1276     04FA  00F0               	movwf	___lldiv@divisor
  1277     04FB  3000               	movlw	0
  1278     04FC  00F7               	movwf	___lldiv@dividend+3
  1279     04FD  307A               	movlw	122
  1280     04FE  00F6               	movwf	___lldiv@dividend+2
  1281     04FF  3012               	movlw	18
  1282     0500  00F5               	movwf	___lldiv@dividend+1
  1283     0501  3000               	movlw	0
  1284     0502  00F4               	movwf	___lldiv@dividend
  1285     0503  120A  118A  260D  120A  118A  	fcall	___lldiv
  1286     0508  0870               	movf	?___lldiv,w
  1287     0509  3EFF               	addlw	255
  1288     050A  1683               	bsf	3,5	;RP0=1, select bank1
  1289     050B  1303               	bcf	3,6	;RP1=0, select bank1
  1290     050C  0093               	movwf	19	;volatile
  1291     050D                     l1198:
  1292                           
  1293                           ;I2C.c: 21:     SSPSTAT = 0;
  1294     050D  0194               	clrf	20	;volatile
  1295     050E                     l1200:
  1296                           
  1297                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1298     050E  1587               	bsf	7,3	;volatile
  1299     050F                     l1202:
  1300                           
  1301                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1302     050F  1607               	bsf	7,4	;volatile
  1303     0510                     l29:
  1304     0510  0008               	return
  1305     0511                     __end_of_I2C_Master_Init:
  1306                           
  1307                           	psect	text3
  1308     060D                     __ptext3:	
  1309 ;; *************** function ___lldiv *****************
  1310 ;; Defined at:
  1311 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  divisor         4    0[COMMON] unsigned long 
  1314 ;;  dividend        4    4[COMMON] unsigned long 
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;  quotient        4    9[COMMON] unsigned long 
  1317 ;;  counter         1   13[COMMON] unsigned char 
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  4    0[COMMON] unsigned long 
  1320 ;; Registers used:
  1321 ;;		wreg, status,2, status,0, btemp+1
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1327 ;;      Params:         8       0       0       0       0
  1328 ;;      Locals:         5       0       0       0       0
  1329 ;;      Temps:          1       0       0       0       0
  1330 ;;      Totals:        14       0       0       0       0
  1331 ;;Total ram usage:       14 bytes
  1332 ;; Hardware stack levels used: 1
  1333 ;; This function calls:
  1334 ;;		Nothing
  1335 ;; This function is called by:
  1336 ;;		_I2C_Master_Init
  1337 ;;		_UART_Init
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341     060D                     ___lldiv:	
  1342                           ;psect for function ___lldiv
  1343                           
  1344     060D                     l1166:	
  1345                           ;incstack = 0
  1346                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1347                           
  1348     060D  3000               	movlw	0
  1349     060E  00FC               	movwf	___lldiv@quotient+3
  1350     060F  3000               	movlw	0
  1351     0610  00FB               	movwf	___lldiv@quotient+2
  1352     0611  3000               	movlw	0
  1353     0612  00FA               	movwf	___lldiv@quotient+1
  1354     0613  3000               	movlw	0
  1355     0614  00F9               	movwf	___lldiv@quotient
  1356     0615  0873               	movf	___lldiv@divisor+3,w
  1357     0616  0472               	iorwf	___lldiv@divisor+2,w
  1358     0617  0471               	iorwf	___lldiv@divisor+1,w
  1359     0618  0470               	iorwf	___lldiv@divisor,w
  1360     0619  1903               	skipnz
  1361     061A  2E1C               	goto	u541
  1362     061B  2E1D               	goto	u540
  1363     061C                     u541:
  1364     061C  2E6A               	goto	l1188
  1365     061D                     u540:
  1366     061D                     l1168:
  1367     061D  01FD               	clrf	___lldiv@counter
  1368     061E  0AFD               	incf	___lldiv@counter,f
  1369     061F  2E2D               	goto	l1174
  1370     0620                     l1170:
  1371     0620  3001               	movlw	1
  1372     0621  00F8               	movwf	??___lldiv
  1373     0622                     u555:
  1374     0622  1003               	clrc
  1375     0623  0DF0               	rlf	___lldiv@divisor,f
  1376     0624  0DF1               	rlf	___lldiv@divisor+1,f
  1377     0625  0DF2               	rlf	___lldiv@divisor+2,f
  1378     0626  0DF3               	rlf	___lldiv@divisor+3,f
  1379     0627  0BF8               	decfsz	??___lldiv,f
  1380     0628  2E22               	goto	u555
  1381     0629                     l1172:
  1382     0629  3001               	movlw	1
  1383     062A  00FF               	movwf	btemp+1
  1384     062B  087F               	movf	btemp+1,w
  1385     062C  07FD               	addwf	___lldiv@counter,f
  1386     062D                     l1174:
  1387     062D  1FF3               	btfss	___lldiv@divisor+3,7
  1388     062E  2E30               	goto	u561
  1389     062F  2E31               	goto	u560
  1390     0630                     u561:
  1391     0630  2E20               	goto	l1170
  1392     0631                     u560:
  1393     0631                     l1176:
  1394     0631  3001               	movlw	1
  1395     0632  00F8               	movwf	??___lldiv
  1396     0633                     u575:
  1397     0633  1003               	clrc
  1398     0634  0DF9               	rlf	___lldiv@quotient,f
  1399     0635  0DFA               	rlf	___lldiv@quotient+1,f
  1400     0636  0DFB               	rlf	___lldiv@quotient+2,f
  1401     0637  0DFC               	rlf	___lldiv@quotient+3,f
  1402     0638  0BF8               	decfsz	??___lldiv,f
  1403     0639  2E33               	goto	u575
  1404     063A                     l1178:
  1405     063A  0873               	movf	___lldiv@divisor+3,w
  1406     063B  0277               	subwf	___lldiv@dividend+3,w
  1407     063C  1D03               	skipz
  1408     063D  2E48               	goto	u585
  1409     063E  0872               	movf	___lldiv@divisor+2,w
  1410     063F  0276               	subwf	___lldiv@dividend+2,w
  1411     0640  1D03               	skipz
  1412     0641  2E48               	goto	u585
  1413     0642  0871               	movf	___lldiv@divisor+1,w
  1414     0643  0275               	subwf	___lldiv@dividend+1,w
  1415     0644  1D03               	skipz
  1416     0645  2E48               	goto	u585
  1417     0646  0870               	movf	___lldiv@divisor,w
  1418     0647  0274               	subwf	___lldiv@dividend,w
  1419     0648                     u585:
  1420     0648  1C03               	skipc
  1421     0649  2E4B               	goto	u581
  1422     064A  2E4C               	goto	u580
  1423     064B                     u581:
  1424     064B  2E5B               	goto	l1184
  1425     064C                     u580:
  1426     064C                     l1180:
  1427     064C  0870               	movf	___lldiv@divisor,w
  1428     064D  02F4               	subwf	___lldiv@dividend,f
  1429     064E  0871               	movf	___lldiv@divisor+1,w
  1430     064F  1C03               	skipc
  1431     0650  0F71               	incfsz	___lldiv@divisor+1,w
  1432     0651  02F5               	subwf	___lldiv@dividend+1,f
  1433     0652  0872               	movf	___lldiv@divisor+2,w
  1434     0653  1C03               	skipc
  1435     0654  0F72               	incfsz	___lldiv@divisor+2,w
  1436     0655  02F6               	subwf	___lldiv@dividend+2,f
  1437     0656  0873               	movf	___lldiv@divisor+3,w
  1438     0657  1C03               	skipc
  1439     0658  0F73               	incfsz	___lldiv@divisor+3,w
  1440     0659  02F7               	subwf	___lldiv@dividend+3,f
  1441     065A                     l1182:
  1442     065A  1479               	bsf	___lldiv@quotient,0
  1443     065B                     l1184:
  1444     065B  3001               	movlw	1
  1445     065C                     u595:
  1446     065C  1003               	clrc
  1447     065D  0CF3               	rrf	___lldiv@divisor+3,f
  1448     065E  0CF2               	rrf	___lldiv@divisor+2,f
  1449     065F  0CF1               	rrf	___lldiv@divisor+1,f
  1450     0660  0CF0               	rrf	___lldiv@divisor,f
  1451     0661  3EFF               	addlw	-1
  1452     0662  1D03               	skipz
  1453     0663  2E5C               	goto	u595
  1454     0664                     l1186:
  1455     0664  3001               	movlw	1
  1456     0665  02FD               	subwf	___lldiv@counter,f
  1457     0666  1D03               	btfss	3,2
  1458     0667  2E69               	goto	u601
  1459     0668  2E6A               	goto	u600
  1460     0669                     u601:
  1461     0669  2E31               	goto	l1176
  1462     066A                     u600:
  1463     066A                     l1188:
  1464     066A  087C               	movf	___lldiv@quotient+3,w
  1465     066B  00F3               	movwf	?___lldiv+3
  1466     066C  087B               	movf	___lldiv@quotient+2,w
  1467     066D  00F2               	movwf	?___lldiv+2
  1468     066E  087A               	movf	___lldiv@quotient+1,w
  1469     066F  00F1               	movwf	?___lldiv+1
  1470     0670  0879               	movf	___lldiv@quotient,w
  1471     0671  00F0               	movwf	?___lldiv
  1472     0672                     l344:
  1473     0672  0008               	return
  1474     0673                     __end_of___lldiv:
  1475                           
  1476                           	psect	text4
  1477     0557                     __ptext4:	
  1478 ;; *************** function ___awmod *****************
  1479 ;; Defined at:
  1480 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;  divisor         2    8[COMMON] int 
  1483 ;;  dividend        2   10[COMMON] int 
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;  sign            1   13[COMMON] unsigned char 
  1486 ;;  counter         1   12[COMMON] unsigned char 
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  2    8[COMMON] int 
  1489 ;; Registers used:
  1490 ;;		wreg, status,2, status,0, btemp+1
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1496 ;;      Params:         4       0       0       0       0
  1497 ;;      Locals:         2       0       0       0       0
  1498 ;;      Temps:          0       0       0       0       0
  1499 ;;      Totals:         6       0       0       0       0
  1500 ;;Total ram usage:        6 bytes
  1501 ;; Hardware stack levels used: 1
  1502 ;; This function calls:
  1503 ;;		Nothing
  1504 ;; This function is called by:
  1505 ;;		_main
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509     0557                     ___awmod:	
  1510                           ;psect for function ___awmod
  1511                           
  1512     0557                     l1352:	
  1513                           ;incstack = 0
  1514                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1515                           
  1516     0557  01FD               	clrf	___awmod@sign
  1517     0558                     l1354:
  1518     0558  1FFB               	btfss	___awmod@dividend+1,7
  1519     0559  2D5B               	goto	u811
  1520     055A  2D5C               	goto	u810
  1521     055B                     u811:
  1522     055B  2D63               	goto	l1360
  1523     055C                     u810:
  1524     055C                     l1356:
  1525     055C  09FA               	comf	___awmod@dividend,f
  1526     055D  09FB               	comf	___awmod@dividend+1,f
  1527     055E  0AFA               	incf	___awmod@dividend,f
  1528     055F  1903               	skipnz
  1529     0560  0AFB               	incf	___awmod@dividend+1,f
  1530     0561                     l1358:
  1531     0561  01FD               	clrf	___awmod@sign
  1532     0562  0AFD               	incf	___awmod@sign,f
  1533     0563                     l1360:
  1534     0563  1FF9               	btfss	___awmod@divisor+1,7
  1535     0564  2D66               	goto	u821
  1536     0565  2D67               	goto	u820
  1537     0566                     u821:
  1538     0566  2D6C               	goto	l1364
  1539     0567                     u820:
  1540     0567                     l1362:
  1541     0567  09F8               	comf	___awmod@divisor,f
  1542     0568  09F9               	comf	___awmod@divisor+1,f
  1543     0569  0AF8               	incf	___awmod@divisor,f
  1544     056A  1903               	skipnz
  1545     056B  0AF9               	incf	___awmod@divisor+1,f
  1546     056C                     l1364:
  1547     056C  0878               	movf	___awmod@divisor,w
  1548     056D  0479               	iorwf	___awmod@divisor+1,w
  1549     056E  1903               	btfsc	3,2
  1550     056F  2D71               	goto	u831
  1551     0570  2D72               	goto	u830
  1552     0571                     u831:
  1553     0571  2DA1               	goto	l1382
  1554     0572                     u830:
  1555     0572                     l1366:
  1556     0572  01FC               	clrf	___awmod@counter
  1557     0573  0AFC               	incf	___awmod@counter,f
  1558     0574  2D80               	goto	l1372
  1559     0575                     l1368:
  1560     0575  3001               	movlw	1
  1561     0576                     u845:
  1562     0576  1003               	clrc
  1563     0577  0DF8               	rlf	___awmod@divisor,f
  1564     0578  0DF9               	rlf	___awmod@divisor+1,f
  1565     0579  3EFF               	addlw	-1
  1566     057A  1D03               	skipz
  1567     057B  2D76               	goto	u845
  1568     057C                     l1370:
  1569     057C  3001               	movlw	1
  1570     057D  00FF               	movwf	btemp+1
  1571     057E  087F               	movf	btemp+1,w
  1572     057F  07FC               	addwf	___awmod@counter,f
  1573     0580                     l1372:
  1574     0580  1FF9               	btfss	___awmod@divisor+1,7
  1575     0581  2D83               	goto	u851
  1576     0582  2D84               	goto	u850
  1577     0583                     u851:
  1578     0583  2D75               	goto	l1368
  1579     0584                     u850:
  1580     0584                     l1374:
  1581     0584  0879               	movf	___awmod@divisor+1,w
  1582     0585  027B               	subwf	___awmod@dividend+1,w
  1583     0586  1D03               	skipz
  1584     0587  2D8A               	goto	u865
  1585     0588  0878               	movf	___awmod@divisor,w
  1586     0589  027A               	subwf	___awmod@dividend,w
  1587     058A                     u865:
  1588     058A  1C03               	skipc
  1589     058B  2D8D               	goto	u861
  1590     058C  2D8E               	goto	u860
  1591     058D                     u861:
  1592     058D  2D94               	goto	l1378
  1593     058E                     u860:
  1594     058E                     l1376:
  1595     058E  0878               	movf	___awmod@divisor,w
  1596     058F  02FA               	subwf	___awmod@dividend,f
  1597     0590  0879               	movf	___awmod@divisor+1,w
  1598     0591  1C03               	skipc
  1599     0592  03FB               	decf	___awmod@dividend+1,f
  1600     0593  02FB               	subwf	___awmod@dividend+1,f
  1601     0594                     l1378:
  1602     0594  3001               	movlw	1
  1603     0595                     u875:
  1604     0595  1003               	clrc
  1605     0596  0CF9               	rrf	___awmod@divisor+1,f
  1606     0597  0CF8               	rrf	___awmod@divisor,f
  1607     0598  3EFF               	addlw	-1
  1608     0599  1D03               	skipz
  1609     059A  2D95               	goto	u875
  1610     059B                     l1380:
  1611     059B  3001               	movlw	1
  1612     059C  02FC               	subwf	___awmod@counter,f
  1613     059D  1D03               	btfss	3,2
  1614     059E  2DA0               	goto	u881
  1615     059F  2DA1               	goto	u880
  1616     05A0                     u881:
  1617     05A0  2D84               	goto	l1374
  1618     05A1                     u880:
  1619     05A1                     l1382:
  1620     05A1  087D               	movf	___awmod@sign,w
  1621     05A2  1903               	btfsc	3,2
  1622     05A3  2DA5               	goto	u891
  1623     05A4  2DA6               	goto	u890
  1624     05A5                     u891:
  1625     05A5  2DAB               	goto	l1386
  1626     05A6                     u890:
  1627     05A6                     l1384:
  1628     05A6  09FA               	comf	___awmod@dividend,f
  1629     05A7  09FB               	comf	___awmod@dividend+1,f
  1630     05A8  0AFA               	incf	___awmod@dividend,f
  1631     05A9  1903               	skipnz
  1632     05AA  0AFB               	incf	___awmod@dividend+1,f
  1633     05AB                     l1386:
  1634     05AB  087B               	movf	___awmod@dividend+1,w
  1635     05AC  00F9               	movwf	?___awmod+1
  1636     05AD  087A               	movf	___awmod@dividend,w
  1637     05AE  00F8               	movwf	?___awmod
  1638     05AF                     l474:
  1639     05AF  0008               	return
  1640     05B0                     __end_of___awmod:
  1641                           
  1642                           	psect	text5
  1643     0673                     __ptext5:	
  1644 ;; *************** function ___awdiv *****************
  1645 ;; Defined at:
  1646 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;  divisor         2    0[COMMON] int 
  1649 ;;  dividend        2    2[COMMON] int 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;  quotient        2    6[COMMON] int 
  1652 ;;  sign            1    5[COMMON] unsigned char 
  1653 ;;  counter         1    4[COMMON] unsigned char 
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  2    0[COMMON] int 
  1656 ;; Registers used:
  1657 ;;		wreg, status,2, status,0, btemp+1
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1663 ;;      Params:         4       0       0       0       0
  1664 ;;      Locals:         4       0       0       0       0
  1665 ;;      Temps:          0       0       0       0       0
  1666 ;;      Totals:         8       0       0       0       0
  1667 ;;Total ram usage:        8 bytes
  1668 ;; Hardware stack levels used: 1
  1669 ;; This function calls:
  1670 ;;		Nothing
  1671 ;; This function is called by:
  1672 ;;		_main
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676     0673                     ___awdiv:	
  1677                           ;psect for function ___awdiv
  1678                           
  1679     0673                     l1308:	
  1680                           ;incstack = 0
  1681                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  1682                           
  1683     0673  01F5               	clrf	___awdiv@sign
  1684     0674                     l1310:
  1685     0674  1FF1               	btfss	___awdiv@divisor+1,7
  1686     0675  2E77               	goto	u711
  1687     0676  2E78               	goto	u710
  1688     0677                     u711:
  1689     0677  2E7F               	goto	l1316
  1690     0678                     u710:
  1691     0678                     l1312:
  1692     0678  09F0               	comf	___awdiv@divisor,f
  1693     0679  09F1               	comf	___awdiv@divisor+1,f
  1694     067A  0AF0               	incf	___awdiv@divisor,f
  1695     067B  1903               	skipnz
  1696     067C  0AF1               	incf	___awdiv@divisor+1,f
  1697     067D                     l1314:
  1698     067D  01F5               	clrf	___awdiv@sign
  1699     067E  0AF5               	incf	___awdiv@sign,f
  1700     067F                     l1316:
  1701     067F  1FF3               	btfss	___awdiv@dividend+1,7
  1702     0680  2E82               	goto	u721
  1703     0681  2E83               	goto	u720
  1704     0682                     u721:
  1705     0682  2E8C               	goto	l1322
  1706     0683                     u720:
  1707     0683                     l1318:
  1708     0683  09F2               	comf	___awdiv@dividend,f
  1709     0684  09F3               	comf	___awdiv@dividend+1,f
  1710     0685  0AF2               	incf	___awdiv@dividend,f
  1711     0686  1903               	skipnz
  1712     0687  0AF3               	incf	___awdiv@dividend+1,f
  1713     0688                     l1320:
  1714     0688  3001               	movlw	1
  1715     0689  00FF               	movwf	btemp+1
  1716     068A  087F               	movf	btemp+1,w
  1717     068B  06F5               	xorwf	___awdiv@sign,f
  1718     068C                     l1322:
  1719     068C  01F6               	clrf	___awdiv@quotient
  1720     068D  01F7               	clrf	___awdiv@quotient+1
  1721     068E                     l1324:
  1722     068E  0870               	movf	___awdiv@divisor,w
  1723     068F  0471               	iorwf	___awdiv@divisor+1,w
  1724     0690  1903               	btfsc	3,2
  1725     0691  2E93               	goto	u731
  1726     0692  2E94               	goto	u730
  1727     0693                     u731:
  1728     0693  2ECB               	goto	l1344
  1729     0694                     u730:
  1730     0694                     l1326:
  1731     0694  01F4               	clrf	___awdiv@counter
  1732     0695  0AF4               	incf	___awdiv@counter,f
  1733     0696  2EA2               	goto	l1332
  1734     0697                     l1328:
  1735     0697  3001               	movlw	1
  1736     0698                     u745:
  1737     0698  1003               	clrc
  1738     0699  0DF0               	rlf	___awdiv@divisor,f
  1739     069A  0DF1               	rlf	___awdiv@divisor+1,f
  1740     069B  3EFF               	addlw	-1
  1741     069C  1D03               	skipz
  1742     069D  2E98               	goto	u745
  1743     069E                     l1330:
  1744     069E  3001               	movlw	1
  1745     069F  00FF               	movwf	btemp+1
  1746     06A0  087F               	movf	btemp+1,w
  1747     06A1  07F4               	addwf	___awdiv@counter,f
  1748     06A2                     l1332:
  1749     06A2  1FF1               	btfss	___awdiv@divisor+1,7
  1750     06A3  2EA5               	goto	u751
  1751     06A4  2EA6               	goto	u750
  1752     06A5                     u751:
  1753     06A5  2E97               	goto	l1328
  1754     06A6                     u750:
  1755     06A6                     l1334:
  1756     06A6  3001               	movlw	1
  1757     06A7                     u765:
  1758     06A7  1003               	clrc
  1759     06A8  0DF6               	rlf	___awdiv@quotient,f
  1760     06A9  0DF7               	rlf	___awdiv@quotient+1,f
  1761     06AA  3EFF               	addlw	-1
  1762     06AB  1D03               	skipz
  1763     06AC  2EA7               	goto	u765
  1764     06AD  0871               	movf	___awdiv@divisor+1,w
  1765     06AE  0273               	subwf	___awdiv@dividend+1,w
  1766     06AF  1D03               	skipz
  1767     06B0  2EB3               	goto	u775
  1768     06B1  0870               	movf	___awdiv@divisor,w
  1769     06B2  0272               	subwf	___awdiv@dividend,w
  1770     06B3                     u775:
  1771     06B3  1C03               	skipc
  1772     06B4  2EB6               	goto	u771
  1773     06B5  2EB7               	goto	u770
  1774     06B6                     u771:
  1775     06B6  2EBE               	goto	l1340
  1776     06B7                     u770:
  1777     06B7                     l1336:
  1778     06B7  0870               	movf	___awdiv@divisor,w
  1779     06B8  02F2               	subwf	___awdiv@dividend,f
  1780     06B9  0871               	movf	___awdiv@divisor+1,w
  1781     06BA  1C03               	skipc
  1782     06BB  03F3               	decf	___awdiv@dividend+1,f
  1783     06BC  02F3               	subwf	___awdiv@dividend+1,f
  1784     06BD                     l1338:
  1785     06BD  1476               	bsf	___awdiv@quotient,0
  1786     06BE                     l1340:
  1787     06BE  3001               	movlw	1
  1788     06BF                     u785:
  1789     06BF  1003               	clrc
  1790     06C0  0CF1               	rrf	___awdiv@divisor+1,f
  1791     06C1  0CF0               	rrf	___awdiv@divisor,f
  1792     06C2  3EFF               	addlw	-1
  1793     06C3  1D03               	skipz
  1794     06C4  2EBF               	goto	u785
  1795     06C5                     l1342:
  1796     06C5  3001               	movlw	1
  1797     06C6  02F4               	subwf	___awdiv@counter,f
  1798     06C7  1D03               	btfss	3,2
  1799     06C8  2ECA               	goto	u791
  1800     06C9  2ECB               	goto	u790
  1801     06CA                     u791:
  1802     06CA  2EA6               	goto	l1334
  1803     06CB                     u790:
  1804     06CB                     l1344:
  1805     06CB  0875               	movf	___awdiv@sign,w
  1806     06CC  1903               	btfsc	3,2
  1807     06CD  2ECF               	goto	u801
  1808     06CE  2ED0               	goto	u800
  1809     06CF                     u801:
  1810     06CF  2ED5               	goto	l1348
  1811     06D0                     u800:
  1812     06D0                     l1346:
  1813     06D0  09F6               	comf	___awdiv@quotient,f
  1814     06D1  09F7               	comf	___awdiv@quotient+1,f
  1815     06D2  0AF6               	incf	___awdiv@quotient,f
  1816     06D3  1903               	skipnz
  1817     06D4  0AF7               	incf	___awdiv@quotient+1,f
  1818     06D5                     l1348:
  1819     06D5  0877               	movf	___awdiv@quotient+1,w
  1820     06D6  00F1               	movwf	?___awdiv+1
  1821     06D7  0876               	movf	___awdiv@quotient,w
  1822     06D8  00F0               	movwf	?___awdiv
  1823     06D9                     l461:
  1824     06D9  0008               	return
  1825     06DA                     __end_of___awdiv:
  1826                           
  1827                           	psect	text6
  1828     0433                     __ptext6:	
  1829 ;; *************** function _Lcd_Write_String *****************
  1830 ;; Defined at:
  1831 ;;		line 98 in file "LCD.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;  a               1    wreg     PTR unsigned char 
  1834 ;;		 -> datos2(2), datos(2), 
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;  a               1    8[COMMON] PTR unsigned char 
  1837 ;;		 -> datos2(2), datos(2), 
  1838 ;;  i               2    6[COMMON] int 
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      void 
  1841 ;; Registers used:
  1842 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1848 ;;      Params:         0       0       0       0       0
  1849 ;;      Locals:         3       0       0       0       0
  1850 ;;      Temps:          1       0       0       0       0
  1851 ;;      Totals:         4       0       0       0       0
  1852 ;;Total ram usage:        4 bytes
  1853 ;; Hardware stack levels used: 1
  1854 ;; Hardware stack levels required when called: 2
  1855 ;; This function calls:
  1856 ;;		_Lcd_Write_Char
  1857 ;; This function is called by:
  1858 ;;		_main
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862     0433                     _Lcd_Write_String:	
  1863                           ;psect for function _Lcd_Write_String
  1864                           
  1865                           
  1866                           ;incstack = 0
  1867                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1868                           ;Lcd_Write_String@a stored from wreg
  1869     0433  00F8               	movwf	Lcd_Write_String@a
  1870     0434                     l1296:
  1871                           
  1872                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  1873     0434  01F6               	clrf	Lcd_Write_String@i
  1874     0435  01F7               	clrf	Lcd_Write_String@i+1
  1875     0436  2C48               	goto	l1302
  1876     0437                     l1298:
  1877                           
  1878                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  1879     0437  0876               	movf	Lcd_Write_String@i,w
  1880     0438  0778               	addwf	Lcd_Write_String@a,w
  1881     0439  00F5               	movwf	??_Lcd_Write_String
  1882     043A  0875               	movf	??_Lcd_Write_String,w
  1883     043B  0084               	movwf	4
  1884     043C  0800               	movf	0,w
  1885     043D  120A  118A  24A4  120A  118A  	fcall	_Lcd_Write_Char
  1886     0442                     l1300:
  1887     0442  3001               	movlw	1
  1888     0443  07F6               	addwf	Lcd_Write_String@i,f
  1889     0444  1803               	skipnc
  1890     0445  0AF7               	incf	Lcd_Write_String@i+1,f
  1891     0446  3000               	movlw	0
  1892     0447  07F7               	addwf	Lcd_Write_String@i+1,f
  1893     0448                     l1302:
  1894     0448  0876               	movf	Lcd_Write_String@i,w
  1895     0449  0778               	addwf	Lcd_Write_String@a,w
  1896     044A  00F5               	movwf	??_Lcd_Write_String
  1897     044B  0875               	movf	??_Lcd_Write_String,w
  1898     044C  0084               	movwf	4
  1899     044D  1383               	bcf	3,7	;select IRP bank0
  1900     044E  0800               	movf	0,w
  1901     044F  1D03               	btfss	3,2
  1902     0450  2C52               	goto	u701
  1903     0451  2C53               	goto	u700
  1904     0452                     u701:
  1905     0452  2C37               	goto	l1298
  1906     0453                     u700:
  1907     0453                     l104:
  1908     0453  0008               	return
  1909     0454                     __end_of_Lcd_Write_String:
  1910                           
  1911                           	psect	text7
  1912     04A4                     __ptext7:	
  1913 ;; *************** function _Lcd_Write_Char *****************
  1914 ;; Defined at:
  1915 ;;		line 83 in file "LCD.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  a               1    wreg     unsigned char 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  a               1    4[COMMON] unsigned char 
  1920 ;;  y               1    3[COMMON] unsigned char 
  1921 ;;  temp            1    2[COMMON] unsigned char 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  1    wreg      void 
  1924 ;; Registers used:
  1925 ;;		wreg, status,2, status,0, pclath, cstack
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1931 ;;      Params:         0       0       0       0       0
  1932 ;;      Locals:         3       0       0       0       0
  1933 ;;      Temps:          1       0       0       0       0
  1934 ;;      Totals:         4       0       0       0       0
  1935 ;;Total ram usage:        4 bytes
  1936 ;; Hardware stack levels used: 1
  1937 ;; Hardware stack levels required when called: 1
  1938 ;; This function calls:
  1939 ;;		_Lcd_Port
  1940 ;; This function is called by:
  1941 ;;		_Lcd_Write_String
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945     04A4                     _Lcd_Write_Char:	
  1946                           ;psect for function _Lcd_Write_Char
  1947                           
  1948                           
  1949                           ;incstack = 0
  1950                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1951                           ;Lcd_Write_Char@a stored from wreg
  1952     04A4  00F4               	movwf	Lcd_Write_Char@a
  1953     04A5                     l1218:
  1954                           
  1955                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  1956     04A5  0874               	movf	Lcd_Write_Char@a,w
  1957     04A6  390F               	andlw	15
  1958     04A7  00F2               	movwf	Lcd_Write_Char@temp
  1959                           
  1960                           ;LCD.c: 86:     y = a & 0xF0;
  1961     04A8  0874               	movf	Lcd_Write_Char@a,w
  1962     04A9  39F0               	andlw	240
  1963     04AA  00F3               	movwf	Lcd_Write_Char@y
  1964     04AB                     l1220:
  1965                           
  1966                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  1967     04AB  1283               	bcf	3,5	;RP0=0, select bank0
  1968     04AC  1303               	bcf	3,6	;RP1=0, select bank0
  1969     04AD  1508               	bsf	8,2	;volatile
  1970     04AE                     l1222:
  1971                           
  1972                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  1973     04AE  0873               	movf	Lcd_Write_Char@y,w
  1974     04AF  00F1               	movwf	??_Lcd_Write_Char
  1975     04B0  3004               	movlw	4
  1976     04B1                     u645:
  1977     04B1  1003               	clrc
  1978     04B2  0CF1               	rrf	??_Lcd_Write_Char,f
  1979     04B3  3EFF               	addlw	-1
  1980     04B4  1D03               	skipz
  1981     04B5  2CB1               	goto	u645
  1982     04B6  0871               	movf	??_Lcd_Write_Char,w
  1983     04B7  120A  118A  2454  120A  118A  	fcall	_Lcd_Port
  1984     04BC                     l1224:
  1985                           
  1986                           ;LCD.c: 89:     RD3 = 1;
  1987     04BC  1283               	bcf	3,5	;RP0=0, select bank0
  1988     04BD  1303               	bcf	3,6	;RP1=0, select bank0
  1989     04BE  1588               	bsf	8,3	;volatile
  1990     04BF                     l1226:
  1991                           
  1992                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1993     04BF  301A               	movlw	26
  1994     04C0  00F1               	movwf	??_Lcd_Write_Char
  1995     04C1                     u1007:
  1996     04C1  0BF1               	decfsz	??_Lcd_Write_Char,f
  1997     04C2  2CC1               	goto	u1007
  1998     04C3  0000               	nop
  1999     04C4                     l1228:
  2000                           
  2001                           ;LCD.c: 91:     RD3 = 0;
  2002     04C4  1283               	bcf	3,5	;RP0=0, select bank0
  2003     04C5  1303               	bcf	3,6	;RP1=0, select bank0
  2004     04C6  1188               	bcf	8,3	;volatile
  2005     04C7                     l1230:
  2006                           
  2007                           ;LCD.c: 92:     Lcd_Port(temp);
  2008     04C7  0872               	movf	Lcd_Write_Char@temp,w
  2009     04C8  120A  118A  2454  120A  118A  	fcall	_Lcd_Port
  2010     04CD                     l1232:
  2011                           
  2012                           ;LCD.c: 93:     RD3 = 1;
  2013     04CD  1283               	bcf	3,5	;RP0=0, select bank0
  2014     04CE  1303               	bcf	3,6	;RP1=0, select bank0
  2015     04CF  1588               	bsf	8,3	;volatile
  2016     04D0                     l1234:
  2017                           
  2018                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2019     04D0  301A               	movlw	26
  2020     04D1  00F1               	movwf	??_Lcd_Write_Char
  2021     04D2                     u1017:
  2022     04D2  0BF1               	decfsz	??_Lcd_Write_Char,f
  2023     04D3  2CD2               	goto	u1017
  2024     04D4  0000               	nop
  2025     04D5                     l1236:
  2026                           
  2027                           ;LCD.c: 95:     RD3 = 0;
  2028     04D5  1283               	bcf	3,5	;RP0=0, select bank0
  2029     04D6  1303               	bcf	3,6	;RP1=0, select bank0
  2030     04D7  1188               	bcf	8,3	;volatile
  2031     04D8                     l98:
  2032     04D8  0008               	return
  2033     04D9                     __end_of_Lcd_Write_Char:
  2034                           
  2035                           	psect	text8
  2036     0511                     __ptext8:	
  2037 ;; *************** function _Lcd_Set_Cursor *****************
  2038 ;; Defined at:
  2039 ;;		line 48 in file "LCD.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;  a               1    wreg     unsigned char 
  2042 ;;  b               1    4[COMMON] unsigned char 
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;  a               1    6[COMMON] unsigned char 
  2045 ;;  temp            1    9[COMMON] unsigned char 
  2046 ;;  y               1    8[COMMON] unsigned char 
  2047 ;;  z               1    7[COMMON] unsigned char 
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      void 
  2050 ;; Registers used:
  2051 ;;		wreg, status,2, status,0, pclath, cstack
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2057 ;;      Params:         1       0       0       0       0
  2058 ;;      Locals:         4       0       0       0       0
  2059 ;;      Temps:          1       0       0       0       0
  2060 ;;      Totals:         6       0       0       0       0
  2061 ;;Total ram usage:        6 bytes
  2062 ;; Hardware stack levels used: 1
  2063 ;; Hardware stack levels required when called: 2
  2064 ;; This function calls:
  2065 ;;		_Lcd_Cmd
  2066 ;; This function is called by:
  2067 ;;		_main
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071     0511                     _Lcd_Set_Cursor:	
  2072                           ;psect for function _Lcd_Set_Cursor
  2073                           
  2074                           
  2075                           ;incstack = 0
  2076                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2077                           ;Lcd_Set_Cursor@a stored from wreg
  2078     0511  00F6               	movwf	Lcd_Set_Cursor@a
  2079     0512                     l1266:
  2080                           
  2081                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2082     0512  0376               	decf	Lcd_Set_Cursor@a,w
  2083     0513  1D03               	btfss	3,2
  2084     0514  2D16               	goto	u661
  2085     0515  2D17               	goto	u660
  2086     0516                     u661:
  2087     0516  2D34               	goto	l1276
  2088     0517                     u660:
  2089     0517                     l1268:
  2090                           
  2091                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2092     0517  0874               	movf	Lcd_Set_Cursor@b,w
  2093     0518  3E7F               	addlw	127
  2094     0519  00F9               	movwf	Lcd_Set_Cursor@temp
  2095                           
  2096                           ;LCD.c: 52:         z = temp >> 4;
  2097     051A  0879               	movf	Lcd_Set_Cursor@temp,w
  2098     051B  00F5               	movwf	??_Lcd_Set_Cursor
  2099     051C  3004               	movlw	4
  2100     051D                     u675:
  2101     051D  1003               	clrc
  2102     051E  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2103     051F  3EFF               	addlw	-1
  2104     0520  1D03               	skipz
  2105     0521  2D1D               	goto	u675
  2106     0522  0875               	movf	??_Lcd_Set_Cursor,w
  2107     0523  00F7               	movwf	Lcd_Set_Cursor@z
  2108     0524                     l1270:
  2109                           
  2110                           ;LCD.c: 53:         y = temp & 0x0F;
  2111     0524  0879               	movf	Lcd_Set_Cursor@temp,w
  2112     0525  390F               	andlw	15
  2113     0526  00F8               	movwf	Lcd_Set_Cursor@y
  2114     0527                     l1272:
  2115                           
  2116                           ;LCD.c: 54:         Lcd_Cmd(z);
  2117     0527  0877               	movf	Lcd_Set_Cursor@z,w
  2118     0528  120A  118A  23FF  120A  118A  	fcall	_Lcd_Cmd
  2119     052D                     l1274:
  2120                           
  2121                           ;LCD.c: 55:         Lcd_Cmd(y);
  2122     052D  0878               	movf	Lcd_Set_Cursor@y,w
  2123     052E  120A  118A  23FF  120A  118A  	fcall	_Lcd_Cmd
  2124                           
  2125                           ;LCD.c: 56:     } else if (a == 2) {
  2126     0533  2D56               	goto	l92
  2127     0534                     l1276:
  2128     0534  3002               	movlw	2
  2129     0535  0676               	xorwf	Lcd_Set_Cursor@a,w
  2130     0536  1D03               	btfss	3,2
  2131     0537  2D39               	goto	u681
  2132     0538  2D3A               	goto	u680
  2133     0539                     u681:
  2134     0539  2D56               	goto	l92
  2135     053A                     u680:
  2136     053A                     l1278:
  2137                           
  2138                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2139     053A  0874               	movf	Lcd_Set_Cursor@b,w
  2140     053B  3EBF               	addlw	191
  2141     053C  00F9               	movwf	Lcd_Set_Cursor@temp
  2142                           
  2143                           ;LCD.c: 58:         z = temp >> 4;
  2144     053D  0879               	movf	Lcd_Set_Cursor@temp,w
  2145     053E  00F5               	movwf	??_Lcd_Set_Cursor
  2146     053F  3004               	movlw	4
  2147     0540                     u695:
  2148     0540  1003               	clrc
  2149     0541  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2150     0542  3EFF               	addlw	-1
  2151     0543  1D03               	skipz
  2152     0544  2D40               	goto	u695
  2153     0545  0875               	movf	??_Lcd_Set_Cursor,w
  2154     0546  00F7               	movwf	Lcd_Set_Cursor@z
  2155     0547                     l1280:
  2156                           
  2157                           ;LCD.c: 59:         y = temp & 0x0F;
  2158     0547  0879               	movf	Lcd_Set_Cursor@temp,w
  2159     0548  390F               	andlw	15
  2160     0549  00F8               	movwf	Lcd_Set_Cursor@y
  2161     054A                     l1282:
  2162                           
  2163                           ;LCD.c: 60:         Lcd_Cmd(z);
  2164     054A  0877               	movf	Lcd_Set_Cursor@z,w
  2165     054B  120A  118A  23FF  120A  118A  	fcall	_Lcd_Cmd
  2166     0550                     l1284:
  2167                           
  2168                           ;LCD.c: 61:         Lcd_Cmd(y);
  2169     0550  0878               	movf	Lcd_Set_Cursor@y,w
  2170     0551  120A  118A  23FF  120A  118A  	fcall	_Lcd_Cmd
  2171     0556                     l92:
  2172     0556  0008               	return
  2173     0557                     __end_of_Lcd_Set_Cursor:
  2174                           
  2175                           	psect	text9
  2176     05B0                     __ptext9:	
  2177 ;; *************** function _Lcd_Init *****************
  2178 ;; Defined at:
  2179 ;;		line 65 in file "LCD.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;		None
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;		None
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		wreg, status,2, status,0, pclath, cstack
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2193 ;;      Params:         0       0       0       0       0
  2194 ;;      Locals:         0       0       0       0       0
  2195 ;;      Temps:          2       0       0       0       0
  2196 ;;      Totals:         2       0       0       0       0
  2197 ;;Total ram usage:        2 bytes
  2198 ;; Hardware stack levels used: 1
  2199 ;; Hardware stack levels required when called: 2
  2200 ;; This function calls:
  2201 ;;		_Lcd_Cmd
  2202 ;;		_Lcd_Port
  2203 ;; This function is called by:
  2204 ;;		_main
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208     05B0                     _Lcd_Init:	
  2209                           ;psect for function _Lcd_Init
  2210                           
  2211     05B0                     l1286:	
  2212                           ;incstack = 0
  2213                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2214                           
  2215                           
  2216                           ;LCD.c: 66:     Lcd_Port(0x00);
  2217     05B0  3000               	movlw	0
  2218     05B1  120A  118A  2454  120A  118A  	fcall	_Lcd_Port
  2219     05B6                     l1288:
  2220                           
  2221                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2222     05B6  3034               	movlw	52
  2223     05B7  00F5               	movwf	??_Lcd_Init+1
  2224     05B8  30F1               	movlw	241
  2225     05B9  00F4               	movwf	??_Lcd_Init
  2226     05BA                     u1027:
  2227     05BA  0BF4               	decfsz	??_Lcd_Init,f
  2228     05BB  2DBA               	goto	u1027
  2229     05BC  0BF5               	decfsz	??_Lcd_Init+1,f
  2230     05BD  2DBA               	goto	u1027
  2231     05BE  2DBF               	nop2
  2232     05BF                     l1290:
  2233                           
  2234                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2235     05BF  3003               	movlw	3
  2236     05C0  120A  118A  23FF  120A  118A  	fcall	_Lcd_Cmd
  2237                           
  2238                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2239     05C5  300D               	movlw	13
  2240     05C6  00F5               	movwf	??_Lcd_Init+1
  2241     05C7  30FB               	movlw	251
  2242     05C8  00F4               	movwf	??_Lcd_Init
  2243     05C9                     u1037:
  2244     05C9  0BF4               	decfsz	??_Lcd_Init,f
  2245     05CA  2DC9               	goto	u1037
  2246     05CB  0BF5               	decfsz	??_Lcd_Init+1,f
  2247     05CC  2DC9               	goto	u1037
  2248     05CD  2DCE               	nop2
  2249     05CE                     l1292:
  2250                           
  2251                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2252     05CE  3003               	movlw	3
  2253     05CF  120A  118A  23FF  120A  118A  	fcall	_Lcd_Cmd
  2254     05D4                     l1294:
  2255                           
  2256                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2257     05D4  301D               	movlw	29
  2258     05D5  00F5               	movwf	??_Lcd_Init+1
  2259     05D6  3091               	movlw	145
  2260     05D7  00F4               	movwf	??_Lcd_Init
  2261     05D8                     u1047:
  2262     05D8  0BF4               	decfsz	??_Lcd_Init,f
  2263     05D9  2DD8               	goto	u1047
  2264     05DA  0BF5               	decfsz	??_Lcd_Init+1,f
  2265     05DB  2DD8               	goto	u1047
  2266                           
  2267                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2268     05DC  3003               	movlw	3
  2269     05DD  120A  118A  23FF  120A  118A  	fcall	_Lcd_Cmd
  2270                           
  2271                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2272     05E2  3002               	movlw	2
  2273     05E3  120A  118A  23FF  120A  118A  	fcall	_Lcd_Cmd
  2274                           
  2275                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  2276     05E8  3002               	movlw	2
  2277     05E9  120A  118A  23FF  120A  118A  	fcall	_Lcd_Cmd
  2278                           
  2279                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  2280     05EE  3008               	movlw	8
  2281     05EF  120A  118A  23FF  120A  118A  	fcall	_Lcd_Cmd
  2282                           
  2283                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  2284     05F4  3000               	movlw	0
  2285     05F5  120A  118A  23FF  120A  118A  	fcall	_Lcd_Cmd
  2286                           
  2287                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  2288     05FA  300C               	movlw	12
  2289     05FB  120A  118A  23FF  120A  118A  	fcall	_Lcd_Cmd
  2290                           
  2291                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  2292     0600  3000               	movlw	0
  2293     0601  120A  118A  23FF  120A  118A  	fcall	_Lcd_Cmd
  2294                           
  2295                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  2296     0606  3006               	movlw	6
  2297     0607  120A  118A  23FF  120A  118A  	fcall	_Lcd_Cmd
  2298     060C                     l95:
  2299     060C  0008               	return
  2300     060D                     __end_of_Lcd_Init:
  2301                           
  2302                           	psect	text10
  2303     03FF                     __ptext10:	
  2304 ;; *************** function _Lcd_Cmd *****************
  2305 ;; Defined at:
  2306 ;;		line 35 in file "LCD.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;  a               1    wreg     unsigned char 
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;  a               1    3[COMMON] unsigned char 
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  1    wreg      void 
  2313 ;; Registers used:
  2314 ;;		wreg, status,2, status,0, pclath, cstack
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2320 ;;      Params:         0       0       0       0       0
  2321 ;;      Locals:         1       0       0       0       0
  2322 ;;      Temps:          2       0       0       0       0
  2323 ;;      Totals:         3       0       0       0       0
  2324 ;;Total ram usage:        3 bytes
  2325 ;; Hardware stack levels used: 1
  2326 ;; Hardware stack levels required when called: 1
  2327 ;; This function calls:
  2328 ;;		_Lcd_Port
  2329 ;; This function is called by:
  2330 ;;		_Lcd_Set_Cursor
  2331 ;;		_Lcd_Init
  2332 ;;		_Lcd_Clear
  2333 ;;		_Lcd_Shift_Right
  2334 ;;		_Lcd_Shift_Left
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338     03FF                     _Lcd_Cmd:	
  2339                           ;psect for function _Lcd_Cmd
  2340                           
  2341                           
  2342                           ;incstack = 0
  2343                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2344                           ;Lcd_Cmd@a stored from wreg
  2345     03FF  00F3               	movwf	Lcd_Cmd@a
  2346     0400                     l1208:
  2347                           
  2348                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  2349     0400  1283               	bcf	3,5	;RP0=0, select bank0
  2350     0401  1303               	bcf	3,6	;RP1=0, select bank0
  2351     0402  1108               	bcf	8,2	;volatile
  2352     0403                     l1210:
  2353                           
  2354                           ;LCD.c: 37:     Lcd_Port(a);
  2355     0403  0873               	movf	Lcd_Cmd@a,w
  2356     0404  120A  118A  2454  120A  118A  	fcall	_Lcd_Port
  2357     0409                     l1212:
  2358                           
  2359                           ;LCD.c: 38:     RD3 = 1;
  2360     0409  1283               	bcf	3,5	;RP0=0, select bank0
  2361     040A  1303               	bcf	3,6	;RP1=0, select bank0
  2362     040B  1588               	bsf	8,3	;volatile
  2363     040C                     l1214:
  2364                           
  2365                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2366     040C  300B               	movlw	11
  2367     040D  00F2               	movwf	??_Lcd_Cmd+1
  2368     040E  3062               	movlw	98
  2369     040F  00F1               	movwf	??_Lcd_Cmd
  2370     0410                     u1057:
  2371     0410  0BF1               	decfsz	??_Lcd_Cmd,f
  2372     0411  2C10               	goto	u1057
  2373     0412  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2374     0413  2C10               	goto	u1057
  2375     0414  0000               	nop
  2376     0415                     l1216:
  2377                           
  2378                           ;LCD.c: 40:     RD3 = 0;
  2379     0415  1283               	bcf	3,5	;RP0=0, select bank0
  2380     0416  1303               	bcf	3,6	;RP1=0, select bank0
  2381     0417  1188               	bcf	8,3	;volatile
  2382     0418                     l83:
  2383     0418  0008               	return
  2384     0419                     __end_of_Lcd_Cmd:
  2385                           
  2386                           	psect	text11
  2387     0454                     __ptext11:	
  2388 ;; *************** function _Lcd_Port *****************
  2389 ;; Defined at:
  2390 ;;		line 13 in file "LCD.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;  a               1    wreg     unsigned char 
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;  a               1    0[COMMON] unsigned char 
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  1    wreg      void 
  2397 ;; Registers used:
  2398 ;;		wreg
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2404 ;;      Params:         0       0       0       0       0
  2405 ;;      Locals:         1       0       0       0       0
  2406 ;;      Temps:          0       0       0       0       0
  2407 ;;      Totals:         1       0       0       0       0
  2408 ;;Total ram usage:        1 bytes
  2409 ;; Hardware stack levels used: 1
  2410 ;; This function calls:
  2411 ;;		Nothing
  2412 ;; This function is called by:
  2413 ;;		_Lcd_Cmd
  2414 ;;		_Lcd_Init
  2415 ;;		_Lcd_Write_Char
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419     0454                     _Lcd_Port:	
  2420                           ;psect for function _Lcd_Port
  2421                           
  2422                           
  2423                           ;incstack = 0
  2424                           ; Regs used in _Lcd_Port: [wreg]
  2425                           ;Lcd_Port@a stored from wreg
  2426     0454  00F0               	movwf	Lcd_Port@a
  2427     0455                     l1156:
  2428                           
  2429                           ;LCD.c: 14:     if (a & 1)
  2430     0455  1C70               	btfss	Lcd_Port@a,0
  2431     0456  2C58               	goto	u501
  2432     0457  2C59               	goto	u500
  2433     0458                     u501:
  2434     0458  2C5D               	goto	l72
  2435     0459                     u500:
  2436     0459                     l1158:
  2437                           
  2438                           ;LCD.c: 15:         RD4 = 1;
  2439     0459  1283               	bcf	3,5	;RP0=0, select bank0
  2440     045A  1303               	bcf	3,6	;RP1=0, select bank0
  2441     045B  1608               	bsf	8,4	;volatile
  2442     045C  2C60               	goto	l73
  2443     045D                     l72:	
  2444                           ;LCD.c: 16:     else
  2445                           
  2446                           
  2447                           ;LCD.c: 17:         RD4 = 0;
  2448     045D  1283               	bcf	3,5	;RP0=0, select bank0
  2449     045E  1303               	bcf	3,6	;RP1=0, select bank0
  2450     045F  1208               	bcf	8,4	;volatile
  2451     0460                     l73:
  2452                           
  2453                           ;LCD.c: 19:     if (a & 2)
  2454     0460  1CF0               	btfss	Lcd_Port@a,1
  2455     0461  2C63               	goto	u511
  2456     0462  2C64               	goto	u510
  2457     0463                     u511:
  2458     0463  2C66               	goto	l74
  2459     0464                     u510:
  2460     0464                     l1160:
  2461                           
  2462                           ;LCD.c: 20:         RD5 = 1;
  2463     0464  1688               	bsf	8,5	;volatile
  2464     0465  2C67               	goto	l75
  2465     0466                     l74:	
  2466                           ;LCD.c: 21:     else
  2467                           
  2468                           
  2469                           ;LCD.c: 22:         RD5 = 0;
  2470     0466  1288               	bcf	8,5	;volatile
  2471     0467                     l75:
  2472                           
  2473                           ;LCD.c: 24:     if (a & 4)
  2474     0467  1D70               	btfss	Lcd_Port@a,2
  2475     0468  2C6A               	goto	u521
  2476     0469  2C6B               	goto	u520
  2477     046A                     u521:
  2478     046A  2C6D               	goto	l76
  2479     046B                     u520:
  2480     046B                     l1162:
  2481                           
  2482                           ;LCD.c: 25:         RD6 = 1;
  2483     046B  1708               	bsf	8,6	;volatile
  2484     046C  2C6E               	goto	l77
  2485     046D                     l76:	
  2486                           ;LCD.c: 26:     else
  2487                           
  2488                           
  2489                           ;LCD.c: 27:         RD6 = 0;
  2490     046D  1308               	bcf	8,6	;volatile
  2491     046E                     l77:
  2492                           
  2493                           ;LCD.c: 29:     if (a & 8)
  2494     046E  1DF0               	btfss	Lcd_Port@a,3
  2495     046F  2C71               	goto	u531
  2496     0470  2C72               	goto	u530
  2497     0471                     u531:
  2498     0471  2C74               	goto	l78
  2499     0472                     u530:
  2500     0472                     l1164:
  2501                           
  2502                           ;LCD.c: 30:         RD7 = 1;
  2503     0472  1788               	bsf	8,7	;volatile
  2504     0473  2C75               	goto	l80
  2505     0474                     l78:	
  2506                           ;LCD.c: 31:     else
  2507                           
  2508                           
  2509                           ;LCD.c: 32:         RD7 = 0;
  2510     0474  1388               	bcf	8,7	;volatile
  2511     0475                     l80:
  2512     0475  0008               	return
  2513     0476                     __end_of_Lcd_Port:
  2514                           
  2515                           	psect	text12
  2516     03E8                     __ptext12:	
  2517 ;; *************** function _I2C_Master_Write *****************
  2518 ;; Defined at:
  2519 ;;		line 65 in file "I2C.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;  d               2    0[COMMON] unsigned int 
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;		None
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  1    wreg      void 
  2526 ;; Registers used:
  2527 ;;		wreg, status,2, status,0, pclath, cstack
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2533 ;;      Params:         2       0       0       0       0
  2534 ;;      Locals:         0       0       0       0       0
  2535 ;;      Temps:          0       0       0       0       0
  2536 ;;      Totals:         2       0       0       0       0
  2537 ;;Total ram usage:        2 bytes
  2538 ;; Hardware stack levels used: 1
  2539 ;; Hardware stack levels required when called: 1
  2540 ;; This function calls:
  2541 ;;		_I2C_Master_Wait
  2542 ;; This function is called by:
  2543 ;;		_main
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547     03E8                     _I2C_Master_Write:	
  2548                           ;psect for function _I2C_Master_Write
  2549                           
  2550     03E8                     l1246:	
  2551                           ;incstack = 0
  2552                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2553                           
  2554                           
  2555                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2556     03E8  120A  118A  23F2  120A  118A  	fcall	_I2C_Master_Wait
  2557     03ED                     l1248:
  2558                           
  2559                           ;I2C.c: 68:     SSPBUF = d;
  2560     03ED  0870               	movf	I2C_Master_Write@d,w
  2561     03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2562     03EF  1303               	bcf	3,6	;RP1=0, select bank0
  2563     03F0  0093               	movwf	19	;volatile
  2564     03F1                     l47:
  2565     03F1  0008               	return
  2566     03F2                     __end_of_I2C_Master_Write:
  2567                           
  2568                           	psect	text13
  2569     03DF                     __ptext13:	
  2570 ;; *************** function _I2C_Master_Stop *****************
  2571 ;; Defined at:
  2572 ;;		line 55 in file "I2C.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;		None
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;		None
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  1    wreg      void 
  2579 ;; Registers used:
  2580 ;;		wreg, status,2, status,0, pclath, cstack
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2586 ;;      Params:         0       0       0       0       0
  2587 ;;      Locals:         0       0       0       0       0
  2588 ;;      Temps:          0       0       0       0       0
  2589 ;;      Totals:         0       0       0       0       0
  2590 ;;Total ram usage:        0 bytes
  2591 ;; Hardware stack levels used: 1
  2592 ;; Hardware stack levels required when called: 1
  2593 ;; This function calls:
  2594 ;;		_I2C_Master_Wait
  2595 ;; This function is called by:
  2596 ;;		_main
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600     03DF                     _I2C_Master_Stop:	
  2601                           ;psect for function _I2C_Master_Stop
  2602                           
  2603     03DF                     l1242:	
  2604                           ;incstack = 0
  2605                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2606                           
  2607                           
  2608                           ;I2C.c: 57:     I2C_Master_Wait();
  2609     03DF  120A  118A  23F2  120A  118A  	fcall	_I2C_Master_Wait
  2610     03E4                     l1244:
  2611                           
  2612                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2613     03E4  1683               	bsf	3,5	;RP0=1, select bank1
  2614     03E5  1303               	bcf	3,6	;RP1=0, select bank1
  2615     03E6  1511               	bsf	17,2	;volatile
  2616     03E7                     l44:
  2617     03E7  0008               	return
  2618     03E8                     __end_of_I2C_Master_Stop:
  2619                           
  2620                           	psect	text14
  2621     03D6                     __ptext14:	
  2622 ;; *************** function _I2C_Master_Start *****************
  2623 ;; Defined at:
  2624 ;;		line 39 in file "I2C.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;		None
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;		None
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  1    wreg      void 
  2631 ;; Registers used:
  2632 ;;		wreg, status,2, status,0, pclath, cstack
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2638 ;;      Params:         0       0       0       0       0
  2639 ;;      Locals:         0       0       0       0       0
  2640 ;;      Temps:          0       0       0       0       0
  2641 ;;      Totals:         0       0       0       0       0
  2642 ;;Total ram usage:        0 bytes
  2643 ;; Hardware stack levels used: 1
  2644 ;; Hardware stack levels required when called: 1
  2645 ;; This function calls:
  2646 ;;		_I2C_Master_Wait
  2647 ;; This function is called by:
  2648 ;;		_main
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652     03D6                     _I2C_Master_Start:	
  2653                           ;psect for function _I2C_Master_Start
  2654                           
  2655     03D6                     l1238:	
  2656                           ;incstack = 0
  2657                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2658                           
  2659                           
  2660                           ;I2C.c: 41:     I2C_Master_Wait();
  2661     03D6  120A  118A  23F2  120A  118A  	fcall	_I2C_Master_Wait
  2662     03DB                     l1240:
  2663                           
  2664                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2665     03DB  1683               	bsf	3,5	;RP0=1, select bank1
  2666     03DC  1303               	bcf	3,6	;RP1=0, select bank1
  2667     03DD  1411               	bsf	17,0	;volatile
  2668     03DE                     l38:
  2669     03DE  0008               	return
  2670     03DF                     __end_of_I2C_Master_Start:
  2671                           
  2672                           	psect	text15
  2673     0476                     __ptext15:	
  2674 ;; *************** function _I2C_Master_Read *****************
  2675 ;; Defined at:
  2676 ;;		line 74 in file "I2C.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;  a               2    0[COMMON] unsigned short 
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;  temp            2    4[COMMON] unsigned short 
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  2    0[COMMON] unsigned short 
  2683 ;; Registers used:
  2684 ;;		wreg, status,2, status,0, pclath, cstack
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2690 ;;      Params:         2       0       0       0       0
  2691 ;;      Locals:         2       0       0       0       0
  2692 ;;      Temps:          2       0       0       0       0
  2693 ;;      Totals:         6       0       0       0       0
  2694 ;;Total ram usage:        6 bytes
  2695 ;; Hardware stack levels used: 1
  2696 ;; Hardware stack levels required when called: 1
  2697 ;; This function calls:
  2698 ;;		_I2C_Master_Wait
  2699 ;; This function is called by:
  2700 ;;		_main
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704     0476                     _I2C_Master_Read:	
  2705                           ;psect for function _I2C_Master_Read
  2706                           
  2707     0476                     l1250:	
  2708                           ;incstack = 0
  2709                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2710                           
  2711                           
  2712                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2713     0476  120A  118A  23F2  120A  118A  	fcall	_I2C_Master_Wait
  2714     047B                     l1252:
  2715                           
  2716                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2717     047B  1683               	bsf	3,5	;RP0=1, select bank1
  2718     047C  1303               	bcf	3,6	;RP1=0, select bank1
  2719     047D  1591               	bsf	17,3	;volatile
  2720                           
  2721                           ;I2C.c: 79:     I2C_Master_Wait();
  2722     047E  120A  118A  23F2  120A  118A  	fcall	_I2C_Master_Wait
  2723     0483                     l1254:
  2724                           
  2725                           ;I2C.c: 80:     temp = SSPBUF;
  2726     0483  1283               	bcf	3,5	;RP0=0, select bank0
  2727     0484  1303               	bcf	3,6	;RP1=0, select bank0
  2728     0485  0813               	movf	19,w	;volatile
  2729     0486  00F2               	movwf	??_I2C_Master_Read
  2730     0487  01F3               	clrf	??_I2C_Master_Read+1
  2731     0488  0872               	movf	??_I2C_Master_Read,w
  2732     0489  00F4               	movwf	I2C_Master_Read@temp
  2733     048A  0873               	movf	??_I2C_Master_Read+1,w
  2734     048B  00F5               	movwf	I2C_Master_Read@temp+1
  2735     048C                     l1256:
  2736                           
  2737                           ;I2C.c: 81:     I2C_Master_Wait();
  2738     048C  120A  118A  23F2  120A  118A  	fcall	_I2C_Master_Wait
  2739     0491                     l1258:
  2740                           
  2741                           ;I2C.c: 82:     if(a == 1){
  2742     0491  0370               	decf	I2C_Master_Read@a,w
  2743     0492  0471               	iorwf	I2C_Master_Read@a+1,w
  2744     0493  1D03               	btfss	3,2
  2745     0494  2C96               	goto	u651
  2746     0495  2C97               	goto	u650
  2747     0496                     u651:
  2748     0496  2C9B               	goto	l50
  2749     0497                     u650:
  2750     0497                     l1260:
  2751                           
  2752                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2753     0497  1683               	bsf	3,5	;RP0=1, select bank1
  2754     0498  1303               	bcf	3,6	;RP1=0, select bank1
  2755     0499  1291               	bcf	17,5	;volatile
  2756                           
  2757                           ;I2C.c: 84:     }else{
  2758     049A  2C9E               	goto	l51
  2759     049B                     l50:
  2760                           
  2761                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2762     049B  1683               	bsf	3,5	;RP0=1, select bank1
  2763     049C  1303               	bcf	3,6	;RP1=0, select bank1
  2764     049D  1691               	bsf	17,5	;volatile
  2765     049E                     l51:	
  2766                           ;I2C.c: 86:     }
  2767                           
  2768                           
  2769                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2770     049E  1611               	bsf	17,4	;volatile
  2771     049F                     l1262:
  2772                           
  2773                           ;I2C.c: 88:     return temp;
  2774     049F  0875               	movf	I2C_Master_Read@temp+1,w
  2775     04A0  00F1               	movwf	?_I2C_Master_Read+1
  2776     04A1  0874               	movf	I2C_Master_Read@temp,w
  2777     04A2  00F0               	movwf	?_I2C_Master_Read
  2778     04A3                     l52:
  2779     04A3  0008               	return
  2780     04A4                     __end_of_I2C_Master_Read:
  2781                           
  2782                           	psect	text16
  2783     03F2                     __ptext16:	
  2784 ;; *************** function _I2C_Master_Wait *****************
  2785 ;; Defined at:
  2786 ;;		line 32 in file "I2C.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;		None
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;		None
  2791 ;; Return value:  Size  Location     Type
  2792 ;;                  1    wreg      void 
  2793 ;; Registers used:
  2794 ;;		wreg, status,2
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2800 ;;      Params:         0       0       0       0       0
  2801 ;;      Locals:         0       0       0       0       0
  2802 ;;      Temps:          0       0       0       0       0
  2803 ;;      Totals:         0       0       0       0       0
  2804 ;;Total ram usage:        0 bytes
  2805 ;; Hardware stack levels used: 1
  2806 ;; This function calls:
  2807 ;;		Nothing
  2808 ;; This function is called by:
  2809 ;;		_I2C_Master_Start
  2810 ;;		_I2C_Master_Stop
  2811 ;;		_I2C_Master_Write
  2812 ;;		_I2C_Master_Read
  2813 ;;		_I2C_Master_RepeatedStart
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           
  2817     03F2                     _I2C_Master_Wait:	
  2818                           ;psect for function _I2C_Master_Wait
  2819                           
  2820     03F2                     l1204:	
  2821                           ;incstack = 0
  2822                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2823                           
  2824     03F2                     l32:	
  2825                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2826                           
  2827     03F2  1683               	bsf	3,5	;RP0=1, select bank1
  2828     03F3  1303               	bcf	3,6	;RP1=0, select bank1
  2829     03F4  1914               	btfsc	20,2	;volatile
  2830     03F5  2BF7               	goto	u621
  2831     03F6  2BF8               	goto	u620
  2832     03F7                     u621:
  2833     03F7  2BF2               	goto	l32
  2834     03F8                     u620:
  2835     03F8                     l1206:
  2836     03F8  0811               	movf	17,w	;volatile
  2837     03F9  391F               	andlw	31
  2838     03FA  1D03               	btfss	3,2
  2839     03FB  2BFD               	goto	u631
  2840     03FC  2BFE               	goto	u630
  2841     03FD                     u631:
  2842     03FD  2BF2               	goto	l32
  2843     03FE                     u630:
  2844     03FE                     l35:
  2845     03FE  0008               	return
  2846     03FF                     __end_of_I2C_Master_Wait:
  2847     007E                     btemp	set	126	;btemp
  2848     007E                     wtemp0	set	126
  2849                           
  2850                           	psect	idloc
  2851                           
  2852                           ;Config register IDLOC0 @ 0x2000
  2853                           ;	unspecified, using default values
  2854     2000                     	org	8192
  2855     2000  3FFF               	dw	16383
  2856                           
  2857                           ;Config register IDLOC1 @ 0x2001
  2858                           ;	unspecified, using default values
  2859     2001                     	org	8193
  2860     2001  3FFF               	dw	16383
  2861                           
  2862                           ;Config register IDLOC2 @ 0x2002
  2863                           ;	unspecified, using default values
  2864     2002                     	org	8194
  2865     2002  3FFF               	dw	16383
  2866                           
  2867                           ;Config register IDLOC3 @ 0x2003
  2868                           ;	unspecified, using default values
  2869     2003                     	org	8195
  2870     2003  3FFF               	dw	16383
  2871                           
  2872                           	psect	config
  2873                           
  2874                           ;Config register CONFIG1 @ 0x2007
  2875                           ;	Oscillator Selection bits
  2876                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  2877                           ;	Watchdog Timer Enable bit
  2878                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2879                           ;	Power-up Timer Enable bit
  2880                           ;	PWRTE = OFF, PWRT disabled
  2881                           ;	RE3/MCLR pin function select bit
  2882                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2883                           ;	Code Protection bit
  2884                           ;	CP = OFF, Program memory code protection is disabled
  2885                           ;	Data Code Protection bit
  2886                           ;	CPD = OFF, Data memory code protection is disabled
  2887                           ;	Brown Out Reset Selection bits
  2888                           ;	BOREN = OFF, BOR disabled
  2889                           ;	Internal External Switchover bit
  2890                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2891                           ;	Fail-Safe Clock Monitor Enabled bit
  2892                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2893                           ;	Low Voltage Programming Enable bit
  2894                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2895                           ;	In-Circuit Debugger Mode bit
  2896                           ;	DEBUG = 0x1, unprogrammed default
  2897     2007                     	org	8199
  2898     2007  20D6               	dw	8406
  2899                           
  2900                           ;Config register CONFIG2 @ 0x2008
  2901                           ;	Brown-out Reset Selection bit
  2902                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2903                           ;	Flash Program Memory Self Write Enable bits
  2904                           ;	WRT = OFF, Write protection off
  2905     2008                     	org	8200
  2906     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    15
    Data        1
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 2
		 -> datos2(BANK0[2]), datos(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _I2C_Master_Init->___lldiv
    ___awmod->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init
    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4919
                                              8 BANK0      2     2      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     792
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     792
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     872
                                              8 COMMON     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     876
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     334
                                              5 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     532
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     402
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     121
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _setup
     _I2C_Master_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      16       5       27.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      24      12        0.0%
ABS                  0      0      24       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Aug 25 09:20:43 2023

                       _s 0020                         _x 0025                         _y 0024  
                       _z 0035                         pc 0002                        l32 03F2  
                      l50 049B                        l35 03FE                        l51 049E  
                      l52 04A3                        l44 03E7                        l29 0510  
                      l38 03DE                        l47 03F1                        l80 0475  
                      l72 045D                        l73 0460                        l74 0466  
                      l75 0467                        l83 0418                        l76 046D  
                      l92 0556                        l77 046E                        l78 0474  
                      l95 060C                        l98 04D8              ___awdiv@sign 0075  
                      fsr 0004                       l104 0453                       l222 0432  
                     l216 06F3                       l344 0672                       l461 06D9  
                     l474 05AF                       _GIE 005F                       _RD3 0043  
                     _RD4 0044                       _RD5 0045                       _RD6 0046  
                     _RD7 0047                       u500 0459                       u501 0458  
                     u510 0464                       u511 0463                       u520 046B  
                     u600 066A                       u521 046A                       u601 0669  
                     u530 0472                       u610 04F0                       u531 0471  
                     u620 03F8                       u700 0453                       u540 061D  
                     u621 03F7                       u701 0452                       u541 061C  
                     u630 03FE                       u710 0678                       u631 03FD  
                     u711 0677                       u615 04EB                       u800 06D0  
                     u720 0683                       u560 0631                       u801 06CF  
                     u721 0682                       u561 0630                       u650 0497  
                     u730 0694                       u810 055C                       u651 0496  
                     u731 0693                       u811 055B                       u555 0622  
                     u660 0517                       u820 0567                       u580 064C  
                     u661 0516                       u645 04B1                       u821 0566  
                     u581 064B                       u750 06A6                       u830 0572  
                     u751 06A5                       u831 0571                       u575 0633  
                     u680 053A                       u681 0539                       u745 0698  
                     u585 0648                       u770 06B7                       u850 0584  
                     u675 051D                       u771 06B6                       u851 0583  
                     u595 065C                       u860 058E                       u765 06A7  
                     u861 058D                       u845 0576                       u790 06CB  
                     u695 0540                       u791 06CA                       u775 06B3  
                     u880 05A1                       u785 06BF                       u881 05A0  
                     u865 058A                       u890 05A6                       u891 05A5  
                     u875 0595                       u957 0713                       u967 073B  
                     u977 0760                       u987 07B7                       u997 07C7  
                     _mot 0023                       fsr0 0004                       indf 0000  
            ___awmod@sign 007D                      l1200 050E                      l1210 0403  
                    l1202 050F                      l1204 03F2                      l1212 0409  
                    l1220 04AB                      l1300 0442                      l1206 03F8  
                    l1214 040C                      l1230 04C7                      l1222 04AE  
                    l1302 0448                      l1310 0674                      l1240 03DB  
                    l1160 0464                      l1216 0415                      l1208 0400  
                    l1232 04CD                      l1224 04BC                      l1320 0688  
                    l1312 0678                      l1304 0419                      l1250 0476  
                    l1242 03DF                      l1162 046B                      l1234 04D0  
                    l1226 04BF                      l1218 04A5                      l1330 069E  
                    l1322 068C                      l1314 067D                      l1170 0620  
                    l1306 0425                      l1260 0497                      l1252 047B  
                    l1244 03E4                      l1164 0472                      l1156 0455  
                    l1236 04D5                      l1228 04C4                      l1340 06BE  
                    l1332 06A2                      l1324 068E                      l1316 067F  
                    l1308 0673                      l1180 064C                      l1172 0629  
                    l1420 06E4                      l1262 049F                      l1254 0483  
                    l1238 03D6                      l1246 03E8                      l1158 0459  
                    l1270 0524                      l1342 06C5                      l1334 06A6  
                    l1326 0694                      l1318 0683                      l1182 065A  
                    l1174 062D                      l1166 060D                      l1430 0732  
                    l1422 070F                      l1256 048C                      l1248 03ED  
                    l1280 0547                      l1272 0527                      l1336 06B7  
                    l1328 0697                      l1344 06CB                      l1360 0563  
                    l1352 0557                      l1184 065B                      l1176 0631  
                    l1168 061D                      l1192 04D9                      l1440 079E  
                    l1432 0737                      l1424 0718                      l1416 06DA  
                    l1258 0491                      l1290 05BF                      l1282 054A  
                    l1274 052D                      l1266 0512                      l1346 06D0  
                    l1338 06BD                      l1370 057C                      l1362 0567  
                    l1354 0558                      l1186 0664                      l1178 063A  
                    l1194 04DD                      l1450 07C3                      l1442 07B3  
                    l1434 075C                      l1426 071D                      l1418 06DF  
                    l1292 05CE                      l1284 0550                      l1268 0517  
                    l1276 0534                      l1348 06D5                      l1380 059B  
                    l1372 0580                      l1364 056C                      l1356 055C  
                    l1188 066A                      l1196 04E0                      l1452 07CB  
                    l1444 07BB                      l1436 0765                      l1428 0726  
                    l1294 05D4                      l1286 05B0                      l1278 053A  
                    l1374 0584                      l1366 0572                      l1382 05A1  
                    l1358 0561                      l1198 050D                      l1454 07D3  
                    l1446 07BF                      l1438 077C                      l1288 05B6  
                    l1296 0434                      l1384 05A6                      l1376 058E  
                    l1368 0575                      l1456 07D9                      l1448 07C1  
                    l1298 0437                      l1386 05AB                      l1378 0594  
                    l1458 07E1                      _CREN 00C4                      u1007 04C1  
                    u1017 04D2                      u1027 05BA                      u1037 05C9  
                    u1047 05D8                      u1057 0410                      _PEIE 005E  
                    _RCIF 0065                      _OERR 00C1                      _TRMT 04C1  
       ?_Lcd_Write_String 0070                      _dato 0026                      _main 06DA  
                    btemp 007E                      start 0000        ??_Lcd_Write_String 0075  
         __end_of_Lcd_Cmd 0419          ?_I2C_Master_Init 002B          ?_I2C_Master_Read 0070  
        ?_I2C_Master_Wait 0070          ?_I2C_Master_Stop 0070                     ?_main 0070  
         __end_of___awdiv 06DA           __end_of___awmod 05B0                     _ANSEL 0188  
         __end_of___lldiv 0673           ___awdiv@divisor 0070           ___awdiv@counter 0074  
                   _RCREG 001A                     _RCSTA 0018                     _SPBRG 0099  
                   _PORTB 0006                     _PORTD 0008                     _TRISB 0086  
                   _TRISD 0088                     _SSPIE 0463                     _SSPIF 0063  
                   _TXREG 0019                     _TXSTA 0098                     _datos 0029  
         __end_of_message 0018                     _setup 0419                     pclath 000A  
                   status 0003                     wtemp0 007E          __end_of_Lcd_Init 060D  
        __end_of_Lcd_Port 0476           __initialization 07EB              __end_of_main 07EB  
                  ??_main 0033         ?_I2C_Master_Start 0070         ?_I2C_Master_Write 0070  
      ??_I2C_Master_Start 0070        ??_I2C_Master_Write 0072          ___awdiv@dividend 0072  
                  ?_setup 0070                    _ANSELH 0189                 ??_Lcd_Cmd 0071  
                  _SSPADD 0093                    _TRISC3 043B                    _TRISC4 043C  
                  _SSPCON 0014                    _SSPBUF 0013                 ??___awdiv 0074  
               ??___awmod 007C                    _datos2 0027                 ??___lldiv 0078  
        ___awdiv@quotient 0076           ___awmod@divisor 0078           ___awmod@counter 007C  
         Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078  
         Lcd_Set_Cursor@z 0077   __end_of__initialization 07FC            __pcstackCOMMON 0070  
            __pidataBANK0 03D5             __end_of_setup 0433            _Lcd_Set_Cursor 0511  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070                   ??_setup 007E  
              __pbssBANK0 0020                __pmaintext 06DA    __end_of_Lcd_Set_Cursor 0557  
              ??_Lcd_Init 0074                ??_Lcd_Port 0070                   _SSPCON2 0091  
                 _SSPSTAT 0094                __stringtab 0003            _Lcd_Write_Char 04A4  
                 _Lcd_Cmd 03FF                   ___awdiv 0673                   ___awmod 0557  
                 ___lldiv 060D           ?_Lcd_Set_Cursor 0074                   __ptext1 0419  
                 __ptext2 04D9                   __ptext3 060D                   __ptext4 0557  
                 __ptext5 0673                   __ptext6 0433                   __ptext7 04A4  
                 __ptext8 0511                   __ptext9 05B0                   _message 0009  
        ___awmod@dividend 007A    __end_of_Lcd_Write_Char 04D9      end_of_initialization 07FC  
         ___lldiv@divisor 0070           ___lldiv@counter 007D          I2C_Master_Init@c 002B  
        I2C_Master_Read@a 0070                 Lcd_Port@a 0070                 _PORTDbits 0008  
               _TRISCbits 0087           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0078  
       Lcd_Write_String@i 0076          _Lcd_Write_String 0433       start_initialization 07EB  
       ??_I2C_Master_Init 002F         ??_I2C_Master_Read 0072         ??_I2C_Master_Wait 0070  
       ??_I2C_Master_Stop 0070               __pdataBANK0 0035           Lcd_Write_Char@a 0074  
         Lcd_Write_Char@y 0073                 ___latbits 0002             __pcstackBANK0 002B  
                ?_Lcd_Cmd 0070          _I2C_Master_Start 03D6          _I2C_Master_Write 03E8  
        ??_Lcd_Set_Cursor 0075                  ?___awdiv 0070                  ?___awmod 0078  
                ?___lldiv 0070                 __pstrings 0003                  Lcd_Cmd@a 0073  
             __stringbase 0008          ??_Lcd_Write_Char 0071                  _Lcd_Init 05B0  
                _Lcd_Port 0454       I2C_Master_Read@temp 0074  __end_of_Lcd_Write_String 0454  
      __end_of__stringtab 0009           _I2C_Master_Init 04D9           _I2C_Master_Read 0476  
         _I2C_Master_Wait 03F2           _I2C_Master_Stop 03DF                  __ptext10 03FF  
                __ptext11 0454                  __ptext12 03E8                  __ptext13 03DF  
                __ptext14 03D6                  __ptext15 0476                  __ptext16 03F2  
__end_of_I2C_Master_Start 03DF  __end_of_I2C_Master_Write 03F2        Lcd_Write_Char@temp 0072  
        ___lldiv@dividend 0074                 stringcode 0003   __end_of_I2C_Master_Init 0511  
 __end_of_I2C_Master_Read 04A4   __end_of_I2C_Master_Wait 03FF   __end_of_I2C_Master_Stop 03E8  
      Lcd_Set_Cursor@temp 0079          ___lldiv@quotient 0079         I2C_Master_Write@d 0070  
                stringdir 0003                  stringtab 0003               _SSPCON2bits 0091  
