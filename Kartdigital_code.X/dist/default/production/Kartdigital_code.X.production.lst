

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Aug 12 11:11:48 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26     0000                     
    27                           ; Version 2.40
    28                           ; Generated 17/11/2021 GMT
    29                           ; 
    30                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62     0000                     	;# 
    63     0001                     	;# 
    64     0002                     	;# 
    65     0003                     	;# 
    66     0004                     	;# 
    67     0005                     	;# 
    68     0006                     	;# 
    69     0007                     	;# 
    70     0008                     	;# 
    71     0009                     	;# 
    72     000A                     	;# 
    73     000B                     	;# 
    74     000C                     	;# 
    75     000D                     	;# 
    76     000E                     	;# 
    77     000E                     	;# 
    78     000F                     	;# 
    79     0010                     	;# 
    80     0011                     	;# 
    81     0012                     	;# 
    82     0013                     	;# 
    83     0014                     	;# 
    84     0015                     	;# 
    85     0015                     	;# 
    86     0016                     	;# 
    87     0017                     	;# 
    88     0018                     	;# 
    89     0019                     	;# 
    90     001A                     	;# 
    91     001B                     	;# 
    92     001B                     	;# 
    93     001C                     	;# 
    94     001D                     	;# 
    95     001E                     	;# 
    96     001F                     	;# 
    97     0081                     	;# 
    98     0085                     	;# 
    99     0086                     	;# 
   100     0087                     	;# 
   101     0088                     	;# 
   102     0089                     	;# 
   103     008C                     	;# 
   104     008D                     	;# 
   105     008E                     	;# 
   106     008F                     	;# 
   107     0090                     	;# 
   108     0091                     	;# 
   109     0092                     	;# 
   110     0093                     	;# 
   111     0093                     	;# 
   112     0093                     	;# 
   113     0094                     	;# 
   114     0095                     	;# 
   115     0096                     	;# 
   116     0097                     	;# 
   117     0098                     	;# 
   118     0099                     	;# 
   119     009A                     	;# 
   120     009B                     	;# 
   121     009C                     	;# 
   122     009D                     	;# 
   123     009E                     	;# 
   124     009F                     	;# 
   125     0105                     	;# 
   126     0107                     	;# 
   127     0108                     	;# 
   128     0109                     	;# 
   129     010C                     	;# 
   130     010C                     	;# 
   131     010D                     	;# 
   132     010E                     	;# 
   133     010F                     	;# 
   134     0185                     	;# 
   135     0187                     	;# 
   136     0188                     	;# 
   137     0189                     	;# 
   138     018C                     	;# 
   139     018D                     	;# 
   140     0000                     	;# 
   141     0001                     	;# 
   142     0002                     	;# 
   143     0003                     	;# 
   144     0004                     	;# 
   145     0005                     	;# 
   146     0006                     	;# 
   147     0007                     	;# 
   148     0008                     	;# 
   149     0009                     	;# 
   150     000A                     	;# 
   151     000B                     	;# 
   152     000C                     	;# 
   153     000D                     	;# 
   154     000E                     	;# 
   155     000E                     	;# 
   156     000F                     	;# 
   157     0010                     	;# 
   158     0011                     	;# 
   159     0012                     	;# 
   160     0013                     	;# 
   161     0014                     	;# 
   162     0015                     	;# 
   163     0015                     	;# 
   164     0016                     	;# 
   165     0017                     	;# 
   166     0018                     	;# 
   167     0019                     	;# 
   168     001A                     	;# 
   169     001B                     	;# 
   170     001B                     	;# 
   171     001C                     	;# 
   172     001D                     	;# 
   173     001E                     	;# 
   174     001F                     	;# 
   175     0081                     	;# 
   176     0085                     	;# 
   177     0086                     	;# 
   178     0087                     	;# 
   179     0088                     	;# 
   180     0089                     	;# 
   181     008C                     	;# 
   182     008D                     	;# 
   183     008E                     	;# 
   184     008F                     	;# 
   185     0090                     	;# 
   186     0091                     	;# 
   187     0092                     	;# 
   188     0093                     	;# 
   189     0093                     	;# 
   190     0093                     	;# 
   191     0094                     	;# 
   192     0095                     	;# 
   193     0096                     	;# 
   194     0097                     	;# 
   195     0098                     	;# 
   196     0099                     	;# 
   197     009A                     	;# 
   198     009B                     	;# 
   199     009C                     	;# 
   200     009D                     	;# 
   201     009E                     	;# 
   202     009F                     	;# 
   203     0105                     	;# 
   204     0107                     	;# 
   205     0108                     	;# 
   206     0109                     	;# 
   207     010C                     	;# 
   208     010C                     	;# 
   209     010D                     	;# 
   210     010E                     	;# 
   211     010F                     	;# 
   212     0185                     	;# 
   213     0187                     	;# 
   214     0188                     	;# 
   215     0189                     	;# 
   216     018C                     	;# 
   217     018D                     	;# 
   218     0000                     	;# 
   219     0001                     	;# 
   220     0002                     	;# 
   221     0003                     	;# 
   222     0004                     	;# 
   223     0005                     	;# 
   224     0006                     	;# 
   225     0007                     	;# 
   226     0008                     	;# 
   227     0009                     	;# 
   228     000A                     	;# 
   229     000B                     	;# 
   230     000C                     	;# 
   231     000D                     	;# 
   232     000E                     	;# 
   233     000E                     	;# 
   234     000F                     	;# 
   235     0010                     	;# 
   236     0011                     	;# 
   237     0012                     	;# 
   238     0013                     	;# 
   239     0014                     	;# 
   240     0015                     	;# 
   241     0015                     	;# 
   242     0016                     	;# 
   243     0017                     	;# 
   244     0018                     	;# 
   245     0019                     	;# 
   246     001A                     	;# 
   247     001B                     	;# 
   248     001B                     	;# 
   249     001C                     	;# 
   250     001D                     	;# 
   251     001E                     	;# 
   252     001F                     	;# 
   253     0081                     	;# 
   254     0085                     	;# 
   255     0086                     	;# 
   256     0087                     	;# 
   257     0088                     	;# 
   258     0089                     	;# 
   259     008C                     	;# 
   260     008D                     	;# 
   261     008E                     	;# 
   262     008F                     	;# 
   263     0090                     	;# 
   264     0091                     	;# 
   265     0092                     	;# 
   266     0093                     	;# 
   267     0093                     	;# 
   268     0093                     	;# 
   269     0094                     	;# 
   270     0095                     	;# 
   271     0096                     	;# 
   272     0097                     	;# 
   273     0098                     	;# 
   274     0099                     	;# 
   275     009A                     	;# 
   276     009B                     	;# 
   277     009C                     	;# 
   278     009D                     	;# 
   279     009E                     	;# 
   280     009F                     	;# 
   281     0105                     	;# 
   282     0107                     	;# 
   283     0108                     	;# 
   284     0109                     	;# 
   285     010C                     	;# 
   286     010C                     	;# 
   287     010D                     	;# 
   288     010E                     	;# 
   289     010F                     	;# 
   290     0185                     	;# 
   291     0187                     	;# 
   292     0188                     	;# 
   293     0189                     	;# 
   294     018C                     	;# 
   295     018D                     	;# 
   296     0000                     	;# 
   297     0001                     	;# 
   298     0002                     	;# 
   299     0003                     	;# 
   300     0004                     	;# 
   301     0005                     	;# 
   302     0006                     	;# 
   303     0007                     	;# 
   304     0008                     	;# 
   305     0009                     	;# 
   306     000A                     	;# 
   307     000B                     	;# 
   308     000C                     	;# 
   309     000D                     	;# 
   310     000E                     	;# 
   311     000E                     	;# 
   312     000F                     	;# 
   313     0010                     	;# 
   314     0011                     	;# 
   315     0012                     	;# 
   316     0013                     	;# 
   317     0014                     	;# 
   318     0015                     	;# 
   319     0015                     	;# 
   320     0016                     	;# 
   321     0017                     	;# 
   322     0018                     	;# 
   323     0019                     	;# 
   324     001A                     	;# 
   325     001B                     	;# 
   326     001B                     	;# 
   327     001C                     	;# 
   328     001D                     	;# 
   329     001E                     	;# 
   330     001F                     	;# 
   331     0081                     	;# 
   332     0085                     	;# 
   333     0086                     	;# 
   334     0087                     	;# 
   335     0088                     	;# 
   336     0089                     	;# 
   337     008C                     	;# 
   338     008D                     	;# 
   339     008E                     	;# 
   340     008F                     	;# 
   341     0090                     	;# 
   342     0091                     	;# 
   343     0092                     	;# 
   344     0093                     	;# 
   345     0093                     	;# 
   346     0093                     	;# 
   347     0094                     	;# 
   348     0095                     	;# 
   349     0096                     	;# 
   350     0097                     	;# 
   351     0098                     	;# 
   352     0099                     	;# 
   353     009A                     	;# 
   354     009B                     	;# 
   355     009C                     	;# 
   356     009D                     	;# 
   357     009E                     	;# 
   358     009F                     	;# 
   359     0105                     	;# 
   360     0107                     	;# 
   361     0108                     	;# 
   362     0109                     	;# 
   363     010C                     	;# 
   364     010C                     	;# 
   365     010D                     	;# 
   366     010E                     	;# 
   367     010F                     	;# 
   368     0185                     	;# 
   369     0187                     	;# 
   370     0188                     	;# 
   371     0189                     	;# 
   372     018C                     	;# 
   373     018D                     	;# 
   374                           
   375                           	psect	strings
   376     03D5                     __pstrings:
   377     03D5                     stringtab:
   378     03D5                     __stringtab:
   379     03D5                     stringcode:	
   380                           ;	String table - string pointers are 1 byte each
   381                           
   382     03D5                     stringdir:
   383     03D5  3003               	movlw	high stringdir
   384     03D6  008A               	movwf	10
   385     03D7  0804               	movf	4,w
   386     03D8  0A84               	incf	4,f
   387     03D9  0782               	addwf	2,f
   388     03DA                     __stringbase:
   389     03DA  3400               	retlw	0
   390     03DB                     __end_of__stringtab:
   391     03DB                     _dpowers:
   392     03DB  3401               	retlw	1
   393     03DC  3400               	retlw	0
   394     03DD  340A               	retlw	10
   395     03DE  3400               	retlw	0
   396     03DF  3464               	retlw	100
   397     03E0  3400               	retlw	0
   398     03E1  34E8               	retlw	232
   399     03E2  3403               	retlw	3
   400     03E3  3410               	retlw	16
   401     03E4  3427               	retlw	39
   402     03E5                     __end_of_dpowers:
   403     0007                     _PORTC	set	7
   404     0008                     _PORTD	set	8
   405     0006                     _PORTBbits	set	6
   406     0001                     _TMR0	set	1
   407     0005                     _PORTA	set	5
   408     000B                     _INTCONbits	set	11
   409     0008                     _PORTDbits	set	8
   410     0013                     _SSPBUF	set	19
   411     0014                     _SSPCON	set	20
   412     0031                     _RB1	set	49
   413     0030                     _RB0	set	48
   414     0043                     _RD3	set	67
   415     0047                     _RD7	set	71
   416     0046                     _RD6	set	70
   417     0045                     _RD5	set	69
   418     0044                     _RD4	set	68
   419     0063                     _SSPIF	set	99
   420     005E                     _PEIE	set	94
   421     005F                     _GIE	set	95
   422     008F                     _OSCCONbits	set	143
   423     0095                     _WPUB	set	149
   424     0081                     _OPTION_REGbits	set	129
   425     0088                     _TRISD	set	136
   426     0086                     _TRISB	set	134
   427     0085                     _TRISA	set	133
   428     0091                     _SSPCON2bits	set	145
   429     0087                     _TRISCbits	set	135
   430     0094                     _SSPSTAT	set	148
   431     0093                     _SSPADD	set	147
   432     0091                     _SSPCON2	set	145
   433     043F                     _TRISC7	set	1087
   434     043E                     _TRISC6	set	1086
   435     0463                     _SSPIE	set	1123
   436     043C                     _TRISC4	set	1084
   437     043B                     _TRISC3	set	1083
   438     0189                     _ANSELH	set	393
   439     0188                     _ANSEL	set	392
   440     03E5                     STR_1:
   441     03E5  3425               	retlw	37	;'%'
   442     03E6  3475               	retlw	117	;'u'
   443     03E7  3400               	retlw	0
   444                           
   445                           	psect	cinit
   446     0011                     start_initialization:	
   447                           ; #config settings
   448                           
   449     0011                     __initialization:
   450                           
   451                           ; Clear objects allocated to BANK0
   452     0011  1283               	bcf	3,5	;RP0=0, select bank0
   453     0012  1303               	bcf	3,6	;RP1=0, select bank0
   454     0013  01D0               	clrf	__pbssBANK0& (0+127)
   455     0014  01D1               	clrf	(__pbssBANK0+1)& (0+127)
   456     0015  01D2               	clrf	(__pbssBANK0+2)& (0+127)
   457     0016  01D3               	clrf	(__pbssBANK0+3)& (0+127)
   458     0017  01D4               	clrf	(__pbssBANK0+4)& (0+127)
   459     0018                     end_of_initialization:	
   460                           ;End of C runtime variable initialization code
   461                           
   462     0018                     __end_of__initialization:
   463     0018  0183               	clrf	3
   464     0019  120A  118A  29F9   	ljmp	_main	;jump to C main() function
   465                           
   466                           	psect	bssBANK0
   467     0050                     __pbssBANK0:
   468     0050                     _rpm:
   469     0050                     	ds	2
   470     0052                     _b:
   471     0052                     	ds	2
   472     0054                     _a:
   473     0054                     	ds	1
   474                           
   475                           	psect	cstackCOMMON
   476     0070                     __pcstackCOMMON:
   477     0070                     ?_setup:
   478     0070                     ?_Lcd_Port:	
   479                           ; 1 bytes @ 0x0
   480                           
   481     0070                     ?_Lcd_Cmd:	
   482                           ; 1 bytes @ 0x0
   483                           
   484     0070                     ?_Lcd_Init:	
   485                           ; 1 bytes @ 0x0
   486                           
   487     0070                     ?_Lcd_Write_Char:	
   488                           ; 1 bytes @ 0x0
   489                           
   490     0070                     ?_Lcd_Write_String:	
   491                           ; 1 bytes @ 0x0
   492                           
   493     0070                     ?_isr:	
   494                           ; 1 bytes @ 0x0
   495                           
   496     0070                     ?_main:	
   497                           ; 1 bytes @ 0x0
   498                           
   499     0070                     ?___awdiv:	
   500                           ; 1 bytes @ 0x0
   501                           
   502     0070                     ___awdiv@divisor:	
   503                           ; 2 bytes @ 0x0
   504                           
   505                           
   506                           ; 2 bytes @ 0x0
   507     0070                     	ds	2
   508     0072                     ___awdiv@dividend:
   509                           
   510                           ; 2 bytes @ 0x2
   511     0072                     	ds	2
   512     0074                     ??___awdiv:
   513                           
   514                           ; 1 bytes @ 0x4
   515     0074                     	ds	1
   516     0075                     ___awdiv@counter:
   517                           
   518                           ; 1 bytes @ 0x5
   519     0075                     	ds	1
   520     0076                     ___awdiv@sign:
   521                           
   522                           ; 1 bytes @ 0x6
   523     0076                     	ds	1
   524     0077                     ___awdiv@quotient:
   525                           
   526                           ; 2 bytes @ 0x7
   527     0077                     	ds	2
   528     0079                     ??_isr:
   529                           
   530                           ; 1 bytes @ 0x9
   531     0079                     	ds	5
   532                           
   533                           	psect	cstackBANK0
   534     0020                     __pcstackBANK0:
   535     0020                     ??_setup:
   536     0020                     ??_Lcd_Port:	
   537                           ; 1 bytes @ 0x0
   538                           
   539     0020                     ?___lwdiv:	
   540                           ; 1 bytes @ 0x0
   541                           
   542     0020                     Lcd_Port@a:	
   543                           ; 2 bytes @ 0x0
   544                           
   545     0020                     ___lwdiv@divisor:	
   546                           ; 1 bytes @ 0x0
   547                           
   548                           
   549                           ; 2 bytes @ 0x0
   550     0020                     	ds	1
   551     0021                     ??_Lcd_Cmd:
   552     0021                     ??_Lcd_Write_Char:	
   553                           ; 1 bytes @ 0x1
   554                           
   555                           
   556                           ; 1 bytes @ 0x1
   557     0021                     	ds	1
   558     0022                     Lcd_Write_Char@temp:
   559     0022                     ___lwdiv@dividend:	
   560                           ; 1 bytes @ 0x2
   561                           
   562                           
   563                           ; 2 bytes @ 0x2
   564     0022                     	ds	1
   565     0023                     Lcd_Cmd@a:
   566     0023                     Lcd_Write_Char@y:	
   567                           ; 1 bytes @ 0x3
   568                           
   569                           
   570                           ; 1 bytes @ 0x3
   571     0023                     	ds	1
   572     0024                     ?_Lcd_Set_Cursor:
   573     0024                     ??_Lcd_Init:	
   574                           ; 1 bytes @ 0x4
   575                           
   576     0024                     ??___lwdiv:	
   577                           ; 1 bytes @ 0x4
   578                           
   579     0024                     Lcd_Set_Cursor@b:	
   580                           ; 1 bytes @ 0x4
   581                           
   582     0024                     Lcd_Write_Char@a:	
   583                           ; 1 bytes @ 0x4
   584                           
   585                           
   586                           ; 1 bytes @ 0x4
   587     0024                     	ds	1
   588     0025                     ??_Lcd_Set_Cursor:
   589     0025                     ??_Lcd_Write_String:	
   590                           ; 1 bytes @ 0x5
   591                           
   592     0025                     ___lwdiv@quotient:	
   593                           ; 1 bytes @ 0x5
   594                           
   595                           
   596                           ; 2 bytes @ 0x5
   597     0025                     	ds	1
   598     0026                     Lcd_Set_Cursor@a:
   599     0026                     Lcd_Write_String@i:	
   600                           ; 1 bytes @ 0x6
   601                           
   602                           
   603                           ; 2 bytes @ 0x6
   604     0026                     	ds	1
   605     0027                     Lcd_Set_Cursor@z:
   606     0027                     ___lwdiv@counter:	
   607                           ; 1 bytes @ 0x7
   608                           
   609                           
   610                           ; 1 bytes @ 0x7
   611     0027                     	ds	1
   612     0028                     ?___lwmod:
   613     0028                     Lcd_Set_Cursor@y:	
   614                           ; 2 bytes @ 0x8
   615                           
   616     0028                     Lcd_Write_String@a:	
   617                           ; 1 bytes @ 0x8
   618                           
   619     0028                     ___lwmod@divisor:	
   620                           ; 1 bytes @ 0x8
   621                           
   622                           
   623                           ; 2 bytes @ 0x8
   624     0028                     	ds	1
   625     0029                     Lcd_Set_Cursor@temp:
   626                           
   627                           ; 1 bytes @ 0x9
   628     0029                     	ds	1
   629     002A                     ___lwmod@dividend:
   630                           
   631                           ; 2 bytes @ 0xA
   632     002A                     	ds	2
   633     002C                     ??___lwmod:
   634                           
   635                           ; 1 bytes @ 0xC
   636     002C                     	ds	1
   637     002D                     ___lwmod@counter:
   638                           
   639                           ; 1 bytes @ 0xD
   640     002D                     	ds	1
   641     002E                     ?_sprintf:
   642     002E                     sprintf@f:	
   643                           ; 2 bytes @ 0xE
   644                           
   645                           
   646                           ; 1 bytes @ 0xE
   647     002E                     	ds	3
   648     0031                     ??_sprintf:
   649                           
   650                           ; 1 bytes @ 0x11
   651     0031                     	ds	3
   652     0034                     sprintf@flag:
   653                           
   654                           ; 1 bytes @ 0x14
   655     0034                     	ds	1
   656     0035                     sprintf@ap:
   657                           
   658                           ; 1 bytes @ 0x15
   659     0035                     	ds	1
   660     0036                     sprintf@val:
   661                           
   662                           ; 2 bytes @ 0x16
   663     0036                     	ds	2
   664     0038                     sprintf@prec:
   665                           
   666                           ; 1 bytes @ 0x18
   667     0038                     	ds	1
   668     0039                     sprintf@sp:
   669                           
   670                           ; 1 bytes @ 0x19
   671     0039                     	ds	1
   672     003A                     sprintf@c:
   673                           
   674                           ; 1 bytes @ 0x1A
   675     003A                     	ds	1
   676     003B                     ??_main:
   677                           
   678                           ; 1 bytes @ 0x1B
   679     003B                     	ds	1
   680     003C                     main@s:
   681                           
   682                           ; 20 bytes @ 0x1C
   683     003C                     	ds	20
   684                           
   685                           	psect	maintext
   686     01F9                     __pmaintext:	
   687 ;;
   688 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   689 ;;
   690 ;; *************** function _main *****************
   691 ;; Defined at:
   692 ;;		line 80 in file "HC89_prueba.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;		None
   695 ;; Auto vars:     Size  Location     Type
   696 ;;  s              20   28[BANK0 ] unsigned char [20]
   697 ;; Return value:  Size  Location     Type
   698 ;;                  1    wreg      void 
   699 ;; Registers used:
   700 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   701 ;; Tracked objects:
   702 ;;		On entry : B00/0
   703 ;;		On exit  : 0/0
   704 ;;		Unchanged: 0/0
   705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   706 ;;      Params:         0       0       0       0       0
   707 ;;      Locals:         0      20       0       0       0
   708 ;;      Temps:          0       1       0       0       0
   709 ;;      Totals:         0      21       0       0       0
   710 ;;Total ram usage:       21 bytes
   711 ;; Hardware stack levels required when called: 5
   712 ;; This function calls:
   713 ;;		_Lcd_Init
   714 ;;		_Lcd_Set_Cursor
   715 ;;		_Lcd_Write_String
   716 ;;		_setup
   717 ;;		_sprintf
   718 ;; This function is called by:
   719 ;;		Startup code after reset
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723     01F9                     _main:	
   724                           ;psect for function _main
   725                           
   726     01F9                     l1493:	
   727                           ;incstack = 0
   728                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   729                           
   730                           
   731                           ;HC89_prueba.c: 83:     setup();
   732     01F9  120A  118A  234C  120A  118A  	fcall	_setup
   733                           
   734                           ;HC89_prueba.c: 84:     Lcd_Init();
   735     01FE  120A  118A  2146  120A  118A  	fcall	_Lcd_Init
   736     0203                     l1495:
   737                           
   738                           ;HC89_prueba.c: 86:     {;HC89_prueba.c: 87:         if (!PORTBbits.RB0){
   739     0203  1283               	bcf	3,5	;RP0=0, select bank0
   740     0204  1303               	bcf	3,6	;RP1=0, select bank0
   741     0205  1806               	btfsc	6,0	;volatile
   742     0206  2A08               	goto	u931
   743     0207  2A09               	goto	u930
   744     0208                     u931:
   745     0208  2A11               	goto	l1501
   746     0209                     u930:
   747     0209                     l180:
   748     0209  1C06               	btfss	6,0	;volatile
   749     020A  2A0C               	goto	u941
   750     020B  2A0D               	goto	u940
   751     020C                     u941:
   752     020C  2A09               	goto	l180
   753     020D                     u940:
   754     020D                     l1499:
   755                           
   756                           ;HC89_prueba.c: 89:                 a ++;
   757     020D  3001               	movlw	1
   758     020E  00BB               	movwf	??_main
   759     020F  083B               	movf	??_main,w
   760     0210  07D4               	addwf	_a,f
   761     0211                     l1501:
   762                           
   763                           ;HC89_prueba.c: 92:     if (!PORTBbits.RB1){
   764     0211  1886               	btfsc	6,1	;volatile
   765     0212  2A14               	goto	u951
   766     0213  2A15               	goto	u950
   767     0214                     u951:
   768     0214  2A1B               	goto	l1507
   769     0215                     u950:
   770     0215                     l184:
   771     0215  1C86               	btfss	6,1	;volatile
   772     0216  2A18               	goto	u961
   773     0217  2A19               	goto	u960
   774     0218                     u961:
   775     0218  2A15               	goto	l184
   776     0219                     u960:
   777     0219                     l1505:
   778                           
   779                           ;HC89_prueba.c: 94:                 a --;
   780     0219  3001               	movlw	1
   781     021A  02D4               	subwf	_a,f
   782     021B                     l1507:
   783                           
   784                           ;HC89_prueba.c: 99:         char s[20];;HC89_prueba.c: 101:         Lcd_Set_Cursor(1,1);
   785     021B  01A4               	clrf	Lcd_Set_Cursor@b
   786     021C  0AA4               	incf	Lcd_Set_Cursor@b,f
   787     021D  3001               	movlw	1
   788     021E  120A  118A  2245  120A  118A  	fcall	_Lcd_Set_Cursor
   789     0223                     l1509:
   790                           
   791                           ;HC89_prueba.c: 102:         sprintf(s, "%u", rpm);
   792     0223  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   793     0224  1283               	bcf	3,5	;RP0=0, select bank0
   794     0225  1303               	bcf	3,6	;RP1=0, select bank0
   795     0226  00AE               	movwf	sprintf@f
   796     0227  0851               	movf	_rpm+1,w
   797     0228  00B0               	movwf	?_sprintf+2
   798     0229  0850               	movf	_rpm,w
   799     022A  00AF               	movwf	?_sprintf+1
   800     022B  303C               	movlw	(low (main@s| 0))& (0+255)
   801     022C  120A  118A  201C  120A  118A  	fcall	_sprintf
   802     0231                     l1511:
   803                           
   804                           ;HC89_prueba.c: 103:     Lcd_Set_Cursor(1,1);
   805     0231  1283               	bcf	3,5	;RP0=0, select bank0
   806     0232  1303               	bcf	3,6	;RP1=0, select bank0
   807     0233  01A4               	clrf	Lcd_Set_Cursor@b
   808     0234  0AA4               	incf	Lcd_Set_Cursor@b,f
   809     0235  3001               	movlw	1
   810     0236  120A  118A  2245  120A  118A  	fcall	_Lcd_Set_Cursor
   811     023B                     l1513:
   812                           
   813                           ;HC89_prueba.c: 104:     Lcd_Write_String(s);
   814     023B  303C               	movlw	(low (main@s| 0))& (0+255)
   815     023C  120A  118A  2374  120A  118A  	fcall	_Lcd_Write_String
   816     0241  2A03               	goto	l1495
   817     0242  120A  118A  280E   	ljmp	start
   818     0245                     __end_of_main:
   819                           
   820                           	psect	text1
   821     001C                     __ptext1:	
   822 ;; *************** function _sprintf *****************
   823 ;; Defined at:
   824 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;  sp              1    wreg     PTR unsigned char 
   827 ;;		 -> main@s(20), 
   828 ;;  f               1   14[BANK0 ] PTR const unsigned char 
   829 ;;		 -> STR_1(3), 
   830 ;; Auto vars:     Size  Location     Type
   831 ;;  sp              1   25[BANK0 ] PTR unsigned char 
   832 ;;		 -> main@s(20), 
   833 ;;  tmpval          4    0        struct .
   834 ;;  val             2   22[BANK0 ] unsigned int 
   835 ;;  cp              2    0        PTR const unsigned char 
   836 ;;  len             2    0        unsigned int 
   837 ;;  c               1   26[BANK0 ] unsigned char 
   838 ;;  prec            1   24[BANK0 ] char 
   839 ;;  ap              1   21[BANK0 ] PTR void [1]
   840 ;;		 -> ?_sprintf(2), 
   841 ;;  flag            1   20[BANK0 ] unsigned char 
   842 ;; Return value:  Size  Location     Type
   843 ;;                  2   14[BANK0 ] int 
   844 ;; Registers used:
   845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   851 ;;      Params:         0       3       0       0       0
   852 ;;      Locals:         0       7       0       0       0
   853 ;;      Temps:          0       3       0       0       0
   854 ;;      Totals:         0      13       0       0       0
   855 ;;Total ram usage:       13 bytes
   856 ;; Hardware stack levels used: 1
   857 ;; Hardware stack levels required when called: 3
   858 ;; This function calls:
   859 ;;		___lwdiv
   860 ;;		___lwmod
   861 ;; This function is called by:
   862 ;;		_main
   863 ;; This function uses a non-reentrant model
   864 ;;
   865                           
   866     001C                     _sprintf:	
   867                           ;psect for function _sprintf
   868                           
   869                           
   870                           ;incstack = 0
   871                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   872                           ;sprintf@sp stored from wreg
   873     001C  1283               	bcf	3,5	;RP0=0, select bank0
   874     001D  1303               	bcf	3,6	;RP1=0, select bank0
   875     001E  00B9               	movwf	sprintf@sp
   876     001F                     l1369:
   877                           
   878                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
   879     001F  302F               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   880     0020  00B5               	movwf	sprintf@ap
   881                           
   882                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   883     0021  28CA               	goto	l1411
   884     0022                     l1371:
   885                           
   886                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   887     0022  3025               	movlw	37
   888     0023  063A               	xorwf	sprintf@c,w
   889     0024  1903               	btfsc	3,2
   890     0025  2827               	goto	u741
   891     0026  2828               	goto	u740
   892     0027                     u741:
   893     0027  2832               	goto	l1377
   894     0028                     u740:
   895     0028                     l1373:
   896                           
   897                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   898     0028  0839               	movf	sprintf@sp,w
   899     0029  0084               	movwf	4
   900     002A  083A               	movf	sprintf@c,w
   901     002B  1383               	bcf	3,7	;select IRP bank0
   902     002C  0080               	movwf	0
   903     002D                     l1375:
   904     002D  3001               	movlw	1
   905     002E  00B1               	movwf	??_sprintf
   906     002F  0831               	movf	??_sprintf,w
   907     0030  07B9               	addwf	sprintf@sp,f
   908                           
   909                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
   910     0031  28CA               	goto	l1411
   911     0032                     l1377:
   912                           
   913                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   914     0032  01B4               	clrf	sprintf@flag
   915                           
   916                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
   917     0033  2839               	goto	l1383
   918     0034                     l1379:
   919                           
   920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
   921     0034  30C0               	movlw	192
   922     0035  00B1               	movwf	??_sprintf
   923     0036  0831               	movf	??_sprintf,w
   924     0037  04B4               	iorwf	sprintf@flag,f
   925                           
   926                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
   927     0038  2853               	goto	l1385
   928     0039                     l1383:
   929     0039  3001               	movlw	1
   930     003A  07AE               	addwf	sprintf@f,f
   931     003B  30FF               	movlw	-1
   932     003C  072E               	addwf	sprintf@f,w
   933     003D  0084               	movwf	4
   934     003E  120A  118A  23D5  120A  118A  	fcall	stringdir
   935     0043  00BA               	movwf	sprintf@c
   936     0044  00B1               	movwf	??_sprintf
   937     0045  01B2               	clrf	??_sprintf+1
   938                           
   939                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   940                           ; Switch size 1, requested type "simple"
   941                           ; Number of cases is 1, Range of values is 0 to 0
   942                           ; switch strategies available:
   943                           ; Name         Instructions Cycles
   944                           ; simple_byte            4     3 (average)
   945                           ; direct_byte           11     8 (fixed)
   946                           ; jumptable            260     6 (fixed)
   947                           ;	Chosen strategy is simple_byte
   948     0046  0832               	movf	??_sprintf+1,w
   949     0047  3A00               	xorlw	0	; case 0
   950     0048  1903               	skipnz
   951     0049  284B               	goto	l1535
   952     004A  28CA               	goto	l1411
   953     004B                     l1535:
   954                           
   955                           ; Switch size 1, requested type "simple"
   956                           ; Number of cases is 2, Range of values is 0 to 117
   957                           ; switch strategies available:
   958                           ; Name         Instructions Cycles
   959                           ; simple_byte            7     4 (average)
   960                           ; jumptable            260     6 (fixed)
   961                           ;	Chosen strategy is simple_byte
   962     004B  0831               	movf	??_sprintf,w
   963     004C  3A00               	xorlw	0	; case 0
   964     004D  1903               	skipnz
   965     004E  28DA               	goto	l1413
   966     004F  3A75               	xorlw	117	; case 117
   967     0050  1903               	skipnz
   968     0051  2834               	goto	l1379
   969     0052  28CA               	goto	l1411
   970     0053                     l1385:
   971                           
   972                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
   973     0053  0835               	movf	sprintf@ap,w
   974     0054  0084               	movwf	4
   975     0055  1383               	bcf	3,7	;select IRP bank0
   976     0056  0800               	movf	0,w
   977     0057  00B6               	movwf	sprintf@val
   978     0058  0A84               	incf	4,f
   979     0059  0800               	movf	0,w
   980     005A  00B7               	movwf	sprintf@val+1
   981     005B                     l1387:
   982     005B  3002               	movlw	2
   983     005C  00B1               	movwf	??_sprintf
   984     005D  0831               	movf	??_sprintf,w
   985     005E  07B5               	addwf	sprintf@ap,f
   986     005F                     l1389:
   987                           
   988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
   989     005F  01BA               	clrf	sprintf@c
   990     0060  0ABA               	incf	sprintf@c,f
   991     0061                     l1395:
   992                           
   993                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
   994     0061  083A               	movf	sprintf@c,w
   995     0062  00B1               	movwf	??_sprintf
   996     0063  0731               	addwf	??_sprintf,w
   997     0064  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
   998     0065  0084               	movwf	4
   999     0066  120A  118A  23D5  120A  118A  	fcall	stringdir
  1000     006B  00B2               	movwf	??_sprintf+1
  1001     006C  120A  118A  23D5  120A  118A  	fcall	stringdir
  1002     0071  00B3               	movwf	??_sprintf+2
  1003     0072  0833               	movf	??_sprintf+2,w
  1004     0073  0237               	subwf	sprintf@val+1,w
  1005     0074  1D03               	skipz
  1006     0075  2878               	goto	u755
  1007     0076  0832               	movf	??_sprintf+1,w
  1008     0077  0236               	subwf	sprintf@val,w
  1009     0078                     u755:
  1010     0078  1803               	skipnc
  1011     0079  287B               	goto	u751
  1012     007A  287C               	goto	u750
  1013     007B                     u751:
  1014     007B  287D               	goto	l1399
  1015     007C                     u750:
  1016     007C  2887               	goto	l1401
  1017     007D                     l1399:
  1018     007D  3001               	movlw	1
  1019     007E  00B1               	movwf	??_sprintf
  1020     007F  0831               	movf	??_sprintf,w
  1021     0080  07BA               	addwf	sprintf@c,f
  1022     0081  3005               	movlw	5
  1023     0082  063A               	xorwf	sprintf@c,w
  1024     0083  1D03               	btfss	3,2
  1025     0084  2886               	goto	u761
  1026     0085  2887               	goto	u760
  1027     0086                     u761:
  1028     0086  2861               	goto	l1395
  1029     0087                     u760:
  1030     0087                     l1401:
  1031                           
  1032                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1033     0087  083A               	movf	sprintf@c,w
  1034     0088  00B8               	movwf	sprintf@prec
  1035                           
  1036                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1037     0089  28C1               	goto	l1409
  1038     008A                     l1403:
  1039                           
  1040                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1041     008A  300A               	movlw	10
  1042     008B  00A8               	movwf	___lwmod@divisor
  1043     008C  3000               	movlw	0
  1044     008D  00A9               	movwf	___lwmod@divisor+1
  1045     008E  0838               	movf	sprintf@prec,w
  1046     008F  00B1               	movwf	??_sprintf
  1047     0090  0731               	addwf	??_sprintf,w
  1048     0091  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1049     0092  0084               	movwf	4
  1050     0093  120A  118A  23D5  120A  118A  	fcall	stringdir
  1051     0098  00A0               	movwf	___lwdiv@divisor
  1052     0099  120A  118A  23D5  120A  118A  	fcall	stringdir
  1053     009E  00A1               	movwf	___lwdiv@divisor+1
  1054     009F  0837               	movf	sprintf@val+1,w
  1055     00A0  00A3               	movwf	___lwdiv@dividend+1
  1056     00A1  0836               	movf	sprintf@val,w
  1057     00A2  00A2               	movwf	___lwdiv@dividend
  1058     00A3  120A  118A  2291  120A  118A  	fcall	___lwdiv
  1059     00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1060     00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1061     00AA  0821               	movf	?___lwdiv+1,w
  1062     00AB  00AB               	movwf	___lwmod@dividend+1
  1063     00AC  0820               	movf	?___lwdiv,w
  1064     00AD  00AA               	movwf	___lwmod@dividend
  1065     00AE  120A  118A  22D7  120A  118A  	fcall	___lwmod
  1066     00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1067     00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1068     00B5  0828               	movf	?___lwmod,w
  1069     00B6  3E30               	addlw	48
  1070     00B7  00BA               	movwf	sprintf@c
  1071     00B8                     l1405:
  1072                           
  1073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1074     00B8  0839               	movf	sprintf@sp,w
  1075     00B9  0084               	movwf	4
  1076     00BA  083A               	movf	sprintf@c,w
  1077     00BB  1383               	bcf	3,7	;select IRP bank0
  1078     00BC  0080               	movwf	0
  1079     00BD                     l1407:
  1080     00BD  3001               	movlw	1
  1081     00BE  00B1               	movwf	??_sprintf
  1082     00BF  0831               	movf	??_sprintf,w
  1083     00C0  07B9               	addwf	sprintf@sp,f
  1084     00C1                     l1409:
  1085                           
  1086                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1087     00C1  30FF               	movlw	255
  1088     00C2  00B1               	movwf	??_sprintf
  1089     00C3  0831               	movf	??_sprintf,w
  1090     00C4  07B8               	addwf	sprintf@prec,f
  1091     00C5  0A38               	incf	sprintf@prec,w
  1092     00C6  1D03               	btfss	3,2
  1093     00C7  28C9               	goto	u771
  1094     00C8  28CA               	goto	u770
  1095     00C9                     u771:
  1096     00C9  288A               	goto	l1403
  1097     00CA                     u770:
  1098     00CA                     l1411:
  1099                           
  1100                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1101     00CA  3001               	movlw	1
  1102     00CB  07AE               	addwf	sprintf@f,f
  1103     00CC  30FF               	movlw	-1
  1104     00CD  072E               	addwf	sprintf@f,w
  1105     00CE  0084               	movwf	4
  1106     00CF  120A  118A  23D5  120A  118A  	fcall	stringdir
  1107     00D4  00BA               	movwf	sprintf@c
  1108     00D5  083A               	movf	sprintf@c,w
  1109     00D6  1D03               	btfss	3,2
  1110     00D7  28D9               	goto	u781
  1111     00D8  28DA               	goto	u780
  1112     00D9                     u781:
  1113     00D9  2822               	goto	l1371
  1114     00DA                     u780:
  1115     00DA                     l1413:
  1116                           
  1117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1118     00DA  0839               	movf	sprintf@sp,w
  1119     00DB  0084               	movwf	4
  1120     00DC  1383               	bcf	3,7	;select IRP bank0
  1121     00DD  0180               	clrf	0
  1122     00DE                     l299:
  1123     00DE  0008               	return
  1124     00DF                     __end_of_sprintf:
  1125                           
  1126                           	psect	text2
  1127     02D7                     __ptext2:	
  1128 ;; *************** function ___lwmod *****************
  1129 ;; Defined at:
  1130 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;  divisor         2    8[BANK0 ] unsigned int 
  1133 ;;  dividend        2   10[BANK0 ] unsigned int 
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;  counter         1   13[BANK0 ] unsigned char 
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  2    8[BANK0 ] unsigned int 
  1138 ;; Registers used:
  1139 ;;		wreg, status,2, status,0
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1145 ;;      Params:         0       4       0       0       0
  1146 ;;      Locals:         0       1       0       0       0
  1147 ;;      Temps:          0       1       0       0       0
  1148 ;;      Totals:         0       6       0       0       0
  1149 ;;Total ram usage:        6 bytes
  1150 ;; Hardware stack levels used: 1
  1151 ;; Hardware stack levels required when called: 2
  1152 ;; This function calls:
  1153 ;;		Nothing
  1154 ;; This function is called by:
  1155 ;;		_sprintf
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159     02D7                     ___lwmod:	
  1160                           ;psect for function ___lwmod
  1161                           
  1162     02D7                     l1267:	
  1163                           ;incstack = 0
  1164                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1165                           
  1166     02D7  1283               	bcf	3,5	;RP0=0, select bank0
  1167     02D8  1303               	bcf	3,6	;RP1=0, select bank0
  1168     02D9  0828               	movf	___lwmod@divisor,w
  1169     02DA  0429               	iorwf	___lwmod@divisor+1,w
  1170     02DB  1903               	btfsc	3,2
  1171     02DC  2ADE               	goto	u631
  1172     02DD  2ADF               	goto	u630
  1173     02DE                     u631:
  1174     02DE  2B0E               	goto	l1285
  1175     02DF                     u630:
  1176     02DF                     l1269:
  1177     02DF  01AD               	clrf	___lwmod@counter
  1178     02E0  0AAD               	incf	___lwmod@counter,f
  1179     02E1  2AED               	goto	l1275
  1180     02E2                     l1271:
  1181     02E2  3001               	movlw	1
  1182     02E3                     u645:
  1183     02E3  1003               	clrc
  1184     02E4  0DA8               	rlf	___lwmod@divisor,f
  1185     02E5  0DA9               	rlf	___lwmod@divisor+1,f
  1186     02E6  3EFF               	addlw	-1
  1187     02E7  1D03               	skipz
  1188     02E8  2AE3               	goto	u645
  1189     02E9                     l1273:
  1190     02E9  3001               	movlw	1
  1191     02EA  00AC               	movwf	??___lwmod
  1192     02EB  082C               	movf	??___lwmod,w
  1193     02EC  07AD               	addwf	___lwmod@counter,f
  1194     02ED                     l1275:
  1195     02ED  1FA9               	btfss	___lwmod@divisor+1,7
  1196     02EE  2AF0               	goto	u651
  1197     02EF  2AF1               	goto	u650
  1198     02F0                     u651:
  1199     02F0  2AE2               	goto	l1271
  1200     02F1                     u650:
  1201     02F1                     l1277:
  1202     02F1  0829               	movf	___lwmod@divisor+1,w
  1203     02F2  022B               	subwf	___lwmod@dividend+1,w
  1204     02F3  1D03               	skipz
  1205     02F4  2AF7               	goto	u665
  1206     02F5  0828               	movf	___lwmod@divisor,w
  1207     02F6  022A               	subwf	___lwmod@dividend,w
  1208     02F7                     u665:
  1209     02F7  1C03               	skipc
  1210     02F8  2AFA               	goto	u661
  1211     02F9  2AFB               	goto	u660
  1212     02FA                     u661:
  1213     02FA  2B01               	goto	l1281
  1214     02FB                     u660:
  1215     02FB                     l1279:
  1216     02FB  0828               	movf	___lwmod@divisor,w
  1217     02FC  02AA               	subwf	___lwmod@dividend,f
  1218     02FD  0829               	movf	___lwmod@divisor+1,w
  1219     02FE  1C03               	skipc
  1220     02FF  03AB               	decf	___lwmod@dividend+1,f
  1221     0300  02AB               	subwf	___lwmod@dividend+1,f
  1222     0301                     l1281:
  1223     0301  3001               	movlw	1
  1224     0302                     u675:
  1225     0302  1003               	clrc
  1226     0303  0CA9               	rrf	___lwmod@divisor+1,f
  1227     0304  0CA8               	rrf	___lwmod@divisor,f
  1228     0305  3EFF               	addlw	-1
  1229     0306  1D03               	skipz
  1230     0307  2B02               	goto	u675
  1231     0308                     l1283:
  1232     0308  3001               	movlw	1
  1233     0309  02AD               	subwf	___lwmod@counter,f
  1234     030A  1D03               	btfss	3,2
  1235     030B  2B0D               	goto	u681
  1236     030C  2B0E               	goto	u680
  1237     030D                     u681:
  1238     030D  2AF1               	goto	l1277
  1239     030E                     u680:
  1240     030E                     l1285:
  1241     030E  082B               	movf	___lwmod@dividend+1,w
  1242     030F  00A9               	movwf	?___lwmod+1
  1243     0310  082A               	movf	___lwmod@dividend,w
  1244     0311  00A8               	movwf	?___lwmod
  1245     0312                     l585:
  1246     0312  0008               	return
  1247     0313                     __end_of___lwmod:
  1248                           
  1249                           	psect	text3
  1250     0291                     __ptext3:	
  1251 ;; *************** function ___lwdiv *****************
  1252 ;; Defined at:
  1253 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;  divisor         2    0[BANK0 ] unsigned int 
  1256 ;;  dividend        2    2[BANK0 ] unsigned int 
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;  quotient        2    5[BANK0 ] unsigned int 
  1259 ;;  counter         1    7[BANK0 ] unsigned char 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  2    0[BANK0 ] unsigned int 
  1262 ;; Registers used:
  1263 ;;		wreg, status,2, status,0
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1269 ;;      Params:         0       4       0       0       0
  1270 ;;      Locals:         0       3       0       0       0
  1271 ;;      Temps:          0       1       0       0       0
  1272 ;;      Totals:         0       8       0       0       0
  1273 ;;Total ram usage:        8 bytes
  1274 ;; Hardware stack levels used: 1
  1275 ;; Hardware stack levels required when called: 2
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		_sprintf
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283     0291                     ___lwdiv:	
  1284                           ;psect for function ___lwdiv
  1285                           
  1286     0291                     l1241:	
  1287                           ;incstack = 0
  1288                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1289                           
  1290     0291  1283               	bcf	3,5	;RP0=0, select bank0
  1291     0292  1303               	bcf	3,6	;RP1=0, select bank0
  1292     0293  01A5               	clrf	___lwdiv@quotient
  1293     0294  01A6               	clrf	___lwdiv@quotient+1
  1294     0295                     l1243:
  1295     0295  0820               	movf	___lwdiv@divisor,w
  1296     0296  0421               	iorwf	___lwdiv@divisor+1,w
  1297     0297  1903               	btfsc	3,2
  1298     0298  2A9A               	goto	u561
  1299     0299  2A9B               	goto	u560
  1300     029A                     u561:
  1301     029A  2AD2               	goto	l1263
  1302     029B                     u560:
  1303     029B                     l1245:
  1304     029B  01A7               	clrf	___lwdiv@counter
  1305     029C  0AA7               	incf	___lwdiv@counter,f
  1306     029D  2AA9               	goto	l1251
  1307     029E                     l1247:
  1308     029E  3001               	movlw	1
  1309     029F                     u575:
  1310     029F  1003               	clrc
  1311     02A0  0DA0               	rlf	___lwdiv@divisor,f
  1312     02A1  0DA1               	rlf	___lwdiv@divisor+1,f
  1313     02A2  3EFF               	addlw	-1
  1314     02A3  1D03               	skipz
  1315     02A4  2A9F               	goto	u575
  1316     02A5                     l1249:
  1317     02A5  3001               	movlw	1
  1318     02A6  00A4               	movwf	??___lwdiv
  1319     02A7  0824               	movf	??___lwdiv,w
  1320     02A8  07A7               	addwf	___lwdiv@counter,f
  1321     02A9                     l1251:
  1322     02A9  1FA1               	btfss	___lwdiv@divisor+1,7
  1323     02AA  2AAC               	goto	u581
  1324     02AB  2AAD               	goto	u580
  1325     02AC                     u581:
  1326     02AC  2A9E               	goto	l1247
  1327     02AD                     u580:
  1328     02AD                     l1253:
  1329     02AD  3001               	movlw	1
  1330     02AE                     u595:
  1331     02AE  1003               	clrc
  1332     02AF  0DA5               	rlf	___lwdiv@quotient,f
  1333     02B0  0DA6               	rlf	___lwdiv@quotient+1,f
  1334     02B1  3EFF               	addlw	-1
  1335     02B2  1D03               	skipz
  1336     02B3  2AAE               	goto	u595
  1337     02B4  0821               	movf	___lwdiv@divisor+1,w
  1338     02B5  0223               	subwf	___lwdiv@dividend+1,w
  1339     02B6  1D03               	skipz
  1340     02B7  2ABA               	goto	u605
  1341     02B8  0820               	movf	___lwdiv@divisor,w
  1342     02B9  0222               	subwf	___lwdiv@dividend,w
  1343     02BA                     u605:
  1344     02BA  1C03               	skipc
  1345     02BB  2ABD               	goto	u601
  1346     02BC  2ABE               	goto	u600
  1347     02BD                     u601:
  1348     02BD  2AC5               	goto	l1259
  1349     02BE                     u600:
  1350     02BE                     l1255:
  1351     02BE  0820               	movf	___lwdiv@divisor,w
  1352     02BF  02A2               	subwf	___lwdiv@dividend,f
  1353     02C0  0821               	movf	___lwdiv@divisor+1,w
  1354     02C1  1C03               	skipc
  1355     02C2  03A3               	decf	___lwdiv@dividend+1,f
  1356     02C3  02A3               	subwf	___lwdiv@dividend+1,f
  1357     02C4                     l1257:
  1358     02C4  1425               	bsf	___lwdiv@quotient,0
  1359     02C5                     l1259:
  1360     02C5  3001               	movlw	1
  1361     02C6                     u615:
  1362     02C6  1003               	clrc
  1363     02C7  0CA1               	rrf	___lwdiv@divisor+1,f
  1364     02C8  0CA0               	rrf	___lwdiv@divisor,f
  1365     02C9  3EFF               	addlw	-1
  1366     02CA  1D03               	skipz
  1367     02CB  2AC6               	goto	u615
  1368     02CC                     l1261:
  1369     02CC  3001               	movlw	1
  1370     02CD  02A7               	subwf	___lwdiv@counter,f
  1371     02CE  1D03               	btfss	3,2
  1372     02CF  2AD1               	goto	u621
  1373     02D0  2AD2               	goto	u620
  1374     02D1                     u621:
  1375     02D1  2AAD               	goto	l1253
  1376     02D2                     u620:
  1377     02D2                     l1263:
  1378     02D2  0826               	movf	___lwdiv@quotient+1,w
  1379     02D3  00A1               	movwf	?___lwdiv+1
  1380     02D4  0825               	movf	___lwdiv@quotient,w
  1381     02D5  00A0               	movwf	?___lwdiv
  1382     02D6                     l575:
  1383     02D6  0008               	return
  1384     02D7                     __end_of___lwdiv:
  1385                           
  1386                           	psect	text4
  1387     034C                     __ptext4:	
  1388 ;; *************** function _setup *****************
  1389 ;; Defined at:
  1390 ;;		line 114 in file "HC89_prueba.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;		None
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;		None
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      void 
  1397 ;; Registers used:
  1398 ;;		wreg, status,2, status,0
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1404 ;;      Params:         0       0       0       0       0
  1405 ;;      Locals:         0       0       0       0       0
  1406 ;;      Temps:          0       0       0       0       0
  1407 ;;      Totals:         0       0       0       0       0
  1408 ;;Total ram usage:        0 bytes
  1409 ;; Hardware stack levels used: 1
  1410 ;; Hardware stack levels required when called: 2
  1411 ;; This function calls:
  1412 ;;		Nothing
  1413 ;; This function is called by:
  1414 ;;		_main
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418     034C                     _setup:	
  1419                           ;psect for function _setup
  1420                           
  1421     034C                     l1327:	
  1422                           ;incstack = 0
  1423                           ; Regs used in _setup: [wreg+status,2+status,0]
  1424                           
  1425                           
  1426                           ;HC89_prueba.c: 115:     ANSEL = 0b00000011;
  1427     034C  3003               	movlw	3
  1428     034D  1683               	bsf	3,5	;RP0=1, select bank3
  1429     034E  1703               	bsf	3,6	;RP1=1, select bank3
  1430     034F  0088               	movwf	8	;volatile
  1431     0350                     l1329:
  1432                           
  1433                           ;HC89_prueba.c: 116:     ANSELH = 0;
  1434     0350  0189               	clrf	9	;volatile
  1435     0351                     l1331:
  1436                           
  1437                           ;HC89_prueba.c: 117:     TRISA = 0;
  1438     0351  1683               	bsf	3,5	;RP0=1, select bank1
  1439     0352  1303               	bcf	3,6	;RP1=0, select bank1
  1440     0353  0185               	clrf	5	;volatile
  1441                           
  1442                           ;HC89_prueba.c: 119:     TRISB = 0b11111111;
  1443     0354  30FF               	movlw	255
  1444     0355  0086               	movwf	6	;volatile
  1445     0356                     l1333:
  1446                           
  1447                           ;HC89_prueba.c: 120:     TRISD= 0;
  1448     0356  0188               	clrf	8	;volatile
  1449     0357                     l1335:
  1450                           
  1451                           ;HC89_prueba.c: 121:     OPTION_REGbits.nRBPU = 0;
  1452     0357  1381               	bcf	1,7	;volatile
  1453     0358                     l1337:
  1454                           
  1455                           ;HC89_prueba.c: 122:     WPUB = 0b11111111;
  1456     0358  30FF               	movlw	255
  1457     0359  0095               	movwf	21	;volatile
  1458     035A                     l1339:
  1459                           
  1460                           ;HC89_prueba.c: 123:     TRISC6 = 0;
  1461     035A  1307               	bcf	7,6	;volatile
  1462     035B                     l1341:
  1463                           
  1464                           ;HC89_prueba.c: 124:     TRISC7 = 0;
  1465     035B  1387               	bcf	7,7	;volatile
  1466                           
  1467                           ;HC89_prueba.c: 125:     PORTA = 0;
  1468     035C  1283               	bcf	3,5	;RP0=0, select bank0
  1469     035D  1303               	bcf	3,6	;RP1=0, select bank0
  1470     035E  0185               	clrf	5	;volatile
  1471                           
  1472                           ;HC89_prueba.c: 126:     PORTD = 0;
  1473     035F  0188               	clrf	8	;volatile
  1474                           
  1475                           ;HC89_prueba.c: 127:     PORTC = 0;
  1476     0360  0187               	clrf	7	;volatile
  1477     0361                     l1343:
  1478                           
  1479                           ;HC89_prueba.c: 129:     OSCCONbits.IRCF = 0b0111;
  1480     0361  3070               	movlw	112
  1481     0362  1683               	bsf	3,5	;RP0=1, select bank1
  1482     0363  1303               	bcf	3,6	;RP1=0, select bank1
  1483     0364  048F               	iorwf	15,f	;volatile
  1484     0365                     l1345:
  1485                           
  1486                           ;HC89_prueba.c: 130:     OSCCONbits.SCS = 1;
  1487     0365  140F               	bsf	15,0	;volatile
  1488     0366                     l1347:
  1489                           
  1490                           ;HC89_prueba.c: 132: OPTION_REGbits.T0CS = 0;
  1491     0366  1281               	bcf	1,5	;volatile
  1492     0367                     l1349:
  1493                           
  1494                           ;HC89_prueba.c: 133: OPTION_REGbits.T0SE = 0;
  1495     0367  1201               	bcf	1,4	;volatile
  1496     0368                     l1351:
  1497                           
  1498                           ;HC89_prueba.c: 134: OPTION_REGbits.PSA = 0;
  1499     0368  1181               	bcf	1,3	;volatile
  1500     0369                     l1353:
  1501                           
  1502                           ;HC89_prueba.c: 135: OPTION_REGbits.PS2 = 1;
  1503     0369  1501               	bsf	1,2	;volatile
  1504     036A                     l1355:
  1505                           
  1506                           ;HC89_prueba.c: 136: OPTION_REGbits.PS1 = 1;
  1507     036A  1481               	bsf	1,1	;volatile
  1508     036B                     l1357:
  1509                           
  1510                           ;HC89_prueba.c: 137: OPTION_REGbits.PS0 = 1;
  1511     036B  1401               	bsf	1,0	;volatile
  1512     036C                     l1359:
  1513                           
  1514                           ;HC89_prueba.c: 138: TMR0 = 0;
  1515     036C  1283               	bcf	3,5	;RP0=0, select bank0
  1516     036D  1303               	bcf	3,6	;RP1=0, select bank0
  1517     036E  0181               	clrf	1	;volatile
  1518     036F                     l1361:
  1519                           
  1520                           ;HC89_prueba.c: 143:     INTCONbits.T0IF = 0;
  1521     036F  110B               	bcf	11,2	;volatile
  1522     0370                     l1363:
  1523                           
  1524                           ;HC89_prueba.c: 144:     INTCONbits.T0IE = 1;
  1525     0370  168B               	bsf	11,5	;volatile
  1526     0371                     l1365:
  1527                           
  1528                           ;HC89_prueba.c: 145:     INTCONbits.PEIE = 1;
  1529     0371  170B               	bsf	11,6	;volatile
  1530     0372                     l1367:
  1531                           
  1532                           ;HC89_prueba.c: 146:     INTCONbits.GIE = 1;
  1533     0372  178B               	bsf	11,7	;volatile
  1534     0373                     l192:
  1535     0373  0008               	return
  1536     0374                     __end_of_setup:
  1537                           
  1538                           	psect	text5
  1539     0374                     __ptext5:	
  1540 ;; *************** function _Lcd_Write_String *****************
  1541 ;; Defined at:
  1542 ;;		line 98 in file "LCD.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;  a               1    wreg     PTR unsigned char 
  1545 ;;		 -> main@s(20), 
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;  a               1    8[BANK0 ] PTR unsigned char 
  1548 ;;		 -> main@s(20), 
  1549 ;;  i               2    6[BANK0 ] int 
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      void 
  1552 ;; Registers used:
  1553 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1559 ;;      Params:         0       0       0       0       0
  1560 ;;      Locals:         0       3       0       0       0
  1561 ;;      Temps:          0       1       0       0       0
  1562 ;;      Totals:         0       4       0       0       0
  1563 ;;Total ram usage:        4 bytes
  1564 ;; Hardware stack levels used: 1
  1565 ;; Hardware stack levels required when called: 4
  1566 ;; This function calls:
  1567 ;;		_Lcd_Write_Char
  1568 ;; This function is called by:
  1569 ;;		_main
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573     0374                     _Lcd_Write_String:	
  1574                           ;psect for function _Lcd_Write_String
  1575                           
  1576                           
  1577                           ;incstack = 0
  1578                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1579                           ;Lcd_Write_String@a stored from wreg
  1580     0374  1283               	bcf	3,5	;RP0=0, select bank0
  1581     0375  1303               	bcf	3,6	;RP1=0, select bank0
  1582     0376  00A8               	movwf	Lcd_Write_String@a
  1583     0377                     l1319:
  1584                           
  1585                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  1586     0377  01A6               	clrf	Lcd_Write_String@i
  1587     0378  01A7               	clrf	Lcd_Write_String@i+1
  1588     0379  2B8D               	goto	l1325
  1589     037A                     l1321:
  1590                           
  1591                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  1592     037A  0826               	movf	Lcd_Write_String@i,w
  1593     037B  0728               	addwf	Lcd_Write_String@a,w
  1594     037C  00A5               	movwf	??_Lcd_Write_String
  1595     037D  0825               	movf	??_Lcd_Write_String,w
  1596     037E  0084               	movwf	4
  1597     037F  0800               	movf	0,w
  1598     0380  120A  118A  2313  120A  118A  	fcall	_Lcd_Write_Char
  1599     0385                     l1323:
  1600     0385  3001               	movlw	1
  1601     0386  1283               	bcf	3,5	;RP0=0, select bank0
  1602     0387  1303               	bcf	3,6	;RP1=0, select bank0
  1603     0388  07A6               	addwf	Lcd_Write_String@i,f
  1604     0389  1803               	skipnc
  1605     038A  0AA7               	incf	Lcd_Write_String@i+1,f
  1606     038B  3000               	movlw	0
  1607     038C  07A7               	addwf	Lcd_Write_String@i+1,f
  1608     038D                     l1325:
  1609     038D  0826               	movf	Lcd_Write_String@i,w
  1610     038E  0728               	addwf	Lcd_Write_String@a,w
  1611     038F  00A5               	movwf	??_Lcd_Write_String
  1612     0390  0825               	movf	??_Lcd_Write_String,w
  1613     0391  0084               	movwf	4
  1614     0392  1383               	bcf	3,7	;select IRP bank0
  1615     0393  0800               	movf	0,w
  1616     0394  1D03               	btfss	3,2
  1617     0395  2B97               	goto	u731
  1618     0396  2B98               	goto	u730
  1619     0397                     u731:
  1620     0397  2B7A               	goto	l1321
  1621     0398                     u730:
  1622     0398                     l104:
  1623     0398  0008               	return
  1624     0399                     __end_of_Lcd_Write_String:
  1625                           
  1626                           	psect	text6
  1627     0313                     __ptext6:	
  1628 ;; *************** function _Lcd_Write_Char *****************
  1629 ;; Defined at:
  1630 ;;		line 83 in file "LCD.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;  a               1    wreg     unsigned char 
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;  a               1    4[BANK0 ] unsigned char 
  1635 ;;  y               1    3[BANK0 ] unsigned char 
  1636 ;;  temp            1    2[BANK0 ] unsigned char 
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  1    wreg      void 
  1639 ;; Registers used:
  1640 ;;		wreg, status,2, status,0, pclath, cstack
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1646 ;;      Params:         0       0       0       0       0
  1647 ;;      Locals:         0       3       0       0       0
  1648 ;;      Temps:          0       1       0       0       0
  1649 ;;      Totals:         0       4       0       0       0
  1650 ;;Total ram usage:        4 bytes
  1651 ;; Hardware stack levels used: 1
  1652 ;; Hardware stack levels required when called: 3
  1653 ;; This function calls:
  1654 ;;		_Lcd_Port
  1655 ;; This function is called by:
  1656 ;;		_Lcd_Write_String
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660     0313                     _Lcd_Write_Char:	
  1661                           ;psect for function _Lcd_Write_Char
  1662                           
  1663                           
  1664                           ;incstack = 0
  1665                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1666                           ;Lcd_Write_Char@a stored from wreg
  1667     0313  1283               	bcf	3,5	;RP0=0, select bank0
  1668     0314  1303               	bcf	3,6	;RP1=0, select bank0
  1669     0315  00A4               	movwf	Lcd_Write_Char@a
  1670     0316                     l1221:
  1671                           
  1672                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  1673     0316  0824               	movf	Lcd_Write_Char@a,w
  1674     0317  390F               	andlw	15
  1675     0318  00A2               	movwf	Lcd_Write_Char@temp
  1676                           
  1677                           ;LCD.c: 86:     y = a & 0xF0;
  1678     0319  0824               	movf	Lcd_Write_Char@a,w
  1679     031A  39F0               	andlw	240
  1680     031B  00A3               	movwf	Lcd_Write_Char@y
  1681     031C                     l1223:
  1682                           
  1683                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  1684     031C  1508               	bsf	8,2	;volatile
  1685     031D                     l1225:
  1686                           
  1687                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  1688     031D  0823               	movf	Lcd_Write_Char@y,w
  1689     031E  00A1               	movwf	??_Lcd_Write_Char
  1690     031F  3004               	movlw	4
  1691     0320                     u555:
  1692     0320  1003               	clrc
  1693     0321  0CA1               	rrf	??_Lcd_Write_Char,f
  1694     0322  3EFF               	addlw	-1
  1695     0323  1D03               	skipz
  1696     0324  2B20               	goto	u555
  1697     0325  0821               	movf	??_Lcd_Write_Char,w
  1698     0326  120A  118A  2399  120A  118A  	fcall	_Lcd_Port
  1699     032B                     l1227:
  1700                           
  1701                           ;LCD.c: 89:     RD3 = 1;
  1702     032B  1283               	bcf	3,5	;RP0=0, select bank0
  1703     032C  1303               	bcf	3,6	;RP1=0, select bank0
  1704     032D  1588               	bsf	8,3	;volatile
  1705     032E                     l1229:
  1706                           
  1707                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1708     032E  3019               	movlw	25
  1709     032F  1283               	bcf	3,5	;RP0=0, select bank0
  1710     0330  1303               	bcf	3,6	;RP1=0, select bank0
  1711     0331  00A1               	movwf	??_Lcd_Write_Char
  1712     0332                     u977:
  1713     0332  0BA1               	decfsz	??_Lcd_Write_Char,f
  1714     0333  2B32               	goto	u977
  1715     0334  2B35               	nop2
  1716     0335                     l1231:
  1717                           
  1718                           ;LCD.c: 91:     RD3 = 0;
  1719     0335  1283               	bcf	3,5	;RP0=0, select bank0
  1720     0336  1303               	bcf	3,6	;RP1=0, select bank0
  1721     0337  1188               	bcf	8,3	;volatile
  1722     0338                     l1233:
  1723                           
  1724                           ;LCD.c: 92:     Lcd_Port(temp);
  1725     0338  0822               	movf	Lcd_Write_Char@temp,w
  1726     0339  120A  118A  2399  120A  118A  	fcall	_Lcd_Port
  1727     033E                     l1235:
  1728                           
  1729                           ;LCD.c: 93:     RD3 = 1;
  1730     033E  1283               	bcf	3,5	;RP0=0, select bank0
  1731     033F  1303               	bcf	3,6	;RP1=0, select bank0
  1732     0340  1588               	bsf	8,3	;volatile
  1733     0341                     l1237:
  1734                           
  1735                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1736     0341  3019               	movlw	25
  1737     0342  1283               	bcf	3,5	;RP0=0, select bank0
  1738     0343  1303               	bcf	3,6	;RP1=0, select bank0
  1739     0344  00A1               	movwf	??_Lcd_Write_Char
  1740     0345                     u987:
  1741     0345  0BA1               	decfsz	??_Lcd_Write_Char,f
  1742     0346  2B45               	goto	u987
  1743     0347  2B48               	nop2
  1744     0348                     l1239:
  1745                           
  1746                           ;LCD.c: 95:     RD3 = 0;
  1747     0348  1283               	bcf	3,5	;RP0=0, select bank0
  1748     0349  1303               	bcf	3,6	;RP1=0, select bank0
  1749     034A  1188               	bcf	8,3	;volatile
  1750     034B                     l98:
  1751     034B  0008               	return
  1752     034C                     __end_of_Lcd_Write_Char:
  1753                           
  1754                           	psect	text7
  1755     0245                     __ptext7:	
  1756 ;; *************** function _Lcd_Set_Cursor *****************
  1757 ;; Defined at:
  1758 ;;		line 48 in file "LCD.c"
  1759 ;; Parameters:    Size  Location     Type
  1760 ;;  a               1    wreg     unsigned char 
  1761 ;;  b               1    4[BANK0 ] unsigned char 
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;  a               1    6[BANK0 ] unsigned char 
  1764 ;;  temp            1    9[BANK0 ] unsigned char 
  1765 ;;  y               1    8[BANK0 ] unsigned char 
  1766 ;;  z               1    7[BANK0 ] unsigned char 
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  1    wreg      void 
  1769 ;; Registers used:
  1770 ;;		wreg, status,2, status,0, pclath, cstack
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1776 ;;      Params:         0       1       0       0       0
  1777 ;;      Locals:         0       4       0       0       0
  1778 ;;      Temps:          0       1       0       0       0
  1779 ;;      Totals:         0       6       0       0       0
  1780 ;;Total ram usage:        6 bytes
  1781 ;; Hardware stack levels used: 1
  1782 ;; Hardware stack levels required when called: 4
  1783 ;; This function calls:
  1784 ;;		_Lcd_Cmd
  1785 ;; This function is called by:
  1786 ;;		_main
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790     0245                     _Lcd_Set_Cursor:	
  1791                           ;psect for function _Lcd_Set_Cursor
  1792                           
  1793                           
  1794                           ;incstack = 0
  1795                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1796                           ;Lcd_Set_Cursor@a stored from wreg
  1797     0245  1283               	bcf	3,5	;RP0=0, select bank0
  1798     0246  1303               	bcf	3,6	;RP1=0, select bank0
  1799     0247  00A6               	movwf	Lcd_Set_Cursor@a
  1800     0248                     l1289:
  1801                           
  1802                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  1803     0248  0326               	decf	Lcd_Set_Cursor@a,w
  1804     0249  1D03               	btfss	3,2
  1805     024A  2A4C               	goto	u691
  1806     024B  2A4D               	goto	u690
  1807     024C                     u691:
  1808     024C  2A6C               	goto	l1299
  1809     024D                     u690:
  1810     024D                     l1291:
  1811                           
  1812                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  1813     024D  0824               	movf	Lcd_Set_Cursor@b,w
  1814     024E  3E7F               	addlw	127
  1815     024F  00A9               	movwf	Lcd_Set_Cursor@temp
  1816                           
  1817                           ;LCD.c: 52:         z = temp >> 4;
  1818     0250  0829               	movf	Lcd_Set_Cursor@temp,w
  1819     0251  00A5               	movwf	??_Lcd_Set_Cursor
  1820     0252  3004               	movlw	4
  1821     0253                     u705:
  1822     0253  1003               	clrc
  1823     0254  0CA5               	rrf	??_Lcd_Set_Cursor,f
  1824     0255  3EFF               	addlw	-1
  1825     0256  1D03               	skipz
  1826     0257  2A53               	goto	u705
  1827     0258  0825               	movf	??_Lcd_Set_Cursor,w
  1828     0259  00A7               	movwf	Lcd_Set_Cursor@z
  1829     025A                     l1293:
  1830                           
  1831                           ;LCD.c: 53:         y = temp & 0x0F;
  1832     025A  0829               	movf	Lcd_Set_Cursor@temp,w
  1833     025B  390F               	andlw	15
  1834     025C  00A8               	movwf	Lcd_Set_Cursor@y
  1835     025D                     l1295:
  1836                           
  1837                           ;LCD.c: 54:         Lcd_Cmd(z);
  1838     025D  0827               	movf	Lcd_Set_Cursor@z,w
  1839     025E  120A  118A  23B9  120A  118A  	fcall	_Lcd_Cmd
  1840     0263                     l1297:
  1841                           
  1842                           ;LCD.c: 55:         Lcd_Cmd(y);
  1843     0263  1283               	bcf	3,5	;RP0=0, select bank0
  1844     0264  1303               	bcf	3,6	;RP1=0, select bank0
  1845     0265  0828               	movf	Lcd_Set_Cursor@y,w
  1846     0266  120A  118A  23B9  120A  118A  	fcall	_Lcd_Cmd
  1847                           
  1848                           ;LCD.c: 56:     } else if (a == 2) {
  1849     026B  2A90               	goto	l92
  1850     026C                     l1299:
  1851     026C  3002               	movlw	2
  1852     026D  0626               	xorwf	Lcd_Set_Cursor@a,w
  1853     026E  1D03               	btfss	3,2
  1854     026F  2A71               	goto	u711
  1855     0270  2A72               	goto	u710
  1856     0271                     u711:
  1857     0271  2A90               	goto	l92
  1858     0272                     u710:
  1859     0272                     l1301:
  1860                           
  1861                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  1862     0272  0824               	movf	Lcd_Set_Cursor@b,w
  1863     0273  3EBF               	addlw	191
  1864     0274  00A9               	movwf	Lcd_Set_Cursor@temp
  1865                           
  1866                           ;LCD.c: 58:         z = temp >> 4;
  1867     0275  0829               	movf	Lcd_Set_Cursor@temp,w
  1868     0276  00A5               	movwf	??_Lcd_Set_Cursor
  1869     0277  3004               	movlw	4
  1870     0278                     u725:
  1871     0278  1003               	clrc
  1872     0279  0CA5               	rrf	??_Lcd_Set_Cursor,f
  1873     027A  3EFF               	addlw	-1
  1874     027B  1D03               	skipz
  1875     027C  2A78               	goto	u725
  1876     027D  0825               	movf	??_Lcd_Set_Cursor,w
  1877     027E  00A7               	movwf	Lcd_Set_Cursor@z
  1878     027F                     l1303:
  1879                           
  1880                           ;LCD.c: 59:         y = temp & 0x0F;
  1881     027F  0829               	movf	Lcd_Set_Cursor@temp,w
  1882     0280  390F               	andlw	15
  1883     0281  00A8               	movwf	Lcd_Set_Cursor@y
  1884     0282                     l1305:
  1885                           
  1886                           ;LCD.c: 60:         Lcd_Cmd(z);
  1887     0282  0827               	movf	Lcd_Set_Cursor@z,w
  1888     0283  120A  118A  23B9  120A  118A  	fcall	_Lcd_Cmd
  1889     0288                     l1307:
  1890                           
  1891                           ;LCD.c: 61:         Lcd_Cmd(y);
  1892     0288  1283               	bcf	3,5	;RP0=0, select bank0
  1893     0289  1303               	bcf	3,6	;RP1=0, select bank0
  1894     028A  0828               	movf	Lcd_Set_Cursor@y,w
  1895     028B  120A  118A  23B9  120A  118A  	fcall	_Lcd_Cmd
  1896     0290                     l92:
  1897     0290  0008               	return
  1898     0291                     __end_of_Lcd_Set_Cursor:
  1899                           
  1900                           	psect	text8
  1901     0146                     __ptext8:	
  1902 ;; *************** function _Lcd_Init *****************
  1903 ;; Defined at:
  1904 ;;		line 65 in file "LCD.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;		None
  1907 ;; Auto vars:     Size  Location     Type
  1908 ;;		None
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  1    wreg      void 
  1911 ;; Registers used:
  1912 ;;		wreg, status,2, status,0, pclath, cstack
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1918 ;;      Params:         0       0       0       0       0
  1919 ;;      Locals:         0       0       0       0       0
  1920 ;;      Temps:          0       2       0       0       0
  1921 ;;      Totals:         0       2       0       0       0
  1922 ;;Total ram usage:        2 bytes
  1923 ;; Hardware stack levels used: 1
  1924 ;; Hardware stack levels required when called: 4
  1925 ;; This function calls:
  1926 ;;		_Lcd_Cmd
  1927 ;;		_Lcd_Port
  1928 ;; This function is called by:
  1929 ;;		_main
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933     0146                     _Lcd_Init:	
  1934                           ;psect for function _Lcd_Init
  1935                           
  1936     0146                     l1309:	
  1937                           ;incstack = 0
  1938                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1939                           
  1940                           
  1941                           ;LCD.c: 66:     Lcd_Port(0x00);
  1942     0146  3000               	movlw	0
  1943     0147  120A  118A  2399  120A  118A  	fcall	_Lcd_Port
  1944     014C                     l1311:
  1945                           
  1946                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1947     014C  3034               	movlw	52
  1948     014D  1283               	bcf	3,5	;RP0=0, select bank0
  1949     014E  1303               	bcf	3,6	;RP1=0, select bank0
  1950     014F  00A5               	movwf	??_Lcd_Init+1
  1951     0150  30F1               	movlw	241
  1952     0151  00A4               	movwf	??_Lcd_Init
  1953     0152                     u997:
  1954     0152  0BA4               	decfsz	??_Lcd_Init,f
  1955     0153  2952               	goto	u997
  1956     0154  0BA5               	decfsz	??_Lcd_Init+1,f
  1957     0155  2952               	goto	u997
  1958     0156                     l1313:
  1959                           
  1960                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  1961     0156  3003               	movlw	3
  1962     0157  120A  118A  23B9  120A  118A  	fcall	_Lcd_Cmd
  1963                           
  1964                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1965     015C  300D               	movlw	13
  1966     015D  1283               	bcf	3,5	;RP0=0, select bank0
  1967     015E  1303               	bcf	3,6	;RP1=0, select bank0
  1968     015F  00A5               	movwf	??_Lcd_Init+1
  1969     0160  30FB               	movlw	251
  1970     0161  00A4               	movwf	??_Lcd_Init
  1971     0162                     u1007:
  1972     0162  0BA4               	decfsz	??_Lcd_Init,f
  1973     0163  2962               	goto	u1007
  1974     0164  0BA5               	decfsz	??_Lcd_Init+1,f
  1975     0165  2962               	goto	u1007
  1976     0166                     l1315:
  1977                           
  1978                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  1979     0166  3003               	movlw	3
  1980     0167  120A  118A  23B9  120A  118A  	fcall	_Lcd_Cmd
  1981     016C                     l1317:
  1982                           
  1983                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1984     016C  301D               	movlw	29
  1985     016D  1283               	bcf	3,5	;RP0=0, select bank0
  1986     016E  1303               	bcf	3,6	;RP1=0, select bank0
  1987     016F  00A5               	movwf	??_Lcd_Init+1
  1988     0170  3090               	movlw	144
  1989     0171  00A4               	movwf	??_Lcd_Init
  1990     0172                     u1017:
  1991     0172  0BA4               	decfsz	??_Lcd_Init,f
  1992     0173  2972               	goto	u1017
  1993     0174  0BA5               	decfsz	??_Lcd_Init+1,f
  1994     0175  2972               	goto	u1017
  1995     0176  0000               	nop
  1996                           
  1997                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  1998     0177  3003               	movlw	3
  1999     0178  120A  118A  23B9  120A  118A  	fcall	_Lcd_Cmd
  2000                           
  2001                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2002     017D  3002               	movlw	2
  2003     017E  120A  118A  23B9  120A  118A  	fcall	_Lcd_Cmd
  2004                           
  2005                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  2006     0183  3002               	movlw	2
  2007     0184  120A  118A  23B9  120A  118A  	fcall	_Lcd_Cmd
  2008                           
  2009                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  2010     0189  3008               	movlw	8
  2011     018A  120A  118A  23B9  120A  118A  	fcall	_Lcd_Cmd
  2012                           
  2013                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  2014     018F  3000               	movlw	0
  2015     0190  120A  118A  23B9  120A  118A  	fcall	_Lcd_Cmd
  2016                           
  2017                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  2018     0195  300C               	movlw	12
  2019     0196  120A  118A  23B9  120A  118A  	fcall	_Lcd_Cmd
  2020                           
  2021                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  2022     019B  3000               	movlw	0
  2023     019C  120A  118A  23B9  120A  118A  	fcall	_Lcd_Cmd
  2024                           
  2025                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  2026     01A1  3006               	movlw	6
  2027     01A2  120A  118A  23B9  120A  118A  	fcall	_Lcd_Cmd
  2028     01A7                     l95:
  2029     01A7  0008               	return
  2030     01A8                     __end_of_Lcd_Init:
  2031                           
  2032                           	psect	text9
  2033     03B9                     __ptext9:	
  2034 ;; *************** function _Lcd_Cmd *****************
  2035 ;; Defined at:
  2036 ;;		line 35 in file "LCD.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  a               1    wreg     unsigned char 
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;  a               1    3[BANK0 ] unsigned char 
  2041 ;; Return value:  Size  Location     Type
  2042 ;;                  1    wreg      void 
  2043 ;; Registers used:
  2044 ;;		wreg, status,2, status,0, pclath, cstack
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2050 ;;      Params:         0       0       0       0       0
  2051 ;;      Locals:         0       1       0       0       0
  2052 ;;      Temps:          0       2       0       0       0
  2053 ;;      Totals:         0       3       0       0       0
  2054 ;;Total ram usage:        3 bytes
  2055 ;; Hardware stack levels used: 1
  2056 ;; Hardware stack levels required when called: 3
  2057 ;; This function calls:
  2058 ;;		_Lcd_Port
  2059 ;; This function is called by:
  2060 ;;		_Lcd_Set_Cursor
  2061 ;;		_Lcd_Init
  2062 ;;		_Lcd_Clear
  2063 ;;		_Lcd_Shift_Right
  2064 ;;		_Lcd_Shift_Left
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068     03B9                     _Lcd_Cmd:	
  2069                           ;psect for function _Lcd_Cmd
  2070                           
  2071                           
  2072                           ;incstack = 0
  2073                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2074                           ;Lcd_Cmd@a stored from wreg
  2075     03B9  1283               	bcf	3,5	;RP0=0, select bank0
  2076     03BA  1303               	bcf	3,6	;RP1=0, select bank0
  2077     03BB  00A3               	movwf	Lcd_Cmd@a
  2078     03BC                     l1211:
  2079                           
  2080                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  2081     03BC  1108               	bcf	8,2	;volatile
  2082     03BD                     l1213:
  2083                           
  2084                           ;LCD.c: 37:     Lcd_Port(a);
  2085     03BD  0823               	movf	Lcd_Cmd@a,w
  2086     03BE  120A  118A  2399  120A  118A  	fcall	_Lcd_Port
  2087     03C3                     l1215:
  2088                           
  2089                           ;LCD.c: 38:     RD3 = 1;
  2090     03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2091     03C4  1303               	bcf	3,6	;RP1=0, select bank0
  2092     03C5  1588               	bsf	8,3	;volatile
  2093     03C6                     l1217:
  2094                           
  2095                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2096     03C6  300B               	movlw	11
  2097     03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2098     03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2099     03C9  00A2               	movwf	??_Lcd_Cmd+1
  2100     03CA  3061               	movlw	97
  2101     03CB  00A1               	movwf	??_Lcd_Cmd
  2102     03CC                     u1027:
  2103     03CC  0BA1               	decfsz	??_Lcd_Cmd,f
  2104     03CD  2BCC               	goto	u1027
  2105     03CE  0BA2               	decfsz	??_Lcd_Cmd+1,f
  2106     03CF  2BCC               	goto	u1027
  2107     03D0  2BD1               	nop2
  2108     03D1                     l1219:
  2109                           
  2110                           ;LCD.c: 40:     RD3 = 0;
  2111     03D1  1283               	bcf	3,5	;RP0=0, select bank0
  2112     03D2  1303               	bcf	3,6	;RP1=0, select bank0
  2113     03D3  1188               	bcf	8,3	;volatile
  2114     03D4                     l83:
  2115     03D4  0008               	return
  2116     03D5                     __end_of_Lcd_Cmd:
  2117                           
  2118                           	psect	text10
  2119     0399                     __ptext10:	
  2120 ;; *************** function _Lcd_Port *****************
  2121 ;; Defined at:
  2122 ;;		line 13 in file "LCD.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  a               1    wreg     unsigned char 
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  a               1    0[BANK0 ] unsigned char 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  1    wreg      void 
  2129 ;; Registers used:
  2130 ;;		wreg
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2136 ;;      Params:         0       0       0       0       0
  2137 ;;      Locals:         0       1       0       0       0
  2138 ;;      Temps:          0       0       0       0       0
  2139 ;;      Totals:         0       1       0       0       0
  2140 ;;Total ram usage:        1 bytes
  2141 ;; Hardware stack levels used: 1
  2142 ;; Hardware stack levels required when called: 2
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_Lcd_Cmd
  2147 ;;		_Lcd_Init
  2148 ;;		_Lcd_Write_Char
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152     0399                     _Lcd_Port:	
  2153                           ;psect for function _Lcd_Port
  2154                           
  2155                           
  2156                           ;incstack = 0
  2157                           ; Regs used in _Lcd_Port: [wreg]
  2158                           ;Lcd_Port@a stored from wreg
  2159     0399  1283               	bcf	3,5	;RP0=0, select bank0
  2160     039A  1303               	bcf	3,6	;RP1=0, select bank0
  2161     039B  00A0               	movwf	Lcd_Port@a
  2162     039C                     l1201:
  2163                           
  2164                           ;LCD.c: 14:     if (a & 1)
  2165     039C  1C20               	btfss	Lcd_Port@a,0
  2166     039D  2B9F               	goto	u511
  2167     039E  2BA0               	goto	u510
  2168     039F                     u511:
  2169     039F  2BA2               	goto	l72
  2170     03A0                     u510:
  2171     03A0                     l1203:
  2172                           
  2173                           ;LCD.c: 15:         RD4 = 1;
  2174     03A0  1608               	bsf	8,4	;volatile
  2175     03A1  2BA3               	goto	l73
  2176     03A2                     l72:	
  2177                           ;LCD.c: 16:     else
  2178                           
  2179                           
  2180                           ;LCD.c: 17:         RD4 = 0;
  2181     03A2  1208               	bcf	8,4	;volatile
  2182     03A3                     l73:
  2183                           
  2184                           ;LCD.c: 19:     if (a & 2)
  2185     03A3  1CA0               	btfss	Lcd_Port@a,1
  2186     03A4  2BA6               	goto	u521
  2187     03A5  2BA7               	goto	u520
  2188     03A6                     u521:
  2189     03A6  2BA9               	goto	l74
  2190     03A7                     u520:
  2191     03A7                     l1205:
  2192                           
  2193                           ;LCD.c: 20:         RD5 = 1;
  2194     03A7  1688               	bsf	8,5	;volatile
  2195     03A8  2BAA               	goto	l75
  2196     03A9                     l74:	
  2197                           ;LCD.c: 21:     else
  2198                           
  2199                           
  2200                           ;LCD.c: 22:         RD5 = 0;
  2201     03A9  1288               	bcf	8,5	;volatile
  2202     03AA                     l75:
  2203                           
  2204                           ;LCD.c: 24:     if (a & 4)
  2205     03AA  1D20               	btfss	Lcd_Port@a,2
  2206     03AB  2BAD               	goto	u531
  2207     03AC  2BAE               	goto	u530
  2208     03AD                     u531:
  2209     03AD  2BB0               	goto	l76
  2210     03AE                     u530:
  2211     03AE                     l1207:
  2212                           
  2213                           ;LCD.c: 25:         RD6 = 1;
  2214     03AE  1708               	bsf	8,6	;volatile
  2215     03AF  2BB1               	goto	l77
  2216     03B0                     l76:	
  2217                           ;LCD.c: 26:     else
  2218                           
  2219                           
  2220                           ;LCD.c: 27:         RD6 = 0;
  2221     03B0  1308               	bcf	8,6	;volatile
  2222     03B1                     l77:
  2223                           
  2224                           ;LCD.c: 29:     if (a & 8)
  2225     03B1  1DA0               	btfss	Lcd_Port@a,3
  2226     03B2  2BB4               	goto	u541
  2227     03B3  2BB5               	goto	u540
  2228     03B4                     u541:
  2229     03B4  2BB7               	goto	l78
  2230     03B5                     u540:
  2231     03B5                     l1209:
  2232                           
  2233                           ;LCD.c: 30:         RD7 = 1;
  2234     03B5  1788               	bsf	8,7	;volatile
  2235     03B6  2BB8               	goto	l80
  2236     03B7                     l78:	
  2237                           ;LCD.c: 31:     else
  2238                           
  2239                           
  2240                           ;LCD.c: 32:         RD7 = 0;
  2241     03B7  1388               	bcf	8,7	;volatile
  2242     03B8                     l80:
  2243     03B8  0008               	return
  2244     03B9                     __end_of_Lcd_Port:
  2245                           
  2246                           	psect	text11
  2247     01A8                     __ptext11:	
  2248 ;; *************** function _isr *****************
  2249 ;; Defined at:
  2250 ;;		line 51 in file "HC89_prueba.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;		None
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;		None
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  1    wreg      void 
  2257 ;; Registers used:
  2258 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2264 ;;      Params:         0       0       0       0       0
  2265 ;;      Locals:         0       0       0       0       0
  2266 ;;      Temps:          5       0       0       0       0
  2267 ;;      Totals:         5       0       0       0       0
  2268 ;;Total ram usage:        5 bytes
  2269 ;; Hardware stack levels used: 1
  2270 ;; Hardware stack levels required when called: 1
  2271 ;; This function calls:
  2272 ;;		___awdiv
  2273 ;; This function is called by:
  2274 ;;		Interrupt level 1
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278     01A8                     _isr:	
  2279                           ;psect for function _isr
  2280                           
  2281     01A8                     i1l1471:
  2282                           
  2283                           ;HC89_prueba.c: 53:     if (INTCONbits.RBIF ){
  2284     01A8  1C0B               	btfss	11,0	;volatile
  2285     01A9  29AB               	goto	u89_21
  2286     01AA  29AC               	goto	u89_20
  2287     01AB                     u89_21:
  2288     01AB  29AD               	goto	i1l169
  2289     01AC                     u89_20:
  2290     01AC                     i1l1473:
  2291                           
  2292                           ;HC89_prueba.c: 56:         __nop();
  2293     01AC  0000               	nop
  2294     01AD                     i1l169:	
  2295                           ;HC89_prueba.c: 57:     }
  2296                           
  2297                           
  2298                           ;HC89_prueba.c: 58:     if (INTCONbits.T0IF){
  2299     01AD  1D0B               	btfss	11,2	;volatile
  2300     01AE  29B0               	goto	u90_21
  2301     01AF  29B1               	goto	u90_20
  2302     01B0                     u90_21:
  2303     01B0  29F0               	goto	i1l173
  2304     01B1                     u90_20:
  2305     01B1                     i1l1475:
  2306                           
  2307                           ;HC89_prueba.c: 61:         if (b<=305){
  2308     01B1  1283               	bcf	3,5	;RP0=0, select bank0
  2309     01B2  1303               	bcf	3,6	;RP1=0, select bank0
  2310     01B3  0853               	movf	_b+1,w
  2311     01B4  3A80               	xorlw	128
  2312     01B5  00FF               	movwf	btemp+1
  2313     01B6  3081               	movlw	129
  2314     01B7  027F               	subwf	btemp+1,w
  2315     01B8  1D03               	skipz
  2316     01B9  29BC               	goto	u91_25
  2317     01BA  3032               	movlw	50
  2318     01BB  0252               	subwf	_b,w
  2319     01BC                     u91_25:
  2320     01BC  1803               	skipnc
  2321     01BD  29BF               	goto	u91_21
  2322     01BE  29C0               	goto	u91_20
  2323     01BF                     u91_21:
  2324     01BF  29C8               	goto	i1l1479
  2325     01C0                     u91_20:
  2326     01C0                     i1l1477:
  2327                           
  2328                           ;HC89_prueba.c: 62:            b ++;
  2329     01C0  3001               	movlw	1
  2330     01C1  1283               	bcf	3,5	;RP0=0, select bank0
  2331     01C2  1303               	bcf	3,6	;RP1=0, select bank0
  2332     01C3  07D2               	addwf	_b,f
  2333     01C4  1803               	skipnc
  2334     01C5  0AD3               	incf	_b+1,f
  2335     01C6  3000               	movlw	0
  2336     01C7  07D3               	addwf	_b+1,f
  2337     01C8                     i1l1479:
  2338                           
  2339                           ;HC89_prueba.c: 65:         if (b==305){
  2340     01C8  3031               	movlw	49
  2341     01C9  1283               	bcf	3,5	;RP0=0, select bank0
  2342     01CA  1303               	bcf	3,6	;RP1=0, select bank0
  2343     01CB  0652               	xorwf	_b,w
  2344     01CC  1D03               	skipz
  2345     01CD  29D2               	goto	u92_21
  2346     01CE  0353               	decf	_b+1,w
  2347     01CF  1D03               	btfss	3,2
  2348     01D0  29D2               	goto	u92_21
  2349     01D1  29D3               	goto	u92_20
  2350     01D2                     u92_21:
  2351     01D2  29EE               	goto	i1l1489
  2352     01D3                     u92_20:
  2353     01D3                     i1l1481:
  2354                           
  2355                           ;HC89_prueba.c: 66:             rpm = a/2;
  2356     01D3  3002               	movlw	2
  2357     01D4  00F0               	movwf	___awdiv@divisor
  2358     01D5  3000               	movlw	0
  2359     01D6  00F1               	movwf	___awdiv@divisor+1
  2360     01D7  0854               	movf	_a,w
  2361     01D8  00F9               	movwf	??_isr
  2362     01D9  01FA               	clrf	??_isr+1
  2363     01DA  0879               	movf	??_isr,w
  2364     01DB  00F2               	movwf	___awdiv@dividend
  2365     01DC  087A               	movf	??_isr+1,w
  2366     01DD  00F3               	movwf	___awdiv@dividend+1
  2367     01DE  120A  118A  20DF  120A  118A  	fcall	___awdiv
  2368     01E3  0871               	movf	?___awdiv+1,w
  2369     01E4  1283               	bcf	3,5	;RP0=0, select bank0
  2370     01E5  1303               	bcf	3,6	;RP1=0, select bank0
  2371     01E6  00D1               	movwf	_rpm+1
  2372     01E7  0870               	movf	?___awdiv,w
  2373     01E8  00D0               	movwf	_rpm
  2374     01E9                     i1l1483:
  2375                           
  2376                           ;HC89_prueba.c: 67:             PORTA = rpm;
  2377     01E9  0850               	movf	_rpm,w
  2378     01EA  0085               	movwf	5	;volatile
  2379     01EB                     i1l1485:
  2380                           
  2381                           ;HC89_prueba.c: 68:             a= 0;
  2382     01EB  01D4               	clrf	_a
  2383     01EC                     i1l1487:
  2384                           
  2385                           ;HC89_prueba.c: 69:             b= 0;
  2386     01EC  01D2               	clrf	_b
  2387     01ED  01D3               	clrf	_b+1
  2388     01EE                     i1l1489:
  2389                           
  2390                           ;HC89_prueba.c: 72:         INTCONbits.T0IF = 0;
  2391     01EE  110B               	bcf	11,2	;volatile
  2392     01EF                     i1l1491:
  2393                           
  2394                           ;HC89_prueba.c: 73:         TMR0 = 0;
  2395     01EF  0181               	clrf	1	;volatile
  2396     01F0                     i1l173:
  2397     01F0  087D               	movf	??_isr+4,w
  2398     01F1  00FF               	movwf	btemp+1
  2399     01F2  087C               	movf	??_isr+3,w
  2400     01F3  008A               	movwf	10
  2401     01F4  0E7B               	swapf	??_isr+2,w
  2402     01F5  0083               	movwf	3
  2403     01F6  0EFE               	swapf	btemp,f
  2404     01F7  0E7E               	swapf	btemp,w
  2405     01F8  0009               	retfie
  2406     01F9                     __end_of_isr:
  2407                           
  2408                           	psect	intentry
  2409     0004                     __pintentry:	
  2410                           ;incstack = 0
  2411                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2412                           
  2413     0004                     interrupt_function:
  2414     007E                     saved_w	set	btemp
  2415     0004  00FE               	movwf	btemp
  2416     0005  0E03               	swapf	3,w
  2417     0006  00FB               	movwf	??_isr+2
  2418     0007  080A               	movf	10,w
  2419     0008  00FC               	movwf	??_isr+3
  2420     0009  087F               	movf	btemp+1,w
  2421     000A  00FD               	movwf	??_isr+4
  2422     000B  120A  118A  29A8   	ljmp	_isr
  2423                           
  2424                           	psect	text12
  2425     00DF                     __ptext12:	
  2426 ;; *************** function ___awdiv *****************
  2427 ;; Defined at:
  2428 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  divisor         2    0[COMMON] int 
  2431 ;;  dividend        2    2[COMMON] int 
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;  quotient        2    7[COMMON] int 
  2434 ;;  sign            1    6[COMMON] unsigned char 
  2435 ;;  counter         1    5[COMMON] unsigned char 
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  2    0[COMMON] int 
  2438 ;; Registers used:
  2439 ;;		wreg, status,2, status,0
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2445 ;;      Params:         4       0       0       0       0
  2446 ;;      Locals:         4       0       0       0       0
  2447 ;;      Temps:          1       0       0       0       0
  2448 ;;      Totals:         9       0       0       0       0
  2449 ;;Total ram usage:        9 bytes
  2450 ;; Hardware stack levels used: 1
  2451 ;; This function calls:
  2452 ;;		Nothing
  2453 ;; This function is called by:
  2454 ;;		_isr
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458     00DF                     ___awdiv:	
  2459                           ;psect for function ___awdiv
  2460                           
  2461     00DF                     i1l1421:	
  2462                           ;incstack = 0
  2463                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2464                           
  2465     00DF  01F6               	clrf	___awdiv@sign
  2466     00E0                     i1l1423:
  2467     00E0  1FF1               	btfss	___awdiv@divisor+1,7
  2468     00E1  28E3               	goto	u79_21
  2469     00E2  28E4               	goto	u79_20
  2470     00E3                     u79_21:
  2471     00E3  28EB               	goto	i1l1429
  2472     00E4                     u79_20:
  2473     00E4                     i1l1425:
  2474     00E4  09F0               	comf	___awdiv@divisor,f
  2475     00E5  09F1               	comf	___awdiv@divisor+1,f
  2476     00E6  0AF0               	incf	___awdiv@divisor,f
  2477     00E7  1903               	skipnz
  2478     00E8  0AF1               	incf	___awdiv@divisor+1,f
  2479     00E9                     i1l1427:
  2480     00E9  01F6               	clrf	___awdiv@sign
  2481     00EA  0AF6               	incf	___awdiv@sign,f
  2482     00EB                     i1l1429:
  2483     00EB  1FF3               	btfss	___awdiv@dividend+1,7
  2484     00EC  28EE               	goto	u80_21
  2485     00ED  28EF               	goto	u80_20
  2486     00EE                     u80_21:
  2487     00EE  28F8               	goto	i1l1435
  2488     00EF                     u80_20:
  2489     00EF                     i1l1431:
  2490     00EF  09F2               	comf	___awdiv@dividend,f
  2491     00F0  09F3               	comf	___awdiv@dividend+1,f
  2492     00F1  0AF2               	incf	___awdiv@dividend,f
  2493     00F2  1903               	skipnz
  2494     00F3  0AF3               	incf	___awdiv@dividend+1,f
  2495     00F4                     i1l1433:
  2496     00F4  3001               	movlw	1
  2497     00F5  00F4               	movwf	??___awdiv
  2498     00F6  0874               	movf	??___awdiv,w
  2499     00F7  06F6               	xorwf	___awdiv@sign,f
  2500     00F8                     i1l1435:
  2501     00F8  01F7               	clrf	___awdiv@quotient
  2502     00F9  01F8               	clrf	___awdiv@quotient+1
  2503     00FA                     i1l1437:
  2504     00FA  0870               	movf	___awdiv@divisor,w
  2505     00FB  0471               	iorwf	___awdiv@divisor+1,w
  2506     00FC  1903               	btfsc	3,2
  2507     00FD  28FF               	goto	u81_21
  2508     00FE  2900               	goto	u81_20
  2509     00FF                     u81_21:
  2510     00FF  2937               	goto	i1l1457
  2511     0100                     u81_20:
  2512     0100                     i1l1439:
  2513     0100  01F5               	clrf	___awdiv@counter
  2514     0101  0AF5               	incf	___awdiv@counter,f
  2515     0102  290E               	goto	i1l1445
  2516     0103                     i1l1441:
  2517     0103  3001               	movlw	1
  2518     0104                     u82_25:
  2519     0104  1003               	clrc
  2520     0105  0DF0               	rlf	___awdiv@divisor,f
  2521     0106  0DF1               	rlf	___awdiv@divisor+1,f
  2522     0107  3EFF               	addlw	-1
  2523     0108  1D03               	skipz
  2524     0109  2904               	goto	u82_25
  2525     010A                     i1l1443:
  2526     010A  3001               	movlw	1
  2527     010B  00F4               	movwf	??___awdiv
  2528     010C  0874               	movf	??___awdiv,w
  2529     010D  07F5               	addwf	___awdiv@counter,f
  2530     010E                     i1l1445:
  2531     010E  1FF1               	btfss	___awdiv@divisor+1,7
  2532     010F  2911               	goto	u83_21
  2533     0110  2912               	goto	u83_20
  2534     0111                     u83_21:
  2535     0111  2903               	goto	i1l1441
  2536     0112                     u83_20:
  2537     0112                     i1l1447:
  2538     0112  3001               	movlw	1
  2539     0113                     u84_25:
  2540     0113  1003               	clrc
  2541     0114  0DF7               	rlf	___awdiv@quotient,f
  2542     0115  0DF8               	rlf	___awdiv@quotient+1,f
  2543     0116  3EFF               	addlw	-1
  2544     0117  1D03               	skipz
  2545     0118  2913               	goto	u84_25
  2546     0119  0871               	movf	___awdiv@divisor+1,w
  2547     011A  0273               	subwf	___awdiv@dividend+1,w
  2548     011B  1D03               	skipz
  2549     011C  291F               	goto	u85_25
  2550     011D  0870               	movf	___awdiv@divisor,w
  2551     011E  0272               	subwf	___awdiv@dividend,w
  2552     011F                     u85_25:
  2553     011F  1C03               	skipc
  2554     0120  2922               	goto	u85_21
  2555     0121  2923               	goto	u85_20
  2556     0122                     u85_21:
  2557     0122  292A               	goto	i1l1453
  2558     0123                     u85_20:
  2559     0123                     i1l1449:
  2560     0123  0870               	movf	___awdiv@divisor,w
  2561     0124  02F2               	subwf	___awdiv@dividend,f
  2562     0125  0871               	movf	___awdiv@divisor+1,w
  2563     0126  1C03               	skipc
  2564     0127  03F3               	decf	___awdiv@dividend+1,f
  2565     0128  02F3               	subwf	___awdiv@dividend+1,f
  2566     0129                     i1l1451:
  2567     0129  1477               	bsf	___awdiv@quotient,0
  2568     012A                     i1l1453:
  2569     012A  3001               	movlw	1
  2570     012B                     u86_25:
  2571     012B  1003               	clrc
  2572     012C  0CF1               	rrf	___awdiv@divisor+1,f
  2573     012D  0CF0               	rrf	___awdiv@divisor,f
  2574     012E  3EFF               	addlw	-1
  2575     012F  1D03               	skipz
  2576     0130  292B               	goto	u86_25
  2577     0131                     i1l1455:
  2578     0131  3001               	movlw	1
  2579     0132  02F5               	subwf	___awdiv@counter,f
  2580     0133  1D03               	btfss	3,2
  2581     0134  2936               	goto	u87_21
  2582     0135  2937               	goto	u87_20
  2583     0136                     u87_21:
  2584     0136  2912               	goto	i1l1447
  2585     0137                     u87_20:
  2586     0137                     i1l1457:
  2587     0137  0876               	movf	___awdiv@sign,w
  2588     0138  1903               	btfsc	3,2
  2589     0139  293B               	goto	u88_21
  2590     013A  293C               	goto	u88_20
  2591     013B                     u88_21:
  2592     013B  2941               	goto	i1l1461
  2593     013C                     u88_20:
  2594     013C                     i1l1459:
  2595     013C  09F7               	comf	___awdiv@quotient,f
  2596     013D  09F8               	comf	___awdiv@quotient+1,f
  2597     013E  0AF7               	incf	___awdiv@quotient,f
  2598     013F  1903               	skipnz
  2599     0140  0AF8               	incf	___awdiv@quotient+1,f
  2600     0141                     i1l1461:
  2601     0141  0878               	movf	___awdiv@quotient+1,w
  2602     0142  00F1               	movwf	?___awdiv+1
  2603     0143  0877               	movf	___awdiv@quotient,w
  2604     0144  00F0               	movwf	?___awdiv
  2605     0145                     i1l456:
  2606     0145  0008               	return
  2607     0146                     __end_of___awdiv:
  2608     007E                     btemp	set	126	;btemp
  2609     007E                     wtemp0	set	126
  2610                           
  2611                           	psect	idloc
  2612                           
  2613                           ;Config register IDLOC0 @ 0x2000
  2614                           ;	unspecified, using default values
  2615     2000                     	org	8192
  2616     2000  3FFF               	dw	16383
  2617                           
  2618                           ;Config register IDLOC1 @ 0x2001
  2619                           ;	unspecified, using default values
  2620     2001                     	org	8193
  2621     2001  3FFF               	dw	16383
  2622                           
  2623                           ;Config register IDLOC2 @ 0x2002
  2624                           ;	unspecified, using default values
  2625     2002                     	org	8194
  2626     2002  3FFF               	dw	16383
  2627                           
  2628                           ;Config register IDLOC3 @ 0x2003
  2629                           ;	unspecified, using default values
  2630     2003                     	org	8195
  2631     2003  3FFF               	dw	16383
  2632                           
  2633                           	psect	config
  2634                           
  2635                           ;Config register CONFIG1 @ 0x2007
  2636                           ;	Oscillator Selection bits
  2637                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  2638                           ;	Watchdog Timer Enable bit
  2639                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2640                           ;	Power-up Timer Enable bit
  2641                           ;	PWRTE = OFF, PWRT disabled
  2642                           ;	RE3/MCLR pin function select bit
  2643                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2644                           ;	Code Protection bit
  2645                           ;	CP = OFF, Program memory code protection is disabled
  2646                           ;	Data Code Protection bit
  2647                           ;	CPD = OFF, Data memory code protection is disabled
  2648                           ;	Brown Out Reset Selection bits
  2649                           ;	BOREN = OFF, BOR disabled
  2650                           ;	Internal External Switchover bit
  2651                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2652                           ;	Fail-Safe Clock Monitor Enabled bit
  2653                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2654                           ;	Low Voltage Programming Enable bit
  2655                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2656                           ;	In-Circuit Debugger Mode bit
  2657                           ;	DEBUG = 0x1, unprogrammed default
  2658     2007                     	org	8199
  2659     2007  20D5               	dw	8405
  2660                           
  2661                           ;Config register CONFIG2 @ 0x2008
  2662                           ;	Brown-out Reset Selection bit
  2663                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2664                           ;	Flash Program Memory Self Write Enable bits
  2665                           ;	WRT = OFF, Write protection off
  2666     2008                     	org	8200
  2667     2008  3FFF               	dw	16383

Data Sizes:
    Strings     3
    Constant    10
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     48      53
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@s(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> main@s(BANK0[20]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___awdiv

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0    2204
                                             27 BANK0     21    21      0
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1121
                                             14 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     301
                                              5 BANK0      4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     532
                                              4 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  5     5      0     452
                                              9 COMMON     5     5      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      43       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     30      35       5       66.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      43      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Aug 12 11:11:48 2023

                       _a 0054                         _b 0052                         pc 0002  
                      l80 03B8                        l72 03A2                        l73 03A3  
                      l74 03A9                        l75 03AA                        l83 03D4  
                      l76 03B0                        l92 0290                        l77 03B1  
                      l78 03B7                        l95 01A7                        l98 034B  
            ___awdiv@sign 0076                        fsr 0004                       l104 0398  
                     l180 0209                       l192 0373                       l184 0215  
                     l299 00DE                       l575 02D6                       l585 0312  
                     _GIE 005F                       _RB0 0030                       _RB1 0031  
                     _RD3 0043                       _RD4 0044                       _RD5 0045  
                     _RD6 0046                       _RD7 0047                       u510 03A0  
                     u511 039F                       u520 03A7                       u600 02BE  
                     u521 03A6                       u601 02BD                       u530 03AE  
                     u531 03AD                       u540 03B5                       u620 02D2  
                     u541 03B4                       u621 02D1                       u605 02BA  
                     u710 0272                       u630 02DF                       u711 0271  
                     u615 02C6                       u631 02DE                       u560 029B  
                     u705 0253                       u561 029A                       u730 0398  
                     u650 02F1                       u555 0320                       u731 0397  
                     u651 02F0                       u580 02AD                       u660 02FB  
                     u740 0028                       u725 0278                       u581 02AC  
                     u661 02FA                       u645 02E3                       u741 0027  
                     u750 007C                       u575 029F                       u751 007B  
                     u680 030E                       u760 0087                       u681 030D  
                     u665 02F7                       u761 0086                       u690 024D  
                     u770 00CA                       u930 0209                       u691 024C  
                     u595 02AE                       u675 0302                       u771 00C9  
                     u755 0078                       u931 0208                       u780 00DA  
                     u940 020D                       u781 00D9                       u941 020C  
                     u950 0215                       u951 0214                       u960 0219  
                     u961 0218                       u977 0332                       u987 0345  
                     u997 0152                       _isr 01A8                       _rpm 0050  
                     fsr0 0004                       indf 0000                      l1201 039C  
                    l1203 03A0                      l1211 03BC                      l1205 03A7  
                    l1213 03BD                      l1301 0272                      l1221 0316  
                    l1207 03AE                      l1215 03C3                      l1311 014C  
                    l1303 027F                      l1231 0335                      l1223 031C  
                    l1209 03B5                      l1217 03C6                      l1313 0156  
                    l1305 0282                      l1233 0338                      l1225 031D  
                    l1321 037A                      l1241 0291                      l1401 0087  
                    l1219 03D1                      l1315 0166                      l1307 0288  
                    l1235 033E                      l1227 032B                      l1323 0385  
                    l1331 0351                      l1251 02A9                      l1243 0295  
                    l1403 008A                      l1411 00CA                      l1317 016C  
                    l1309 0146                      l1237 0341                      l1229 032E  
                    l1325 038D                      l1341 035B                      l1333 0356  
                    l1261 02CC                      l1253 02AD                      l1245 029B  
                    l1405 00B8                      l1413 00DA                      l1501 0211  
                    l1239 0348                      l1319 0377                      l1351 0368  
                    l1343 0361                      l1335 0357                      l1327 034C  
                    l1255 02BE                      l1247 029E                      l1263 02D2  
                    l1271 02E2                      l1407 00BD                      l1511 0231  
                    l1361 036F                      l1353 0369                      l1345 0365  
                    l1337 0358                      l1329 0350                      l1257 02C4  
                    l1249 02A5                      l1281 0301                      l1273 02E9  
                    l1409 00C1                      l1513 023B                      l1505 0219  
                    l1291 024D                      l1363 0370                      l1355 036A  
                    l1347 0366                      l1339 035A                      l1259 02C5  
                    l1283 0308                      l1275 02ED                      l1267 02D7  
                    l1371 0022                      l1507 021B                      l1293 025A  
                    l1365 0371                      l1357 036B                      l1349 0367  
                    l1277 02F1                      l1269 02DF                      l1285 030E  
                    l1373 0028                      l1509 0223                      l1295 025D  
                    l1367 0372                      l1359 036C                      l1279 02FB  
                    l1535 004B                      l1383 0039                      l1375 002D  
                    l1297 0263                      l1289 0248                      l1385 0053  
                    l1377 0032                      l1369 001F                      l1299 026C  
                    l1395 0061                      l1387 005B                      l1379 0034  
                    l1389 005F                      l1493 01F9                      l1399 007D  
                    l1495 0203                      l1499 020D                      ?_isr 0070  
                    STR_1 03E5                      u1007 0162                      u1017 0172  
                    u1027 03CC                      _PEIE 005E                      _TMR0 0001  
                    _WPUB 0095         ?_Lcd_Write_String 0070                      _main 01F9  
                    btemp 007E                      start 000E        ??_Lcd_Write_String 0025  
         __end_of_Lcd_Cmd 03D5                     ??_isr 0079                     ?_main 0070  
         __end_of___awdiv 0146                     _ANSEL 0188           ___awdiv@divisor 0070  
         __end_of___lwdiv 02D7                     i1l173 01F0                     i1l169 01AD  
         __end_of___lwmod 0313                     i1l456 0145           ___awdiv@counter 0075  
                   _PORTA 0005                     _PORTC 0007                     _PORTD 0008  
                   u80_20 00EF                     u80_21 00EE                     u81_20 0100  
                   u81_21 00FF                     _TRISA 0085                     _TRISB 0086  
                   _TRISD 0088                     _SSPIE 0463                     u90_20 01B1  
                   _SSPIF 0063                     u90_21 01B0                     u82_25 0104  
                   u83_20 0112                     u91_20 01C0                     u83_21 0111  
                   u91_21 01BF                     u91_25 01BC                     u92_20 01D3  
                   u92_21 01D2                     u84_25 0113                     u85_20 0123  
                   u85_21 0122                     u85_25 011F                     u86_25 012B  
                   u87_20 0137                     u79_20 00E4                     u87_21 0136  
                   u79_21 00E3                     u88_20 013C                     u88_21 013B  
                   u89_20 01AC                     u89_21 01AB           __end_of_dpowers 03E5  
                   _setup 034C                     main@s 003C                     pclath 000A  
                   status 0003                     wtemp0 007E           __end_of_sprintf 00DF  
        __end_of_Lcd_Init 01A8          __end_of_Lcd_Port 03B9           __initialization 0011  
            __end_of_main 0245                    ??_main 003B          ___awdiv@dividend 0072  
                  ?_setup 0070                    _ANSELH 0189                    i1l1421 00DF  
                  i1l1431 00EF                    i1l1423 00E0                    i1l1441 0103  
                  i1l1433 00F4                    i1l1425 00E4                    i1l1451 0129  
                  i1l1443 010A                    i1l1435 00F8                    i1l1427 00E9  
                  i1l1461 0141                    i1l1453 012A                    i1l1445 010E  
                  i1l1437 00FA                    i1l1429 00EB                    i1l1455 0131  
                  i1l1447 0112                    i1l1439 0100                    i1l1471 01A8  
                  i1l1449 0123                    i1l1457 0137                    i1l1481 01D3  
                  i1l1473 01AC                    i1l1459 013C                    i1l1491 01EF  
                  i1l1483 01E9                    i1l1475 01B1                    i1l1485 01EB  
                  i1l1477 01C0                    i1l1487 01EC                    i1l1479 01C8  
                  i1l1489 01EE                 ??_Lcd_Cmd 0021                    _SSPADD 0093  
                  _TRISC3 043B                    _TRISC4 043C                    _TRISC6 043E  
                  _TRISC7 043F                    _SSPCON 0014                    _SSPBUF 0013  
               ??___awdiv 0074                 ??___lwdiv 0024                 ??___lwmod 002C  
        ___awdiv@quotient 0077                    saved_w 007E                 ??_sprintf 0031  
         Lcd_Set_Cursor@a 0026           Lcd_Set_Cursor@b 0024           Lcd_Set_Cursor@y 0028  
         Lcd_Set_Cursor@z 0027   __end_of__initialization 0018            __pcstackCOMMON 0070  
           __end_of_setup 0374            _Lcd_Set_Cursor 0245            _OPTION_REGbits 0081  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070                   ??_setup 0020  
              __pbssBANK0 0050                __pmaintext 01F9                __pintentry 0004  
  __end_of_Lcd_Set_Cursor 0291                ??_Lcd_Init 0024                ??_Lcd_Port 0020  
                 _SSPCON2 0091                   _SSPSTAT 0094                __stringtab 03D5  
          _Lcd_Write_Char 0313                   _Lcd_Cmd 03B9                   ___awdiv 00DF  
                 ___lwdiv 0291                   ___lwmod 02D7           ?_Lcd_Set_Cursor 0024  
                 __ptext1 001C                   __ptext2 02D7                   __ptext3 0291  
                 __ptext4 034C                   __ptext5 0374                   __ptext6 0313  
                 __ptext7 0245                   __ptext8 0146                   __ptext9 03B9  
                 _dpowers 03DB                   _sprintf 001C    __end_of_Lcd_Write_Char 034C  
    end_of_initialization 0018                 Lcd_Port@a 0020                 _PORTBbits 0006  
               _PORTDbits 0008                 _TRISCbits 0087           ?_Lcd_Write_Char 0070  
       Lcd_Write_String@a 0028         Lcd_Write_String@i 0026          _Lcd_Write_String 0374  
     start_initialization 0011               __end_of_isr 01F9           Lcd_Write_Char@a 0024  
         Lcd_Write_Char@y 0023                 ___latbits 0002             __pcstackBANK0 0020  
                ?_Lcd_Cmd 0070               sprintf@flag 0034               sprintf@prec 0038  
        ___lwdiv@dividend 0022          ??_Lcd_Set_Cursor 0025                  ?___awdiv 0070  
                ?___lwdiv 0020                  ?___lwmod 0028                 __pstrings 03D5  
        ___lwdiv@quotient 0025                  ?_sprintf 002E         interrupt_function 0004  
                Lcd_Cmd@a 0023               __stringbase 03DA          ??_Lcd_Write_Char 0021  
                _Lcd_Init 0146                  _Lcd_Port 0399  __end_of_Lcd_Write_String 0399  
      __end_of__stringtab 03DB                sprintf@val 0036           ___lwdiv@divisor 0020  
         ___lwdiv@counter 0027                  __ptext10 0399                  __ptext11 01A8  
                __ptext12 00DF                _INTCONbits 000B        Lcd_Write_Char@temp 0022  
                intlevel1 0000                 sprintf@ap 0035                 sprintf@sp 0039  
        ___lwmod@dividend 002A                 stringcode 03D5                _OSCCONbits 008F  
      Lcd_Set_Cursor@temp 0029                  sprintf@c 003A                  sprintf@f 002E  
         ___lwmod@divisor 0028           ___lwmod@counter 002D                  stringdir 03D5  
                stringtab 03D5               _SSPCON2bits 0091  
