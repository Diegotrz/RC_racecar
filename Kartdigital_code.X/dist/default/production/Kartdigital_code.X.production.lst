

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Aug 19 23:23:16 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34     0000                     
    35                           ; Version 2.40
    36                           ; Generated 17/11/2021 GMT
    37                           ; 
    38                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F887 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70     0000                     	;# 
    71     0001                     	;# 
    72     0002                     	;# 
    73     0003                     	;# 
    74     0004                     	;# 
    75     0005                     	;# 
    76     0006                     	;# 
    77     0007                     	;# 
    78     0008                     	;# 
    79     0009                     	;# 
    80     000A                     	;# 
    81     000B                     	;# 
    82     000C                     	;# 
    83     000D                     	;# 
    84     000E                     	;# 
    85     000E                     	;# 
    86     000F                     	;# 
    87     0010                     	;# 
    88     0011                     	;# 
    89     0012                     	;# 
    90     0013                     	;# 
    91     0014                     	;# 
    92     0015                     	;# 
    93     0015                     	;# 
    94     0016                     	;# 
    95     0017                     	;# 
    96     0018                     	;# 
    97     0019                     	;# 
    98     001A                     	;# 
    99     001B                     	;# 
   100     001B                     	;# 
   101     001C                     	;# 
   102     001D                     	;# 
   103     001E                     	;# 
   104     001F                     	;# 
   105     0081                     	;# 
   106     0085                     	;# 
   107     0086                     	;# 
   108     0087                     	;# 
   109     0088                     	;# 
   110     0089                     	;# 
   111     008C                     	;# 
   112     008D                     	;# 
   113     008E                     	;# 
   114     008F                     	;# 
   115     0090                     	;# 
   116     0091                     	;# 
   117     0092                     	;# 
   118     0093                     	;# 
   119     0093                     	;# 
   120     0093                     	;# 
   121     0094                     	;# 
   122     0095                     	;# 
   123     0096                     	;# 
   124     0097                     	;# 
   125     0098                     	;# 
   126     0099                     	;# 
   127     009A                     	;# 
   128     009B                     	;# 
   129     009C                     	;# 
   130     009D                     	;# 
   131     009E                     	;# 
   132     009F                     	;# 
   133     0105                     	;# 
   134     0107                     	;# 
   135     0108                     	;# 
   136     0109                     	;# 
   137     010C                     	;# 
   138     010C                     	;# 
   139     010D                     	;# 
   140     010E                     	;# 
   141     010F                     	;# 
   142     0185                     	;# 
   143     0187                     	;# 
   144     0188                     	;# 
   145     0189                     	;# 
   146     018C                     	;# 
   147     018D                     	;# 
   148     0000                     	;# 
   149     0001                     	;# 
   150     0002                     	;# 
   151     0003                     	;# 
   152     0004                     	;# 
   153     0005                     	;# 
   154     0006                     	;# 
   155     0007                     	;# 
   156     0008                     	;# 
   157     0009                     	;# 
   158     000A                     	;# 
   159     000B                     	;# 
   160     000C                     	;# 
   161     000D                     	;# 
   162     000E                     	;# 
   163     000E                     	;# 
   164     000F                     	;# 
   165     0010                     	;# 
   166     0011                     	;# 
   167     0012                     	;# 
   168     0013                     	;# 
   169     0014                     	;# 
   170     0015                     	;# 
   171     0015                     	;# 
   172     0016                     	;# 
   173     0017                     	;# 
   174     0018                     	;# 
   175     0019                     	;# 
   176     001A                     	;# 
   177     001B                     	;# 
   178     001B                     	;# 
   179     001C                     	;# 
   180     001D                     	;# 
   181     001E                     	;# 
   182     001F                     	;# 
   183     0081                     	;# 
   184     0085                     	;# 
   185     0086                     	;# 
   186     0087                     	;# 
   187     0088                     	;# 
   188     0089                     	;# 
   189     008C                     	;# 
   190     008D                     	;# 
   191     008E                     	;# 
   192     008F                     	;# 
   193     0090                     	;# 
   194     0091                     	;# 
   195     0092                     	;# 
   196     0093                     	;# 
   197     0093                     	;# 
   198     0093                     	;# 
   199     0094                     	;# 
   200     0095                     	;# 
   201     0096                     	;# 
   202     0097                     	;# 
   203     0098                     	;# 
   204     0099                     	;# 
   205     009A                     	;# 
   206     009B                     	;# 
   207     009C                     	;# 
   208     009D                     	;# 
   209     009E                     	;# 
   210     009F                     	;# 
   211     0105                     	;# 
   212     0107                     	;# 
   213     0108                     	;# 
   214     0109                     	;# 
   215     010C                     	;# 
   216     010C                     	;# 
   217     010D                     	;# 
   218     010E                     	;# 
   219     010F                     	;# 
   220     0185                     	;# 
   221     0187                     	;# 
   222     0188                     	;# 
   223     0189                     	;# 
   224     018C                     	;# 
   225     018D                     	;# 
   226     0000                     	;# 
   227     0001                     	;# 
   228     0002                     	;# 
   229     0003                     	;# 
   230     0004                     	;# 
   231     0005                     	;# 
   232     0006                     	;# 
   233     0007                     	;# 
   234     0008                     	;# 
   235     0009                     	;# 
   236     000A                     	;# 
   237     000B                     	;# 
   238     000C                     	;# 
   239     000D                     	;# 
   240     000E                     	;# 
   241     000E                     	;# 
   242     000F                     	;# 
   243     0010                     	;# 
   244     0011                     	;# 
   245     0012                     	;# 
   246     0013                     	;# 
   247     0014                     	;# 
   248     0015                     	;# 
   249     0015                     	;# 
   250     0016                     	;# 
   251     0017                     	;# 
   252     0018                     	;# 
   253     0019                     	;# 
   254     001A                     	;# 
   255     001B                     	;# 
   256     001B                     	;# 
   257     001C                     	;# 
   258     001D                     	;# 
   259     001E                     	;# 
   260     001F                     	;# 
   261     0081                     	;# 
   262     0085                     	;# 
   263     0086                     	;# 
   264     0087                     	;# 
   265     0088                     	;# 
   266     0089                     	;# 
   267     008C                     	;# 
   268     008D                     	;# 
   269     008E                     	;# 
   270     008F                     	;# 
   271     0090                     	;# 
   272     0091                     	;# 
   273     0092                     	;# 
   274     0093                     	;# 
   275     0093                     	;# 
   276     0093                     	;# 
   277     0094                     	;# 
   278     0095                     	;# 
   279     0096                     	;# 
   280     0097                     	;# 
   281     0098                     	;# 
   282     0099                     	;# 
   283     009A                     	;# 
   284     009B                     	;# 
   285     009C                     	;# 
   286     009D                     	;# 
   287     009E                     	;# 
   288     009F                     	;# 
   289     0105                     	;# 
   290     0107                     	;# 
   291     0108                     	;# 
   292     0109                     	;# 
   293     010C                     	;# 
   294     010C                     	;# 
   295     010D                     	;# 
   296     010E                     	;# 
   297     010F                     	;# 
   298     0185                     	;# 
   299     0187                     	;# 
   300     0188                     	;# 
   301     0189                     	;# 
   302     018C                     	;# 
   303     018D                     	;# 
   304     0000                     	;# 
   305     0001                     	;# 
   306     0002                     	;# 
   307     0003                     	;# 
   308     0004                     	;# 
   309     0005                     	;# 
   310     0006                     	;# 
   311     0007                     	;# 
   312     0008                     	;# 
   313     0009                     	;# 
   314     000A                     	;# 
   315     000B                     	;# 
   316     000C                     	;# 
   317     000D                     	;# 
   318     000E                     	;# 
   319     000E                     	;# 
   320     000F                     	;# 
   321     0010                     	;# 
   322     0011                     	;# 
   323     0012                     	;# 
   324     0013                     	;# 
   325     0014                     	;# 
   326     0015                     	;# 
   327     0015                     	;# 
   328     0016                     	;# 
   329     0017                     	;# 
   330     0018                     	;# 
   331     0019                     	;# 
   332     001A                     	;# 
   333     001B                     	;# 
   334     001B                     	;# 
   335     001C                     	;# 
   336     001D                     	;# 
   337     001E                     	;# 
   338     001F                     	;# 
   339     0081                     	;# 
   340     0085                     	;# 
   341     0086                     	;# 
   342     0087                     	;# 
   343     0088                     	;# 
   344     0089                     	;# 
   345     008C                     	;# 
   346     008D                     	;# 
   347     008E                     	;# 
   348     008F                     	;# 
   349     0090                     	;# 
   350     0091                     	;# 
   351     0092                     	;# 
   352     0093                     	;# 
   353     0093                     	;# 
   354     0093                     	;# 
   355     0094                     	;# 
   356     0095                     	;# 
   357     0096                     	;# 
   358     0097                     	;# 
   359     0098                     	;# 
   360     0099                     	;# 
   361     009A                     	;# 
   362     009B                     	;# 
   363     009C                     	;# 
   364     009D                     	;# 
   365     009E                     	;# 
   366     009F                     	;# 
   367     0105                     	;# 
   368     0107                     	;# 
   369     0108                     	;# 
   370     0109                     	;# 
   371     010C                     	;# 
   372     010C                     	;# 
   373     010D                     	;# 
   374     010E                     	;# 
   375     010F                     	;# 
   376     0185                     	;# 
   377     0187                     	;# 
   378     0188                     	;# 
   379     0189                     	;# 
   380     018C                     	;# 
   381     018D                     	;# 
   382     0000                     	;# 
   383     0001                     	;# 
   384     0002                     	;# 
   385     0003                     	;# 
   386     0004                     	;# 
   387     0005                     	;# 
   388     0006                     	;# 
   389     0007                     	;# 
   390     0008                     	;# 
   391     0009                     	;# 
   392     000A                     	;# 
   393     000B                     	;# 
   394     000C                     	;# 
   395     000D                     	;# 
   396     000E                     	;# 
   397     000E                     	;# 
   398     000F                     	;# 
   399     0010                     	;# 
   400     0011                     	;# 
   401     0012                     	;# 
   402     0013                     	;# 
   403     0014                     	;# 
   404     0015                     	;# 
   405     0015                     	;# 
   406     0016                     	;# 
   407     0017                     	;# 
   408     0018                     	;# 
   409     0019                     	;# 
   410     001A                     	;# 
   411     001B                     	;# 
   412     001B                     	;# 
   413     001C                     	;# 
   414     001D                     	;# 
   415     001E                     	;# 
   416     001F                     	;# 
   417     0081                     	;# 
   418     0085                     	;# 
   419     0086                     	;# 
   420     0087                     	;# 
   421     0088                     	;# 
   422     0089                     	;# 
   423     008C                     	;# 
   424     008D                     	;# 
   425     008E                     	;# 
   426     008F                     	;# 
   427     0090                     	;# 
   428     0091                     	;# 
   429     0092                     	;# 
   430     0093                     	;# 
   431     0093                     	;# 
   432     0093                     	;# 
   433     0094                     	;# 
   434     0095                     	;# 
   435     0096                     	;# 
   436     0097                     	;# 
   437     0098                     	;# 
   438     0099                     	;# 
   439     009A                     	;# 
   440     009B                     	;# 
   441     009C                     	;# 
   442     009D                     	;# 
   443     009E                     	;# 
   444     009F                     	;# 
   445     0105                     	;# 
   446     0107                     	;# 
   447     0108                     	;# 
   448     0109                     	;# 
   449     010C                     	;# 
   450     010C                     	;# 
   451     010D                     	;# 
   452     010E                     	;# 
   453     010F                     	;# 
   454     0185                     	;# 
   455     0187                     	;# 
   456     0188                     	;# 
   457     0189                     	;# 
   458     018C                     	;# 
   459     018D                     	;# 
   460                           
   461                           	psect	strings
   462     0003                     __pstrings:
   463     0003                     stringtab:
   464     0003                     __stringtab:
   465     0003                     stringcode:	
   466                           ;	String table - string pointers are 1 byte each
   467                           
   468     0003                     stringdir:
   469     0003  3000               	movlw	high stringdir
   470     0004  008A               	movwf	10
   471     0005  0804               	movf	4,w
   472     0006  0A84               	incf	4,f
   473     0007  0782               	addwf	2,f
   474     0008                     __stringbase:
   475     0008  3400               	retlw	0
   476     0009                     __end_of__stringtab:
   477     0009                     _message:
   478     0009  3432               	retlw	50
   479     000A  342E               	retlw	46
   480     000B  3445               	retlw	69
   481     000C  346E               	retlw	110
   482     000D  3476               	retlw	118
   483     000E  3469               	retlw	105
   484     000F  3461               	retlw	97
   485     0010  3472               	retlw	114
   486     0011  3420               	retlw	32
   487     0012  3441               	retlw	65
   488     0013  3473               	retlw	115
   489     0014  3463               	retlw	99
   490     0015  3469               	retlw	105
   491     0016  3469               	retlw	105
   492     0017  3400               	retlw	0
   493     0018                     __end_of_message:
   494     0018                     _dpowers:
   495     0018  3401               	retlw	1
   496     0019  3400               	retlw	0
   497     001A  340A               	retlw	10
   498     001B  3400               	retlw	0
   499     001C  3464               	retlw	100
   500     001D  3400               	retlw	0
   501     001E  34E8               	retlw	232
   502     001F  3403               	retlw	3
   503     0020  3410               	retlw	16
   504     0021  3427               	retlw	39
   505     0022                     __end_of_dpowers:
   506     0007                     _PORTCbits	set	7
   507     0008                     _PORTD	set	8
   508     0006                     _PORTB	set	6
   509     0005                     _PORTA	set	5
   510     0019                     _TXREG	set	25
   511     001A                     _RCREG	set	26
   512     0018                     _RCSTA	set	24
   513     0008                     _PORTDbits	set	8
   514     0013                     _SSPBUF	set	19
   515     0014                     _SSPCON	set	20
   516     00C4                     _CREN	set	196
   517     00C1                     _OERR	set	193
   518     0065                     _RCIF	set	101
   519     0043                     _RD3	set	67
   520     0047                     _RD7	set	71
   521     0046                     _RD6	set	70
   522     0045                     _RD5	set	69
   523     0044                     _RD4	set	68
   524     0063                     _SSPIF	set	99
   525     005E                     _PEIE	set	94
   526     005F                     _GIE	set	95
   527     008F                     _OSCCONbits	set	143
   528     0088                     _TRISD	set	136
   529     0086                     _TRISB	set	134
   530     0085                     _TRISA	set	133
   531     0098                     _TXSTA	set	152
   532     0099                     _SPBRG	set	153
   533     0091                     _SSPCON2bits	set	145
   534     0087                     _TRISCbits	set	135
   535     0094                     _SSPSTAT	set	148
   536     0093                     _SSPADD	set	147
   537     0091                     _SSPCON2	set	145
   538     043F                     _TRISC7	set	1087
   539     043E                     _TRISC6	set	1086
   540     043A                     _TRISC2	set	1082
   541     0439                     _TRISC1	set	1081
   542     04C1                     _TRMT	set	1217
   543     0463                     _SSPIE	set	1123
   544     043C                     _TRISC4	set	1084
   545     043B                     _TRISC3	set	1083
   546     0189                     _ANSELH	set	393
   547     0188                     _ANSEL	set	392
   548     0022                     STR_1:
   549     0022  3425               	retlw	37	;'%'
   550     0023  3475               	retlw	117	;'u'
   551     0024  3400               	retlw	0
   552     0022                     
   553                           	psect	cinit
   554     07EB                     start_initialization:	
   555                           ; #config settings
   556                           
   557     07EB                     __initialization:
   558                           
   559                           ; Clear objects allocated to BANK0
   560     07EB  1383               	bcf	3,7	;select IRP bank0
   561     07EC  3020               	movlw	low __pbssBANK0
   562     07ED  0084               	movwf	4
   563     07EE  3052               	movlw	low (__pbssBANK0+50)
   564     07EF  120A  118A  22E9  120A  118A  	fcall	clear_ram0
   565                           
   566                           ; Clear objects allocated to BANK1
   567     07F4  30A0               	movlw	low __pbssBANK1
   568     07F5  0084               	movwf	4
   569     07F6  30B4               	movlw	low (__pbssBANK1+20)
   570     07F7  120A  118A  22E9  120A  118A  	fcall	clear_ram0
   571     07FC                     end_of_initialization:	
   572                           ;End of C runtime variable initialization code
   573                           
   574     07FC                     __end_of__initialization:
   575     07FC  0183               	clrf	3
   576     07FD  120A  118A  2E83   	ljmp	_main	;jump to C main() function
   577                           
   578                           	psect	bssBANK0
   579     0020                     __pbssBANK0:
   580     0020                     _Zval2:
   581     0020                     	ds	1
   582     0021                     _Zval:
   583     0021                     	ds	1
   584     0022                     _Yval2:
   585     0022                     	ds	1
   586     0023                     _Yval:
   587     0023                     	ds	1
   588     0024                     _Xval2:
   589     0024                     	ds	1
   590     0025                     _Xval:
   591     0025                     	ds	1
   592     0026                     _z:
   593     0026                     	ds	1
   594     0027                     _y:
   595     0027                     	ds	1
   596     0028                     _x:
   597     0028                     	ds	1
   598     0029                     _i:
   599     0029                     	ds	1
   600     002A                     _s2:
   601     002A                     	ds	20
   602     003E                     _s:
   603     003E                     	ds	20
   604                           
   605                           	psect	bssBANK1
   606     00A0                     __pbssBANK1:
   607     00A0                     _s3:
   608     00A0                     	ds	20
   609                           
   610                           	psect	clrtext
   611     02E9                     clear_ram0:	
   612                           ;	Called with FSR containing the base address, and
   613                           ;	W with the last address+1
   614                           
   615     02E9  0064               	clrwdt	;clear the watchdog before getting into this loop
   616     02EA                     clrloop0:
   617     02EA  0180               	clrf	0	;clear RAM location pointed to by FSR
   618     02EB  0A84               	incf	4,f	;increment pointer
   619     02EC  0604               	xorwf	4,w	;XOR with final address
   620     02ED  1903               	btfsc	3,2	;have we reached the end yet?
   621     02EE  3400               	retlw	0	;all done for this memory range, return
   622     02EF  0604               	xorwf	4,w	;XOR again to restore value
   623     02F0  2AEA               	goto	clrloop0	;do the next byte
   624                           
   625                           	psect	cstackCOMMON
   626     0070                     __pcstackCOMMON:
   627     0070                     ?_setup:
   628     0070                     ??_setup:	
   629                           ; 1 bytes @ 0x0
   630                           
   631     0070                     ?_I2C_Master_Wait:	
   632                           ; 1 bytes @ 0x0
   633                           
   634     0070                     ??_I2C_Master_Wait:	
   635                           ; 1 bytes @ 0x0
   636                           
   637     0070                     ?_I2C_Master_Start:	
   638                           ; 1 bytes @ 0x0
   639                           
   640     0070                     ??_I2C_Master_Start:	
   641                           ; 1 bytes @ 0x0
   642                           
   643     0070                     ?_I2C_Master_RepeatedStart:	
   644                           ; 1 bytes @ 0x0
   645                           
   646     0070                     ??_I2C_Master_RepeatedStart:	
   647                           ; 1 bytes @ 0x0
   648                           
   649     0070                     ?_I2C_Master_Stop:	
   650                           ; 1 bytes @ 0x0
   651                           
   652     0070                     ??_I2C_Master_Stop:	
   653                           ; 1 bytes @ 0x0
   654                           
   655     0070                     ?_I2C_Master_Write:	
   656                           ; 1 bytes @ 0x0
   657                           
   658     0070                     ?_Lcd_Port:	
   659                           ; 1 bytes @ 0x0
   660                           
   661     0070                     ??_Lcd_Port:	
   662                           ; 1 bytes @ 0x0
   663                           
   664     0070                     ?_Lcd_Cmd:	
   665                           ; 1 bytes @ 0x0
   666                           
   667     0070                     ?_Lcd_Clear:	
   668                           ; 1 bytes @ 0x0
   669                           
   670     0070                     ?_Lcd_Init:	
   671                           ; 1 bytes @ 0x0
   672                           
   673     0070                     ?_Lcd_Write_Char:	
   674                           ; 1 bytes @ 0x0
   675                           
   676     0070                     ?_Lcd_Write_String:	
   677                           ; 1 bytes @ 0x0
   678                           
   679     0070                     ?_main:	
   680                           ; 1 bytes @ 0x0
   681                           
   682     0070                     ?_I2C_Master_Read:	
   683                           ; 1 bytes @ 0x0
   684                           
   685     0070                     ?___lwdiv:	
   686                           ; 2 bytes @ 0x0
   687                           
   688     0070                     ?___lldiv:	
   689                           ; 2 bytes @ 0x0
   690                           
   691     0070                     Lcd_Port@a:	
   692                           ; 4 bytes @ 0x0
   693                           
   694     0070                     I2C_Master_Write@d:	
   695                           ; 1 bytes @ 0x0
   696                           
   697     0070                     I2C_Master_Read@a:	
   698                           ; 2 bytes @ 0x0
   699                           
   700     0070                     ___lwdiv@divisor:	
   701                           ; 2 bytes @ 0x0
   702                           
   703     0070                     ___lldiv@divisor:	
   704                           ; 2 bytes @ 0x0
   705                           
   706                           
   707                           ; 4 bytes @ 0x0
   708     0070                     	ds	1
   709     0071                     ??_Lcd_Cmd:
   710     0071                     ??_Lcd_Write_Char:	
   711                           ; 1 bytes @ 0x1
   712                           
   713                           
   714                           ; 1 bytes @ 0x1
   715     0071                     	ds	1
   716     0072                     ??_I2C_Master_Write:
   717     0072                     ??_I2C_Master_Read:	
   718                           ; 1 bytes @ 0x2
   719                           
   720     0072                     Lcd_Write_Char@temp:	
   721                           ; 1 bytes @ 0x2
   722                           
   723     0072                     ___lwdiv@dividend:	
   724                           ; 1 bytes @ 0x2
   725                           
   726                           
   727                           ; 2 bytes @ 0x2
   728     0072                     	ds	1
   729     0073                     Lcd_Cmd@a:
   730     0073                     Lcd_Write_Char@y:	
   731                           ; 1 bytes @ 0x3
   732                           
   733                           
   734                           ; 1 bytes @ 0x3
   735     0073                     	ds	1
   736     0074                     ??_Lcd_Clear:
   737     0074                     ?_Lcd_Set_Cursor:	
   738                           ; 1 bytes @ 0x4
   739                           
   740     0074                     ??_Lcd_Init:	
   741                           ; 1 bytes @ 0x4
   742                           
   743     0074                     ??___lwdiv:	
   744                           ; 1 bytes @ 0x4
   745                           
   746     0074                     Lcd_Set_Cursor@b:	
   747                           ; 1 bytes @ 0x4
   748                           
   749     0074                     Lcd_Write_Char@a:	
   750                           ; 1 bytes @ 0x4
   751                           
   752     0074                     I2C_Master_Read@temp:	
   753                           ; 1 bytes @ 0x4
   754                           
   755     0074                     ___lldiv@dividend:	
   756                           ; 2 bytes @ 0x4
   757                           
   758                           
   759                           ; 4 bytes @ 0x4
   760     0074                     	ds	1
   761     0075                     ??_Lcd_Set_Cursor:
   762     0075                     ??_Lcd_Write_String:	
   763                           ; 1 bytes @ 0x5
   764                           
   765     0075                     ___lwdiv@quotient:	
   766                           ; 1 bytes @ 0x5
   767                           
   768                           
   769                           ; 2 bytes @ 0x5
   770     0075                     	ds	1
   771     0076                     Lcd_Set_Cursor@a:
   772     0076                     Lcd_Write_String@i:	
   773                           ; 1 bytes @ 0x6
   774                           
   775                           
   776                           ; 2 bytes @ 0x6
   777     0076                     	ds	1
   778     0077                     Lcd_Set_Cursor@z:
   779     0077                     ___lwdiv@counter:	
   780                           ; 1 bytes @ 0x7
   781                           
   782                           
   783                           ; 1 bytes @ 0x7
   784     0077                     	ds	1
   785     0078                     ??___lldiv:
   786     0078                     ?___lwmod:	
   787                           ; 1 bytes @ 0x8
   788                           
   789     0078                     Lcd_Set_Cursor@y:	
   790                           ; 2 bytes @ 0x8
   791                           
   792     0078                     Lcd_Write_String@a:	
   793                           ; 1 bytes @ 0x8
   794                           
   795     0078                     ___lwmod@divisor:	
   796                           ; 1 bytes @ 0x8
   797                           
   798                           
   799                           ; 2 bytes @ 0x8
   800     0078                     	ds	1
   801     0079                     Lcd_Set_Cursor@temp:
   802     0079                     ___lldiv@quotient:	
   803                           ; 1 bytes @ 0x9
   804                           
   805                           
   806                           ; 4 bytes @ 0x9
   807     0079                     	ds	1
   808     007A                     ___lwmod@dividend:
   809                           
   810                           ; 2 bytes @ 0xA
   811     007A                     	ds	2
   812     007C                     ??___lwmod:
   813                           
   814                           ; 1 bytes @ 0xC
   815     007C                     	ds	1
   816     007D                     ___lldiv@counter:
   817     007D                     ___lwmod@counter:	
   818                           ; 1 bytes @ 0xD
   819                           
   820                           
   821                           ; 1 bytes @ 0xD
   822     007D                     	ds	1
   823                           
   824                           	psect	cstackBANK0
   825     0052                     __pcstackBANK0:
   826     0052                     ?_I2C_Init:
   827     0052                     ?_sprintf:	
   828                           ; 1 bytes @ 0x0
   829                           
   830     0052                     sprintf@f:	
   831                           ; 2 bytes @ 0x0
   832                           
   833     0052                     I2C_Init@i2c_clk_freq:	
   834                           ; 1 bytes @ 0x0
   835                           
   836                           
   837                           ; 4 bytes @ 0x0
   838     0052                     	ds	3
   839     0055                     ??_sprintf:
   840                           
   841                           ; 1 bytes @ 0x3
   842     0055                     	ds	1
   843     0056                     ??_I2C_Init:
   844                           
   845                           ; 1 bytes @ 0x4
   846     0056                     	ds	2
   847     0058                     sprintf@flag:
   848                           
   849                           ; 1 bytes @ 0x6
   850     0058                     	ds	1
   851     0059                     sprintf@ap:
   852                           
   853                           ; 1 bytes @ 0x7
   854     0059                     	ds	1
   855     005A                     sprintf@val:
   856                           
   857                           ; 2 bytes @ 0x8
   858     005A                     	ds	2
   859     005C                     sprintf@prec:
   860                           
   861                           ; 1 bytes @ 0xA
   862     005C                     	ds	1
   863     005D                     sprintf@sp:
   864                           
   865                           ; 1 bytes @ 0xB
   866     005D                     	ds	1
   867     005E                     sprintf@c:
   868                           
   869                           ; 1 bytes @ 0xC
   870     005E                     	ds	1
   871     005F                     ??_main:
   872                           
   873                           ; 1 bytes @ 0xD
   874     005F                     	ds	3
   875                           
   876                           	psect	maintext
   877     0683                     __pmaintext:	
   878 ;;
   879 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   880 ;;
   881 ;; *************** function _main *****************
   882 ;; Defined at:
   883 ;;		line 62 in file "pruebaADXL345.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;		None
   886 ;; Auto vars:     Size  Location     Type
   887 ;;		None
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   892 ;; Tracked objects:
   893 ;;		On entry : B00/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   897 ;;      Params:         0       0       0       0       0
   898 ;;      Locals:         0       0       0       0       0
   899 ;;      Temps:          0       3       0       0       0
   900 ;;      Totals:         0       3       0       0       0
   901 ;;Total ram usage:        3 bytes
   902 ;; Hardware stack levels required when called: 3
   903 ;; This function calls:
   904 ;;		_I2C_Init
   905 ;;		_I2C_Master_Read
   906 ;;		_I2C_Master_RepeatedStart
   907 ;;		_I2C_Master_Start
   908 ;;		_I2C_Master_Stop
   909 ;;		_I2C_Master_Write
   910 ;;		_Lcd_Clear
   911 ;;		_Lcd_Init
   912 ;;		_Lcd_Set_Cursor
   913 ;;		_Lcd_Write_String
   914 ;;		_setup
   915 ;;		_sprintf
   916 ;; This function is called by:
   917 ;;		Startup code after reset
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921     0683                     _main:	
   922                           ;psect for function _main
   923                           
   924     0683                     l1552:	
   925                           ;incstack = 0
   926                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   927                           
   928                           
   929                           ;pruebaADXL345.c: 63:     setup();
   930     0683  120A  118A  234A  120A  118A  	fcall	_setup
   931                           
   932                           ;pruebaADXL345.c: 64:     Lcd_Init();
   933     0688  120A  118A  24FF  120A  118A  	fcall	_Lcd_Init
   934                           
   935                           ;pruebaADXL345.c: 65:     I2C_Init(100000);
   936     068D  3000               	movlw	0
   937     068E  1283               	bcf	3,5	;RP0=0, select bank0
   938     068F  1303               	bcf	3,6	;RP1=0, select bank0
   939     0690  00D5               	movwf	I2C_Init@i2c_clk_freq+3
   940     0691  3001               	movlw	1
   941     0692  00D4               	movwf	I2C_Init@i2c_clk_freq+2
   942     0693  3086               	movlw	134
   943     0694  00D3               	movwf	I2C_Init@i2c_clk_freq+1
   944     0695  30A0               	movlw	160
   945     0696  00D2               	movwf	I2C_Init@i2c_clk_freq
   946     0697  120A  118A  23D5  120A  118A  	fcall	_I2C_Init
   947                           
   948                           ;pruebaADXL345.c: 66:      I2C_Master_Start();
   949     069C  120A  118A  22FA  120A  118A  	fcall	_I2C_Master_Start
   950                           
   951                           ;pruebaADXL345.c: 67:         I2C_Master_Write(0x2D);
   952     06A1  302D               	movlw	45
   953     06A2  00F0               	movwf	I2C_Master_Write@d
   954     06A3  3000               	movlw	0
   955     06A4  00F1               	movwf	I2C_Master_Write@d+1
   956     06A5  120A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
   957                           
   958                           ;pruebaADXL345.c: 68:         I2C_Master_Write(0b00001000);
   959     06AA  3008               	movlw	8
   960     06AB  00F0               	movwf	I2C_Master_Write@d
   961     06AC  3000               	movlw	0
   962     06AD  00F1               	movwf	I2C_Master_Write@d+1
   963     06AE  120A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
   964                           
   965                           ;pruebaADXL345.c: 69:         I2C_Master_RepeatedStart();
   966     06B3  120A  118A  22F1  120A  118A  	fcall	_I2C_Master_RepeatedStart
   967                           
   968                           ;pruebaADXL345.c: 70:         I2C_Master_Write(0x31);
   969     06B8  3031               	movlw	49
   970     06B9  00F0               	movwf	I2C_Master_Write@d
   971     06BA  3000               	movlw	0
   972     06BB  00F1               	movwf	I2C_Master_Write@d+1
   973     06BC  120A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
   974                           
   975                           ;pruebaADXL345.c: 71:         I2C_Master_Write(0b00000010);
   976     06C1  3002               	movlw	2
   977     06C2  00F0               	movwf	I2C_Master_Write@d
   978     06C3  3000               	movlw	0
   979     06C4  00F1               	movwf	I2C_Master_Write@d+1
   980     06C5  120A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
   981                           
   982                           ;pruebaADXL345.c: 72:         I2C_Master_Stop();
   983     06CA  120A  118A  2303  120A  118A  	fcall	_I2C_Master_Stop
   984     06CF                     l255:	
   985                           ;pruebaADXL345.c: 74:     while(1){
   986                           
   987                           
   988                           ;pruebaADXL345.c: 78:         I2C_Master_Start();
   989     06CF  120A  118A  22FA  120A  118A  	fcall	_I2C_Master_Start
   990                           
   991                           ;pruebaADXL345.c: 79:         I2C_Master_Write(0x32);
   992     06D4  3032               	movlw	50
   993     06D5  00F0               	movwf	I2C_Master_Write@d
   994     06D6  3000               	movlw	0
   995     06D7  00F1               	movwf	I2C_Master_Write@d+1
   996     06D8  120A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
   997                           
   998                           ;pruebaADXL345.c: 80:         Xval = I2C_Master_Read(0);
   999     06DD  3000               	movlw	0
  1000     06DE  00F0               	movwf	I2C_Master_Read@a
  1001     06DF  00F1               	movwf	I2C_Master_Read@a+1
  1002     06E0  120A  118A  23A7  120A  118A  	fcall	_I2C_Master_Read
  1003     06E5  0870               	movf	?_I2C_Master_Read,w
  1004     06E6  1283               	bcf	3,5	;RP0=0, select bank0
  1005     06E7  1303               	bcf	3,6	;RP1=0, select bank0
  1006     06E8  00A5               	movwf	_Xval
  1007                           
  1008                           ;pruebaADXL345.c: 81:         I2C_Master_RepeatedStart();
  1009     06E9  120A  118A  22F1  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1010                           
  1011                           ;pruebaADXL345.c: 82:         I2C_Master_Write(0x33);
  1012     06EE  3033               	movlw	51
  1013     06EF  00F0               	movwf	I2C_Master_Write@d
  1014     06F0  3000               	movlw	0
  1015     06F1  00F1               	movwf	I2C_Master_Write@d+1
  1016     06F2  120A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
  1017                           
  1018                           ;pruebaADXL345.c: 83:         Xval2 = I2C_Master_Read(0);
  1019     06F7  3000               	movlw	0
  1020     06F8  00F0               	movwf	I2C_Master_Read@a
  1021     06F9  00F1               	movwf	I2C_Master_Read@a+1
  1022     06FA  120A  118A  23A7  120A  118A  	fcall	_I2C_Master_Read
  1023     06FF  0870               	movf	?_I2C_Master_Read,w
  1024     0700  1283               	bcf	3,5	;RP0=0, select bank0
  1025     0701  1303               	bcf	3,6	;RP1=0, select bank0
  1026     0702  00A4               	movwf	_Xval2
  1027                           
  1028                           ;pruebaADXL345.c: 84:         I2C_Master_RepeatedStart();
  1029     0703  120A  118A  22F1  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1030                           
  1031                           ;pruebaADXL345.c: 85:         I2C_Master_Write(0x34);
  1032     0708  3034               	movlw	52
  1033     0709  00F0               	movwf	I2C_Master_Write@d
  1034     070A  3000               	movlw	0
  1035     070B  00F1               	movwf	I2C_Master_Write@d+1
  1036     070C  120A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
  1037                           
  1038                           ;pruebaADXL345.c: 86:         Yval = I2C_Master_Read(0);
  1039     0711  3000               	movlw	0
  1040     0712  00F0               	movwf	I2C_Master_Read@a
  1041     0713  00F1               	movwf	I2C_Master_Read@a+1
  1042     0714  120A  118A  23A7  120A  118A  	fcall	_I2C_Master_Read
  1043     0719  0870               	movf	?_I2C_Master_Read,w
  1044     071A  1283               	bcf	3,5	;RP0=0, select bank0
  1045     071B  1303               	bcf	3,6	;RP1=0, select bank0
  1046     071C  00A3               	movwf	_Yval
  1047                           
  1048                           ;pruebaADXL345.c: 87:         I2C_Master_RepeatedStart();
  1049     071D  120A  118A  22F1  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1050                           
  1051                           ;pruebaADXL345.c: 88:         I2C_Master_Write(0x35);
  1052     0722  3035               	movlw	53
  1053     0723  00F0               	movwf	I2C_Master_Write@d
  1054     0724  3000               	movlw	0
  1055     0725  00F1               	movwf	I2C_Master_Write@d+1
  1056     0726  120A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
  1057                           
  1058                           ;pruebaADXL345.c: 89:         Yval2 = I2C_Master_Read(0);
  1059     072B  3000               	movlw	0
  1060     072C  00F0               	movwf	I2C_Master_Read@a
  1061     072D  00F1               	movwf	I2C_Master_Read@a+1
  1062     072E  120A  118A  23A7  120A  118A  	fcall	_I2C_Master_Read
  1063     0733  0870               	movf	?_I2C_Master_Read,w
  1064     0734  1283               	bcf	3,5	;RP0=0, select bank0
  1065     0735  1303               	bcf	3,6	;RP1=0, select bank0
  1066     0736  00A2               	movwf	_Yval2
  1067                           
  1068                           ;pruebaADXL345.c: 90:         I2C_Master_RepeatedStart();
  1069     0737  120A  118A  22F1  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1070                           
  1071                           ;pruebaADXL345.c: 91:         I2C_Master_Write(0x36);
  1072     073C  3036               	movlw	54
  1073     073D  00F0               	movwf	I2C_Master_Write@d
  1074     073E  3000               	movlw	0
  1075     073F  00F1               	movwf	I2C_Master_Write@d+1
  1076     0740  120A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
  1077                           
  1078                           ;pruebaADXL345.c: 92:         Zval = I2C_Master_Read(0);
  1079     0745  3000               	movlw	0
  1080     0746  00F0               	movwf	I2C_Master_Read@a
  1081     0747  00F1               	movwf	I2C_Master_Read@a+1
  1082     0748  120A  118A  23A7  120A  118A  	fcall	_I2C_Master_Read
  1083     074D  0870               	movf	?_I2C_Master_Read,w
  1084     074E  1283               	bcf	3,5	;RP0=0, select bank0
  1085     074F  1303               	bcf	3,6	;RP1=0, select bank0
  1086     0750  00A1               	movwf	_Zval
  1087                           
  1088                           ;pruebaADXL345.c: 93:         I2C_Master_RepeatedStart();
  1089     0751  120A  118A  22F1  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1090                           
  1091                           ;pruebaADXL345.c: 94:         I2C_Master_Write(0x37);
  1092     0756  3037               	movlw	55
  1093     0757  00F0               	movwf	I2C_Master_Write@d
  1094     0758  3000               	movlw	0
  1095     0759  00F1               	movwf	I2C_Master_Write@d+1
  1096     075A  120A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
  1097                           
  1098                           ;pruebaADXL345.c: 95:         Zval2 = I2C_Master_Read(0);
  1099     075F  3000               	movlw	0
  1100     0760  00F0               	movwf	I2C_Master_Read@a
  1101     0761  00F1               	movwf	I2C_Master_Read@a+1
  1102     0762  120A  118A  23A7  120A  118A  	fcall	_I2C_Master_Read
  1103     0767  0870               	movf	?_I2C_Master_Read,w
  1104     0768  1283               	bcf	3,5	;RP0=0, select bank0
  1105     0769  1303               	bcf	3,6	;RP1=0, select bank0
  1106     076A  00A0               	movwf	_Zval2
  1107                           
  1108                           ;pruebaADXL345.c: 96:         I2C_Master_Stop();
  1109     076B  120A  118A  2303  120A  118A  	fcall	_I2C_Master_Stop
  1110     0770                     l1554:
  1111                           
  1112                           ;pruebaADXL345.c: 98:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1113     0770  3003               	movlw	3
  1114     0771  1283               	bcf	3,5	;RP0=0, select bank0
  1115     0772  1303               	bcf	3,6	;RP1=0, select bank0
  1116     0773  00E1               	movwf	??_main+2
  1117     0774  3008               	movlw	8
  1118     0775  00E0               	movwf	??_main+1
  1119     0776  3076               	movlw	118
  1120     0777  00DF               	movwf	??_main
  1121     0778                     u957:
  1122     0778  0BDF               	decfsz	??_main,f
  1123     0779  2F78               	goto	u957
  1124     077A  0BE0               	decfsz	??_main+1,f
  1125     077B  2F78               	goto	u957
  1126     077C  0BE1               	decfsz	??_main+2,f
  1127     077D  2F78               	goto	u957
  1128     077E  0000               	nop
  1129     077F                     l1556:
  1130                           
  1131                           ;pruebaADXL345.c: 99:          Lcd_Clear();
  1132     077F  120A  118A  2323  120A  118A  	fcall	_Lcd_Clear
  1133                           
  1134                           ;pruebaADXL345.c: 100:          x= (Xval2<<8)| (Xval & 0xFF);
  1135     0784  1283               	bcf	3,5	;RP0=0, select bank0
  1136     0785  1303               	bcf	3,6	;RP1=0, select bank0
  1137     0786  0825               	movf	_Xval,w
  1138     0787  00A8               	movwf	_x
  1139                           
  1140                           ;pruebaADXL345.c: 101:          y= Yval|Yval2 <<8;
  1141     0788  0823               	movf	_Yval,w
  1142     0789  00A7               	movwf	_y
  1143                           
  1144                           ;pruebaADXL345.c: 102:          z= Zval|Zval2 <<8;
  1145     078A  0821               	movf	_Zval,w
  1146     078B  00A6               	movwf	_z
  1147     078C                     l1558:
  1148                           
  1149                           ;pruebaADXL345.c: 103:         sprintf(s, "%u", x);
  1150     078C  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1151     078D  00D2               	movwf	sprintf@f
  1152     078E  0828               	movf	_x,w
  1153     078F  00DF               	movwf	??_main
  1154     0790  01E0               	clrf	??_main+1
  1155     0791  085F               	movf	??_main,w
  1156     0792  00D3               	movwf	?_sprintf+1
  1157     0793  0860               	movf	??_main+1,w
  1158     0794  00D4               	movwf	?_sprintf+2
  1159     0795  303E               	movlw	(low (_s| 0))& (0+255)
  1160     0796  120A  118A  25C2  120A  118A  	fcall	_sprintf
  1161     079B                     l1560:
  1162                           
  1163                           ;pruebaADXL345.c: 104:         sprintf(s2, "%u", y);
  1164     079B  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1165     079C  1283               	bcf	3,5	;RP0=0, select bank0
  1166     079D  1303               	bcf	3,6	;RP1=0, select bank0
  1167     079E  00D2               	movwf	sprintf@f
  1168     079F  0827               	movf	_y,w
  1169     07A0  00DF               	movwf	??_main
  1170     07A1  01E0               	clrf	??_main+1
  1171     07A2  085F               	movf	??_main,w
  1172     07A3  00D3               	movwf	?_sprintf+1
  1173     07A4  0860               	movf	??_main+1,w
  1174     07A5  00D4               	movwf	?_sprintf+2
  1175     07A6  302A               	movlw	(low (_s2| 0))& (0+255)
  1176     07A7  120A  118A  25C2  120A  118A  	fcall	_sprintf
  1177     07AC                     l1562:
  1178                           
  1179                           ;pruebaADXL345.c: 105:         sprintf(s3, "%u", z);
  1180     07AC  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1181     07AD  1283               	bcf	3,5	;RP0=0, select bank0
  1182     07AE  1303               	bcf	3,6	;RP1=0, select bank0
  1183     07AF  00D2               	movwf	sprintf@f
  1184     07B0  0826               	movf	_z,w
  1185     07B1  00DF               	movwf	??_main
  1186     07B2  01E0               	clrf	??_main+1
  1187     07B3  085F               	movf	??_main,w
  1188     07B4  00D3               	movwf	?_sprintf+1
  1189     07B5  0860               	movf	??_main+1,w
  1190     07B6  00D4               	movwf	?_sprintf+2
  1191     07B7  30A0               	movlw	(low (_s3| 0))& (0+255)
  1192     07B8  120A  118A  25C2  120A  118A  	fcall	_sprintf
  1193     07BD                     l1564:
  1194                           
  1195                           ;pruebaADXL345.c: 106:     Lcd_Set_Cursor(1,1);
  1196     07BD  01F4               	clrf	Lcd_Set_Cursor@b
  1197     07BE  0AF4               	incf	Lcd_Set_Cursor@b,f
  1198     07BF  3001               	movlw	1
  1199     07C0  120A  118A  24B9  120A  118A  	fcall	_Lcd_Set_Cursor
  1200     07C5                     l1566:
  1201                           
  1202                           ;pruebaADXL345.c: 107:     Lcd_Write_String(s);
  1203     07C5  303E               	movlw	(low (_s| 0))& (0+255)
  1204     07C6  120A  118A  2364  120A  118A  	fcall	_Lcd_Write_String
  1205     07CB                     l1568:
  1206                           
  1207                           ;pruebaADXL345.c: 108:     Lcd_Set_Cursor(1,5);
  1208     07CB  3005               	movlw	5
  1209     07CC  00F4               	movwf	Lcd_Set_Cursor@b
  1210     07CD  3001               	movlw	1
  1211     07CE  120A  118A  24B9  120A  118A  	fcall	_Lcd_Set_Cursor
  1212     07D3                     l1570:
  1213                           
  1214                           ;pruebaADXL345.c: 109:     Lcd_Write_String(s2);
  1215     07D3  302A               	movlw	(low (_s2| 0))& (0+255)
  1216     07D4  120A  118A  2364  120A  118A  	fcall	_Lcd_Write_String
  1217     07D9                     l1572:
  1218                           
  1219                           ;pruebaADXL345.c: 110:     Lcd_Set_Cursor(1,12);
  1220     07D9  300C               	movlw	12
  1221     07DA  00F4               	movwf	Lcd_Set_Cursor@b
  1222     07DB  3001               	movlw	1
  1223     07DC  120A  118A  24B9  120A  118A  	fcall	_Lcd_Set_Cursor
  1224     07E1                     l1574:
  1225                           
  1226                           ;pruebaADXL345.c: 111:     Lcd_Write_String(s3);
  1227     07E1  30A0               	movlw	(low (_s3| 0))& (0+255)
  1228     07E2  120A  118A  2364  120A  118A  	fcall	_Lcd_Write_String
  1229     07E7  2ECF               	goto	l255
  1230     07E8  120A  118A  2800   	ljmp	start
  1231     07EB                     __end_of_main:
  1232                           
  1233                           	psect	text1
  1234     05C2                     __ptext1:	
  1235 ;; *************** function _sprintf *****************
  1236 ;; Defined at:
  1237 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;  sp              1    wreg     PTR unsigned char 
  1240 ;;		 -> s3(20), s2(20), s(20), 
  1241 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1242 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1245 ;;		 -> s3(20), s2(20), s(20), 
  1246 ;;  tmpval          4    0        struct .
  1247 ;;  val             2    8[BANK0 ] unsigned int 
  1248 ;;  cp              2    0        PTR const unsigned char 
  1249 ;;  len             2    0        unsigned int 
  1250 ;;  c               1   12[BANK0 ] unsigned char 
  1251 ;;  prec            1   10[BANK0 ] char 
  1252 ;;  ap              1    7[BANK0 ] PTR void [1]
  1253 ;;		 -> ?_sprintf(2), 
  1254 ;;  flag            1    6[BANK0 ] unsigned char 
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  2    0[BANK0 ] int 
  1257 ;; Registers used:
  1258 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1264 ;;      Params:         0       3       0       0       0
  1265 ;;      Locals:         0       7       0       0       0
  1266 ;;      Temps:          0       3       0       0       0
  1267 ;;      Totals:         0      13       0       0       0
  1268 ;;Total ram usage:       13 bytes
  1269 ;; Hardware stack levels used: 1
  1270 ;; Hardware stack levels required when called: 1
  1271 ;; This function calls:
  1272 ;;		___lwdiv
  1273 ;;		___lwmod
  1274 ;; This function is called by:
  1275 ;;		_main
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279     05C2                     _sprintf:	
  1280                           ;psect for function _sprintf
  1281                           
  1282                           
  1283                           ;incstack = 0
  1284                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1285                           ;sprintf@sp stored from wreg
  1286     05C2  1283               	bcf	3,5	;RP0=0, select bank0
  1287     05C3  1303               	bcf	3,6	;RP1=0, select bank0
  1288     05C4  00DD               	movwf	sprintf@sp
  1289     05C5                     l1468:
  1290                           
  1291                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1292     05C5  3053               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1293     05C6  00D9               	movwf	sprintf@ap
  1294                           
  1295                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1296     05C7  2E6E               	goto	l1510
  1297     05C8                     l1470:
  1298                           
  1299                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1300     05C8  3025               	movlw	37
  1301     05C9  065E               	xorwf	sprintf@c,w
  1302     05CA  1903               	btfsc	3,2
  1303     05CB  2DCD               	goto	u841
  1304     05CC  2DCE               	goto	u840
  1305     05CD                     u841:
  1306     05CD  2DD8               	goto	l1476
  1307     05CE                     u840:
  1308     05CE                     l1472:
  1309                           
  1310                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1311     05CE  085D               	movf	sprintf@sp,w
  1312     05CF  0084               	movwf	4
  1313     05D0  085E               	movf	sprintf@c,w
  1314     05D1  1383               	bcf	3,7	;select IRP bank0
  1315     05D2  0080               	movwf	0
  1316     05D3                     l1474:
  1317     05D3  3001               	movlw	1
  1318     05D4  00D5               	movwf	??_sprintf
  1319     05D5  0855               	movf	??_sprintf,w
  1320     05D6  07DD               	addwf	sprintf@sp,f
  1321                           
  1322                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1323     05D7  2E6E               	goto	l1510
  1324     05D8                     l1476:
  1325                           
  1326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1327     05D8  01D8               	clrf	sprintf@flag
  1328                           
  1329                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1330     05D9  2DDF               	goto	l1482
  1331     05DA                     l1478:
  1332                           
  1333                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1334     05DA  30C0               	movlw	192
  1335     05DB  00D5               	movwf	??_sprintf
  1336     05DC  0855               	movf	??_sprintf,w
  1337     05DD  04D8               	iorwf	sprintf@flag,f
  1338                           
  1339                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1340     05DE  2DF9               	goto	l1484
  1341     05DF                     l1482:
  1342     05DF  3001               	movlw	1
  1343     05E0  07D2               	addwf	sprintf@f,f
  1344     05E1  30FF               	movlw	-1
  1345     05E2  0752               	addwf	sprintf@f,w
  1346     05E3  0084               	movwf	4
  1347     05E4  120A  118A  2003  120A  118A  	fcall	stringdir
  1348     05E9  00DE               	movwf	sprintf@c
  1349     05EA  00D5               	movwf	??_sprintf
  1350     05EB  01D6               	clrf	??_sprintf+1
  1351                           
  1352                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1353                           ; Switch size 1, requested type "simple"
  1354                           ; Number of cases is 1, Range of values is 0 to 0
  1355                           ; switch strategies available:
  1356                           ; Name         Instructions Cycles
  1357                           ; simple_byte            4     3 (average)
  1358                           ; direct_byte           11     8 (fixed)
  1359                           ; jumptable            260     6 (fixed)
  1360                           ;	Chosen strategy is simple_byte
  1361     05EC  0856               	movf	??_sprintf+1,w
  1362     05ED  3A00               	xorlw	0	; case 0
  1363     05EE  1903               	skipnz
  1364     05EF  2DF1               	goto	l1596
  1365     05F0  2E6E               	goto	l1510
  1366     05F1                     l1596:
  1367                           
  1368                           ; Switch size 1, requested type "simple"
  1369                           ; Number of cases is 2, Range of values is 0 to 117
  1370                           ; switch strategies available:
  1371                           ; Name         Instructions Cycles
  1372                           ; simple_byte            7     4 (average)
  1373                           ; jumptable            260     6 (fixed)
  1374                           ;	Chosen strategy is simple_byte
  1375     05F1  0855               	movf	??_sprintf,w
  1376     05F2  3A00               	xorlw	0	; case 0
  1377     05F3  1903               	skipnz
  1378     05F4  2E7E               	goto	l1512
  1379     05F5  3A75               	xorlw	117	; case 117
  1380     05F6  1903               	skipnz
  1381     05F7  2DDA               	goto	l1478
  1382     05F8  2E6E               	goto	l1510
  1383     05F9                     l1484:
  1384                           
  1385                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1386     05F9  0859               	movf	sprintf@ap,w
  1387     05FA  0084               	movwf	4
  1388     05FB  1383               	bcf	3,7	;select IRP bank0
  1389     05FC  0800               	movf	0,w
  1390     05FD  00DA               	movwf	sprintf@val
  1391     05FE  0A84               	incf	4,f
  1392     05FF  0800               	movf	0,w
  1393     0600  00DB               	movwf	sprintf@val+1
  1394     0601                     l1486:
  1395     0601  3002               	movlw	2
  1396     0602  00D5               	movwf	??_sprintf
  1397     0603  0855               	movf	??_sprintf,w
  1398     0604  07D9               	addwf	sprintf@ap,f
  1399     0605                     l1488:
  1400                           
  1401                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1402     0605  01DE               	clrf	sprintf@c
  1403     0606  0ADE               	incf	sprintf@c,f
  1404     0607                     l1494:
  1405                           
  1406                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1407     0607  085E               	movf	sprintf@c,w
  1408     0608  00D5               	movwf	??_sprintf
  1409     0609  0755               	addwf	??_sprintf,w
  1410     060A  3E10               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1411     060B  0084               	movwf	4
  1412     060C  120A  118A  2003  120A  118A  	fcall	stringdir
  1413     0611  00D6               	movwf	??_sprintf+1
  1414     0612  120A  118A  2003  120A  118A  	fcall	stringdir
  1415     0617  00D7               	movwf	??_sprintf+2
  1416     0618  0857               	movf	??_sprintf+2,w
  1417     0619  025B               	subwf	sprintf@val+1,w
  1418     061A  1D03               	skipz
  1419     061B  2E1E               	goto	u855
  1420     061C  0856               	movf	??_sprintf+1,w
  1421     061D  025A               	subwf	sprintf@val,w
  1422     061E                     u855:
  1423     061E  1803               	skipnc
  1424     061F  2E21               	goto	u851
  1425     0620  2E22               	goto	u850
  1426     0621                     u851:
  1427     0621  2E23               	goto	l1498
  1428     0622                     u850:
  1429     0622  2E2D               	goto	l1500
  1430     0623                     l1498:
  1431     0623  3001               	movlw	1
  1432     0624  00D5               	movwf	??_sprintf
  1433     0625  0855               	movf	??_sprintf,w
  1434     0626  07DE               	addwf	sprintf@c,f
  1435     0627  3005               	movlw	5
  1436     0628  065E               	xorwf	sprintf@c,w
  1437     0629  1D03               	btfss	3,2
  1438     062A  2E2C               	goto	u861
  1439     062B  2E2D               	goto	u860
  1440     062C                     u861:
  1441     062C  2E07               	goto	l1494
  1442     062D                     u860:
  1443     062D                     l1500:
  1444                           
  1445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1446     062D  085E               	movf	sprintf@c,w
  1447     062E  00DC               	movwf	sprintf@prec
  1448                           
  1449                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1450     062F  2E65               	goto	l1508
  1451     0630                     l1502:
  1452                           
  1453                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1454     0630  300A               	movlw	10
  1455     0631  00F8               	movwf	___lwmod@divisor
  1456     0632  3000               	movlw	0
  1457     0633  00F9               	movwf	___lwmod@divisor+1
  1458     0634  085C               	movf	sprintf@prec,w
  1459     0635  00D5               	movwf	??_sprintf
  1460     0636  0755               	addwf	??_sprintf,w
  1461     0637  3E10               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1462     0638  0084               	movwf	4
  1463     0639  120A  118A  2003  120A  118A  	fcall	stringdir
  1464     063E  00F0               	movwf	___lwdiv@divisor
  1465     063F  120A  118A  2003  120A  118A  	fcall	stringdir
  1466     0644  00F1               	movwf	___lwdiv@divisor+1
  1467     0645  085B               	movf	sprintf@val+1,w
  1468     0646  00F3               	movwf	___lwdiv@dividend+1
  1469     0647  085A               	movf	sprintf@val,w
  1470     0648  00F2               	movwf	___lwdiv@dividend
  1471     0649  120A  118A  2475  120A  118A  	fcall	___lwdiv
  1472     064E  0871               	movf	?___lwdiv+1,w
  1473     064F  00FB               	movwf	___lwmod@dividend+1
  1474     0650  0870               	movf	?___lwdiv,w
  1475     0651  00FA               	movwf	___lwmod@dividend
  1476     0652  120A  118A  243B  120A  118A  	fcall	___lwmod
  1477     0657  0878               	movf	?___lwmod,w
  1478     0658  3E30               	addlw	48
  1479     0659  1283               	bcf	3,5	;RP0=0, select bank0
  1480     065A  1303               	bcf	3,6	;RP1=0, select bank0
  1481     065B  00DE               	movwf	sprintf@c
  1482     065C                     l1504:
  1483                           
  1484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1485     065C  085D               	movf	sprintf@sp,w
  1486     065D  0084               	movwf	4
  1487     065E  085E               	movf	sprintf@c,w
  1488     065F  1383               	bcf	3,7	;select IRP bank0
  1489     0660  0080               	movwf	0
  1490     0661                     l1506:
  1491     0661  3001               	movlw	1
  1492     0662  00D5               	movwf	??_sprintf
  1493     0663  0855               	movf	??_sprintf,w
  1494     0664  07DD               	addwf	sprintf@sp,f
  1495     0665                     l1508:
  1496                           
  1497                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1498     0665  30FF               	movlw	255
  1499     0666  00D5               	movwf	??_sprintf
  1500     0667  0855               	movf	??_sprintf,w
  1501     0668  07DC               	addwf	sprintf@prec,f
  1502     0669  0A5C               	incf	sprintf@prec,w
  1503     066A  1D03               	btfss	3,2
  1504     066B  2E6D               	goto	u871
  1505     066C  2E6E               	goto	u870
  1506     066D                     u871:
  1507     066D  2E30               	goto	l1502
  1508     066E                     u870:
  1509     066E                     l1510:
  1510                           
  1511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1512     066E  3001               	movlw	1
  1513     066F  07D2               	addwf	sprintf@f,f
  1514     0670  30FF               	movlw	-1
  1515     0671  0752               	addwf	sprintf@f,w
  1516     0672  0084               	movwf	4
  1517     0673  120A  118A  2003  120A  118A  	fcall	stringdir
  1518     0678  00DE               	movwf	sprintf@c
  1519     0679  085E               	movf	sprintf@c,w
  1520     067A  1D03               	btfss	3,2
  1521     067B  2E7D               	goto	u881
  1522     067C  2E7E               	goto	u880
  1523     067D                     u881:
  1524     067D  2DC8               	goto	l1470
  1525     067E                     u880:
  1526     067E                     l1512:
  1527                           
  1528                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1529     067E  085D               	movf	sprintf@sp,w
  1530     067F  0084               	movwf	4
  1531     0680  1383               	bcf	3,7	;select IRP bank0
  1532     0681  0180               	clrf	0
  1533     0682                     l368:
  1534     0682  0008               	return
  1535     0683                     __end_of_sprintf:
  1536                           
  1537                           	psect	text2
  1538     043B                     __ptext2:	
  1539 ;; *************** function ___lwmod *****************
  1540 ;; Defined at:
  1541 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  divisor         2    8[COMMON] unsigned int 
  1544 ;;  dividend        2   10[COMMON] unsigned int 
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;  counter         1   13[COMMON] unsigned char 
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  2    8[COMMON] unsigned int 
  1549 ;; Registers used:
  1550 ;;		wreg, status,2, status,0
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1556 ;;      Params:         4       0       0       0       0
  1557 ;;      Locals:         1       0       0       0       0
  1558 ;;      Temps:          1       0       0       0       0
  1559 ;;      Totals:         6       0       0       0       0
  1560 ;;Total ram usage:        6 bytes
  1561 ;; Hardware stack levels used: 1
  1562 ;; This function calls:
  1563 ;;		Nothing
  1564 ;; This function is called by:
  1565 ;;		_sprintf
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569     043B                     ___lwmod:	
  1570                           ;psect for function ___lwmod
  1571                           
  1572     043B                     l1350:	
  1573                           ;incstack = 0
  1574                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1575                           
  1576     043B  0878               	movf	___lwmod@divisor,w
  1577     043C  0479               	iorwf	___lwmod@divisor+1,w
  1578     043D  1903               	btfsc	3,2
  1579     043E  2C40               	goto	u711
  1580     043F  2C41               	goto	u710
  1581     0440                     u711:
  1582     0440  2C70               	goto	l1368
  1583     0441                     u710:
  1584     0441                     l1352:
  1585     0441  01FD               	clrf	___lwmod@counter
  1586     0442  0AFD               	incf	___lwmod@counter,f
  1587     0443  2C4F               	goto	l1358
  1588     0444                     l1354:
  1589     0444  3001               	movlw	1
  1590     0445                     u725:
  1591     0445  1003               	clrc
  1592     0446  0DF8               	rlf	___lwmod@divisor,f
  1593     0447  0DF9               	rlf	___lwmod@divisor+1,f
  1594     0448  3EFF               	addlw	-1
  1595     0449  1D03               	skipz
  1596     044A  2C45               	goto	u725
  1597     044B                     l1356:
  1598     044B  3001               	movlw	1
  1599     044C  00FC               	movwf	??___lwmod
  1600     044D  087C               	movf	??___lwmod,w
  1601     044E  07FD               	addwf	___lwmod@counter,f
  1602     044F                     l1358:
  1603     044F  1FF9               	btfss	___lwmod@divisor+1,7
  1604     0450  2C52               	goto	u731
  1605     0451  2C53               	goto	u730
  1606     0452                     u731:
  1607     0452  2C44               	goto	l1354
  1608     0453                     u730:
  1609     0453                     l1360:
  1610     0453  0879               	movf	___lwmod@divisor+1,w
  1611     0454  027B               	subwf	___lwmod@dividend+1,w
  1612     0455  1D03               	skipz
  1613     0456  2C59               	goto	u745
  1614     0457  0878               	movf	___lwmod@divisor,w
  1615     0458  027A               	subwf	___lwmod@dividend,w
  1616     0459                     u745:
  1617     0459  1C03               	skipc
  1618     045A  2C5C               	goto	u741
  1619     045B  2C5D               	goto	u740
  1620     045C                     u741:
  1621     045C  2C63               	goto	l1364
  1622     045D                     u740:
  1623     045D                     l1362:
  1624     045D  0878               	movf	___lwmod@divisor,w
  1625     045E  02FA               	subwf	___lwmod@dividend,f
  1626     045F  0879               	movf	___lwmod@divisor+1,w
  1627     0460  1C03               	skipc
  1628     0461  03FB               	decf	___lwmod@dividend+1,f
  1629     0462  02FB               	subwf	___lwmod@dividend+1,f
  1630     0463                     l1364:
  1631     0463  3001               	movlw	1
  1632     0464                     u755:
  1633     0464  1003               	clrc
  1634     0465  0CF9               	rrf	___lwmod@divisor+1,f
  1635     0466  0CF8               	rrf	___lwmod@divisor,f
  1636     0467  3EFF               	addlw	-1
  1637     0468  1D03               	skipz
  1638     0469  2C64               	goto	u755
  1639     046A                     l1366:
  1640     046A  3001               	movlw	1
  1641     046B  02FD               	subwf	___lwmod@counter,f
  1642     046C  1D03               	btfss	3,2
  1643     046D  2C6F               	goto	u761
  1644     046E  2C70               	goto	u760
  1645     046F                     u761:
  1646     046F  2C53               	goto	l1360
  1647     0470                     u760:
  1648     0470                     l1368:
  1649     0470  087B               	movf	___lwmod@dividend+1,w
  1650     0471  00F9               	movwf	?___lwmod+1
  1651     0472  087A               	movf	___lwmod@dividend,w
  1652     0473  00F8               	movwf	?___lwmod
  1653     0474                     l654:
  1654     0474  0008               	return
  1655     0475                     __end_of___lwmod:
  1656                           
  1657                           	psect	text3
  1658     0475                     __ptext3:	
  1659 ;; *************** function ___lwdiv *****************
  1660 ;; Defined at:
  1661 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;  divisor         2    0[COMMON] unsigned int 
  1664 ;;  dividend        2    2[COMMON] unsigned int 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  quotient        2    5[COMMON] unsigned int 
  1667 ;;  counter         1    7[COMMON] unsigned char 
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  2    0[COMMON] unsigned int 
  1670 ;; Registers used:
  1671 ;;		wreg, status,2, status,0
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1677 ;;      Params:         4       0       0       0       0
  1678 ;;      Locals:         3       0       0       0       0
  1679 ;;      Temps:          1       0       0       0       0
  1680 ;;      Totals:         8       0       0       0       0
  1681 ;;Total ram usage:        8 bytes
  1682 ;; Hardware stack levels used: 1
  1683 ;; This function calls:
  1684 ;;		Nothing
  1685 ;; This function is called by:
  1686 ;;		_sprintf
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690     0475                     ___lwdiv:	
  1691                           ;psect for function ___lwdiv
  1692                           
  1693     0475                     l1324:	
  1694                           ;incstack = 0
  1695                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1696                           
  1697     0475  01F5               	clrf	___lwdiv@quotient
  1698     0476  01F6               	clrf	___lwdiv@quotient+1
  1699     0477                     l1326:
  1700     0477  0870               	movf	___lwdiv@divisor,w
  1701     0478  0471               	iorwf	___lwdiv@divisor+1,w
  1702     0479  1903               	btfsc	3,2
  1703     047A  2C7C               	goto	u641
  1704     047B  2C7D               	goto	u640
  1705     047C                     u641:
  1706     047C  2CB4               	goto	l1346
  1707     047D                     u640:
  1708     047D                     l1328:
  1709     047D  01F7               	clrf	___lwdiv@counter
  1710     047E  0AF7               	incf	___lwdiv@counter,f
  1711     047F  2C8B               	goto	l1334
  1712     0480                     l1330:
  1713     0480  3001               	movlw	1
  1714     0481                     u655:
  1715     0481  1003               	clrc
  1716     0482  0DF0               	rlf	___lwdiv@divisor,f
  1717     0483  0DF1               	rlf	___lwdiv@divisor+1,f
  1718     0484  3EFF               	addlw	-1
  1719     0485  1D03               	skipz
  1720     0486  2C81               	goto	u655
  1721     0487                     l1332:
  1722     0487  3001               	movlw	1
  1723     0488  00F4               	movwf	??___lwdiv
  1724     0489  0874               	movf	??___lwdiv,w
  1725     048A  07F7               	addwf	___lwdiv@counter,f
  1726     048B                     l1334:
  1727     048B  1FF1               	btfss	___lwdiv@divisor+1,7
  1728     048C  2C8E               	goto	u661
  1729     048D  2C8F               	goto	u660
  1730     048E                     u661:
  1731     048E  2C80               	goto	l1330
  1732     048F                     u660:
  1733     048F                     l1336:
  1734     048F  3001               	movlw	1
  1735     0490                     u675:
  1736     0490  1003               	clrc
  1737     0491  0DF5               	rlf	___lwdiv@quotient,f
  1738     0492  0DF6               	rlf	___lwdiv@quotient+1,f
  1739     0493  3EFF               	addlw	-1
  1740     0494  1D03               	skipz
  1741     0495  2C90               	goto	u675
  1742     0496  0871               	movf	___lwdiv@divisor+1,w
  1743     0497  0273               	subwf	___lwdiv@dividend+1,w
  1744     0498  1D03               	skipz
  1745     0499  2C9C               	goto	u685
  1746     049A  0870               	movf	___lwdiv@divisor,w
  1747     049B  0272               	subwf	___lwdiv@dividend,w
  1748     049C                     u685:
  1749     049C  1C03               	skipc
  1750     049D  2C9F               	goto	u681
  1751     049E  2CA0               	goto	u680
  1752     049F                     u681:
  1753     049F  2CA7               	goto	l1342
  1754     04A0                     u680:
  1755     04A0                     l1338:
  1756     04A0  0870               	movf	___lwdiv@divisor,w
  1757     04A1  02F2               	subwf	___lwdiv@dividend,f
  1758     04A2  0871               	movf	___lwdiv@divisor+1,w
  1759     04A3  1C03               	skipc
  1760     04A4  03F3               	decf	___lwdiv@dividend+1,f
  1761     04A5  02F3               	subwf	___lwdiv@dividend+1,f
  1762     04A6                     l1340:
  1763     04A6  1475               	bsf	___lwdiv@quotient,0
  1764     04A7                     l1342:
  1765     04A7  3001               	movlw	1
  1766     04A8                     u695:
  1767     04A8  1003               	clrc
  1768     04A9  0CF1               	rrf	___lwdiv@divisor+1,f
  1769     04AA  0CF0               	rrf	___lwdiv@divisor,f
  1770     04AB  3EFF               	addlw	-1
  1771     04AC  1D03               	skipz
  1772     04AD  2CA8               	goto	u695
  1773     04AE                     l1344:
  1774     04AE  3001               	movlw	1
  1775     04AF  02F7               	subwf	___lwdiv@counter,f
  1776     04B0  1D03               	btfss	3,2
  1777     04B1  2CB3               	goto	u701
  1778     04B2  2CB4               	goto	u700
  1779     04B3                     u701:
  1780     04B3  2C8F               	goto	l1336
  1781     04B4                     u700:
  1782     04B4                     l1346:
  1783     04B4  0876               	movf	___lwdiv@quotient+1,w
  1784     04B5  00F1               	movwf	?___lwdiv+1
  1785     04B6  0875               	movf	___lwdiv@quotient,w
  1786     04B7  00F0               	movwf	?___lwdiv
  1787     04B8                     l644:
  1788     04B8  0008               	return
  1789     04B9                     __end_of___lwdiv:
  1790                           
  1791                           	psect	text4
  1792     034A                     __ptext4:	
  1793 ;; *************** function _setup *****************
  1794 ;; Defined at:
  1795 ;;		line 120 in file "pruebaADXL345.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;		None
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;		None
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  1    wreg      void 
  1802 ;; Registers used:
  1803 ;;		wreg, status,2, status,0
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1809 ;;      Params:         0       0       0       0       0
  1810 ;;      Locals:         0       0       0       0       0
  1811 ;;      Temps:          0       0       0       0       0
  1812 ;;      Totals:         0       0       0       0       0
  1813 ;;Total ram usage:        0 bytes
  1814 ;; Hardware stack levels used: 1
  1815 ;; This function calls:
  1816 ;;		Nothing
  1817 ;; This function is called by:
  1818 ;;		_main
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822     034A                     _setup:	
  1823                           ;psect for function _setup
  1824                           
  1825     034A                     l1450:	
  1826                           ;incstack = 0
  1827                           ; Regs used in _setup: [wreg+status,2+status,0]
  1828                           
  1829                           
  1830                           ;pruebaADXL345.c: 121:     ANSEL = 0;
  1831     034A  1683               	bsf	3,5	;RP0=1, select bank3
  1832     034B  1703               	bsf	3,6	;RP1=1, select bank3
  1833     034C  0188               	clrf	8	;volatile
  1834                           
  1835                           ;pruebaADXL345.c: 122:     ANSELH = 0;
  1836     034D  0189               	clrf	9	;volatile
  1837     034E                     l1452:
  1838                           
  1839                           ;pruebaADXL345.c: 123:     TRISC1 = 0;
  1840     034E  1683               	bsf	3,5	;RP0=1, select bank1
  1841     034F  1303               	bcf	3,6	;RP1=0, select bank1
  1842     0350  1087               	bcf	7,1	;volatile
  1843     0351                     l1454:
  1844                           
  1845                           ;pruebaADXL345.c: 124:     TRISC2 = 0;
  1846     0351  1107               	bcf	7,2	;volatile
  1847     0352                     l1456:
  1848                           
  1849                           ;pruebaADXL345.c: 125:     TRISC6 = 0;
  1850     0352  1307               	bcf	7,6	;volatile
  1851     0353                     l1458:
  1852                           
  1853                           ;pruebaADXL345.c: 126:     TRISC7 = 0;
  1854     0353  1387               	bcf	7,7	;volatile
  1855                           
  1856                           ;pruebaADXL345.c: 127:     TRISA =0;
  1857     0354  0185               	clrf	5	;volatile
  1858                           
  1859                           ;pruebaADXL345.c: 128:     TRISB = 0;
  1860     0355  0186               	clrf	6	;volatile
  1861                           
  1862                           ;pruebaADXL345.c: 129:     TRISD = 0;
  1863     0356  0188               	clrf	8	;volatile
  1864                           
  1865                           ;pruebaADXL345.c: 130:     PORTA = 0;
  1866     0357  1283               	bcf	3,5	;RP0=0, select bank0
  1867     0358  1303               	bcf	3,6	;RP1=0, select bank0
  1868     0359  0185               	clrf	5	;volatile
  1869                           
  1870                           ;pruebaADXL345.c: 131:     PORTB = 0;
  1871     035A  0186               	clrf	6	;volatile
  1872                           
  1873                           ;pruebaADXL345.c: 132:     PORTD = 0;
  1874     035B  0188               	clrf	8	;volatile
  1875     035C                     l1460:
  1876                           
  1877                           ;pruebaADXL345.c: 133:     PORTCbits.RC1 = 1;
  1878     035C  1487               	bsf	7,1	;volatile
  1879     035D                     l1462:
  1880                           
  1881                           ;pruebaADXL345.c: 134:     PORTCbits.RC2 = 1;
  1882     035D  1507               	bsf	7,2	;volatile
  1883     035E                     l1464:
  1884                           
  1885                           ;pruebaADXL345.c: 137:     OSCCONbits.IRCF = 0b0111;
  1886     035E  3070               	movlw	112
  1887     035F  1683               	bsf	3,5	;RP0=1, select bank1
  1888     0360  1303               	bcf	3,6	;RP1=0, select bank1
  1889     0361  048F               	iorwf	15,f	;volatile
  1890     0362                     l1466:
  1891                           
  1892                           ;pruebaADXL345.c: 138:     OSCCONbits.SCS = 1;
  1893     0362  140F               	bsf	15,0	;volatile
  1894     0363                     l261:
  1895     0363  0008               	return
  1896     0364                     __end_of_setup:
  1897                           
  1898                           	psect	text5
  1899     0364                     __ptext5:	
  1900 ;; *************** function _Lcd_Write_String *****************
  1901 ;; Defined at:
  1902 ;;		line 98 in file "LCD.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;  a               1    wreg     PTR unsigned char 
  1905 ;;		 -> s3(20), s2(20), s(20), 
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;  a               1    8[COMMON] PTR unsigned char 
  1908 ;;		 -> s3(20), s2(20), s(20), 
  1909 ;;  i               2    6[COMMON] int 
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  1    wreg      void 
  1912 ;; Registers used:
  1913 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1919 ;;      Params:         0       0       0       0       0
  1920 ;;      Locals:         3       0       0       0       0
  1921 ;;      Temps:          1       0       0       0       0
  1922 ;;      Totals:         4       0       0       0       0
  1923 ;;Total ram usage:        4 bytes
  1924 ;; Hardware stack levels used: 1
  1925 ;; Hardware stack levels required when called: 2
  1926 ;; This function calls:
  1927 ;;		_Lcd_Write_Char
  1928 ;; This function is called by:
  1929 ;;		_main
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933     0364                     _Lcd_Write_String:	
  1934                           ;psect for function _Lcd_Write_String
  1935                           
  1936                           
  1937                           ;incstack = 0
  1938                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1939                           ;Lcd_Write_String@a stored from wreg
  1940     0364  00F8               	movwf	Lcd_Write_String@a
  1941     0365                     l1436:
  1942                           
  1943                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  1944     0365  01F6               	clrf	Lcd_Write_String@i
  1945     0366  01F7               	clrf	Lcd_Write_String@i+1
  1946     0367  2B79               	goto	l1442
  1947     0368                     l1438:
  1948                           
  1949                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  1950     0368  0876               	movf	Lcd_Write_String@i,w
  1951     0369  0778               	addwf	Lcd_Write_String@a,w
  1952     036A  00F5               	movwf	??_Lcd_Write_String
  1953     036B  0875               	movf	??_Lcd_Write_String,w
  1954     036C  0084               	movwf	4
  1955     036D  0800               	movf	0,w
  1956     036E  120A  118A  2406  120A  118A  	fcall	_Lcd_Write_Char
  1957     0373                     l1440:
  1958     0373  3001               	movlw	1
  1959     0374  07F6               	addwf	Lcd_Write_String@i,f
  1960     0375  1803               	skipnc
  1961     0376  0AF7               	incf	Lcd_Write_String@i+1,f
  1962     0377  3000               	movlw	0
  1963     0378  07F7               	addwf	Lcd_Write_String@i+1,f
  1964     0379                     l1442:
  1965     0379  0876               	movf	Lcd_Write_String@i,w
  1966     037A  0778               	addwf	Lcd_Write_String@a,w
  1967     037B  00F5               	movwf	??_Lcd_Write_String
  1968     037C  0875               	movf	??_Lcd_Write_String,w
  1969     037D  0084               	movwf	4
  1970     037E  1383               	bcf	3,7	;select IRP bank0
  1971     037F  0800               	movf	0,w
  1972     0380  1D03               	btfss	3,2
  1973     0381  2B83               	goto	u821
  1974     0382  2B84               	goto	u820
  1975     0383                     u821:
  1976     0383  2B68               	goto	l1438
  1977     0384                     u820:
  1978     0384                     l104:
  1979     0384  0008               	return
  1980     0385                     __end_of_Lcd_Write_String:
  1981                           
  1982                           	psect	text6
  1983     0406                     __ptext6:	
  1984 ;; *************** function _Lcd_Write_Char *****************
  1985 ;; Defined at:
  1986 ;;		line 83 in file "LCD.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;  a               1    wreg     unsigned char 
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;  a               1    4[COMMON] unsigned char 
  1991 ;;  y               1    3[COMMON] unsigned char 
  1992 ;;  temp            1    2[COMMON] unsigned char 
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  1    wreg      void 
  1995 ;; Registers used:
  1996 ;;		wreg, status,2, status,0, pclath, cstack
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2002 ;;      Params:         0       0       0       0       0
  2003 ;;      Locals:         3       0       0       0       0
  2004 ;;      Temps:          1       0       0       0       0
  2005 ;;      Totals:         4       0       0       0       0
  2006 ;;Total ram usage:        4 bytes
  2007 ;; Hardware stack levels used: 1
  2008 ;; Hardware stack levels required when called: 1
  2009 ;; This function calls:
  2010 ;;		_Lcd_Port
  2011 ;; This function is called by:
  2012 ;;		_Lcd_Write_String
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016     0406                     _Lcd_Write_Char:	
  2017                           ;psect for function _Lcd_Write_Char
  2018                           
  2019                           
  2020                           ;incstack = 0
  2021                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2022                           ;Lcd_Write_Char@a stored from wreg
  2023     0406  00F4               	movwf	Lcd_Write_Char@a
  2024     0407                     l1280:
  2025                           
  2026                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  2027     0407  0874               	movf	Lcd_Write_Char@a,w
  2028     0408  390F               	andlw	15
  2029     0409  00F2               	movwf	Lcd_Write_Char@temp
  2030                           
  2031                           ;LCD.c: 86:     y = a & 0xF0;
  2032     040A  0874               	movf	Lcd_Write_Char@a,w
  2033     040B  39F0               	andlw	240
  2034     040C  00F3               	movwf	Lcd_Write_Char@y
  2035     040D                     l1282:
  2036                           
  2037                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  2038     040D  1283               	bcf	3,5	;RP0=0, select bank0
  2039     040E  1303               	bcf	3,6	;RP1=0, select bank0
  2040     040F  1508               	bsf	8,2	;volatile
  2041     0410                     l1284:
  2042                           
  2043                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  2044     0410  0873               	movf	Lcd_Write_Char@y,w
  2045     0411  00F1               	movwf	??_Lcd_Write_Char
  2046     0412  3004               	movlw	4
  2047     0413                     u565:
  2048     0413  1003               	clrc
  2049     0414  0CF1               	rrf	??_Lcd_Write_Char,f
  2050     0415  3EFF               	addlw	-1
  2051     0416  1D03               	skipz
  2052     0417  2C13               	goto	u565
  2053     0418  0871               	movf	??_Lcd_Write_Char,w
  2054     0419  120A  118A  2385  120A  118A  	fcall	_Lcd_Port
  2055     041E                     l1286:
  2056                           
  2057                           ;LCD.c: 89:     RD3 = 1;
  2058     041E  1283               	bcf	3,5	;RP0=0, select bank0
  2059     041F  1303               	bcf	3,6	;RP1=0, select bank0
  2060     0420  1588               	bsf	8,3	;volatile
  2061     0421                     l1288:
  2062                           
  2063                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2064     0421  301A               	movlw	26
  2065     0422  00F1               	movwf	??_Lcd_Write_Char
  2066     0423                     u967:
  2067     0423  0BF1               	decfsz	??_Lcd_Write_Char,f
  2068     0424  2C23               	goto	u967
  2069     0425  0000               	nop
  2070     0426                     l1290:
  2071                           
  2072                           ;LCD.c: 91:     RD3 = 0;
  2073     0426  1283               	bcf	3,5	;RP0=0, select bank0
  2074     0427  1303               	bcf	3,6	;RP1=0, select bank0
  2075     0428  1188               	bcf	8,3	;volatile
  2076     0429                     l1292:
  2077                           
  2078                           ;LCD.c: 92:     Lcd_Port(temp);
  2079     0429  0872               	movf	Lcd_Write_Char@temp,w
  2080     042A  120A  118A  2385  120A  118A  	fcall	_Lcd_Port
  2081     042F                     l1294:
  2082                           
  2083                           ;LCD.c: 93:     RD3 = 1;
  2084     042F  1283               	bcf	3,5	;RP0=0, select bank0
  2085     0430  1303               	bcf	3,6	;RP1=0, select bank0
  2086     0431  1588               	bsf	8,3	;volatile
  2087     0432                     l1296:
  2088                           
  2089                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2090     0432  301A               	movlw	26
  2091     0433  00F1               	movwf	??_Lcd_Write_Char
  2092     0434                     u977:
  2093     0434  0BF1               	decfsz	??_Lcd_Write_Char,f
  2094     0435  2C34               	goto	u977
  2095     0436  0000               	nop
  2096     0437                     l1298:
  2097                           
  2098                           ;LCD.c: 95:     RD3 = 0;
  2099     0437  1283               	bcf	3,5	;RP0=0, select bank0
  2100     0438  1303               	bcf	3,6	;RP1=0, select bank0
  2101     0439  1188               	bcf	8,3	;volatile
  2102     043A                     l98:
  2103     043A  0008               	return
  2104     043B                     __end_of_Lcd_Write_Char:
  2105                           
  2106                           	psect	text7
  2107     04B9                     __ptext7:	
  2108 ;; *************** function _Lcd_Set_Cursor *****************
  2109 ;; Defined at:
  2110 ;;		line 48 in file "LCD.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;  a               1    wreg     unsigned char 
  2113 ;;  b               1    4[COMMON] unsigned char 
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;  a               1    6[COMMON] unsigned char 
  2116 ;;  temp            1    9[COMMON] unsigned char 
  2117 ;;  y               1    8[COMMON] unsigned char 
  2118 ;;  z               1    7[COMMON] unsigned char 
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  1    wreg      void 
  2121 ;; Registers used:
  2122 ;;		wreg, status,2, status,0, pclath, cstack
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2128 ;;      Params:         1       0       0       0       0
  2129 ;;      Locals:         4       0       0       0       0
  2130 ;;      Temps:          1       0       0       0       0
  2131 ;;      Totals:         6       0       0       0       0
  2132 ;;Total ram usage:        6 bytes
  2133 ;; Hardware stack levels used: 1
  2134 ;; Hardware stack levels required when called: 2
  2135 ;; This function calls:
  2136 ;;		_Lcd_Cmd
  2137 ;; This function is called by:
  2138 ;;		_main
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142     04B9                     _Lcd_Set_Cursor:	
  2143                           ;psect for function _Lcd_Set_Cursor
  2144                           
  2145                           
  2146                           ;incstack = 0
  2147                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2148                           ;Lcd_Set_Cursor@a stored from wreg
  2149     04B9  00F6               	movwf	Lcd_Set_Cursor@a
  2150     04BA                     l1406:
  2151                           
  2152                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2153     04BA  0376               	decf	Lcd_Set_Cursor@a,w
  2154     04BB  1D03               	btfss	3,2
  2155     04BC  2CBE               	goto	u781
  2156     04BD  2CBF               	goto	u780
  2157     04BE                     u781:
  2158     04BE  2CDC               	goto	l1416
  2159     04BF                     u780:
  2160     04BF                     l1408:
  2161                           
  2162                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2163     04BF  0874               	movf	Lcd_Set_Cursor@b,w
  2164     04C0  3E7F               	addlw	127
  2165     04C1  00F9               	movwf	Lcd_Set_Cursor@temp
  2166                           
  2167                           ;LCD.c: 52:         z = temp >> 4;
  2168     04C2  0879               	movf	Lcd_Set_Cursor@temp,w
  2169     04C3  00F5               	movwf	??_Lcd_Set_Cursor
  2170     04C4  3004               	movlw	4
  2171     04C5                     u795:
  2172     04C5  1003               	clrc
  2173     04C6  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2174     04C7  3EFF               	addlw	-1
  2175     04C8  1D03               	skipz
  2176     04C9  2CC5               	goto	u795
  2177     04CA  0875               	movf	??_Lcd_Set_Cursor,w
  2178     04CB  00F7               	movwf	Lcd_Set_Cursor@z
  2179     04CC                     l1410:
  2180                           
  2181                           ;LCD.c: 53:         y = temp & 0x0F;
  2182     04CC  0879               	movf	Lcd_Set_Cursor@temp,w
  2183     04CD  390F               	andlw	15
  2184     04CE  00F8               	movwf	Lcd_Set_Cursor@y
  2185     04CF                     l1412:
  2186                           
  2187                           ;LCD.c: 54:         Lcd_Cmd(z);
  2188     04CF  0877               	movf	Lcd_Set_Cursor@z,w
  2189     04D0  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2190     04D5                     l1414:
  2191                           
  2192                           ;LCD.c: 55:         Lcd_Cmd(y);
  2193     04D5  0878               	movf	Lcd_Set_Cursor@y,w
  2194     04D6  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2195                           
  2196                           ;LCD.c: 56:     } else if (a == 2) {
  2197     04DB  2CFE               	goto	l92
  2198     04DC                     l1416:
  2199     04DC  3002               	movlw	2
  2200     04DD  0676               	xorwf	Lcd_Set_Cursor@a,w
  2201     04DE  1D03               	btfss	3,2
  2202     04DF  2CE1               	goto	u801
  2203     04E0  2CE2               	goto	u800
  2204     04E1                     u801:
  2205     04E1  2CFE               	goto	l92
  2206     04E2                     u800:
  2207     04E2                     l1418:
  2208                           
  2209                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2210     04E2  0874               	movf	Lcd_Set_Cursor@b,w
  2211     04E3  3EBF               	addlw	191
  2212     04E4  00F9               	movwf	Lcd_Set_Cursor@temp
  2213                           
  2214                           ;LCD.c: 58:         z = temp >> 4;
  2215     04E5  0879               	movf	Lcd_Set_Cursor@temp,w
  2216     04E6  00F5               	movwf	??_Lcd_Set_Cursor
  2217     04E7  3004               	movlw	4
  2218     04E8                     u815:
  2219     04E8  1003               	clrc
  2220     04E9  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2221     04EA  3EFF               	addlw	-1
  2222     04EB  1D03               	skipz
  2223     04EC  2CE8               	goto	u815
  2224     04ED  0875               	movf	??_Lcd_Set_Cursor,w
  2225     04EE  00F7               	movwf	Lcd_Set_Cursor@z
  2226     04EF                     l1420:
  2227                           
  2228                           ;LCD.c: 59:         y = temp & 0x0F;
  2229     04EF  0879               	movf	Lcd_Set_Cursor@temp,w
  2230     04F0  390F               	andlw	15
  2231     04F1  00F8               	movwf	Lcd_Set_Cursor@y
  2232     04F2                     l1422:
  2233                           
  2234                           ;LCD.c: 60:         Lcd_Cmd(z);
  2235     04F2  0877               	movf	Lcd_Set_Cursor@z,w
  2236     04F3  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2237     04F8                     l1424:
  2238                           
  2239                           ;LCD.c: 61:         Lcd_Cmd(y);
  2240     04F8  0878               	movf	Lcd_Set_Cursor@y,w
  2241     04F9  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2242     04FE                     l92:
  2243     04FE  0008               	return
  2244     04FF                     __end_of_Lcd_Set_Cursor:
  2245                           
  2246                           	psect	text8
  2247     04FF                     __ptext8:	
  2248 ;; *************** function _Lcd_Init *****************
  2249 ;; Defined at:
  2250 ;;		line 65 in file "LCD.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;		None
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;		None
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  1    wreg      void 
  2257 ;; Registers used:
  2258 ;;		wreg, status,2, status,0, pclath, cstack
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2264 ;;      Params:         0       0       0       0       0
  2265 ;;      Locals:         0       0       0       0       0
  2266 ;;      Temps:          2       0       0       0       0
  2267 ;;      Totals:         2       0       0       0       0
  2268 ;;Total ram usage:        2 bytes
  2269 ;; Hardware stack levels used: 1
  2270 ;; Hardware stack levels required when called: 2
  2271 ;; This function calls:
  2272 ;;		_Lcd_Cmd
  2273 ;;		_Lcd_Port
  2274 ;; This function is called by:
  2275 ;;		_main
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279     04FF                     _Lcd_Init:	
  2280                           ;psect for function _Lcd_Init
  2281                           
  2282     04FF                     l1426:	
  2283                           ;incstack = 0
  2284                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2285                           
  2286                           
  2287                           ;LCD.c: 66:     Lcd_Port(0x00);
  2288     04FF  3000               	movlw	0
  2289     0500  120A  118A  2385  120A  118A  	fcall	_Lcd_Port
  2290     0505                     l1428:
  2291                           
  2292                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2293     0505  3034               	movlw	52
  2294     0506  00F5               	movwf	??_Lcd_Init+1
  2295     0507  30F1               	movlw	241
  2296     0508  00F4               	movwf	??_Lcd_Init
  2297     0509                     u987:
  2298     0509  0BF4               	decfsz	??_Lcd_Init,f
  2299     050A  2D09               	goto	u987
  2300     050B  0BF5               	decfsz	??_Lcd_Init+1,f
  2301     050C  2D09               	goto	u987
  2302     050D  2D0E               	nop2
  2303     050E                     l1430:
  2304                           
  2305                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2306     050E  3003               	movlw	3
  2307     050F  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2308                           
  2309                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2310     0514  300D               	movlw	13
  2311     0515  00F5               	movwf	??_Lcd_Init+1
  2312     0516  30FB               	movlw	251
  2313     0517  00F4               	movwf	??_Lcd_Init
  2314     0518                     u997:
  2315     0518  0BF4               	decfsz	??_Lcd_Init,f
  2316     0519  2D18               	goto	u997
  2317     051A  0BF5               	decfsz	??_Lcd_Init+1,f
  2318     051B  2D18               	goto	u997
  2319     051C  2D1D               	nop2
  2320     051D                     l1432:
  2321                           
  2322                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2323     051D  3003               	movlw	3
  2324     051E  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2325     0523                     l1434:
  2326                           
  2327                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2328     0523  301D               	movlw	29
  2329     0524  00F5               	movwf	??_Lcd_Init+1
  2330     0525  3091               	movlw	145
  2331     0526  00F4               	movwf	??_Lcd_Init
  2332     0527                     u1007:
  2333     0527  0BF4               	decfsz	??_Lcd_Init,f
  2334     0528  2D27               	goto	u1007
  2335     0529  0BF5               	decfsz	??_Lcd_Init+1,f
  2336     052A  2D27               	goto	u1007
  2337                           
  2338                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2339     052B  3003               	movlw	3
  2340     052C  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2341                           
  2342                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2343     0531  3002               	movlw	2
  2344     0532  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2345                           
  2346                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  2347     0537  3002               	movlw	2
  2348     0538  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2349                           
  2350                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  2351     053D  3008               	movlw	8
  2352     053E  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2353                           
  2354                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  2355     0543  3000               	movlw	0
  2356     0544  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2357                           
  2358                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  2359     0549  300C               	movlw	12
  2360     054A  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2361                           
  2362                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  2363     054F  3000               	movlw	0
  2364     0550  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2365                           
  2366                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  2367     0555  3006               	movlw	6
  2368     0556  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2369     055B                     l95:
  2370     055B  0008               	return
  2371     055C                     __end_of_Lcd_Init:
  2372                           
  2373                           	psect	text9
  2374     0323                     __ptext9:	
  2375 ;; *************** function _Lcd_Clear *****************
  2376 ;; Defined at:
  2377 ;;		line 43 in file "LCD.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;		None
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;		None
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  1    wreg      void 
  2384 ;; Registers used:
  2385 ;;		wreg, status,2, status,0, pclath, cstack
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2391 ;;      Params:         0       0       0       0       0
  2392 ;;      Locals:         0       0       0       0       0
  2393 ;;      Temps:          0       0       0       0       0
  2394 ;;      Totals:         0       0       0       0       0
  2395 ;;Total ram usage:        0 bytes
  2396 ;; Hardware stack levels used: 1
  2397 ;; Hardware stack levels required when called: 2
  2398 ;; This function calls:
  2399 ;;		_Lcd_Cmd
  2400 ;; This function is called by:
  2401 ;;		_main
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405     0323                     _Lcd_Clear:	
  2406                           ;psect for function _Lcd_Clear
  2407                           
  2408     0323                     l1404:	
  2409                           ;incstack = 0
  2410                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2411                           
  2412                           
  2413                           ;LCD.c: 44:     Lcd_Cmd(0);
  2414     0323  3000               	movlw	0
  2415     0324  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2416                           
  2417                           ;LCD.c: 45:     Lcd_Cmd(1);
  2418     0329  3001               	movlw	1
  2419     032A  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2420     032F                     l86:
  2421     032F  0008               	return
  2422     0330                     __end_of_Lcd_Clear:
  2423                           
  2424                           	psect	text10
  2425     0330                     __ptext10:	
  2426 ;; *************** function _Lcd_Cmd *****************
  2427 ;; Defined at:
  2428 ;;		line 35 in file "LCD.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  a               1    wreg     unsigned char 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  a               1    3[COMMON] unsigned char 
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  1    wreg      void 
  2435 ;; Registers used:
  2436 ;;		wreg, status,2, status,0, pclath, cstack
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2442 ;;      Params:         0       0       0       0       0
  2443 ;;      Locals:         1       0       0       0       0
  2444 ;;      Temps:          2       0       0       0       0
  2445 ;;      Totals:         3       0       0       0       0
  2446 ;;Total ram usage:        3 bytes
  2447 ;; Hardware stack levels used: 1
  2448 ;; Hardware stack levels required when called: 1
  2449 ;; This function calls:
  2450 ;;		_Lcd_Port
  2451 ;; This function is called by:
  2452 ;;		_Lcd_Clear
  2453 ;;		_Lcd_Set_Cursor
  2454 ;;		_Lcd_Init
  2455 ;;		_Lcd_Shift_Right
  2456 ;;		_Lcd_Shift_Left
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460     0330                     _Lcd_Cmd:	
  2461                           ;psect for function _Lcd_Cmd
  2462                           
  2463                           
  2464                           ;incstack = 0
  2465                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2466                           ;Lcd_Cmd@a stored from wreg
  2467     0330  00F3               	movwf	Lcd_Cmd@a
  2468     0331                     l1270:
  2469                           
  2470                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  2471     0331  1283               	bcf	3,5	;RP0=0, select bank0
  2472     0332  1303               	bcf	3,6	;RP1=0, select bank0
  2473     0333  1108               	bcf	8,2	;volatile
  2474     0334                     l1272:
  2475                           
  2476                           ;LCD.c: 37:     Lcd_Port(a);
  2477     0334  0873               	movf	Lcd_Cmd@a,w
  2478     0335  120A  118A  2385  120A  118A  	fcall	_Lcd_Port
  2479     033A                     l1274:
  2480                           
  2481                           ;LCD.c: 38:     RD3 = 1;
  2482     033A  1283               	bcf	3,5	;RP0=0, select bank0
  2483     033B  1303               	bcf	3,6	;RP1=0, select bank0
  2484     033C  1588               	bsf	8,3	;volatile
  2485     033D                     l1276:
  2486                           
  2487                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2488     033D  300B               	movlw	11
  2489     033E  00F2               	movwf	??_Lcd_Cmd+1
  2490     033F  3062               	movlw	98
  2491     0340  00F1               	movwf	??_Lcd_Cmd
  2492     0341                     u1017:
  2493     0341  0BF1               	decfsz	??_Lcd_Cmd,f
  2494     0342  2B41               	goto	u1017
  2495     0343  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2496     0344  2B41               	goto	u1017
  2497     0345  0000               	nop
  2498     0346                     l1278:
  2499                           
  2500                           ;LCD.c: 40:     RD3 = 0;
  2501     0346  1283               	bcf	3,5	;RP0=0, select bank0
  2502     0347  1303               	bcf	3,6	;RP1=0, select bank0
  2503     0348  1188               	bcf	8,3	;volatile
  2504     0349                     l83:
  2505     0349  0008               	return
  2506     034A                     __end_of_Lcd_Cmd:
  2507                           
  2508                           	psect	text11
  2509     0385                     __ptext11:	
  2510 ;; *************** function _Lcd_Port *****************
  2511 ;; Defined at:
  2512 ;;		line 13 in file "LCD.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;  a               1    wreg     unsigned char 
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;  a               1    0[COMMON] unsigned char 
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  1    wreg      void 
  2519 ;; Registers used:
  2520 ;;		wreg
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2526 ;;      Params:         0       0       0       0       0
  2527 ;;      Locals:         1       0       0       0       0
  2528 ;;      Temps:          0       0       0       0       0
  2529 ;;      Totals:         1       0       0       0       0
  2530 ;;Total ram usage:        1 bytes
  2531 ;; Hardware stack levels used: 1
  2532 ;; This function calls:
  2533 ;;		Nothing
  2534 ;; This function is called by:
  2535 ;;		_Lcd_Cmd
  2536 ;;		_Lcd_Init
  2537 ;;		_Lcd_Write_Char
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541     0385                     _Lcd_Port:	
  2542                           ;psect for function _Lcd_Port
  2543                           
  2544                           
  2545                           ;incstack = 0
  2546                           ; Regs used in _Lcd_Port: [wreg]
  2547                           ;Lcd_Port@a stored from wreg
  2548     0385  00F0               	movwf	Lcd_Port@a
  2549     0386                     l1256:
  2550                           
  2551                           ;LCD.c: 14:     if (a & 1)
  2552     0386  1C70               	btfss	Lcd_Port@a,0
  2553     0387  2B89               	goto	u501
  2554     0388  2B8A               	goto	u500
  2555     0389                     u501:
  2556     0389  2B8E               	goto	l72
  2557     038A                     u500:
  2558     038A                     l1258:
  2559                           
  2560                           ;LCD.c: 15:         RD4 = 1;
  2561     038A  1283               	bcf	3,5	;RP0=0, select bank0
  2562     038B  1303               	bcf	3,6	;RP1=0, select bank0
  2563     038C  1608               	bsf	8,4	;volatile
  2564     038D  2B91               	goto	l73
  2565     038E                     l72:	
  2566                           ;LCD.c: 16:     else
  2567                           
  2568                           
  2569                           ;LCD.c: 17:         RD4 = 0;
  2570     038E  1283               	bcf	3,5	;RP0=0, select bank0
  2571     038F  1303               	bcf	3,6	;RP1=0, select bank0
  2572     0390  1208               	bcf	8,4	;volatile
  2573     0391                     l73:
  2574                           
  2575                           ;LCD.c: 19:     if (a & 2)
  2576     0391  1CF0               	btfss	Lcd_Port@a,1
  2577     0392  2B94               	goto	u511
  2578     0393  2B95               	goto	u510
  2579     0394                     u511:
  2580     0394  2B97               	goto	l74
  2581     0395                     u510:
  2582     0395                     l1260:
  2583                           
  2584                           ;LCD.c: 20:         RD5 = 1;
  2585     0395  1688               	bsf	8,5	;volatile
  2586     0396  2B98               	goto	l75
  2587     0397                     l74:	
  2588                           ;LCD.c: 21:     else
  2589                           
  2590                           
  2591                           ;LCD.c: 22:         RD5 = 0;
  2592     0397  1288               	bcf	8,5	;volatile
  2593     0398                     l75:
  2594                           
  2595                           ;LCD.c: 24:     if (a & 4)
  2596     0398  1D70               	btfss	Lcd_Port@a,2
  2597     0399  2B9B               	goto	u521
  2598     039A  2B9C               	goto	u520
  2599     039B                     u521:
  2600     039B  2B9E               	goto	l76
  2601     039C                     u520:
  2602     039C                     l1262:
  2603                           
  2604                           ;LCD.c: 25:         RD6 = 1;
  2605     039C  1708               	bsf	8,6	;volatile
  2606     039D  2B9F               	goto	l77
  2607     039E                     l76:	
  2608                           ;LCD.c: 26:     else
  2609                           
  2610                           
  2611                           ;LCD.c: 27:         RD6 = 0;
  2612     039E  1308               	bcf	8,6	;volatile
  2613     039F                     l77:
  2614                           
  2615                           ;LCD.c: 29:     if (a & 8)
  2616     039F  1DF0               	btfss	Lcd_Port@a,3
  2617     03A0  2BA2               	goto	u531
  2618     03A1  2BA3               	goto	u530
  2619     03A2                     u531:
  2620     03A2  2BA5               	goto	l78
  2621     03A3                     u530:
  2622     03A3                     l1264:
  2623                           
  2624                           ;LCD.c: 30:         RD7 = 1;
  2625     03A3  1788               	bsf	8,7	;volatile
  2626     03A4  2BA6               	goto	l80
  2627     03A5                     l78:	
  2628                           ;LCD.c: 31:     else
  2629                           
  2630                           
  2631                           ;LCD.c: 32:         RD7 = 0;
  2632     03A5  1388               	bcf	8,7	;volatile
  2633     03A6                     l80:
  2634     03A6  0008               	return
  2635     03A7                     __end_of_Lcd_Port:
  2636                           
  2637                           	psect	text12
  2638     030C                     __ptext12:	
  2639 ;; *************** function _I2C_Master_Write *****************
  2640 ;; Defined at:
  2641 ;;		line 65 in file "I2C.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;  d               2    0[COMMON] unsigned int 
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;		None
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  1    wreg      void 
  2648 ;; Registers used:
  2649 ;;		wreg, status,2, status,0, pclath, cstack
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2655 ;;      Params:         2       0       0       0       0
  2656 ;;      Locals:         0       0       0       0       0
  2657 ;;      Temps:          0       0       0       0       0
  2658 ;;      Totals:         2       0       0       0       0
  2659 ;;Total ram usage:        2 bytes
  2660 ;; Hardware stack levels used: 1
  2661 ;; Hardware stack levels required when called: 1
  2662 ;; This function calls:
  2663 ;;		_I2C_Master_Wait
  2664 ;; This function is called by:
  2665 ;;		_main
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669     030C                     _I2C_Master_Write:	
  2670                           ;psect for function _I2C_Master_Write
  2671                           
  2672     030C                     l1384:	
  2673                           ;incstack = 0
  2674                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2675                           
  2676                           
  2677                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2678     030C  120A  118A  2316  120A  118A  	fcall	_I2C_Master_Wait
  2679     0311                     l1386:
  2680                           
  2681                           ;I2C.c: 68:     SSPBUF = d;
  2682     0311  0870               	movf	I2C_Master_Write@d,w
  2683     0312  1283               	bcf	3,5	;RP0=0, select bank0
  2684     0313  1303               	bcf	3,6	;RP1=0, select bank0
  2685     0314  0093               	movwf	19	;volatile
  2686     0315                     l47:
  2687     0315  0008               	return
  2688     0316                     __end_of_I2C_Master_Write:
  2689                           
  2690                           	psect	text13
  2691     0303                     __ptext13:	
  2692 ;; *************** function _I2C_Master_Stop *****************
  2693 ;; Defined at:
  2694 ;;		line 55 in file "I2C.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;		None
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;		None
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  1    wreg      void 
  2701 ;; Registers used:
  2702 ;;		wreg, status,2, status,0, pclath, cstack
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2708 ;;      Params:         0       0       0       0       0
  2709 ;;      Locals:         0       0       0       0       0
  2710 ;;      Temps:          0       0       0       0       0
  2711 ;;      Totals:         0       0       0       0       0
  2712 ;;Total ram usage:        0 bytes
  2713 ;; Hardware stack levels used: 1
  2714 ;; Hardware stack levels required when called: 1
  2715 ;; This function calls:
  2716 ;;		_I2C_Master_Wait
  2717 ;; This function is called by:
  2718 ;;		_main
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722     0303                     _I2C_Master_Stop:	
  2723                           ;psect for function _I2C_Master_Stop
  2724                           
  2725     0303                     l1380:	
  2726                           ;incstack = 0
  2727                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2728                           
  2729                           
  2730                           ;I2C.c: 57:     I2C_Master_Wait();
  2731     0303  120A  118A  2316  120A  118A  	fcall	_I2C_Master_Wait
  2732     0308                     l1382:
  2733                           
  2734                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2735     0308  1683               	bsf	3,5	;RP0=1, select bank1
  2736     0309  1303               	bcf	3,6	;RP1=0, select bank1
  2737     030A  1511               	bsf	17,2	;volatile
  2738     030B                     l44:
  2739     030B  0008               	return
  2740     030C                     __end_of_I2C_Master_Stop:
  2741                           
  2742                           	psect	text14
  2743     02FA                     __ptext14:	
  2744 ;; *************** function _I2C_Master_Start *****************
  2745 ;; Defined at:
  2746 ;;		line 39 in file "I2C.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;		None
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;		None
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  1    wreg      void 
  2753 ;; Registers used:
  2754 ;;		wreg, status,2, status,0, pclath, cstack
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2760 ;;      Params:         0       0       0       0       0
  2761 ;;      Locals:         0       0       0       0       0
  2762 ;;      Temps:          0       0       0       0       0
  2763 ;;      Totals:         0       0       0       0       0
  2764 ;;Total ram usage:        0 bytes
  2765 ;; Hardware stack levels used: 1
  2766 ;; Hardware stack levels required when called: 1
  2767 ;; This function calls:
  2768 ;;		_I2C_Master_Wait
  2769 ;; This function is called by:
  2770 ;;		_main
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774     02FA                     _I2C_Master_Start:	
  2775                           ;psect for function _I2C_Master_Start
  2776                           
  2777     02FA                     l1372:	
  2778                           ;incstack = 0
  2779                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2780                           
  2781                           
  2782                           ;I2C.c: 41:     I2C_Master_Wait();
  2783     02FA  120A  118A  2316  120A  118A  	fcall	_I2C_Master_Wait
  2784     02FF                     l1374:
  2785                           
  2786                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2787     02FF  1683               	bsf	3,5	;RP0=1, select bank1
  2788     0300  1303               	bcf	3,6	;RP1=0, select bank1
  2789     0301  1411               	bsf	17,0	;volatile
  2790     0302                     l38:
  2791     0302  0008               	return
  2792     0303                     __end_of_I2C_Master_Start:
  2793                           
  2794                           	psect	text15
  2795     02F1                     __ptext15:	
  2796 ;; *************** function _I2C_Master_RepeatedStart *****************
  2797 ;; Defined at:
  2798 ;;		line 47 in file "I2C.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;		None
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;		None
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  1    wreg      void 
  2805 ;; Registers used:
  2806 ;;		wreg, status,2, status,0, pclath, cstack
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2812 ;;      Params:         0       0       0       0       0
  2813 ;;      Locals:         0       0       0       0       0
  2814 ;;      Temps:          0       0       0       0       0
  2815 ;;      Totals:         0       0       0       0       0
  2816 ;;Total ram usage:        0 bytes
  2817 ;; Hardware stack levels used: 1
  2818 ;; Hardware stack levels required when called: 1
  2819 ;; This function calls:
  2820 ;;		_I2C_Master_Wait
  2821 ;; This function is called by:
  2822 ;;		_main
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826     02F1                     _I2C_Master_RepeatedStart:	
  2827                           ;psect for function _I2C_Master_RepeatedStart
  2828                           
  2829     02F1                     l1376:	
  2830                           ;incstack = 0
  2831                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2832                           
  2833                           
  2834                           ;I2C.c: 49:     I2C_Master_Wait();
  2835     02F1  120A  118A  2316  120A  118A  	fcall	_I2C_Master_Wait
  2836     02F6                     l1378:
  2837                           
  2838                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  2839     02F6  1683               	bsf	3,5	;RP0=1, select bank1
  2840     02F7  1303               	bcf	3,6	;RP1=0, select bank1
  2841     02F8  1491               	bsf	17,1	;volatile
  2842     02F9                     l41:
  2843     02F9  0008               	return
  2844     02FA                     __end_of_I2C_Master_RepeatedStart:
  2845                           
  2846                           	psect	text16
  2847     03A7                     __ptext16:	
  2848 ;; *************** function _I2C_Master_Read *****************
  2849 ;; Defined at:
  2850 ;;		line 74 in file "I2C.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;  a               2    0[COMMON] unsigned short 
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  temp            2    4[COMMON] unsigned short 
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  2    0[COMMON] unsigned short 
  2857 ;; Registers used:
  2858 ;;		wreg, status,2, status,0, pclath, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2864 ;;      Params:         2       0       0       0       0
  2865 ;;      Locals:         2       0       0       0       0
  2866 ;;      Temps:          2       0       0       0       0
  2867 ;;      Totals:         6       0       0       0       0
  2868 ;;Total ram usage:        6 bytes
  2869 ;; Hardware stack levels used: 1
  2870 ;; Hardware stack levels required when called: 1
  2871 ;; This function calls:
  2872 ;;		_I2C_Master_Wait
  2873 ;; This function is called by:
  2874 ;;		_main
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878     03A7                     _I2C_Master_Read:	
  2879                           ;psect for function _I2C_Master_Read
  2880                           
  2881     03A7                     l1388:	
  2882                           ;incstack = 0
  2883                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2884                           
  2885                           
  2886                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2887     03A7  120A  118A  2316  120A  118A  	fcall	_I2C_Master_Wait
  2888     03AC                     l1390:
  2889                           
  2890                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2891     03AC  1683               	bsf	3,5	;RP0=1, select bank1
  2892     03AD  1303               	bcf	3,6	;RP1=0, select bank1
  2893     03AE  1591               	bsf	17,3	;volatile
  2894                           
  2895                           ;I2C.c: 79:     I2C_Master_Wait();
  2896     03AF  120A  118A  2316  120A  118A  	fcall	_I2C_Master_Wait
  2897     03B4                     l1392:
  2898                           
  2899                           ;I2C.c: 80:     temp = SSPBUF;
  2900     03B4  1283               	bcf	3,5	;RP0=0, select bank0
  2901     03B5  1303               	bcf	3,6	;RP1=0, select bank0
  2902     03B6  0813               	movf	19,w	;volatile
  2903     03B7  00F2               	movwf	??_I2C_Master_Read
  2904     03B8  01F3               	clrf	??_I2C_Master_Read+1
  2905     03B9  0872               	movf	??_I2C_Master_Read,w
  2906     03BA  00F4               	movwf	I2C_Master_Read@temp
  2907     03BB  0873               	movf	??_I2C_Master_Read+1,w
  2908     03BC  00F5               	movwf	I2C_Master_Read@temp+1
  2909     03BD                     l1394:
  2910                           
  2911                           ;I2C.c: 81:     I2C_Master_Wait();
  2912     03BD  120A  118A  2316  120A  118A  	fcall	_I2C_Master_Wait
  2913     03C2                     l1396:
  2914                           
  2915                           ;I2C.c: 82:     if(a == 1){
  2916     03C2  0370               	decf	I2C_Master_Read@a,w
  2917     03C3  0471               	iorwf	I2C_Master_Read@a+1,w
  2918     03C4  1D03               	btfss	3,2
  2919     03C5  2BC7               	goto	u771
  2920     03C6  2BC8               	goto	u770
  2921     03C7                     u771:
  2922     03C7  2BCC               	goto	l50
  2923     03C8                     u770:
  2924     03C8                     l1398:
  2925                           
  2926                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2927     03C8  1683               	bsf	3,5	;RP0=1, select bank1
  2928     03C9  1303               	bcf	3,6	;RP1=0, select bank1
  2929     03CA  1291               	bcf	17,5	;volatile
  2930                           
  2931                           ;I2C.c: 84:     }else{
  2932     03CB  2BCF               	goto	l51
  2933     03CC                     l50:
  2934                           
  2935                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2936     03CC  1683               	bsf	3,5	;RP0=1, select bank1
  2937     03CD  1303               	bcf	3,6	;RP1=0, select bank1
  2938     03CE  1691               	bsf	17,5	;volatile
  2939     03CF                     l51:	
  2940                           ;I2C.c: 86:     }
  2941                           
  2942                           
  2943                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2944     03CF  1611               	bsf	17,4	;volatile
  2945     03D0                     l1400:
  2946                           
  2947                           ;I2C.c: 88:     return temp;
  2948     03D0  0875               	movf	I2C_Master_Read@temp+1,w
  2949     03D1  00F1               	movwf	?_I2C_Master_Read+1
  2950     03D2  0874               	movf	I2C_Master_Read@temp,w
  2951     03D3  00F0               	movwf	?_I2C_Master_Read
  2952     03D4                     l52:
  2953     03D4  0008               	return
  2954     03D5                     __end_of_I2C_Master_Read:
  2955                           
  2956                           	psect	text17
  2957     0316                     __ptext17:	
  2958 ;; *************** function _I2C_Master_Wait *****************
  2959 ;; Defined at:
  2960 ;;		line 32 in file "I2C.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;		None
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;		None
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  1    wreg      void 
  2967 ;; Registers used:
  2968 ;;		wreg, status,2
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2974 ;;      Params:         0       0       0       0       0
  2975 ;;      Locals:         0       0       0       0       0
  2976 ;;      Temps:          0       0       0       0       0
  2977 ;;      Totals:         0       0       0       0       0
  2978 ;;Total ram usage:        0 bytes
  2979 ;; Hardware stack levels used: 1
  2980 ;; This function calls:
  2981 ;;		Nothing
  2982 ;; This function is called by:
  2983 ;;		_I2C_Master_Start
  2984 ;;		_I2C_Master_RepeatedStart
  2985 ;;		_I2C_Master_Stop
  2986 ;;		_I2C_Master_Write
  2987 ;;		_I2C_Master_Read
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991     0316                     _I2C_Master_Wait:	
  2992                           ;psect for function _I2C_Master_Wait
  2993                           
  2994     0316                     l1266:	
  2995                           ;incstack = 0
  2996                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2997                           
  2998     0316                     l32:	
  2999                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3000                           
  3001     0316  1683               	bsf	3,5	;RP0=1, select bank1
  3002     0317  1303               	bcf	3,6	;RP1=0, select bank1
  3003     0318  1914               	btfsc	20,2	;volatile
  3004     0319  2B1B               	goto	u541
  3005     031A  2B1C               	goto	u540
  3006     031B                     u541:
  3007     031B  2B16               	goto	l32
  3008     031C                     u540:
  3009     031C                     l1268:
  3010     031C  0811               	movf	17,w	;volatile
  3011     031D  391F               	andlw	31
  3012     031E  1D03               	btfss	3,2
  3013     031F  2B21               	goto	u551
  3014     0320  2B22               	goto	u550
  3015     0321                     u551:
  3016     0321  2B16               	goto	l32
  3017     0322                     u550:
  3018     0322                     l35:
  3019     0322  0008               	return
  3020     0323                     __end_of_I2C_Master_Wait:
  3021                           
  3022                           	psect	text18
  3023     03D5                     __ptext18:	
  3024 ;; *************** function _I2C_Init *****************
  3025 ;; Defined at:
  3026 ;;		line 49 in file "pruebaADXL345.c"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;  i2c_clk_freq    4    0[BANK0 ] unsigned long 
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;		None
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  1    wreg      void 
  3033 ;; Registers used:
  3034 ;;		wreg, status,2, status,0, pclath, cstack
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3040 ;;      Params:         0       4       0       0       0
  3041 ;;      Locals:         0       0       0       0       0
  3042 ;;      Temps:          0       4       0       0       0
  3043 ;;      Totals:         0       8       0       0       0
  3044 ;;Total ram usage:        8 bytes
  3045 ;; Hardware stack levels used: 1
  3046 ;; Hardware stack levels required when called: 1
  3047 ;; This function calls:
  3048 ;;		___lldiv
  3049 ;; This function is called by:
  3050 ;;		_main
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054     03D5                     _I2C_Init:	
  3055                           ;psect for function _I2C_Init
  3056                           
  3057     03D5                     l1444:	
  3058                           ;incstack = 0
  3059                           ; Regs used in _I2C_Init: [wreg+status,2+status,0+pclath+cstack]
  3060                           
  3061                           
  3062                           ;pruebaADXL345.c: 49: void I2C_Init(uint32_t i2c_clk_freq);pruebaADXL345.c: 51: {;prueba
      +                          ADXL345.c: 52:   SSPCON = 0x28;
  3063     03D5  3028               	movlw	40
  3064     03D6  1283               	bcf	3,5	;RP0=0, select bank0
  3065     03D7  1303               	bcf	3,6	;RP1=0, select bank0
  3066     03D8  0094               	movwf	20	;volatile
  3067     03D9                     l1446:
  3068                           
  3069                           ;pruebaADXL345.c: 53:   SSPADD = (8000000/(4 * i2c_clk_freq)) - 1;
  3070     03D9  0852               	movf	I2C_Init@i2c_clk_freq,w
  3071     03DA  00D6               	movwf	??_I2C_Init
  3072     03DB  0853               	movf	I2C_Init@i2c_clk_freq+1,w
  3073     03DC  00D7               	movwf	??_I2C_Init+1
  3074     03DD  0854               	movf	I2C_Init@i2c_clk_freq+2,w
  3075     03DE  00D8               	movwf	??_I2C_Init+2
  3076     03DF  0855               	movf	I2C_Init@i2c_clk_freq+3,w
  3077     03E0  00D9               	movwf	??_I2C_Init+3
  3078     03E1  3002               	movlw	2
  3079     03E2                     u835:
  3080     03E2  1003               	clrc
  3081     03E3  0DD6               	rlf	??_I2C_Init,f
  3082     03E4  0DD7               	rlf	??_I2C_Init+1,f
  3083     03E5  0DD8               	rlf	??_I2C_Init+2,f
  3084     03E6  0DD9               	rlf	??_I2C_Init+3,f
  3085     03E7                     u830:
  3086     03E7  3EFF               	addlw	-1
  3087     03E8  1D03               	skipz
  3088     03E9  2BE2               	goto	u835
  3089     03EA  0859               	movf	??_I2C_Init+3,w
  3090     03EB  00F3               	movwf	___lldiv@divisor+3
  3091     03EC  0858               	movf	??_I2C_Init+2,w
  3092     03ED  00F2               	movwf	___lldiv@divisor+2
  3093     03EE  0857               	movf	??_I2C_Init+1,w
  3094     03EF  00F1               	movwf	___lldiv@divisor+1
  3095     03F0  0856               	movf	??_I2C_Init,w
  3096     03F1  00F0               	movwf	___lldiv@divisor
  3097     03F2  3000               	movlw	0
  3098     03F3  00F7               	movwf	___lldiv@dividend+3
  3099     03F4  307A               	movlw	122
  3100     03F5  00F6               	movwf	___lldiv@dividend+2
  3101     03F6  3012               	movlw	18
  3102     03F7  00F5               	movwf	___lldiv@dividend+1
  3103     03F8  3000               	movlw	0
  3104     03F9  00F4               	movwf	___lldiv@dividend
  3105     03FA  120A  118A  255C  120A  118A  	fcall	___lldiv
  3106     03FF  0870               	movf	?___lldiv,w
  3107     0400  3EFF               	addlw	255
  3108     0401  1683               	bsf	3,5	;RP0=1, select bank1
  3109     0402  1303               	bcf	3,6	;RP1=0, select bank1
  3110     0403  0093               	movwf	19	;volatile
  3111     0404                     l1448:
  3112                           
  3113                           ;pruebaADXL345.c: 54:   SSPSTAT = 0;
  3114     0404  0194               	clrf	20	;volatile
  3115     0405                     l250:
  3116     0405  0008               	return
  3117     0406                     __end_of_I2C_Init:
  3118                           
  3119                           	psect	text19
  3120     055C                     __ptext19:	
  3121 ;; *************** function ___lldiv *****************
  3122 ;; Defined at:
  3123 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;  divisor         4    0[COMMON] unsigned long 
  3126 ;;  dividend        4    4[COMMON] unsigned long 
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;  quotient        4    9[COMMON] unsigned long 
  3129 ;;  counter         1   13[COMMON] unsigned char 
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  4    0[COMMON] unsigned long 
  3132 ;; Registers used:
  3133 ;;		wreg, status,2, status,0
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3139 ;;      Params:         8       0       0       0       0
  3140 ;;      Locals:         5       0       0       0       0
  3141 ;;      Temps:          1       0       0       0       0
  3142 ;;      Totals:        14       0       0       0       0
  3143 ;;Total ram usage:       14 bytes
  3144 ;; Hardware stack levels used: 1
  3145 ;; This function calls:
  3146 ;;		Nothing
  3147 ;; This function is called by:
  3148 ;;		_I2C_Init
  3149 ;;		_I2C_Master_Init
  3150 ;;		_UART_Init
  3151 ;; This function uses a non-reentrant model
  3152 ;;
  3153                           
  3154     055C                     ___lldiv:	
  3155                           ;psect for function ___lldiv
  3156                           
  3157     055C                     l1300:	
  3158                           ;incstack = 0
  3159                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3160                           
  3161     055C  3000               	movlw	0
  3162     055D  00FC               	movwf	___lldiv@quotient+3
  3163     055E  3000               	movlw	0
  3164     055F  00FB               	movwf	___lldiv@quotient+2
  3165     0560  3000               	movlw	0
  3166     0561  00FA               	movwf	___lldiv@quotient+1
  3167     0562  3000               	movlw	0
  3168     0563  00F9               	movwf	___lldiv@quotient
  3169     0564  0873               	movf	___lldiv@divisor+3,w
  3170     0565  0472               	iorwf	___lldiv@divisor+2,w
  3171     0566  0471               	iorwf	___lldiv@divisor+1,w
  3172     0567  0470               	iorwf	___lldiv@divisor,w
  3173     0568  1903               	skipnz
  3174     0569  2D6B               	goto	u571
  3175     056A  2D6C               	goto	u570
  3176     056B                     u571:
  3177     056B  2DB9               	goto	l1320
  3178     056C                     u570:
  3179     056C                     l1302:
  3180     056C  01FD               	clrf	___lldiv@counter
  3181     056D  0AFD               	incf	___lldiv@counter,f
  3182     056E  2D7C               	goto	l1306
  3183     056F                     l1304:
  3184     056F  3001               	movlw	1
  3185     0570  00F8               	movwf	??___lldiv
  3186     0571                     u585:
  3187     0571  1003               	clrc
  3188     0572  0DF0               	rlf	___lldiv@divisor,f
  3189     0573  0DF1               	rlf	___lldiv@divisor+1,f
  3190     0574  0DF2               	rlf	___lldiv@divisor+2,f
  3191     0575  0DF3               	rlf	___lldiv@divisor+3,f
  3192     0576  0BF8               	decfsz	??___lldiv,f
  3193     0577  2D71               	goto	u585
  3194     0578  3001               	movlw	1
  3195     0579  00F8               	movwf	??___lldiv
  3196     057A  0878               	movf	??___lldiv,w
  3197     057B  07FD               	addwf	___lldiv@counter,f
  3198     057C                     l1306:
  3199     057C  1FF3               	btfss	___lldiv@divisor+3,7
  3200     057D  2D7F               	goto	u591
  3201     057E  2D80               	goto	u590
  3202     057F                     u591:
  3203     057F  2D6F               	goto	l1304
  3204     0580                     u590:
  3205     0580                     l1308:
  3206     0580  3001               	movlw	1
  3207     0581  00F8               	movwf	??___lldiv
  3208     0582                     u605:
  3209     0582  1003               	clrc
  3210     0583  0DF9               	rlf	___lldiv@quotient,f
  3211     0584  0DFA               	rlf	___lldiv@quotient+1,f
  3212     0585  0DFB               	rlf	___lldiv@quotient+2,f
  3213     0586  0DFC               	rlf	___lldiv@quotient+3,f
  3214     0587  0BF8               	decfsz	??___lldiv,f
  3215     0588  2D82               	goto	u605
  3216     0589                     l1310:
  3217     0589  0873               	movf	___lldiv@divisor+3,w
  3218     058A  0277               	subwf	___lldiv@dividend+3,w
  3219     058B  1D03               	skipz
  3220     058C  2D97               	goto	u615
  3221     058D  0872               	movf	___lldiv@divisor+2,w
  3222     058E  0276               	subwf	___lldiv@dividend+2,w
  3223     058F  1D03               	skipz
  3224     0590  2D97               	goto	u615
  3225     0591  0871               	movf	___lldiv@divisor+1,w
  3226     0592  0275               	subwf	___lldiv@dividend+1,w
  3227     0593  1D03               	skipz
  3228     0594  2D97               	goto	u615
  3229     0595  0870               	movf	___lldiv@divisor,w
  3230     0596  0274               	subwf	___lldiv@dividend,w
  3231     0597                     u615:
  3232     0597  1C03               	skipc
  3233     0598  2D9A               	goto	u611
  3234     0599  2D9B               	goto	u610
  3235     059A                     u611:
  3236     059A  2DAA               	goto	l1316
  3237     059B                     u610:
  3238     059B                     l1312:
  3239     059B  0870               	movf	___lldiv@divisor,w
  3240     059C  02F4               	subwf	___lldiv@dividend,f
  3241     059D  0871               	movf	___lldiv@divisor+1,w
  3242     059E  1C03               	skipc
  3243     059F  0F71               	incfsz	___lldiv@divisor+1,w
  3244     05A0  02F5               	subwf	___lldiv@dividend+1,f
  3245     05A1  0872               	movf	___lldiv@divisor+2,w
  3246     05A2  1C03               	skipc
  3247     05A3  0F72               	incfsz	___lldiv@divisor+2,w
  3248     05A4  02F6               	subwf	___lldiv@dividend+2,f
  3249     05A5  0873               	movf	___lldiv@divisor+3,w
  3250     05A6  1C03               	skipc
  3251     05A7  0F73               	incfsz	___lldiv@divisor+3,w
  3252     05A8  02F7               	subwf	___lldiv@dividend+3,f
  3253     05A9                     l1314:
  3254     05A9  1479               	bsf	___lldiv@quotient,0
  3255     05AA                     l1316:
  3256     05AA  3001               	movlw	1
  3257     05AB                     u625:
  3258     05AB  1003               	clrc
  3259     05AC  0CF3               	rrf	___lldiv@divisor+3,f
  3260     05AD  0CF2               	rrf	___lldiv@divisor+2,f
  3261     05AE  0CF1               	rrf	___lldiv@divisor+1,f
  3262     05AF  0CF0               	rrf	___lldiv@divisor,f
  3263     05B0  3EFF               	addlw	-1
  3264     05B1  1D03               	skipz
  3265     05B2  2DAB               	goto	u625
  3266     05B3                     l1318:
  3267     05B3  3001               	movlw	1
  3268     05B4  02FD               	subwf	___lldiv@counter,f
  3269     05B5  1D03               	btfss	3,2
  3270     05B6  2DB8               	goto	u631
  3271     05B7  2DB9               	goto	u630
  3272     05B8                     u631:
  3273     05B8  2D80               	goto	l1308
  3274     05B9                     u630:
  3275     05B9                     l1320:
  3276     05B9  087C               	movf	___lldiv@quotient+3,w
  3277     05BA  00F3               	movwf	?___lldiv+3
  3278     05BB  087B               	movf	___lldiv@quotient+2,w
  3279     05BC  00F2               	movwf	?___lldiv+2
  3280     05BD  087A               	movf	___lldiv@quotient+1,w
  3281     05BE  00F1               	movwf	?___lldiv+1
  3282     05BF  0879               	movf	___lldiv@quotient,w
  3283     05C0  00F0               	movwf	?___lldiv
  3284     05C1                     l408:
  3285     05C1  0008               	return
  3286     05C2                     __end_of___lldiv:
  3287     007E                     btemp	set	126	;btemp
  3288     007E                     wtemp0	set	126
  3289                           
  3290                           	psect	idloc
  3291                           
  3292                           ;Config register IDLOC0 @ 0x2000
  3293                           ;	unspecified, using default values
  3294     2000                     	org	8192
  3295     2000  3FFF               	dw	16383
  3296                           
  3297                           ;Config register IDLOC1 @ 0x2001
  3298                           ;	unspecified, using default values
  3299     2001                     	org	8193
  3300     2001  3FFF               	dw	16383
  3301                           
  3302                           ;Config register IDLOC2 @ 0x2002
  3303                           ;	unspecified, using default values
  3304     2002                     	org	8194
  3305     2002  3FFF               	dw	16383
  3306                           
  3307                           ;Config register IDLOC3 @ 0x2003
  3308                           ;	unspecified, using default values
  3309     2003                     	org	8195
  3310     2003  3FFF               	dw	16383
  3311                           
  3312                           	psect	config
  3313                           
  3314                           ;Config register CONFIG1 @ 0x2007
  3315                           ;	Oscillator Selection bits
  3316                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  3317                           ;	Watchdog Timer Enable bit
  3318                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3319                           ;	Power-up Timer Enable bit
  3320                           ;	PWRTE = OFF, PWRT disabled
  3321                           ;	RE3/MCLR pin function select bit
  3322                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3323                           ;	Code Protection bit
  3324                           ;	CP = OFF, Program memory code protection is disabled
  3325                           ;	Data Code Protection bit
  3326                           ;	CPD = OFF, Data memory code protection is disabled
  3327                           ;	Brown Out Reset Selection bits
  3328                           ;	BOREN = OFF, BOR disabled
  3329                           ;	Internal External Switchover bit
  3330                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3331                           ;	Fail-Safe Clock Monitor Enabled bit
  3332                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3333                           ;	Low Voltage Programming Enable bit
  3334                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3335                           ;	In-Circuit Debugger Mode bit
  3336                           ;	DEBUG = 0x1, unprogrammed default
  3337     2007                     	org	8199
  3338     2007  20D5               	dw	8405
  3339                           
  3340                           ;Config register CONFIG2 @ 0x2008
  3341                           ;	Brown-out Reset Selection bit
  3342                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3343                           ;	Flash Program Memory Self Write Enable bits
  3344                           ;	WRT = OFF, Write protection off
  3345     2008                     	org	8200
  3346     2008  3FFF               	dw	16383

Data Sizes:
    Strings     3
    Constant    25
    Data        0
    BSS         70
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     16      66
    BANK1            80      0      20
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> s3(BANK1[20]), s2(BANK0[20]), s(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> s3(BANK1[20]), s2(BANK0[20]), s(BANK0[20]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4773
                                             13 BANK0      3     3      0
                           _I2C_Init
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1339
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     367
                                              5 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     608
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     782
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     501
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             8     4      4     868
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     770
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      64       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      42       5       82.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      14       7       25.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      64      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Aug 19 23:23:16 2023

                               _i 0029                                 _s 003E                                 _x 0028  
                               _y 0027                                 _z 0026                                 pc 0002  
                              l32 0316                                l41 02F9                                l50 03CC  
                              l35 0322                                l51 03CF                                l52 03D4  
                              l44 030B                                l38 0302                                l47 0315  
                              l80 03A6                                l72 038E                                l73 0391  
                              l74 0397                                l75 0398                                l83 0349  
                              l76 039E                                l92 04FE                                l77 039F  
                              l78 03A5                                l86 032F                                l95 055B  
                              l98 043A                                _s2 002A                                _s3 00A0  
                              fsr 0004                               l104 0384                               l250 0405  
                             l261 0363                               l255 06CF                               l408 05C1  
                             l368 0682                               l644 04B8                               l654 0474  
                             _GIE 005F                               _RD3 0043                               _RD4 0044  
                             _RD5 0045                               _RD6 0046                               _RD7 0047  
                             u500 038A                               u501 0389                               u510 0395  
                             u511 0394                               u520 039C                               u521 039B  
                             u610 059B                               u530 03A3                               u611 059A  
                             u531 03A2                               u540 031C                               u700 04B4  
                             u605 0582                               u541 031B                               u701 04B3  
                             u630 05B9                               u550 0322                               u710 0441  
                             u631 05B8                               u615 0597                               u551 0321  
                             u711 0440                               u800 04E2                               u640 047D  
                             u625 05AB                               u801 04E1                               u641 047C  
                             u570 056C                               u730 0453                               u571 056B  
                             u731 0452                               u820 0384                               u660 048F  
                             u740 045D                               u565 0413                               u821 0383  
                             u661 048E                               u741 045C                               u725 0445  
                             u590 0580                               u830 03E7                               u591 057F  
                             u815 04E8                               u655 0481                               u680 04A0  
                             u760 0470                               u840 05CE                               u585 0571  
                             u681 049F                               u761 046F                               u745 0459  
                             u841 05CD                               u770 03C8                               u850 0622  
                             u835 03E2                               u771 03C7                               u675 0490  
                             u755 0464                               u851 0621                               u780 04BF  
                             u860 062D                               u781 04BE                               u685 049C  
                             u861 062C                               u870 066E                               u695 04A8  
                             u871 066D                               u855 061E                               u880 067E  
                             u881 067D                               u795 04C5                               u957 0778  
                             u967 0423                               u977 0434                               u987 0509  
                             u997 0518                               fsr0 0004                               indf 0000  
                            l1300 055C                              l1310 0589                              l1302 056C  
                            l1312 059B                              l1304 056F                              l1320 05B9  
                            l1400 03D0                              l1314 05A9                              l1306 057C  
                            l1410 04CC                              l1330 0480                              l1316 05AA  
                            l1308 0580                              l1260 0395                              l1404 0323  
                            l1420 04EF                              l1412 04CF                              l1340 04A6  
                            l1332 0487                              l1324 0475                              l1500 062D  
                            l1318 05B3                              l1262 039C                              l1270 0331  
                            l1430 050E                              l1422 04F2                              l1414 04D5  
                            l1406 04BA                              l1342 04A7                              l1334 048B  
                            l1326 0477                              l1350 043B                              l1502 0630  
                            l1510 066E                              l1264 03A3                              l1256 0386  
                            l1272 0334                              l1432 051D                              l1424 04F8  
                            l1408 04BF                              l1416 04DC                              l1280 0407  
                            l1440 0373                              l1344 04AE                              l1336 048F  
                            l1328 047D                              l1360 0453                              l1352 0441  
                            l1504 065C                              l1512 067E                              l1266 0316  
                            l1258 038A                              l1274 033A                              l1434 0523  
                            l1426 04FF                              l1418 04E2                              l1290 0426  
                            l1282 040D                              l1442 0379                              l1450 034A  
                            l1338 04A0                              l1346 04B4                              l1362 045D  
                            l1354 0444                              l1506 0661                              l1444 03D5  
                            l1268 031C                              l1372 02FA                              l1380 0303  
                            l1276 033D                              l1428 0505                              l1292 0429  
                            l1284 0410                              l1436 0365                              l1460 035C  
                            l1452 034E                              l1364 0463                              l1356 044B  
                            l1508 0665                              l1446 03D9                              l1390 03AC  
                            l1374 02FF                              l1382 0308                              l1278 0346  
                            l1294 042F                              l1286 041E                              l1438 0368  
                            l1462 035D                              l1454 0351                              l1366 046A  
                            l1358 044F                              l1470 05C8                              l1448 0404  
                            l1392 03B4                              l1376 02F1                              l1384 030C  
                            l1296 0432                              l1288 0421                              l1464 035E  
                            l1456 0352                              l1368 0470                              l1472 05CE  
                            l1560 079B                              l1552 0683                              l1394 03BD  
                            l1378 02F6                              l1386 0311                              l1298 0437  
                            l1466 0362                              l1458 0353                              l1482 05DF  
                            l1474 05D3                              l1570 07D3                              l1562 07AC  
                            l1554 0770                              l1396 03C2                              l1388 03A7  
                            l1484 05F9                              l1476 05D8                              l1468 05C5  
                            l1572 07D9                              l1564 07BD                              l1556 077F  
                            l1398 03C8                              l1494 0607                              l1486 0601  
                            l1478 05DA                              l1574 07E1                              l1566 07C5  
                            l1558 078C                              l1488 0605                              l1568 07CB  
                            l1498 0623                              l1596 05F1                              STR_1 0022  
                            STR_2 0022                              STR_3 0022                              _CREN 00C4  
                            u1007 0527                              u1017 0341                              _PEIE 005E  
                            _RCIF 0065                              _OERR 00C1                              _TRMT 04C1  
                            _Xval 0025                              _Yval 0023                              _Zval 0021  
               ?_Lcd_Write_String 0070  __end_of_I2C_Master_RepeatedStart 02FA                              _main 0683  
                __end_of_I2C_Init 0406                              btemp 007E                              start 0000  
              ??_Lcd_Write_String 0075                   __end_of_Lcd_Cmd 034A                  ?_I2C_Master_Read 0070  
                ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070                             ?_main 0070  
                           _ANSEL 0188                   __end_of___lldiv 05C2                   __end_of___lwdiv 04B9  
                 __end_of___lwmod 0475                             _RCREG 001A                             _RCSTA 0018  
                           _SPBRG 0099                             _PORTA 0005                             _PORTB 0006  
                           _PORTD 0008                             _TRISA 0085                             _TRISB 0086  
                           _TRISD 0088                             _SSPIE 0463                             _SSPIF 0063  
                           _TXREG 0019                             _TXSTA 0098                             _Xval2 0024  
                           _Yval2 0022                             _Zval2 0020                   __end_of_dpowers 0022  
                 __end_of_message 0018                             _setup 034A                             pclath 000A  
                           status 0003                             wtemp0 007E                   __end_of_sprintf 0683  
            I2C_Init@i2c_clk_freq 0052                  __end_of_Lcd_Init 055C                  __end_of_Lcd_Port 03A7  
                 __initialization 07EB                      __end_of_main 07EB                            ??_main 005F  
               ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0070                ??_I2C_Master_Start 0070  
              ??_I2C_Master_Write 0072                            ?_setup 0070                            _ANSELH 0189  
                       ??_Lcd_Cmd 0071                            _SSPADD 0093                            _TRISC1 0439  
                          _TRISC2 043A                            _TRISC3 043B                            _TRISC4 043C  
                          _TRISC6 043E                            _TRISC7 043F                            _SSPCON 0014  
                          _SSPBUF 0013          _I2C_Master_RepeatedStart 02F1                         ??___lldiv 0078  
                       ??___lwdiv 0074                         ??___lwmod 007C                         ?_I2C_Init 0052  
                       ??_sprintf 0055                   Lcd_Set_Cursor@a 0076                   Lcd_Set_Cursor@b 0074  
                 Lcd_Set_Cursor@y 0078                   Lcd_Set_Cursor@z 0077           __end_of__initialization 07FC  
               __end_of_Lcd_Clear 0330                    __pcstackCOMMON 0070                     __end_of_setup 0364  
                  _Lcd_Set_Cursor 04B9                        ??_I2C_Init 0056                         ?_Lcd_Init 0070  
                       ?_Lcd_Port 0070                           ??_setup 0070                        __pbssBANK0 0020  
                      __pbssBANK1 00A0                        __pmaintext 0683            __end_of_Lcd_Set_Cursor 04FF  
                      ??_Lcd_Init 0074                        ??_Lcd_Port 0070                           _SSPCON2 0091  
                         _SSPSTAT 0094                        __stringtab 0003                    _Lcd_Write_Char 0406  
                         _Lcd_Cmd 0330                           ___lldiv 055C                           ___lwdiv 0475  
                         ___lwmod 043B                   ?_Lcd_Set_Cursor 0074                           __ptext1 05C2  
                         __ptext2 043B                           __ptext3 0475                           __ptext4 034A  
                         __ptext5 0364                           __ptext6 0406                           __ptext7 04B9  
                         __ptext8 04FF                           __ptext9 0323                           _dpowers 0018  
                         _message 0009                           _sprintf 05C2                           clrloop0 02EA  
          __end_of_Lcd_Write_Char 043B              end_of_initialization 07FC        ??_I2C_Master_RepeatedStart 0070  
                 ___lldiv@divisor 0070                   ___lldiv@counter 007D                  I2C_Master_Read@a 0070  
                       Lcd_Port@a 0070                         _PORTCbits 0007                         _PORTDbits 0008  
                       _TRISCbits 0087                   ?_Lcd_Write_Char 0070                 Lcd_Write_String@a 0078  
               Lcd_Write_String@i 0076                         _Lcd_Clear 0323                  _Lcd_Write_String 0364  
             start_initialization 07EB                 ??_I2C_Master_Read 0072                 ??_I2C_Master_Wait 0070  
               ??_I2C_Master_Stop 0070                        ?_Lcd_Clear 0070                   Lcd_Write_Char@a 0074  
                 Lcd_Write_Char@y 0073                         ___latbits 0002                     __pcstackBANK0 0052  
                        ?_Lcd_Cmd 0070                       sprintf@flag 0058                       sprintf@prec 005C  
                _I2C_Master_Start 02FA                  _I2C_Master_Write 030C                  ___lwdiv@dividend 0072  
                ??_Lcd_Set_Cursor 0075                          ?___lldiv 0070                          ?___lwdiv 0070  
                        ?___lwmod 0078                         __pstrings 0003                          _I2C_Init 03D5  
                ___lwdiv@quotient 0075                          ?_sprintf 0052                         clear_ram0 02E9  
                        Lcd_Cmd@a 0073                       ??_Lcd_Clear 0074                       __stringbase 0008  
                ??_Lcd_Write_Char 0071                          _Lcd_Init 04FF                          _Lcd_Port 0385  
             I2C_Master_Read@temp 0074          __end_of_Lcd_Write_String 0385         ?_I2C_Master_RepeatedStart 0070  
              __end_of__stringtab 0009                        sprintf@val 005A                   _I2C_Master_Read 03A7  
                 _I2C_Master_Wait 0316                   _I2C_Master_Stop 0303                   ___lwdiv@divisor 0070  
                 ___lwdiv@counter 0077                          __ptext10 0330                          __ptext11 0385  
                        __ptext12 030C                          __ptext13 0303                          __ptext14 02FA  
                        __ptext15 02F1                          __ptext16 03A7                          __ptext17 0316  
                        __ptext18 03D5                          __ptext19 055C          __end_of_I2C_Master_Start 0303  
        __end_of_I2C_Master_Write 0316                Lcd_Write_Char@temp 0072                         sprintf@ap 0059  
                       sprintf@sp 005D                  ___lwmod@dividend 007A                  ___lldiv@dividend 0074  
                       stringcode 0003                        _OSCCONbits 008F           __end_of_I2C_Master_Read 03D5  
         __end_of_I2C_Master_Wait 0323           __end_of_I2C_Master_Stop 030C                Lcd_Set_Cursor@temp 0079  
                        sprintf@c 005E                          sprintf@f 0052                  ___lldiv@quotient 0079  
               I2C_Master_Write@d 0070                   ___lwmod@divisor 0078                   ___lwmod@counter 007D  
                        stringdir 0003                          stringtab 0003                       _SSPCON2bits 0091  
