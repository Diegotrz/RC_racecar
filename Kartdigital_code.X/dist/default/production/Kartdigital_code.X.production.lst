

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Aug 22 00:01:16 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24     0000                     
    25                           ; Generated 09/02/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59     0000                     	;# 
    60     0001                     	;# 
    61     0002                     	;# 
    62     0003                     	;# 
    63     0004                     	;# 
    64     0005                     	;# 
    65     0006                     	;# 
    66     0007                     	;# 
    67     0008                     	;# 
    68     0009                     	;# 
    69     000A                     	;# 
    70     000B                     	;# 
    71     000C                     	;# 
    72     000D                     	;# 
    73     000E                     	;# 
    74     000E                     	;# 
    75     000F                     	;# 
    76     0010                     	;# 
    77     0011                     	;# 
    78     0012                     	;# 
    79     0013                     	;# 
    80     0014                     	;# 
    81     0015                     	;# 
    82     0015                     	;# 
    83     0016                     	;# 
    84     0017                     	;# 
    85     0018                     	;# 
    86     0019                     	;# 
    87     001A                     	;# 
    88     001B                     	;# 
    89     001B                     	;# 
    90     001C                     	;# 
    91     001D                     	;# 
    92     001E                     	;# 
    93     001F                     	;# 
    94     0081                     	;# 
    95     0085                     	;# 
    96     0086                     	;# 
    97     0087                     	;# 
    98     0088                     	;# 
    99     0089                     	;# 
   100     008C                     	;# 
   101     008D                     	;# 
   102     008E                     	;# 
   103     008F                     	;# 
   104     0090                     	;# 
   105     0091                     	;# 
   106     0092                     	;# 
   107     0093                     	;# 
   108     0093                     	;# 
   109     0093                     	;# 
   110     0094                     	;# 
   111     0095                     	;# 
   112     0096                     	;# 
   113     0097                     	;# 
   114     0098                     	;# 
   115     0099                     	;# 
   116     009A                     	;# 
   117     009B                     	;# 
   118     009C                     	;# 
   119     009D                     	;# 
   120     009E                     	;# 
   121     009F                     	;# 
   122     0105                     	;# 
   123     0107                     	;# 
   124     0108                     	;# 
   125     0109                     	;# 
   126     010C                     	;# 
   127     010C                     	;# 
   128     010D                     	;# 
   129     010E                     	;# 
   130     010F                     	;# 
   131     0185                     	;# 
   132     0187                     	;# 
   133     0188                     	;# 
   134     0189                     	;# 
   135     018C                     	;# 
   136     018D                     	;# 
   137     0000                     	;# 
   138     0001                     	;# 
   139     0002                     	;# 
   140     0003                     	;# 
   141     0004                     	;# 
   142     0005                     	;# 
   143     0006                     	;# 
   144     0007                     	;# 
   145     0008                     	;# 
   146     0009                     	;# 
   147     000A                     	;# 
   148     000B                     	;# 
   149     000C                     	;# 
   150     000D                     	;# 
   151     000E                     	;# 
   152     000E                     	;# 
   153     000F                     	;# 
   154     0010                     	;# 
   155     0011                     	;# 
   156     0012                     	;# 
   157     0013                     	;# 
   158     0014                     	;# 
   159     0015                     	;# 
   160     0015                     	;# 
   161     0016                     	;# 
   162     0017                     	;# 
   163     0018                     	;# 
   164     0019                     	;# 
   165     001A                     	;# 
   166     001B                     	;# 
   167     001B                     	;# 
   168     001C                     	;# 
   169     001D                     	;# 
   170     001E                     	;# 
   171     001F                     	;# 
   172     0081                     	;# 
   173     0085                     	;# 
   174     0086                     	;# 
   175     0087                     	;# 
   176     0088                     	;# 
   177     0089                     	;# 
   178     008C                     	;# 
   179     008D                     	;# 
   180     008E                     	;# 
   181     008F                     	;# 
   182     0090                     	;# 
   183     0091                     	;# 
   184     0092                     	;# 
   185     0093                     	;# 
   186     0093                     	;# 
   187     0093                     	;# 
   188     0094                     	;# 
   189     0095                     	;# 
   190     0096                     	;# 
   191     0097                     	;# 
   192     0098                     	;# 
   193     0099                     	;# 
   194     009A                     	;# 
   195     009B                     	;# 
   196     009C                     	;# 
   197     009D                     	;# 
   198     009E                     	;# 
   199     009F                     	;# 
   200     0105                     	;# 
   201     0107                     	;# 
   202     0108                     	;# 
   203     0109                     	;# 
   204     010C                     	;# 
   205     010C                     	;# 
   206     010D                     	;# 
   207     010E                     	;# 
   208     010F                     	;# 
   209     0185                     	;# 
   210     0187                     	;# 
   211     0188                     	;# 
   212     0189                     	;# 
   213     018C                     	;# 
   214     018D                     	;# 
   215     0000                     	;# 
   216     0001                     	;# 
   217     0002                     	;# 
   218     0003                     	;# 
   219     0004                     	;# 
   220     0005                     	;# 
   221     0006                     	;# 
   222     0007                     	;# 
   223     0008                     	;# 
   224     0009                     	;# 
   225     000A                     	;# 
   226     000B                     	;# 
   227     000C                     	;# 
   228     000D                     	;# 
   229     000E                     	;# 
   230     000E                     	;# 
   231     000F                     	;# 
   232     0010                     	;# 
   233     0011                     	;# 
   234     0012                     	;# 
   235     0013                     	;# 
   236     0014                     	;# 
   237     0015                     	;# 
   238     0015                     	;# 
   239     0016                     	;# 
   240     0017                     	;# 
   241     0018                     	;# 
   242     0019                     	;# 
   243     001A                     	;# 
   244     001B                     	;# 
   245     001B                     	;# 
   246     001C                     	;# 
   247     001D                     	;# 
   248     001E                     	;# 
   249     001F                     	;# 
   250     0081                     	;# 
   251     0085                     	;# 
   252     0086                     	;# 
   253     0087                     	;# 
   254     0088                     	;# 
   255     0089                     	;# 
   256     008C                     	;# 
   257     008D                     	;# 
   258     008E                     	;# 
   259     008F                     	;# 
   260     0090                     	;# 
   261     0091                     	;# 
   262     0092                     	;# 
   263     0093                     	;# 
   264     0093                     	;# 
   265     0093                     	;# 
   266     0094                     	;# 
   267     0095                     	;# 
   268     0096                     	;# 
   269     0097                     	;# 
   270     0098                     	;# 
   271     0099                     	;# 
   272     009A                     	;# 
   273     009B                     	;# 
   274     009C                     	;# 
   275     009D                     	;# 
   276     009E                     	;# 
   277     009F                     	;# 
   278     0105                     	;# 
   279     0107                     	;# 
   280     0108                     	;# 
   281     0109                     	;# 
   282     010C                     	;# 
   283     010C                     	;# 
   284     010D                     	;# 
   285     010E                     	;# 
   286     010F                     	;# 
   287     0185                     	;# 
   288     0187                     	;# 
   289     0188                     	;# 
   290     0189                     	;# 
   291     018C                     	;# 
   292     018D                     	;# 
   293     0000                     	;# 
   294     0001                     	;# 
   295     0002                     	;# 
   296     0003                     	;# 
   297     0004                     	;# 
   298     0005                     	;# 
   299     0006                     	;# 
   300     0007                     	;# 
   301     0008                     	;# 
   302     0009                     	;# 
   303     000A                     	;# 
   304     000B                     	;# 
   305     000C                     	;# 
   306     000D                     	;# 
   307     000E                     	;# 
   308     000E                     	;# 
   309     000F                     	;# 
   310     0010                     	;# 
   311     0011                     	;# 
   312     0012                     	;# 
   313     0013                     	;# 
   314     0014                     	;# 
   315     0015                     	;# 
   316     0015                     	;# 
   317     0016                     	;# 
   318     0017                     	;# 
   319     0018                     	;# 
   320     0019                     	;# 
   321     001A                     	;# 
   322     001B                     	;# 
   323     001B                     	;# 
   324     001C                     	;# 
   325     001D                     	;# 
   326     001E                     	;# 
   327     001F                     	;# 
   328     0081                     	;# 
   329     0085                     	;# 
   330     0086                     	;# 
   331     0087                     	;# 
   332     0088                     	;# 
   333     0089                     	;# 
   334     008C                     	;# 
   335     008D                     	;# 
   336     008E                     	;# 
   337     008F                     	;# 
   338     0090                     	;# 
   339     0091                     	;# 
   340     0092                     	;# 
   341     0093                     	;# 
   342     0093                     	;# 
   343     0093                     	;# 
   344     0094                     	;# 
   345     0095                     	;# 
   346     0096                     	;# 
   347     0097                     	;# 
   348     0098                     	;# 
   349     0099                     	;# 
   350     009A                     	;# 
   351     009B                     	;# 
   352     009C                     	;# 
   353     009D                     	;# 
   354     009E                     	;# 
   355     009F                     	;# 
   356     0105                     	;# 
   357     0107                     	;# 
   358     0108                     	;# 
   359     0109                     	;# 
   360     010C                     	;# 
   361     010C                     	;# 
   362     010D                     	;# 
   363     010E                     	;# 
   364     010F                     	;# 
   365     0185                     	;# 
   366     0187                     	;# 
   367     0188                     	;# 
   368     0189                     	;# 
   369     018C                     	;# 
   370     018D                     	;# 
   371     0000                     	;# 
   372     0001                     	;# 
   373     0002                     	;# 
   374     0003                     	;# 
   375     0004                     	;# 
   376     0005                     	;# 
   377     0006                     	;# 
   378     0007                     	;# 
   379     0008                     	;# 
   380     0009                     	;# 
   381     000A                     	;# 
   382     000B                     	;# 
   383     000C                     	;# 
   384     000D                     	;# 
   385     000E                     	;# 
   386     000E                     	;# 
   387     000F                     	;# 
   388     0010                     	;# 
   389     0011                     	;# 
   390     0012                     	;# 
   391     0013                     	;# 
   392     0014                     	;# 
   393     0015                     	;# 
   394     0015                     	;# 
   395     0016                     	;# 
   396     0017                     	;# 
   397     0018                     	;# 
   398     0019                     	;# 
   399     001A                     	;# 
   400     001B                     	;# 
   401     001B                     	;# 
   402     001C                     	;# 
   403     001D                     	;# 
   404     001E                     	;# 
   405     001F                     	;# 
   406     0081                     	;# 
   407     0085                     	;# 
   408     0086                     	;# 
   409     0087                     	;# 
   410     0088                     	;# 
   411     0089                     	;# 
   412     008C                     	;# 
   413     008D                     	;# 
   414     008E                     	;# 
   415     008F                     	;# 
   416     0090                     	;# 
   417     0091                     	;# 
   418     0092                     	;# 
   419     0093                     	;# 
   420     0093                     	;# 
   421     0093                     	;# 
   422     0094                     	;# 
   423     0095                     	;# 
   424     0096                     	;# 
   425     0097                     	;# 
   426     0098                     	;# 
   427     0099                     	;# 
   428     009A                     	;# 
   429     009B                     	;# 
   430     009C                     	;# 
   431     009D                     	;# 
   432     009E                     	;# 
   433     009F                     	;# 
   434     0105                     	;# 
   435     0107                     	;# 
   436     0108                     	;# 
   437     0109                     	;# 
   438     010C                     	;# 
   439     010C                     	;# 
   440     010D                     	;# 
   441     010E                     	;# 
   442     010F                     	;# 
   443     0185                     	;# 
   444     0187                     	;# 
   445     0188                     	;# 
   446     0189                     	;# 
   447     018C                     	;# 
   448     018D                     	;# 
   449                           
   450                           	psect	strings
   451     01C2                     __pstrings:
   452     01C2                     stringtab:
   453     01C2                     __stringtab:
   454                           
   455                           ;	String table - string pointers are 1 byte each
   456     01C2  1BFF               	btfsc	btemp+1,7
   457     01C3  29CC               	ljmp	stringcode
   458     01C4  1383               	bcf	3,7
   459     01C5  187F               	btfsc	btemp+1,0
   460     01C6  1783               	bsf	3,7
   461     01C7  0800               	movf	0,w
   462     01C8  0A84               	incf	4,f
   463     01C9  1903               	skipnz
   464     01CA  0AFF               	incf	btemp+1,f
   465     01CB  0008               	return
   466     01CC                     stringcode:
   467     01CC                     stringdir:
   468     01CC  3001               	movlw	high stringdir
   469     01CD  008A               	movwf	10
   470     01CE  0804               	movf	4,w
   471     01CF  0A84               	incf	4,f
   472     01D0  0782               	addwf	2,f
   473     01D1                     __stringbase:
   474     01D1  3400               	retlw	0
   475     01D2                     __end_of__stringtab:
   476     01D2                     _message:
   477     01D2  3432               	retlw	50
   478     01D3  342E               	retlw	46
   479     01D4  3445               	retlw	69
   480     01D5  346E               	retlw	110
   481     01D6  3476               	retlw	118
   482     01D7  3469               	retlw	105
   483     01D8  3461               	retlw	97
   484     01D9  3472               	retlw	114
   485     01DA  3420               	retlw	32
   486     01DB  3441               	retlw	65
   487     01DC  3473               	retlw	115
   488     01DD  3463               	retlw	99
   489     01DE  3469               	retlw	105
   490     01DF  3469               	retlw	105
   491     01E0  3400               	retlw	0
   492     01E1                     __end_of_message:
   493     0019                     _TXREG	set	25
   494     0018                     _RCSTA	set	24
   495     0008                     _PORTDbits	set	8
   496     0013                     _SSPBUF	set	19
   497     0014                     _SSPCON	set	20
   498     000B                     _INTCONbits	set	11
   499     0008                     _PORTD	set	8
   500     001A                     _RCREG	set	26
   501     0018                     _RCSTAbits	set	24
   502     000C                     _PIR1bits	set	12
   503     00C4                     _CREN	set	196
   504     00C1                     _OERR	set	193
   505     0065                     _RCIF	set	101
   506     0043                     _RD3	set	67
   507     0047                     _RD7	set	71
   508     0046                     _RD6	set	70
   509     0045                     _RD5	set	69
   510     0044                     _RD4	set	68
   511     0063                     _SSPIF	set	99
   512     005E                     _PEIE	set	94
   513     005F                     _GIE	set	95
   514     0098                     _TXSTA	set	152
   515     0099                     _SPBRG	set	153
   516     0091                     _SSPCON2bits	set	145
   517     0087                     _TRISCbits	set	135
   518     0094                     _SSPSTAT	set	148
   519     0093                     _SSPADD	set	147
   520     0091                     _SSPCON2	set	145
   521     0088                     _TRISD	set	136
   522     008F                     _OSCCON	set	143
   523     04C1                     _TRMT	set	1217
   524     0463                     _SSPIE	set	1123
   525     043C                     _TRISC4	set	1084
   526     043B                     _TRISC3	set	1083
   527     0189                     _ANSELH	set	393
   528     0188                     _ANSEL	set	392
   529     01E1                     STR_1:
   530     01E1  340D               	retlw	13
   531     01E2  340A               	retlw	10
   532     01E3  3400               	retlw	0
   533                           
   534                           	psect	cinit
   535     000F                     start_initialization:	
   536                           ; #config settings
   537                           
   538     000F                     __initialization:
   539                           
   540                           ; Clear objects allocated to COMMON
   541     000F  01FA               	clrf	__pbssCOMMON& (0+127)
   542     0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   543                           
   544                           ; Clear objects allocated to BANK0
   545     0011  1383               	bcf	3,7	;select IRP bank0
   546     0012  3020               	movlw	low __pbssBANK0
   547     0013  0084               	movwf	4
   548     0014  3035               	movlw	low (__pbssBANK0+21)
   549     0015  120A  118A  2215  120A  118A  	fcall	clear_ram0
   550     001A                     end_of_initialization:	
   551                           ;End of C runtime variable initialization code
   552                           
   553     001A                     __end_of__initialization:
   554     001A  0183               	clrf	3
   555     001B  120A  118A  28BE   	ljmp	_main	;jump to C main() function
   556                           
   557                           	psect	bssCOMMON
   558     007A                     __pbssCOMMON:
   559     007A                     _RPML:
   560     007A                     	ds	1
   561     007B                     _RPMR:
   562     007B                     	ds	1
   563                           
   564                           	psect	bssBANK0
   565     0020                     __pbssBANK0:
   566     0020                     _aceleracX:
   567     0020                     	ds	1
   568     0021                     _datos:
   569     0021                     	ds	20
   570                           
   571                           	psect	clrtext
   572     0215                     clear_ram0:	
   573                           ;	Called with FSR containing the base address, and
   574                           ;	W with the last address+1
   575                           
   576     0215  0064               	clrwdt	;clear the watchdog before getting into this loop
   577     0216                     clrloop0:
   578     0216  0180               	clrf	0	;clear RAM location pointed to by FSR
   579     0217  0A84               	incf	4,f	;increment pointer
   580     0218  0604               	xorwf	4,w	;XOR with final address
   581     0219  1903               	btfsc	3,2	;have we reached the end yet?
   582     021A  3400               	retlw	0	;all done for this memory range, return
   583     021B  0604               	xorwf	4,w	;XOR again to restore value
   584     021C  2A16               	goto	clrloop0	;do the next byte
   585                           
   586                           	psect	cstackCOMMON
   587     0070                     __pcstackCOMMON:
   588     0070                     ?_UART_Data_Ready:
   589     0070                     ?_setup:	
   590                           ; 1 bit 
   591                           
   592     0070                     ?_UART_GetC:	
   593                           ; 1 bytes @ 0x0
   594                           
   595     0070                     ?_UART_PutC:	
   596                           ; 1 bytes @ 0x0
   597                           
   598     0070                     ?_isr:	
   599                           ; 1 bytes @ 0x0
   600                           
   601     0070                     ??_isr:	
   602                           ; 1 bytes @ 0x0
   603                           
   604     0070                     ?_main:	
   605                           ; 1 bytes @ 0x0
   606                           
   607                           
   608                           ; 1 bytes @ 0x0
   609     0070                     	ds	2
   610     0072                     ??_setup:
   611     0072                     ??_UART_Data_Ready:	
   612                           ; 1 bytes @ 0x2
   613                           
   614     0072                     ??_UART_GetC:	
   615                           ; 1 bytes @ 0x2
   616                           
   617     0072                     ??_UART_PutC:	
   618                           ; 1 bytes @ 0x2
   619                           
   620     0072                     ?___lldiv:	
   621                           ; 1 bytes @ 0x2
   622                           
   623     0072                     UART_PutC@data:	
   624                           ; 4 bytes @ 0x2
   625                           
   626     0072                     ___lldiv@divisor:	
   627                           ; 1 bytes @ 0x2
   628                           
   629                           
   630                           ; 4 bytes @ 0x2
   631     0072                     	ds	1
   632     0073                     ?_UART_Print:
   633     0073                     UART_Print@data:	
   634                           ; 1 bytes @ 0x3
   635                           
   636                           
   637                           ; 2 bytes @ 0x3
   638     0073                     	ds	2
   639     0075                     ??_UART_Print:
   640     0075                     UART_Print@i:	
   641                           ; 1 bytes @ 0x5
   642                           
   643                           
   644                           ; 1 bytes @ 0x5
   645     0075                     	ds	1
   646     0076                     ___lldiv@dividend:
   647                           
   648                           ; 4 bytes @ 0x6
   649     0076                     	ds	4
   650                           
   651                           	psect	cstackBANK0
   652     0035                     __pcstackBANK0:
   653     0035                     ??___lldiv:
   654                           
   655                           ; 1 bytes @ 0x0
   656     0035                     	ds	1
   657     0036                     ___lldiv@quotient:
   658                           
   659                           ; 4 bytes @ 0x1
   660     0036                     	ds	4
   661     003A                     ___lldiv@counter:
   662                           
   663                           ; 1 bytes @ 0x5
   664     003A                     	ds	1
   665     003B                     ?_UART_Init:
   666     003B                     UART_Init@baud_rate:	
   667                           ; 1 bytes @ 0x6
   668                           
   669                           
   670                           ; 4 bytes @ 0x6
   671     003B                     	ds	4
   672     003F                     ??_UART_Init:
   673                           
   674                           ; 1 bytes @ 0xA
   675     003F                     	ds	4
   676     0043                     UART_Init@n:
   677                           
   678                           ; 2 bytes @ 0xE
   679     0043                     	ds	2
   680     0045                     ??_main:
   681                           
   682                           ; 1 bytes @ 0x10
   683     0045                     	ds	3
   684     0048                     main@c:
   685                           
   686                           ; 1 bytes @ 0x13
   687     0048                     	ds	1
   688                           
   689                           	psect	maintext
   690     00BE                     __pmaintext:	
   691 ;;
   692 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   693 ;;
   694 ;; *************** function _main *****************
   695 ;; Defined at:
   696 ;;		line 54 in file "Masterpic.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;		None
   699 ;; Auto vars:     Size  Location     Type
   700 ;;  c               1   19[BANK0 ] unsigned char 
   701 ;;  text            9    0        unsigned char [9]
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   706 ;; Tracked objects:
   707 ;;		On entry : B00/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   711 ;;      Params:         0       0       0       0       0
   712 ;;      Locals:         0       1       0       0       0
   713 ;;      Temps:          0       3       0       0       0
   714 ;;      Totals:         0       4       0       0       0
   715 ;;Total ram usage:        4 bytes
   716 ;; Hardware stack levels required when called: 3
   717 ;; This function calls:
   718 ;;		_UART_Data_Ready
   719 ;;		_UART_GetC
   720 ;;		_UART_Init
   721 ;;		_UART_Print
   722 ;;		_UART_PutC
   723 ;;		_setup
   724 ;; This function is called by:
   725 ;;		Startup code after reset
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729     00BE                     _main:	
   730                           ;psect for function _main
   731                           
   732     00BE                     l1282:	
   733                           ;incstack = 0
   734                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   735                           
   736                           
   737                           ;Masterpic.c: 56:     setup();
   738     00BE  120A  118A  21F2  120A  118A  	fcall	_setup
   739     00C3                     l1284:
   740                           
   741                           ;Masterpic.c: 57:   OSCCON = 0x70;
   742     00C3  3070               	movlw	112
   743     00C4  1683               	bsf	3,5	;RP0=1, select bank1
   744     00C5  1303               	bcf	3,6	;RP1=0, select bank1
   745     00C6  008F               	movwf	15	;volatile
   746     00C7                     l1286:
   747                           
   748                           ;Masterpic.c: 59:   UART_Init(9600);
   749     00C7  3000               	movlw	0
   750     00C8  1283               	bcf	3,5	;RP0=0, select bank0
   751     00C9  1303               	bcf	3,6	;RP1=0, select bank0
   752     00CA  00BE               	movwf	UART_Init@baud_rate+3
   753     00CB  3000               	movlw	0
   754     00CC  00BD               	movwf	UART_Init@baud_rate+2
   755     00CD  3025               	movlw	37
   756     00CE  00BC               	movwf	UART_Init@baud_rate+1
   757     00CF  3080               	movlw	128
   758     00D0  00BB               	movwf	UART_Init@baud_rate
   759     00D1  120A  118A  201E  120A  118A  	fcall	_UART_Init
   760     00D6                     l1288:
   761                           
   762                           ;Masterpic.c: 61:   _delay((unsigned long)((2000)*(8000000/4000.0)));
   763     00D6  3015               	movlw	21
   764     00D7  1283               	bcf	3,5	;RP0=0, select bank0
   765     00D8  1303               	bcf	3,6	;RP1=0, select bank0
   766     00D9  00C7               	movwf	??_main+2
   767     00DA  304B               	movlw	75
   768     00DB  00C6               	movwf	??_main+1
   769     00DC  30BD               	movlw	189
   770     00DD  00C5               	movwf	??_main
   771     00DE                     u737:
   772     00DE  0BC5               	decfsz	??_main,f
   773     00DF  28DE               	goto	u737
   774     00E0  0BC6               	decfsz	??_main+1,f
   775     00E1  28DE               	goto	u737
   776     00E2  0BC7               	decfsz	??_main+2,f
   777     00E3  28DE               	goto	u737
   778     00E4  28E5               	nop2
   779     00E5                     l1290:
   780                           
   781                           ;Masterpic.c: 68:   {;Masterpic.c: 69:       RPMR = 100;
   782     00E5  3064               	movlw	100
   783     00E6  00FB               	movwf	_RPMR
   784     00E7                     l1292:
   785                           
   786                           ;Masterpic.c: 70:       RPML= 50;
   787     00E7  3032               	movlw	50
   788     00E8  00FA               	movwf	_RPML
   789     00E9                     l1294:
   790                           
   791                           ;Masterpic.c: 71:       aceleracX= 24;
   792     00E9  3018               	movlw	24
   793     00EA  1283               	bcf	3,5	;RP0=0, select bank0
   794     00EB  1303               	bcf	3,6	;RP1=0, select bank0
   795     00EC  00A0               	movwf	_aceleracX
   796     00ED                     l1296:
   797                           
   798                           ;Masterpic.c: 77:       datos[0]= RPMR;
   799     00ED  3064               	movlw	100
   800     00EE  00A1               	movwf	_datos
   801     00EF                     l1298:
   802                           
   803                           ;Masterpic.c: 78:       datos[4]= RPML;
   804     00EF  3032               	movlw	50
   805     00F0  00A5               	movwf	_datos+4
   806     00F1                     l1300:
   807                           
   808                           ;Masterpic.c: 79:       datos[8]= aceleracX;
   809     00F1  3018               	movlw	24
   810     00F2  00A9               	movwf	_datos+8
   811     00F3                     l1302:
   812                           
   813                           ;Masterpic.c: 80:       UART_Print ("\r\n");
   814     00F3  3010               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   815     00F4  00F3               	movwf	UART_Print@data
   816     00F5  3080               	movlw	128
   817     00F6  00F4               	movwf	UART_Print@data+1
   818     00F7  120A  118A  2197  120A  118A  	fcall	_UART_Print
   819     00FC                     l1304:
   820                           
   821                           ;Masterpic.c: 82:              UART_Print(datos);
   822     00FC  3021               	movlw	(low (_datos| 0))& (0+255)
   823     00FD  00F3               	movwf	UART_Print@data
   824     00FE  3000               	movlw	0
   825     00FF  00F4               	movwf	UART_Print@data+1
   826     0100  120A  118A  2197  120A  118A  	fcall	_UART_Print
   827     0105                     l1306:
   828                           
   829                           ;Masterpic.c: 83:              _delay((unsigned long)((700)*(8000000/4000.0)));
   830     0105  3008               	movlw	8
   831     0106  1283               	bcf	3,5	;RP0=0, select bank0
   832     0107  1303               	bcf	3,6	;RP1=0, select bank0
   833     0108  00C7               	movwf	??_main+2
   834     0109  301B               	movlw	27
   835     010A  00C6               	movwf	??_main+1
   836     010B  3026               	movlw	38
   837     010C  00C5               	movwf	??_main
   838     010D                     u747:
   839     010D  0BC5               	decfsz	??_main,f
   840     010E  290D               	goto	u747
   841     010F  0BC6               	decfsz	??_main+1,f
   842     0110  290D               	goto	u747
   843     0111  0BC7               	decfsz	??_main+2,f
   844     0112  290D               	goto	u747
   845     0113  0000               	nop
   846     0114                     l1308:
   847                           
   848                           ;Masterpic.c: 85:     if ( UART_Data_Ready() )
   849     0114  120A  118A  220B  120A  118A  	fcall	_UART_Data_Ready
   850     0119  1C03               	btfss	3,0
   851     011A  291C               	goto	u711
   852     011B  291D               	goto	u710
   853     011C                     u711:
   854     011C  28E5               	goto	l1290
   855     011D                     u710:
   856     011D                     l1310:
   857                           
   858                           ;Masterpic.c: 86:     {;Masterpic.c: 87:       uint8_t c = UART_GetC();
   859     011D  120A  118A  21E4  120A  118A  	fcall	_UART_GetC
   860     0122  1283               	bcf	3,5	;RP0=0, select bank0
   861     0123  1303               	bcf	3,6	;RP1=0, select bank0
   862     0124  00C8               	movwf	main@c
   863     0125                     l1312:
   864                           
   865                           ;Masterpic.c: 88:       UART_PutC(c);
   866     0125  0848               	movf	main@c,w
   867     0126  120A  118A  21FF  120A  118A  	fcall	_UART_PutC
   868     012B  28E5               	goto	l1290
   869     012C  120A  118A  280C   	ljmp	start
   870     012F                     __end_of_main:
   871                           
   872                           	psect	text1
   873     01F2                     __ptext1:	
   874 ;; *************** function _setup *****************
   875 ;; Defined at:
   876 ;;		line 99 in file "Masterpic.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;		None
   879 ;; Auto vars:     Size  Location     Type
   880 ;;		None
   881 ;; Return value:  Size  Location     Type
   882 ;;                  1    wreg      void 
   883 ;; Registers used:
   884 ;;		status,2
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   890 ;;      Params:         0       0       0       0       0
   891 ;;      Locals:         0       0       0       0       0
   892 ;;      Temps:          0       0       0       0       0
   893 ;;      Totals:         0       0       0       0       0
   894 ;;Total ram usage:        0 bytes
   895 ;; Hardware stack levels used: 1
   896 ;; Hardware stack levels required when called: 1
   897 ;; This function calls:
   898 ;;		Nothing
   899 ;; This function is called by:
   900 ;;		_main
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904     01F2                     _setup:	
   905                           ;psect for function _setup
   906                           
   907     01F2                     l1236:	
   908                           ;incstack = 0
   909                           ; Regs used in _setup: [status,2]
   910                           
   911                           
   912                           ;Masterpic.c: 100:     ANSEL = 0;
   913     01F2  1683               	bsf	3,5	;RP0=1, select bank3
   914     01F3  1703               	bsf	3,6	;RP1=1, select bank3
   915     01F4  0188               	clrf	8	;volatile
   916                           
   917                           ;Masterpic.c: 101:     ANSELH = 0;
   918     01F5  0189               	clrf	9	;volatile
   919                           
   920                           ;Masterpic.c: 104:     TRISD= 0;
   921     01F6  1683               	bsf	3,5	;RP0=1, select bank1
   922     01F7  1303               	bcf	3,6	;RP1=0, select bank1
   923     01F8  0188               	clrf	8	;volatile
   924                           
   925                           ;Masterpic.c: 105:     PORTD = 0;
   926     01F9  1283               	bcf	3,5	;RP0=0, select bank0
   927     01FA  1303               	bcf	3,6	;RP1=0, select bank0
   928     01FB  0188               	clrf	8	;volatile
   929     01FC                     l1238:
   930                           
   931                           ;Masterpic.c: 110:     INTCONbits.PEIE = 1;
   932     01FC  170B               	bsf	11,6	;volatile
   933     01FD                     l1240:
   934                           
   935                           ;Masterpic.c: 111:     INTCONbits.GIE = 1;
   936     01FD  178B               	bsf	11,7	;volatile
   937     01FE                     l67:
   938     01FE  0008               	return
   939     01FF                     __end_of_setup:
   940                           
   941                           	psect	text2
   942     0197                     __ptext2:	
   943 ;; *************** function _UART_Print *****************
   944 ;; Defined at:
   945 ;;		line 65 in file "USARTmodl.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  data            2    3[COMMON] PTR const unsigned char 
   948 ;;		 -> STR_1(3), datos(20), 
   949 ;; Auto vars:     Size  Location     Type
   950 ;;  i               1    5[COMMON] unsigned char 
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   960 ;;      Params:         2       0       0       0       0
   961 ;;      Locals:         1       0       0       0       0
   962 ;;      Temps:          0       0       0       0       0
   963 ;;      Totals:         3       0       0       0       0
   964 ;;Total ram usage:        3 bytes
   965 ;; Hardware stack levels used: 1
   966 ;; Hardware stack levels required when called: 2
   967 ;; This function calls:
   968 ;;		_UART_PutC
   969 ;; This function is called by:
   970 ;;		_main
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974     0197                     _UART_Print:	
   975                           ;psect for function _UART_Print
   976                           
   977     0197                     l1258:	
   978                           ;incstack = 0
   979                           ; Regs used in _UART_Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   980                           
   981                           
   982                           ;USARTmodl.c: 65: void UART_Print(const char *data);USARTmodl.c: 66: {;USARTmodl.c: 67: 
      +                            uint8_t i = 0;
   983     0197  01F5               	clrf	UART_Print@i
   984                           
   985                           ;USARTmodl.c: 68:   while (data[i] != '\0')
   986     0198  29AE               	goto	l1264
   987     0199                     l1260:
   988                           
   989                           ;USARTmodl.c: 69:     UART_PutC (data[i++]);
   990     0199  0875               	movf	UART_Print@i,w
   991     019A  0773               	addwf	UART_Print@data,w
   992     019B  0084               	movwf	4
   993     019C  0874               	movf	UART_Print@data+1,w
   994     019D  1803               	skipnc
   995     019E  0A74               	incf	UART_Print@data+1,w
   996     019F  00FF               	movwf	btemp+1
   997     01A0  120A  118A  21C2  120A  118A  	fcall	stringtab
   998     01A5  120A  118A  21FF  120A  118A  	fcall	_UART_PutC
   999     01AA                     l1262:
  1000     01AA  3001               	movlw	1
  1001     01AB  00FF               	movwf	btemp+1
  1002     01AC  087F               	movf	btemp+1,w
  1003     01AD  07F5               	addwf	UART_Print@i,f
  1004     01AE                     l1264:
  1005                           
  1006                           ;USARTmodl.c: 68:   while (data[i] != '\0')
  1007     01AE  0875               	movf	UART_Print@i,w
  1008     01AF  0773               	addwf	UART_Print@data,w
  1009     01B0  0084               	movwf	4
  1010     01B1  0874               	movf	UART_Print@data+1,w
  1011     01B2  1803               	skipnc
  1012     01B3  0A74               	incf	UART_Print@data+1,w
  1013     01B4  1283               	bcf	3,5	;RP0=0, select bank0
  1014     01B5  1303               	bcf	3,6	;RP1=0, select bank0
  1015     01B6  00FF               	movwf	btemp+1
  1016     01B7  120A  118A  21C2  120A  118A  	fcall	stringtab
  1017     01BC  3A00               	xorlw	0
  1018     01BD  1D03               	skipz
  1019     01BE  29C0               	goto	u671
  1020     01BF  29C1               	goto	u670
  1021     01C0                     u671:
  1022     01C0  2999               	goto	l1260
  1023     01C1                     u670:
  1024     01C1                     l230:
  1025     01C1  0008               	return
  1026     01C2                     __end_of_UART_Print:
  1027                           
  1028                           	psect	text3
  1029     01FF                     __ptext3:	
  1030 ;; *************** function _UART_PutC *****************
  1031 ;; Defined at:
  1032 ;;		line 59 in file "USARTmodl.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;  data            1    wreg     const unsigned char 
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;  data            1    2[COMMON] const unsigned char 
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      void 
  1039 ;; Registers used:
  1040 ;;		wreg
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1046 ;;      Params:         0       0       0       0       0
  1047 ;;      Locals:         1       0       0       0       0
  1048 ;;      Temps:          0       0       0       0       0
  1049 ;;      Totals:         1       0       0       0       0
  1050 ;;Total ram usage:        1 bytes
  1051 ;; Hardware stack levels used: 1
  1052 ;; Hardware stack levels required when called: 1
  1053 ;; This function calls:
  1054 ;;		Nothing
  1055 ;; This function is called by:
  1056 ;;		_main
  1057 ;;		_UART_Print
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061     01FF                     _UART_PutC:	
  1062                           ;psect for function _UART_PutC
  1063                           
  1064                           
  1065                           ;incstack = 0
  1066                           ; Regs used in _UART_PutC: [wreg]
  1067                           ;UART_PutC@data stored from wreg
  1068     01FF  00F2               	movwf	UART_PutC@data
  1069     0200                     l1206:
  1070     0200                     l221:	
  1071                           ;USARTmodl.c: 59: void UART_PutC(const char data);USARTmodl.c: 60: {;USARTmodl.c: 61:   
      +                          while (TRMT == 0);
  1072                           
  1073     0200  1683               	bsf	3,5	;RP0=1, select bank1
  1074     0201  1303               	bcf	3,6	;RP1=0, select bank1
  1075     0202  1C98               	btfss	24,1	;volatile
  1076     0203  2A05               	goto	u541
  1077     0204  2A06               	goto	u540
  1078     0205                     u541:
  1079     0205  2A00               	goto	l221
  1080     0206                     u540:
  1081     0206                     l1208:
  1082                           
  1083                           ;USARTmodl.c: 62:   TXREG = data;
  1084     0206  0872               	movf	UART_PutC@data,w
  1085     0207  1283               	bcf	3,5	;RP0=0, select bank0
  1086     0208  1303               	bcf	3,6	;RP1=0, select bank0
  1087     0209  0099               	movwf	25	;volatile
  1088     020A                     l224:
  1089     020A  0008               	return
  1090     020B                     __end_of_UART_PutC:
  1091                           
  1092                           	psect	text4
  1093     001E                     __ptext4:	
  1094 ;; *************** function _UART_Init *****************
  1095 ;; Defined at:
  1096 ;;		line 14 in file "USARTmodl.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;  baud_rate       4    6[BANK0 ] const unsigned long 
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;  n               2   14[BANK0 ] int 
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  1    wreg      void 
  1103 ;; Registers used:
  1104 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1110 ;;      Params:         0       4       0       0       0
  1111 ;;      Locals:         0       2       0       0       0
  1112 ;;      Temps:          0       4       0       0       0
  1113 ;;      Totals:         0      10       0       0       0
  1114 ;;Total ram usage:       10 bytes
  1115 ;; Hardware stack levels used: 1
  1116 ;; Hardware stack levels required when called: 2
  1117 ;; This function calls:
  1118 ;;		___lldiv
  1119 ;; This function is called by:
  1120 ;;		_main
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124     001E                     _UART_Init:	
  1125                           ;psect for function _UART_Init
  1126                           
  1127     001E                     l1242:	
  1128                           ;incstack = 0
  1129                           ; Regs used in _UART_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1130                           
  1131                           
  1132                           ;USARTmodl.c: 14: void UART_Init(const uint32_t baud_rate);USARTmodl.c: 15: {;USARTmodl.
      +                          c: 16:   int16_t n = ( 8000000 / (16 * baud_rate) ) - 1;
  1133     001E  1283               	bcf	3,5	;RP0=0, select bank0
  1134     001F  1303               	bcf	3,6	;RP1=0, select bank0
  1135     0020  083B               	movf	UART_Init@baud_rate,w
  1136     0021  00BF               	movwf	??_UART_Init
  1137     0022  083C               	movf	UART_Init@baud_rate+1,w
  1138     0023  00C0               	movwf	??_UART_Init+1
  1139     0024  083D               	movf	UART_Init@baud_rate+2,w
  1140     0025  00C1               	movwf	??_UART_Init+2
  1141     0026  083E               	movf	UART_Init@baud_rate+3,w
  1142     0027  00C2               	movwf	??_UART_Init+3
  1143     0028  3004               	movlw	4
  1144     0029                     u625:
  1145     0029  1003               	clrc
  1146     002A  0DBF               	rlf	??_UART_Init,f
  1147     002B  0DC0               	rlf	??_UART_Init+1,f
  1148     002C  0DC1               	rlf	??_UART_Init+2,f
  1149     002D  0DC2               	rlf	??_UART_Init+3,f
  1150     002E                     u620:
  1151     002E  3EFF               	addlw	-1
  1152     002F  1D03               	skipz
  1153     0030  2829               	goto	u625
  1154     0031  0842               	movf	??_UART_Init+3,w
  1155     0032  00F5               	movwf	___lldiv@divisor+3
  1156     0033  0841               	movf	??_UART_Init+2,w
  1157     0034  00F4               	movwf	___lldiv@divisor+2
  1158     0035  0840               	movf	??_UART_Init+1,w
  1159     0036  00F3               	movwf	___lldiv@divisor+1
  1160     0037  083F               	movf	??_UART_Init,w
  1161     0038  00F2               	movwf	___lldiv@divisor
  1162     0039  3000               	movlw	0
  1163     003A  00F9               	movwf	___lldiv@dividend+3
  1164     003B  307A               	movlw	122
  1165     003C  00F8               	movwf	___lldiv@dividend+2
  1166     003D  3012               	movlw	18
  1167     003E  00F7               	movwf	___lldiv@dividend+1
  1168     003F  3000               	movlw	0
  1169     0040  00F6               	movwf	___lldiv@dividend
  1170     0041  120A  118A  212F  120A  118A  	fcall	___lldiv
  1171     0046  0872               	movf	?___lldiv,w
  1172     0047  3EFF               	addlw	255
  1173     0048  1283               	bcf	3,5	;RP0=0, select bank0
  1174     0049  1303               	bcf	3,6	;RP1=0, select bank0
  1175     004A  00C3               	movwf	UART_Init@n
  1176     004B  0873               	movf	?___lldiv+1,w
  1177     004C  1803               	skipnc
  1178     004D  3E01               	addlw	1
  1179     004E  3EFF               	addlw	255
  1180     004F  00C4               	movwf	UART_Init@n+1
  1181     0050                     l1244:
  1182                           
  1183                           ;USARTmodl.c: 18:   if (n < 0)
  1184     0050  1FC4               	btfss	UART_Init@n+1,7
  1185     0051  2853               	goto	u631
  1186     0052  2854               	goto	u630
  1187     0053                     u631:
  1188     0053  2856               	goto	l1248
  1189     0054                     u630:
  1190     0054                     l1246:
  1191                           
  1192                           ;USARTmodl.c: 19:     n = 0;
  1193     0054  01C3               	clrf	UART_Init@n
  1194     0055  01C4               	clrf	UART_Init@n+1
  1195     0056                     l1248:
  1196                           
  1197                           ;USARTmodl.c: 21:   if (n > 255)
  1198     0056  0844               	movf	UART_Init@n+1,w
  1199     0057  3A80               	xorlw	128
  1200     0058  00FF               	movwf	btemp+1
  1201     0059  3081               	movlw	129
  1202     005A  027F               	subwf	btemp+1,w
  1203     005B  1D03               	skipz
  1204     005C  285F               	goto	u645
  1205     005D  3000               	movlw	0
  1206     005E  0243               	subwf	UART_Init@n,w
  1207     005F                     u645:
  1208     005F  1C03               	skipc
  1209     0060  2862               	goto	u641
  1210     0061  2863               	goto	u640
  1211     0062                     u641:
  1212     0062  28B1               	goto	l1256
  1213     0063                     u640:
  1214     0063                     l1250:
  1215                           
  1216                           ;USARTmodl.c: 22:   {;USARTmodl.c: 23:     n = ( 8000000 / (64 * baud_rate) ) - 1;
  1217     0063  1283               	bcf	3,5	;RP0=0, select bank0
  1218     0064  1303               	bcf	3,6	;RP1=0, select bank0
  1219     0065  083B               	movf	UART_Init@baud_rate,w
  1220     0066  00BF               	movwf	??_UART_Init
  1221     0067  083C               	movf	UART_Init@baud_rate+1,w
  1222     0068  00C0               	movwf	??_UART_Init+1
  1223     0069  083D               	movf	UART_Init@baud_rate+2,w
  1224     006A  00C1               	movwf	??_UART_Init+2
  1225     006B  083E               	movf	UART_Init@baud_rate+3,w
  1226     006C  00C2               	movwf	??_UART_Init+3
  1227     006D  3006               	movlw	6
  1228     006E                     u655:
  1229     006E  1003               	clrc
  1230     006F  0DBF               	rlf	??_UART_Init,f
  1231     0070  0DC0               	rlf	??_UART_Init+1,f
  1232     0071  0DC1               	rlf	??_UART_Init+2,f
  1233     0072  0DC2               	rlf	??_UART_Init+3,f
  1234     0073                     u650:
  1235     0073  3EFF               	addlw	-1
  1236     0074  1D03               	skipz
  1237     0075  286E               	goto	u655
  1238     0076  0842               	movf	??_UART_Init+3,w
  1239     0077  00F5               	movwf	___lldiv@divisor+3
  1240     0078  0841               	movf	??_UART_Init+2,w
  1241     0079  00F4               	movwf	___lldiv@divisor+2
  1242     007A  0840               	movf	??_UART_Init+1,w
  1243     007B  00F3               	movwf	___lldiv@divisor+1
  1244     007C  083F               	movf	??_UART_Init,w
  1245     007D  00F2               	movwf	___lldiv@divisor
  1246     007E  3000               	movlw	0
  1247     007F  00F9               	movwf	___lldiv@dividend+3
  1248     0080  307A               	movlw	122
  1249     0081  00F8               	movwf	___lldiv@dividend+2
  1250     0082  3012               	movlw	18
  1251     0083  00F7               	movwf	___lldiv@dividend+1
  1252     0084  3000               	movlw	0
  1253     0085  00F6               	movwf	___lldiv@dividend
  1254     0086  120A  118A  212F  120A  118A  	fcall	___lldiv
  1255     008B  0872               	movf	?___lldiv,w
  1256     008C  3EFF               	addlw	255
  1257     008D  1283               	bcf	3,5	;RP0=0, select bank0
  1258     008E  1303               	bcf	3,6	;RP1=0, select bank0
  1259     008F  00C3               	movwf	UART_Init@n
  1260     0090  0873               	movf	?___lldiv+1,w
  1261     0091  1803               	skipnc
  1262     0092  3E01               	addlw	1
  1263     0093  3EFF               	addlw	255
  1264     0094  00C4               	movwf	UART_Init@n+1
  1265     0095                     l1252:
  1266                           
  1267                           ;USARTmodl.c: 24:     if (n > 255)
  1268     0095  0844               	movf	UART_Init@n+1,w
  1269     0096  3A80               	xorlw	128
  1270     0097  00FF               	movwf	btemp+1
  1271     0098  3081               	movlw	129
  1272     0099  027F               	subwf	btemp+1,w
  1273     009A  1D03               	skipz
  1274     009B  289E               	goto	u665
  1275     009C  3000               	movlw	0
  1276     009D  0243               	subwf	UART_Init@n,w
  1277     009E                     u665:
  1278     009E  1C03               	skipc
  1279     009F  28A1               	goto	u661
  1280     00A0  28A2               	goto	u660
  1281     00A1                     u661:
  1282     00A1  28A8               	goto	l202
  1283     00A2                     u660:
  1284     00A2                     l1254:
  1285                           
  1286                           ;USARTmodl.c: 25:       n = 255;
  1287     00A2  30FF               	movlw	255
  1288     00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1289     00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1290     00A5  00C3               	movwf	UART_Init@n
  1291     00A6  3000               	movlw	0
  1292     00A7  00C4               	movwf	UART_Init@n+1
  1293     00A8                     l202:
  1294                           
  1295                           ;USARTmodl.c: 26:     SPBRG = n;
  1296     00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1297     00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1298     00AA  0843               	movf	UART_Init@n,w
  1299     00AB  1683               	bsf	3,5	;RP0=1, select bank1
  1300     00AC  1303               	bcf	3,6	;RP1=0, select bank1
  1301     00AD  0099               	movwf	25	;volatile
  1302                           
  1303                           ;USARTmodl.c: 27:     TXSTA = 0x20;
  1304     00AE  3020               	movlw	32
  1305     00AF  0098               	movwf	24	;volatile
  1306                           
  1307                           ;USARTmodl.c: 28:   }
  1308     00B0  28B9               	goto	l203
  1309     00B1                     l1256:
  1310                           
  1311                           ;USARTmodl.c: 31:   {;USARTmodl.c: 32:     SPBRG = n;
  1312     00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1313     00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1314     00B3  0843               	movf	UART_Init@n,w
  1315     00B4  1683               	bsf	3,5	;RP0=1, select bank1
  1316     00B5  1303               	bcf	3,6	;RP1=0, select bank1
  1317     00B6  0099               	movwf	25	;volatile
  1318                           
  1319                           ;USARTmodl.c: 33:     TXSTA = 0x24;
  1320     00B7  3024               	movlw	36
  1321     00B8  0098               	movwf	24	;volatile
  1322     00B9                     l203:	
  1323                           ;USARTmodl.c: 34:   }
  1324                           
  1325                           
  1326                           ;USARTmodl.c: 36:   RCSTA = 0x90;
  1327     00B9  3090               	movlw	144
  1328     00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1329     00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1330     00BC  0098               	movwf	24	;volatile
  1331     00BD                     l204:
  1332     00BD  0008               	return
  1333     00BE                     __end_of_UART_Init:
  1334                           
  1335                           	psect	text5
  1336     012F                     __ptext5:	
  1337 ;; *************** function ___lldiv *****************
  1338 ;; Defined at:
  1339 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;  divisor         4    2[COMMON] unsigned long 
  1342 ;;  dividend        4    6[COMMON] unsigned long 
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  quotient        4    1[BANK0 ] unsigned long 
  1345 ;;  counter         1    5[BANK0 ] unsigned char 
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  4    2[COMMON] unsigned long 
  1348 ;; Registers used:
  1349 ;;		wreg, status,2, status,0, btemp+1
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1355 ;;      Params:         8       0       0       0       0
  1356 ;;      Locals:         0       5       0       0       0
  1357 ;;      Temps:          0       1       0       0       0
  1358 ;;      Totals:         8       6       0       0       0
  1359 ;;Total ram usage:       14 bytes
  1360 ;; Hardware stack levels used: 1
  1361 ;; Hardware stack levels required when called: 1
  1362 ;; This function calls:
  1363 ;;		Nothing
  1364 ;; This function is called by:
  1365 ;;		_UART_Init
  1366 ;;		_I2C_Master_Init
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370     012F                     ___lldiv:	
  1371                           ;psect for function ___lldiv
  1372                           
  1373     012F                     l1210:	
  1374                           ;incstack = 0
  1375                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1376                           
  1377     012F  3000               	movlw	0
  1378     0130  1283               	bcf	3,5	;RP0=0, select bank0
  1379     0131  1303               	bcf	3,6	;RP1=0, select bank0
  1380     0132  00B9               	movwf	___lldiv@quotient+3
  1381     0133  3000               	movlw	0
  1382     0134  00B8               	movwf	___lldiv@quotient+2
  1383     0135  3000               	movlw	0
  1384     0136  00B7               	movwf	___lldiv@quotient+1
  1385     0137  3000               	movlw	0
  1386     0138  00B6               	movwf	___lldiv@quotient
  1387     0139  0875               	movf	___lldiv@divisor+3,w
  1388     013A  0474               	iorwf	___lldiv@divisor+2,w
  1389     013B  0473               	iorwf	___lldiv@divisor+1,w
  1390     013C  0472               	iorwf	___lldiv@divisor,w
  1391     013D  1903               	skipnz
  1392     013E  2940               	goto	u551
  1393     013F  2941               	goto	u550
  1394     0140                     u551:
  1395     0140  298E               	goto	l1232
  1396     0141                     u550:
  1397     0141                     l1212:
  1398     0141  01BA               	clrf	___lldiv@counter
  1399     0142  0ABA               	incf	___lldiv@counter,f
  1400     0143  2951               	goto	l1218
  1401     0144                     l1214:
  1402     0144  3001               	movlw	1
  1403     0145  00B5               	movwf	??___lldiv
  1404     0146                     u565:
  1405     0146  1003               	clrc
  1406     0147  0DF2               	rlf	___lldiv@divisor,f
  1407     0148  0DF3               	rlf	___lldiv@divisor+1,f
  1408     0149  0DF4               	rlf	___lldiv@divisor+2,f
  1409     014A  0DF5               	rlf	___lldiv@divisor+3,f
  1410     014B  0BB5               	decfsz	??___lldiv,f
  1411     014C  2946               	goto	u565
  1412     014D                     l1216:
  1413     014D  3001               	movlw	1
  1414     014E  00FF               	movwf	btemp+1
  1415     014F  087F               	movf	btemp+1,w
  1416     0150  07BA               	addwf	___lldiv@counter,f
  1417     0151                     l1218:
  1418     0151  1FF5               	btfss	___lldiv@divisor+3,7
  1419     0152  2954               	goto	u571
  1420     0153  2955               	goto	u570
  1421     0154                     u571:
  1422     0154  2944               	goto	l1214
  1423     0155                     u570:
  1424     0155                     l1220:
  1425     0155  3001               	movlw	1
  1426     0156  00B5               	movwf	??___lldiv
  1427     0157                     u585:
  1428     0157  1003               	clrc
  1429     0158  0DB6               	rlf	___lldiv@quotient,f
  1430     0159  0DB7               	rlf	___lldiv@quotient+1,f
  1431     015A  0DB8               	rlf	___lldiv@quotient+2,f
  1432     015B  0DB9               	rlf	___lldiv@quotient+3,f
  1433     015C  0BB5               	decfsz	??___lldiv,f
  1434     015D  2957               	goto	u585
  1435     015E                     l1222:
  1436     015E  0875               	movf	___lldiv@divisor+3,w
  1437     015F  0279               	subwf	___lldiv@dividend+3,w
  1438     0160  1D03               	skipz
  1439     0161  296C               	goto	u595
  1440     0162  0874               	movf	___lldiv@divisor+2,w
  1441     0163  0278               	subwf	___lldiv@dividend+2,w
  1442     0164  1D03               	skipz
  1443     0165  296C               	goto	u595
  1444     0166  0873               	movf	___lldiv@divisor+1,w
  1445     0167  0277               	subwf	___lldiv@dividend+1,w
  1446     0168  1D03               	skipz
  1447     0169  296C               	goto	u595
  1448     016A  0872               	movf	___lldiv@divisor,w
  1449     016B  0276               	subwf	___lldiv@dividend,w
  1450     016C                     u595:
  1451     016C  1C03               	skipc
  1452     016D  296F               	goto	u591
  1453     016E  2970               	goto	u590
  1454     016F                     u591:
  1455     016F  297F               	goto	l1228
  1456     0170                     u590:
  1457     0170                     l1224:
  1458     0170  0872               	movf	___lldiv@divisor,w
  1459     0171  02F6               	subwf	___lldiv@dividend,f
  1460     0172  0873               	movf	___lldiv@divisor+1,w
  1461     0173  1C03               	skipc
  1462     0174  0F73               	incfsz	___lldiv@divisor+1,w
  1463     0175  02F7               	subwf	___lldiv@dividend+1,f
  1464     0176  0874               	movf	___lldiv@divisor+2,w
  1465     0177  1C03               	skipc
  1466     0178  0F74               	incfsz	___lldiv@divisor+2,w
  1467     0179  02F8               	subwf	___lldiv@dividend+2,f
  1468     017A  0875               	movf	___lldiv@divisor+3,w
  1469     017B  1C03               	skipc
  1470     017C  0F75               	incfsz	___lldiv@divisor+3,w
  1471     017D  02F9               	subwf	___lldiv@dividend+3,f
  1472     017E                     l1226:
  1473     017E  1436               	bsf	___lldiv@quotient,0
  1474     017F                     l1228:
  1475     017F  3001               	movlw	1
  1476     0180                     u605:
  1477     0180  1003               	clrc
  1478     0181  0CF5               	rrf	___lldiv@divisor+3,f
  1479     0182  0CF4               	rrf	___lldiv@divisor+2,f
  1480     0183  0CF3               	rrf	___lldiv@divisor+1,f
  1481     0184  0CF2               	rrf	___lldiv@divisor,f
  1482     0185  3EFF               	addlw	-1
  1483     0186  1D03               	skipz
  1484     0187  2980               	goto	u605
  1485     0188                     l1230:
  1486     0188  3001               	movlw	1
  1487     0189  02BA               	subwf	___lldiv@counter,f
  1488     018A  1D03               	btfss	3,2
  1489     018B  298D               	goto	u611
  1490     018C  298E               	goto	u610
  1491     018D                     u611:
  1492     018D  2955               	goto	l1220
  1493     018E                     u610:
  1494     018E                     l1232:
  1495     018E  0839               	movf	___lldiv@quotient+3,w
  1496     018F  00F5               	movwf	?___lldiv+3
  1497     0190  0838               	movf	___lldiv@quotient+2,w
  1498     0191  00F4               	movwf	?___lldiv+2
  1499     0192  0837               	movf	___lldiv@quotient+1,w
  1500     0193  00F3               	movwf	?___lldiv+1
  1501     0194  0836               	movf	___lldiv@quotient,w
  1502     0195  00F2               	movwf	?___lldiv
  1503     0196                     l352:
  1504     0196  0008               	return
  1505     0197                     __end_of___lldiv:
  1506                           
  1507                           	psect	text6
  1508     01E4                     __ptext6:	
  1509 ;; *************** function _UART_GetC *****************
  1510 ;; Defined at:
  1511 ;;		line 46 in file "USARTmodl.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;		None
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;		None
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  1    wreg      unsigned char 
  1518 ;; Registers used:
  1519 ;;		wreg
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1525 ;;      Params:         0       0       0       0       0
  1526 ;;      Locals:         0       0       0       0       0
  1527 ;;      Temps:          0       0       0       0       0
  1528 ;;      Totals:         0       0       0       0       0
  1529 ;;Total ram usage:        0 bytes
  1530 ;; Hardware stack levels used: 1
  1531 ;; Hardware stack levels required when called: 1
  1532 ;; This function calls:
  1533 ;;		Nothing
  1534 ;; This function is called by:
  1535 ;;		_main
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539     01E4                     _UART_GetC:	
  1540                           ;psect for function _UART_GetC
  1541                           
  1542     01E4                     l1274:	
  1543                           ;incstack = 0
  1544                           ; Regs used in _UART_GetC: [wreg]
  1545                           
  1546     01E4                     l214:	
  1547                           ;USARTmodl.c: 48:   while (RCIF == 0) ;
  1548                           
  1549     01E4  1283               	bcf	3,5	;RP0=0, select bank0
  1550     01E5  1303               	bcf	3,6	;RP1=0, select bank0
  1551     01E6  1E8C               	btfss	12,5	;volatile
  1552     01E7  29E9               	goto	u691
  1553     01E8  29EA               	goto	u690
  1554     01E9                     u691:
  1555     01E9  29E4               	goto	l214
  1556     01EA                     u690:
  1557     01EA                     l216:
  1558                           
  1559                           ;USARTmodl.c: 49:   if (OERR)
  1560     01EA  1C98               	btfss	24,1	;volatile
  1561     01EB  29ED               	goto	u701
  1562     01EC  29EE               	goto	u700
  1563     01ED                     u701:
  1564     01ED  29F0               	goto	l1278
  1565     01EE                     u700:
  1566     01EE                     l1276:
  1567                           
  1568                           ;USARTmodl.c: 50:   {;USARTmodl.c: 51:     CREN = 0;
  1569     01EE  1218               	bcf	24,4	;volatile
  1570                           
  1571                           ;USARTmodl.c: 52:     CREN = 1;
  1572     01EF  1618               	bsf	24,4	;volatile
  1573     01F0                     l1278:
  1574                           
  1575                           ;USARTmodl.c: 54:   return RCREG;
  1576     01F0  081A               	movf	26,w	;volatile
  1577     01F1                     l218:
  1578     01F1  0008               	return
  1579     01F2                     __end_of_UART_GetC:
  1580                           
  1581                           	psect	text7
  1582     020B                     __ptext7:	
  1583 ;; *************** function _UART_Data_Ready *****************
  1584 ;; Defined at:
  1585 ;;		line 41 in file "USARTmodl.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;		None
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;		None
  1590 ;; Return value:  Size  Location     Type
  1591 ;;		None               void
  1592 ;; Registers used:
  1593 ;;		status,2, status,0
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1599 ;;      Params:         0       0       0       0       0
  1600 ;;      Locals:         0       0       0       0       0
  1601 ;;      Temps:          0       0       0       0       0
  1602 ;;      Totals:         0       0       0       0       0
  1603 ;;Total ram usage:        0 bytes
  1604 ;; Hardware stack levels used: 1
  1605 ;; Hardware stack levels required when called: 1
  1606 ;; This function calls:
  1607 ;;		Nothing
  1608 ;; This function is called by:
  1609 ;;		_main
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613     020B                     _UART_Data_Ready:	
  1614                           ;psect for function _UART_Data_Ready
  1615                           
  1616     020B                     l1266:	
  1617                           ;incstack = 0
  1618                           ; Regs used in _UART_Data_Ready: [status]
  1619                           
  1620                           
  1621                           ;USARTmodl.c: 43:   return RCIF;
  1622     020B  1283               	bcf	3,5	;RP0=0, select bank0
  1623     020C  1303               	bcf	3,6	;RP1=0, select bank0
  1624     020D  1A8C               	btfsc	12,5	;volatile
  1625     020E  2A10               	goto	u681
  1626     020F  2A11               	goto	u680
  1627     0210                     u681:
  1628     0210  2A13               	goto	l1270
  1629     0211                     u680:
  1630     0211                     l1268:
  1631     0211  1003               	clrc
  1632     0212  2A14               	goto	l211
  1633     0213                     l1270:
  1634     0213  1403               	setc
  1635     0214                     l211:
  1636     0214  0008               	return
  1637     0215                     __end_of_UART_Data_Ready:
  1638                           
  1639                           	psect	text8
  1640     021D                     __ptext8:	
  1641 ;; *************** function _isr *****************
  1642 ;; Defined at:
  1643 ;;		line 34 in file "Masterpic.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;		None
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;		None
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  1    wreg      void 
  1650 ;; Registers used:
  1651 ;;		None
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1657 ;;      Params:         0       0       0       0       0
  1658 ;;      Locals:         0       0       0       0       0
  1659 ;;      Temps:          2       0       0       0       0
  1660 ;;      Totals:         2       0       0       0       0
  1661 ;;Total ram usage:        2 bytes
  1662 ;; Hardware stack levels used: 1
  1663 ;; This function calls:
  1664 ;;		Nothing
  1665 ;; This function is called by:
  1666 ;;		Interrupt level 1
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670     021D                     _isr:	
  1671                           ;psect for function _isr
  1672                           
  1673     021D                     i1l942:
  1674                           
  1675                           ;Masterpic.c: 36:     __nop();
  1676     021D  0000               	nop
  1677     021E                     i1l49:
  1678     021E  0871               	movf	??_isr+1,w
  1679     021F  008A               	movwf	10
  1680     0220  0E70               	swapf	??_isr,w
  1681     0221  0083               	movwf	3
  1682     0222  0EFE               	swapf	btemp,f
  1683     0223  0E7E               	swapf	btemp,w
  1684     0224  0009               	retfie
  1685     0225                     __end_of_isr:
  1686     007E                     btemp	set	126	;btemp
  1687     007E                     wtemp0	set	126
  1688                           
  1689                           	psect	intentry
  1690     0004                     __pintentry:	
  1691                           ;incstack = 0
  1692                           ; Regs used in _isr: []
  1693                           
  1694     0004                     interrupt_function:
  1695     007E                     saved_w	set	btemp
  1696     0004  00FE               	movwf	btemp
  1697     0005  0E03               	swapf	3,w
  1698     0006  00F0               	movwf	??_isr
  1699     0007  080A               	movf	10,w
  1700     0008  00F1               	movwf	??_isr+1
  1701     0009  120A  118A  2A1D   	ljmp	_isr
  1702                           
  1703                           	psect	idloc
  1704                           
  1705                           ;Config register IDLOC0 @ 0x2000
  1706                           ;	unspecified, using default values
  1707     2000                     	org	8192
  1708     2000  3FFF               	dw	16383
  1709                           
  1710                           ;Config register IDLOC1 @ 0x2001
  1711                           ;	unspecified, using default values
  1712     2001                     	org	8193
  1713     2001  3FFF               	dw	16383
  1714                           
  1715                           ;Config register IDLOC2 @ 0x2002
  1716                           ;	unspecified, using default values
  1717     2002                     	org	8194
  1718     2002  3FFF               	dw	16383
  1719                           
  1720                           ;Config register IDLOC3 @ 0x2003
  1721                           ;	unspecified, using default values
  1722     2003                     	org	8195
  1723     2003  3FFF               	dw	16383
  1724                           
  1725                           	psect	config
  1726                           
  1727                           ;Config register CONFIG1 @ 0x2007
  1728                           ;	Oscillator Selection bits
  1729                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1730                           ;	Watchdog Timer Enable bit
  1731                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1732                           ;	Power-up Timer Enable bit
  1733                           ;	PWRTE = OFF, PWRT disabled
  1734                           ;	RE3/MCLR pin function select bit
  1735                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1736                           ;	Code Protection bit
  1737                           ;	CP = OFF, Program memory code protection is disabled
  1738                           ;	Data Code Protection bit
  1739                           ;	CPD = OFF, Data memory code protection is disabled
  1740                           ;	Brown Out Reset Selection bits
  1741                           ;	BOREN = OFF, BOR disabled
  1742                           ;	Internal External Switchover bit
  1743                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1744                           ;	Fail-Safe Clock Monitor Enabled bit
  1745                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1746                           ;	Low Voltage Programming Enable bit
  1747                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1748                           ;	In-Circuit Debugger Mode bit
  1749                           ;	DEBUG = 0x1, unprogrammed default
  1750     2007                     	org	8199
  1751     2007  38D5               	dw	14549
  1752                           
  1753                           ;Config register CONFIG2 @ 0x2008
  1754                           ;	Brown-out Reset Selection bit
  1755                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1756                           ;	Flash Program Memory Self Write Enable bits
  1757                           ;	WRT = OFF, Write protection off
  1758     2008                     	org	8200
  1759     2008  3FFF               	dw	16383

Data Sizes:
    Strings     3
    Constant    15
    Data        0
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     20      41
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_Print@data	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_1(CODE[3]), datos(BANK0[20]), 


Critical Paths under _main in COMMON

    _UART_Print->_UART_PutC
    _UART_Init->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    1506
                                             16 BANK0      4     4      0
                    _UART_Data_Ready
                          _UART_GetC
                          _UART_Init
                         _UART_Print
                          _UART_PutC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Print                                           3     1      2     341
                                              3 COMMON     3     1      2
                          _UART_PutC
 ---------------------------------------------------------------------------------
 (1) _UART_PutC                                            1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           10     6      4    1100
                                              6 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     781
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _UART_GetC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Data_Ready
   _UART_GetC
   _UART_Init
     ___lldiv
   _UART_Print
     _UART_PutC
   _UART_PutC
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      35       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      29       5       51.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      35      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Aug 22 00:01:16 2023

                      pc 0002                       l67 01FE                       fsr 0004  
                    l202 00A8                      l211 0214                      l203 00B9  
                    l204 00BD                      l221 0200                      l214 01E4  
                    l230 01C1                      l216 01EA                      l224 020A  
                    l218 01F1                      l352 0196                      _GIE 005F  
                    _RD3 0043                      _RD4 0044                      _RD5 0045  
                    _RD6 0046                      _RD7 0047                      u610 018E  
                    u611 018D                      u700 01EE                      u620 002E  
                    u540 0206                      u701 01ED                      u605 0180  
                    u541 0205                      u550 0141                      u630 0054  
                    u710 011D                      u551 0140                      u631 0053  
                    u711 011C                      u640 0063                      u641 0062  
                    u625 0029                      u570 0155                      u650 0073  
                    u571 0154                      u660 00A2                      u565 0146  
                    u661 00A1                      u645 005F                      u590 0170  
                    u670 01C1                      u591 016F                      u655 006E  
                    u671 01C0                      u680 0211                      u681 0210  
                    u585 0157                      u665 009E                      u737 00DE  
                    u690 01EA                      u691 01E9                      u595 016C  
                    u747 010D                      _isr 021D                      fsr0 0004  
                    indf 0000                     l1210 012F                     l1220 0155  
                   l1212 0141                     l1300 00F1                     l1230 0188  
                   l1222 015E                     l1214 0144                     l1206 0200  
                   l1310 011D                     l1302 00F3                     l1224 0170  
                   l1216 014D                     l1232 018E                     l1208 0206  
                   l1240 01FD                     l1312 0125                     l1304 00FC  
                   l1226 017E                     l1218 0151                     l1250 0063  
                   l1242 001E                     l1306 0105                     l1228 017F  
                   l1252 0095                     l1244 0050                     l1260 0199  
                   l1236 01F2                     l1308 0114                     l1270 0213  
                   l1254 00A2                     l1246 0054                     l1262 01AA  
                   l1238 01FC                     l1256 00B1                     l1248 0056  
                   l1264 01AE                     l1266 020B                     l1274 01E4  
                   l1258 0197                     l1290 00E5                     l1282 00BE  
                   l1268 0211                     l1276 01EE                     l1292 00E7  
                   l1284 00C3                     l1278 01F0                     l1294 00E9  
                   l1286 00C7                     l1296 00ED                     l1288 00D6  
                   l1298 00EF                     ?_isr 0070                     STR_1 01E1  
                   _CREN 00C4                     _PEIE 005E                     _RCIF 0065  
                   i1l49 021E                     _OERR 00C1                     _RPML 007A  
                   _RPMR 007B                     _TRMT 04C1                     _main 00BE  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_main 0070                    _ANSEL 0188          __end_of___lldiv 0197  
                  i1l942 021D                    _RCREG 001A                    _RCSTA 0018  
                  _SPBRG 0099                    _PORTD 0008                    _TRISD 0088  
                  _SSPIE 0463                    _SSPIF 0063                    _TXREG 0019  
                  _TXSTA 0098              ?_UART_Print 0073                    _datos 0021  
        __end_of_message 01E1                    _setup 01F2                    main@c 0048  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 012F                   ??_main 0045  
                 ?_setup 0070                   _ANSELH 0189                   _OSCCON 008F  
                 _SSPADD 0093                   _TRISC3 043B                   _TRISC4 043C  
                 _SSPCON 0014                   _SSPBUF 0013        __end_of_UART_GetC 01F2  
      __end_of_UART_Init 00BE        __end_of_UART_PutC 020B                ??___lldiv 0035  
                 saved_w 007E  __end_of__initialization 001A           __pcstackCOMMON 0070  
          __end_of_setup 01FF                  ??_setup 0072               __pbssBANK0 0020  
             __pmaintext 00BE               __pintentry 0004             ??_UART_Print 0075  
                _SSPCON2 0091                  _SSPSTAT 0094               __stringtab 01C2  
     __end_of_UART_Print 01C2                  ___lldiv 012F                  __ptext1 01F2  
                __ptext2 0197                  __ptext3 01FF                  __ptext4 001E  
                __ptext5 012F                  __ptext6 01E4                  __ptext7 020B  
                __ptext8 021D                  _message 01D2              UART_Print@i 0075  
         UART_Print@data 0073                  clrloop0 0216     end_of_initialization 001A  
        ___lldiv@divisor 0072          ___lldiv@counter 003A                _RCSTAbits 0018  
      ??_UART_Data_Ready 0072                _UART_GetC 01E4                _UART_Init 001E  
              _UART_PutC 01FF                _PORTDbits 0008       UART_Init@baud_rate 003B  
              _TRISCbits 0087               ?_UART_GetC 0070               ?_UART_Init 003B  
             ?_UART_PutC 0070      start_initialization 000F              __end_of_isr 0225  
            __pbssCOMMON 007A                ___latbits 0002            __pcstackBANK0 0035  
              _aceleracX 0020                 ?___lldiv 0072              ??_UART_GetC 0072  
            ??_UART_Init 003F              ??_UART_PutC 0072                __pstrings 01C2  
          UART_PutC@data 0072               UART_Init@n 0043        interrupt_function 0004  
        _UART_Data_Ready 020B                clear_ram0 0215                 _PIR1bits 000C  
            __stringbase 01D1       __end_of__stringtab 01D2  __end_of_UART_Data_Ready 0215  
             _INTCONbits 000B                 intlevel1 0000         ___lldiv@dividend 0076  
              stringcode 01CC         ___lldiv@quotient 0036                 stringdir 01CC  
               stringtab 01C2               _UART_Print 0197              _SSPCON2bits 0091  
       ?_UART_Data_Ready 0070  
