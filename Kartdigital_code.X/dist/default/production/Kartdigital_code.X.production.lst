

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Aug 23 14:34:23 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35     0000                     
    36                           ; Version 2.40
    37                           ; Generated 17/11/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71     0000                     	;# 
    72     0001                     	;# 
    73     0002                     	;# 
    74     0003                     	;# 
    75     0004                     	;# 
    76     0005                     	;# 
    77     0006                     	;# 
    78     0007                     	;# 
    79     0008                     	;# 
    80     0009                     	;# 
    81     000A                     	;# 
    82     000B                     	;# 
    83     000C                     	;# 
    84     000D                     	;# 
    85     000E                     	;# 
    86     000E                     	;# 
    87     000F                     	;# 
    88     0010                     	;# 
    89     0011                     	;# 
    90     0012                     	;# 
    91     0013                     	;# 
    92     0014                     	;# 
    93     0015                     	;# 
    94     0015                     	;# 
    95     0016                     	;# 
    96     0017                     	;# 
    97     0018                     	;# 
    98     0019                     	;# 
    99     001A                     	;# 
   100     001B                     	;# 
   101     001B                     	;# 
   102     001C                     	;# 
   103     001D                     	;# 
   104     001E                     	;# 
   105     001F                     	;# 
   106     0081                     	;# 
   107     0085                     	;# 
   108     0086                     	;# 
   109     0087                     	;# 
   110     0088                     	;# 
   111     0089                     	;# 
   112     008C                     	;# 
   113     008D                     	;# 
   114     008E                     	;# 
   115     008F                     	;# 
   116     0090                     	;# 
   117     0091                     	;# 
   118     0092                     	;# 
   119     0093                     	;# 
   120     0093                     	;# 
   121     0093                     	;# 
   122     0094                     	;# 
   123     0095                     	;# 
   124     0096                     	;# 
   125     0097                     	;# 
   126     0098                     	;# 
   127     0099                     	;# 
   128     009A                     	;# 
   129     009B                     	;# 
   130     009C                     	;# 
   131     009D                     	;# 
   132     009E                     	;# 
   133     009F                     	;# 
   134     0105                     	;# 
   135     0107                     	;# 
   136     0108                     	;# 
   137     0109                     	;# 
   138     010C                     	;# 
   139     010C                     	;# 
   140     010D                     	;# 
   141     010E                     	;# 
   142     010F                     	;# 
   143     0185                     	;# 
   144     0187                     	;# 
   145     0188                     	;# 
   146     0189                     	;# 
   147     018C                     	;# 
   148     018D                     	;# 
   149     0000                     	;# 
   150     0001                     	;# 
   151     0002                     	;# 
   152     0003                     	;# 
   153     0004                     	;# 
   154     0005                     	;# 
   155     0006                     	;# 
   156     0007                     	;# 
   157     0008                     	;# 
   158     0009                     	;# 
   159     000A                     	;# 
   160     000B                     	;# 
   161     000C                     	;# 
   162     000D                     	;# 
   163     000E                     	;# 
   164     000E                     	;# 
   165     000F                     	;# 
   166     0010                     	;# 
   167     0011                     	;# 
   168     0012                     	;# 
   169     0013                     	;# 
   170     0014                     	;# 
   171     0015                     	;# 
   172     0015                     	;# 
   173     0016                     	;# 
   174     0017                     	;# 
   175     0018                     	;# 
   176     0019                     	;# 
   177     001A                     	;# 
   178     001B                     	;# 
   179     001B                     	;# 
   180     001C                     	;# 
   181     001D                     	;# 
   182     001E                     	;# 
   183     001F                     	;# 
   184     0081                     	;# 
   185     0085                     	;# 
   186     0086                     	;# 
   187     0087                     	;# 
   188     0088                     	;# 
   189     0089                     	;# 
   190     008C                     	;# 
   191     008D                     	;# 
   192     008E                     	;# 
   193     008F                     	;# 
   194     0090                     	;# 
   195     0091                     	;# 
   196     0092                     	;# 
   197     0093                     	;# 
   198     0093                     	;# 
   199     0093                     	;# 
   200     0094                     	;# 
   201     0095                     	;# 
   202     0096                     	;# 
   203     0097                     	;# 
   204     0098                     	;# 
   205     0099                     	;# 
   206     009A                     	;# 
   207     009B                     	;# 
   208     009C                     	;# 
   209     009D                     	;# 
   210     009E                     	;# 
   211     009F                     	;# 
   212     0105                     	;# 
   213     0107                     	;# 
   214     0108                     	;# 
   215     0109                     	;# 
   216     010C                     	;# 
   217     010C                     	;# 
   218     010D                     	;# 
   219     010E                     	;# 
   220     010F                     	;# 
   221     0185                     	;# 
   222     0187                     	;# 
   223     0188                     	;# 
   224     0189                     	;# 
   225     018C                     	;# 
   226     018D                     	;# 
   227     0000                     	;# 
   228     0001                     	;# 
   229     0002                     	;# 
   230     0003                     	;# 
   231     0004                     	;# 
   232     0005                     	;# 
   233     0006                     	;# 
   234     0007                     	;# 
   235     0008                     	;# 
   236     0009                     	;# 
   237     000A                     	;# 
   238     000B                     	;# 
   239     000C                     	;# 
   240     000D                     	;# 
   241     000E                     	;# 
   242     000E                     	;# 
   243     000F                     	;# 
   244     0010                     	;# 
   245     0011                     	;# 
   246     0012                     	;# 
   247     0013                     	;# 
   248     0014                     	;# 
   249     0015                     	;# 
   250     0015                     	;# 
   251     0016                     	;# 
   252     0017                     	;# 
   253     0018                     	;# 
   254     0019                     	;# 
   255     001A                     	;# 
   256     001B                     	;# 
   257     001B                     	;# 
   258     001C                     	;# 
   259     001D                     	;# 
   260     001E                     	;# 
   261     001F                     	;# 
   262     0081                     	;# 
   263     0085                     	;# 
   264     0086                     	;# 
   265     0087                     	;# 
   266     0088                     	;# 
   267     0089                     	;# 
   268     008C                     	;# 
   269     008D                     	;# 
   270     008E                     	;# 
   271     008F                     	;# 
   272     0090                     	;# 
   273     0091                     	;# 
   274     0092                     	;# 
   275     0093                     	;# 
   276     0093                     	;# 
   277     0093                     	;# 
   278     0094                     	;# 
   279     0095                     	;# 
   280     0096                     	;# 
   281     0097                     	;# 
   282     0098                     	;# 
   283     0099                     	;# 
   284     009A                     	;# 
   285     009B                     	;# 
   286     009C                     	;# 
   287     009D                     	;# 
   288     009E                     	;# 
   289     009F                     	;# 
   290     0105                     	;# 
   291     0107                     	;# 
   292     0108                     	;# 
   293     0109                     	;# 
   294     010C                     	;# 
   295     010C                     	;# 
   296     010D                     	;# 
   297     010E                     	;# 
   298     010F                     	;# 
   299     0185                     	;# 
   300     0187                     	;# 
   301     0188                     	;# 
   302     0189                     	;# 
   303     018C                     	;# 
   304     018D                     	;# 
   305     0000                     	;# 
   306     0001                     	;# 
   307     0002                     	;# 
   308     0003                     	;# 
   309     0004                     	;# 
   310     0005                     	;# 
   311     0006                     	;# 
   312     0007                     	;# 
   313     0008                     	;# 
   314     0009                     	;# 
   315     000A                     	;# 
   316     000B                     	;# 
   317     000C                     	;# 
   318     000D                     	;# 
   319     000E                     	;# 
   320     000E                     	;# 
   321     000F                     	;# 
   322     0010                     	;# 
   323     0011                     	;# 
   324     0012                     	;# 
   325     0013                     	;# 
   326     0014                     	;# 
   327     0015                     	;# 
   328     0015                     	;# 
   329     0016                     	;# 
   330     0017                     	;# 
   331     0018                     	;# 
   332     0019                     	;# 
   333     001A                     	;# 
   334     001B                     	;# 
   335     001B                     	;# 
   336     001C                     	;# 
   337     001D                     	;# 
   338     001E                     	;# 
   339     001F                     	;# 
   340     0081                     	;# 
   341     0085                     	;# 
   342     0086                     	;# 
   343     0087                     	;# 
   344     0088                     	;# 
   345     0089                     	;# 
   346     008C                     	;# 
   347     008D                     	;# 
   348     008E                     	;# 
   349     008F                     	;# 
   350     0090                     	;# 
   351     0091                     	;# 
   352     0092                     	;# 
   353     0093                     	;# 
   354     0093                     	;# 
   355     0093                     	;# 
   356     0094                     	;# 
   357     0095                     	;# 
   358     0096                     	;# 
   359     0097                     	;# 
   360     0098                     	;# 
   361     0099                     	;# 
   362     009A                     	;# 
   363     009B                     	;# 
   364     009C                     	;# 
   365     009D                     	;# 
   366     009E                     	;# 
   367     009F                     	;# 
   368     0105                     	;# 
   369     0107                     	;# 
   370     0108                     	;# 
   371     0109                     	;# 
   372     010C                     	;# 
   373     010C                     	;# 
   374     010D                     	;# 
   375     010E                     	;# 
   376     010F                     	;# 
   377     0185                     	;# 
   378     0187                     	;# 
   379     0188                     	;# 
   380     0189                     	;# 
   381     018C                     	;# 
   382     018D                     	;# 
   383     0000                     	;# 
   384     0001                     	;# 
   385     0002                     	;# 
   386     0003                     	;# 
   387     0004                     	;# 
   388     0005                     	;# 
   389     0006                     	;# 
   390     0007                     	;# 
   391     0008                     	;# 
   392     0009                     	;# 
   393     000A                     	;# 
   394     000B                     	;# 
   395     000C                     	;# 
   396     000D                     	;# 
   397     000E                     	;# 
   398     000E                     	;# 
   399     000F                     	;# 
   400     0010                     	;# 
   401     0011                     	;# 
   402     0012                     	;# 
   403     0013                     	;# 
   404     0014                     	;# 
   405     0015                     	;# 
   406     0015                     	;# 
   407     0016                     	;# 
   408     0017                     	;# 
   409     0018                     	;# 
   410     0019                     	;# 
   411     001A                     	;# 
   412     001B                     	;# 
   413     001B                     	;# 
   414     001C                     	;# 
   415     001D                     	;# 
   416     001E                     	;# 
   417     001F                     	;# 
   418     0081                     	;# 
   419     0085                     	;# 
   420     0086                     	;# 
   421     0087                     	;# 
   422     0088                     	;# 
   423     0089                     	;# 
   424     008C                     	;# 
   425     008D                     	;# 
   426     008E                     	;# 
   427     008F                     	;# 
   428     0090                     	;# 
   429     0091                     	;# 
   430     0092                     	;# 
   431     0093                     	;# 
   432     0093                     	;# 
   433     0093                     	;# 
   434     0094                     	;# 
   435     0095                     	;# 
   436     0096                     	;# 
   437     0097                     	;# 
   438     0098                     	;# 
   439     0099                     	;# 
   440     009A                     	;# 
   441     009B                     	;# 
   442     009C                     	;# 
   443     009D                     	;# 
   444     009E                     	;# 
   445     009F                     	;# 
   446     0105                     	;# 
   447     0107                     	;# 
   448     0108                     	;# 
   449     0109                     	;# 
   450     010C                     	;# 
   451     010C                     	;# 
   452     010D                     	;# 
   453     010E                     	;# 
   454     010F                     	;# 
   455     0185                     	;# 
   456     0187                     	;# 
   457     0188                     	;# 
   458     0189                     	;# 
   459     018C                     	;# 
   460     018D                     	;# 
   461                           
   462                           	psect	strings
   463     0003                     __pstrings:
   464     0003                     stringtab:
   465     0003                     __stringtab:
   466                           
   467                           ;	String table - string pointers are 1 byte each
   468     0003  1BFF               	btfsc	btemp+1,7
   469     0004  280D               	ljmp	stringcode
   470     0005  1383               	bcf	3,7
   471     0006  187F               	btfsc	btemp+1,0
   472     0007  1783               	bsf	3,7
   473     0008  0800               	movf	0,w
   474     0009  0A84               	incf	4,f
   475     000A  1903               	skipnz
   476     000B  0AFF               	incf	btemp+1,f
   477     000C  0008               	return
   478     000D                     stringcode:
   479     000D                     stringdir:
   480     000D  3000               	movlw	high stringdir
   481     000E  008A               	movwf	10
   482     000F  0804               	movf	4,w
   483     0010  0A84               	incf	4,f
   484     0011  0782               	addwf	2,f
   485     0012                     __stringbase:
   486     0012  3400               	retlw	0
   487     0013                     __end_of__stringtab:
   488     0013                     _message:
   489     0013  3432               	retlw	50
   490     0014  342E               	retlw	46
   491     0015  3445               	retlw	69
   492     0016  346E               	retlw	110
   493     0017  3476               	retlw	118
   494     0018  3469               	retlw	105
   495     0019  3461               	retlw	97
   496     001A  3472               	retlw	114
   497     001B  3420               	retlw	32
   498     001C  3441               	retlw	65
   499     001D  3473               	retlw	115
   500     001E  3463               	retlw	99
   501     001F  3469               	retlw	105
   502     0020  3469               	retlw	105
   503     0021  3400               	retlw	0
   504     0022                     __end_of_message:
   505     0022                     _dpowers:
   506     0022  3401               	retlw	1
   507     0023  3400               	retlw	0
   508     0024  340A               	retlw	10
   509     0025  3400               	retlw	0
   510     0026  3464               	retlw	100
   511     0027  3400               	retlw	0
   512     0028  34E8               	retlw	232
   513     0029  3403               	retlw	3
   514     002A  3410               	retlw	16
   515     002B  3427               	retlw	39
   516     002C                     __end_of_dpowers:
   517     0007                     _PORTCbits	set	7
   518     0008                     _PORTD	set	8
   519     0006                     _PORTB	set	6
   520     0005                     _PORTA	set	5
   521     0019                     _TXREG	set	25
   522     001A                     _RCREG	set	26
   523     0018                     _RCSTA	set	24
   524     0008                     _PORTDbits	set	8
   525     0013                     _SSPBUF	set	19
   526     0014                     _SSPCON	set	20
   527     00C4                     _CREN	set	196
   528     00C1                     _OERR	set	193
   529     0065                     _RCIF	set	101
   530     0043                     _RD3	set	67
   531     0047                     _RD7	set	71
   532     0046                     _RD6	set	70
   533     0045                     _RD5	set	69
   534     0044                     _RD4	set	68
   535     0063                     _SSPIF	set	99
   536     005E                     _PEIE	set	94
   537     005F                     _GIE	set	95
   538     008F                     _OSCCONbits	set	143
   539     0088                     _TRISD	set	136
   540     0086                     _TRISB	set	134
   541     0085                     _TRISA	set	133
   542     0098                     _TXSTA	set	152
   543     0099                     _SPBRG	set	153
   544     0091                     _SSPCON2bits	set	145
   545     0087                     _TRISCbits	set	135
   546     0094                     _SSPSTAT	set	148
   547     0093                     _SSPADD	set	147
   548     0091                     _SSPCON2	set	145
   549     043F                     _TRISC7	set	1087
   550     043E                     _TRISC6	set	1086
   551     043A                     _TRISC2	set	1082
   552     0439                     _TRISC1	set	1081
   553     04C1                     _TRMT	set	1217
   554     0463                     _SSPIE	set	1123
   555     043C                     _TRISC4	set	1084
   556     043B                     _TRISC3	set	1083
   557     0189                     _ANSELH	set	393
   558     0188                     _ANSEL	set	392
   559     002C                     STR_4:
   560     002C  3468               	retlw	104	;'h'
   561     002D  3465               	retlw	101	;'e'
   562     002E  3479               	retlw	121	;'y'
   563     002F  3400               	retlw	0
   564     0030                     STR_1:
   565     0030  3425               	retlw	37	;'%'
   566     0031  3475               	retlw	117	;'u'
   567     0032  3400               	retlw	0
   568     0030                     
   569                           	psect	cinit
   570     07EB                     start_initialization:	
   571                           ; #config settings
   572                           
   573     07EB                     __initialization:
   574                           
   575                           ; Clear objects allocated to BANK0
   576     07EB  1383               	bcf	3,7	;select IRP bank0
   577     07EC  3020               	movlw	low __pbssBANK0
   578     07ED  0084               	movwf	4
   579     07EE  3053               	movlw	low (__pbssBANK0+51)
   580     07EF  120A  118A  2233  120A  118A  	fcall	clear_ram0
   581                           
   582                           ; Clear objects allocated to BANK1
   583     07F4  30A0               	movlw	low __pbssBANK1
   584     07F5  0084               	movwf	4
   585     07F6  30B4               	movlw	low (__pbssBANK1+20)
   586     07F7  120A  118A  2233  120A  118A  	fcall	clear_ram0
   587     07FC                     end_of_initialization:	
   588                           ;End of C runtime variable initialization code
   589                           
   590     07FC                     __end_of__initialization:
   591     07FC  0183               	clrf	3
   592     07FD  120A  118A  2E55   	ljmp	_main	;jump to C main() function
   593                           
   594                           	psect	bssBANK0
   595     0020                     __pbssBANK0:
   596     0020                     _Zval2:
   597     0020                     	ds	1
   598     0021                     _Zval:
   599     0021                     	ds	1
   600     0022                     _Yval2:
   601     0022                     	ds	1
   602     0023                     _Yval:
   603     0023                     	ds	1
   604     0024                     _Xval2:
   605     0024                     	ds	1
   606     0025                     _Xval:
   607     0025                     	ds	1
   608     0026                     _x2:
   609     0026                     	ds	1
   610     0027                     _z:
   611     0027                     	ds	1
   612     0028                     _y:
   613     0028                     	ds	1
   614     0029                     _x:
   615     0029                     	ds	1
   616     002A                     _i:
   617     002A                     	ds	1
   618     002B                     _s2:
   619     002B                     	ds	20
   620     003F                     _s:
   621     003F                     	ds	20
   622                           
   623                           	psect	bssBANK1
   624     00A0                     __pbssBANK1:
   625     00A0                     _s3:
   626     00A0                     	ds	20
   627                           
   628                           	psect	clrtext
   629     0233                     clear_ram0:	
   630                           ;	Called with FSR containing the base address, and
   631                           ;	W with the last address+1
   632                           
   633     0233  0064               	clrwdt	;clear the watchdog before getting into this loop
   634     0234                     clrloop0:
   635     0234  0180               	clrf	0	;clear RAM location pointed to by FSR
   636     0235  0A84               	incf	4,f	;increment pointer
   637     0236  0604               	xorwf	4,w	;XOR with final address
   638     0237  1903               	btfsc	3,2	;have we reached the end yet?
   639     0238  3400               	retlw	0	;all done for this memory range, return
   640     0239  0604               	xorwf	4,w	;XOR again to restore value
   641     023A  2A34               	goto	clrloop0	;do the next byte
   642                           
   643                           	psect	cstackCOMMON
   644     0070                     __pcstackCOMMON:
   645     0070                     ?_setup:
   646     0070                     ??_setup:	
   647                           ; 1 bytes @ 0x0
   648                           
   649     0070                     ?_I2C_Master_Wait:	
   650                           ; 1 bytes @ 0x0
   651                           
   652     0070                     ??_I2C_Master_Wait:	
   653                           ; 1 bytes @ 0x0
   654                           
   655     0070                     ?_I2C_Master_Start:	
   656                           ; 1 bytes @ 0x0
   657                           
   658     0070                     ??_I2C_Master_Start:	
   659                           ; 1 bytes @ 0x0
   660                           
   661     0070                     ?_I2C_Master_RepeatedStart:	
   662                           ; 1 bytes @ 0x0
   663                           
   664     0070                     ??_I2C_Master_RepeatedStart:	
   665                           ; 1 bytes @ 0x0
   666                           
   667     0070                     ?_I2C_Master_Stop:	
   668                           ; 1 bytes @ 0x0
   669                           
   670     0070                     ??_I2C_Master_Stop:	
   671                           ; 1 bytes @ 0x0
   672                           
   673     0070                     ?_I2C_Master_Write:	
   674                           ; 1 bytes @ 0x0
   675                           
   676     0070                     ?_Lcd_Port:	
   677                           ; 1 bytes @ 0x0
   678                           
   679     0070                     ??_Lcd_Port:	
   680                           ; 1 bytes @ 0x0
   681                           
   682     0070                     ?_Lcd_Cmd:	
   683                           ; 1 bytes @ 0x0
   684                           
   685     0070                     ?_Lcd_Clear:	
   686                           ; 1 bytes @ 0x0
   687                           
   688     0070                     ?_Lcd_Init:	
   689                           ; 1 bytes @ 0x0
   690                           
   691     0070                     ?_Lcd_Write_Char:	
   692                           ; 1 bytes @ 0x0
   693                           
   694     0070                     ?_main:	
   695                           ; 1 bytes @ 0x0
   696                           
   697     0070                     ?_I2C_Master_Read:	
   698                           ; 1 bytes @ 0x0
   699                           
   700     0070                     ?___awdiv:	
   701                           ; 2 bytes @ 0x0
   702                           
   703     0070                     ?___lwdiv:	
   704                           ; 2 bytes @ 0x0
   705                           
   706     0070                     ?___lldiv:	
   707                           ; 2 bytes @ 0x0
   708                           
   709     0070                     Lcd_Port@a:	
   710                           ; 4 bytes @ 0x0
   711                           
   712     0070                     I2C_Master_Write@d:	
   713                           ; 1 bytes @ 0x0
   714                           
   715     0070                     I2C_Master_Read@a:	
   716                           ; 2 bytes @ 0x0
   717                           
   718     0070                     ___awdiv@divisor:	
   719                           ; 2 bytes @ 0x0
   720                           
   721     0070                     ___lwdiv@divisor:	
   722                           ; 2 bytes @ 0x0
   723                           
   724     0070                     ___lldiv@divisor:	
   725                           ; 2 bytes @ 0x0
   726                           
   727                           
   728                           ; 4 bytes @ 0x0
   729     0070                     	ds	1
   730     0071                     ??_Lcd_Cmd:
   731     0071                     ??_Lcd_Write_Char:	
   732                           ; 1 bytes @ 0x1
   733                           
   734                           
   735                           ; 1 bytes @ 0x1
   736     0071                     	ds	1
   737     0072                     ??_I2C_Master_Write:
   738     0072                     ??_I2C_Master_Read:	
   739                           ; 1 bytes @ 0x2
   740                           
   741     0072                     Lcd_Write_Char@temp:	
   742                           ; 1 bytes @ 0x2
   743                           
   744     0072                     ___awdiv@dividend:	
   745                           ; 1 bytes @ 0x2
   746                           
   747     0072                     ___lwdiv@dividend:	
   748                           ; 2 bytes @ 0x2
   749                           
   750                           
   751                           ; 2 bytes @ 0x2
   752     0072                     	ds	1
   753     0073                     Lcd_Cmd@a:
   754     0073                     Lcd_Write_Char@y:	
   755                           ; 1 bytes @ 0x3
   756                           
   757                           
   758                           ; 1 bytes @ 0x3
   759     0073                     	ds	1
   760     0074                     ??_Lcd_Clear:
   761     0074                     ?_Lcd_Set_Cursor:	
   762                           ; 1 bytes @ 0x4
   763                           
   764     0074                     ??_Lcd_Init:	
   765                           ; 1 bytes @ 0x4
   766                           
   767     0074                     ??___awdiv:	
   768                           ; 1 bytes @ 0x4
   769                           
   770     0074                     ??___lwdiv:	
   771                           ; 1 bytes @ 0x4
   772                           
   773     0074                     Lcd_Set_Cursor@b:	
   774                           ; 1 bytes @ 0x4
   775                           
   776     0074                     Lcd_Write_Char@a:	
   777                           ; 1 bytes @ 0x4
   778                           
   779     0074                     I2C_Master_Read@temp:	
   780                           ; 1 bytes @ 0x4
   781                           
   782     0074                     ___lldiv@dividend:	
   783                           ; 2 bytes @ 0x4
   784                           
   785                           
   786                           ; 4 bytes @ 0x4
   787     0074                     	ds	1
   788     0075                     ??_Lcd_Set_Cursor:
   789     0075                     ?_Lcd_Write_String:	
   790                           ; 1 bytes @ 0x5
   791                           
   792     0075                     ___awdiv@counter:	
   793                           ; 1 bytes @ 0x5
   794                           
   795     0075                     Lcd_Write_String@a:	
   796                           ; 1 bytes @ 0x5
   797                           
   798     0075                     ___lwdiv@quotient:	
   799                           ; 2 bytes @ 0x5
   800                           
   801                           
   802                           ; 2 bytes @ 0x5
   803     0075                     	ds	1
   804     0076                     Lcd_Set_Cursor@a:
   805     0076                     ___awdiv@sign:	
   806                           ; 1 bytes @ 0x6
   807                           
   808                           
   809                           ; 1 bytes @ 0x6
   810     0076                     	ds	1
   811     0077                     ??_Lcd_Write_String:
   812     0077                     Lcd_Set_Cursor@z:	
   813                           ; 1 bytes @ 0x7
   814                           
   815     0077                     ___lwdiv@counter:	
   816                           ; 1 bytes @ 0x7
   817                           
   818     0077                     ___awdiv@quotient:	
   819                           ; 1 bytes @ 0x7
   820                           
   821                           
   822                           ; 2 bytes @ 0x7
   823     0077                     	ds	1
   824     0078                     ??___lldiv:
   825     0078                     ?___lwmod:	
   826                           ; 1 bytes @ 0x8
   827                           
   828     0078                     Lcd_Set_Cursor@y:	
   829                           ; 2 bytes @ 0x8
   830                           
   831     0078                     ___lwmod@divisor:	
   832                           ; 1 bytes @ 0x8
   833                           
   834                           
   835                           ; 2 bytes @ 0x8
   836     0078                     	ds	1
   837     0079                     Lcd_Set_Cursor@temp:
   838     0079                     ___lldiv@quotient:	
   839                           ; 1 bytes @ 0x9
   840                           
   841                           
   842                           ; 4 bytes @ 0x9
   843     0079                     	ds	1
   844     007A                     Lcd_Write_String@i:
   845     007A                     ___lwmod@dividend:	
   846                           ; 2 bytes @ 0xA
   847                           
   848                           
   849                           ; 2 bytes @ 0xA
   850     007A                     	ds	2
   851     007C                     ??___lwmod:
   852                           
   853                           ; 1 bytes @ 0xC
   854     007C                     	ds	1
   855     007D                     ___lldiv@counter:
   856     007D                     ___lwmod@counter:	
   857                           ; 1 bytes @ 0xD
   858                           
   859                           
   860                           ; 1 bytes @ 0xD
   861     007D                     	ds	1
   862                           
   863                           	psect	cstackBANK0
   864     0053                     __pcstackBANK0:
   865     0053                     ?_I2C_Init:
   866     0053                     ?_sprintf:	
   867                           ; 1 bytes @ 0x0
   868                           
   869     0053                     sprintf@f:	
   870                           ; 2 bytes @ 0x0
   871                           
   872     0053                     I2C_Init@i2c_clk_freq:	
   873                           ; 1 bytes @ 0x0
   874                           
   875                           
   876                           ; 4 bytes @ 0x0
   877     0053                     	ds	3
   878     0056                     ??_sprintf:
   879                           
   880                           ; 1 bytes @ 0x3
   881     0056                     	ds	1
   882     0057                     ??_I2C_Init:
   883                           
   884                           ; 1 bytes @ 0x4
   885     0057                     	ds	2
   886     0059                     sprintf@flag:
   887                           
   888                           ; 1 bytes @ 0x6
   889     0059                     	ds	1
   890     005A                     sprintf@ap:
   891                           
   892                           ; 1 bytes @ 0x7
   893     005A                     	ds	1
   894     005B                     sprintf@val:
   895                           
   896                           ; 2 bytes @ 0x8
   897     005B                     	ds	2
   898     005D                     sprintf@prec:
   899                           
   900                           ; 1 bytes @ 0xA
   901     005D                     	ds	1
   902     005E                     sprintf@sp:
   903                           
   904                           ; 1 bytes @ 0xB
   905     005E                     	ds	1
   906     005F                     sprintf@c:
   907                           
   908                           ; 1 bytes @ 0xC
   909     005F                     	ds	1
   910     0060                     ??_main:
   911                           
   912                           ; 1 bytes @ 0xD
   913     0060                     	ds	3
   914                           
   915                           	psect	maintext
   916     0655                     __pmaintext:	
   917 ;;
   918 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   919 ;;
   920 ;; *************** function _main *****************
   921 ;; Defined at:
   922 ;;		line 62 in file "pruebaADXL345.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;		None
   925 ;; Auto vars:     Size  Location     Type
   926 ;;		None
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : B00/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   936 ;;      Params:         0       0       0       0       0
   937 ;;      Locals:         0       0       0       0       0
   938 ;;      Temps:          0       3       0       0       0
   939 ;;      Totals:         0       3       0       0       0
   940 ;;Total ram usage:        3 bytes
   941 ;; Hardware stack levels required when called: 3
   942 ;; This function calls:
   943 ;;		_I2C_Init
   944 ;;		_I2C_Master_Read
   945 ;;		_I2C_Master_RepeatedStart
   946 ;;		_I2C_Master_Start
   947 ;;		_I2C_Master_Stop
   948 ;;		_I2C_Master_Write
   949 ;;		_Lcd_Clear
   950 ;;		_Lcd_Init
   951 ;;		_Lcd_Set_Cursor
   952 ;;		_Lcd_Write_String
   953 ;;		___awdiv
   954 ;;		_setup
   955 ;;		_sprintf
   956 ;; This function is called by:
   957 ;;		Startup code after reset
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961     0655                     _main:	
   962                           ;psect for function _main
   963                           
   964     0655                     l1648:	
   965                           ;incstack = 0
   966                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   967                           
   968                           
   969                           ;pruebaADXL345.c: 63:     setup();
   970     0655  120A  118A  2294  120A  118A  	fcall	_setup
   971                           
   972                           ;pruebaADXL345.c: 64:     Lcd_Init();
   973     065A  120A  118A  246A  120A  118A  	fcall	_Lcd_Init
   974                           
   975                           ;pruebaADXL345.c: 65:     I2C_Init(100000);
   976     065F  3000               	movlw	0
   977     0660  1283               	bcf	3,5	;RP0=0, select bank0
   978     0661  1303               	bcf	3,6	;RP1=0, select bank0
   979     0662  00D6               	movwf	I2C_Init@i2c_clk_freq+3
   980     0663  3001               	movlw	1
   981     0664  00D5               	movwf	I2C_Init@i2c_clk_freq+2
   982     0665  3086               	movlw	134
   983     0666  00D4               	movwf	I2C_Init@i2c_clk_freq+1
   984     0667  30A0               	movlw	160
   985     0668  00D3               	movwf	I2C_Init@i2c_clk_freq
   986     0669  120A  118A  22FE  120A  118A  	fcall	_I2C_Init
   987                           
   988                           ;pruebaADXL345.c: 66:      I2C_Master_Start();
   989     066E  120A  118A  2244  120A  118A  	fcall	_I2C_Master_Start
   990                           
   991                           ;pruebaADXL345.c: 67:         I2C_Master_Write(0x2D);
   992     0673  302D               	movlw	45
   993     0674  00F0               	movwf	I2C_Master_Write@d
   994     0675  3000               	movlw	0
   995     0676  00F1               	movwf	I2C_Master_Write@d+1
   996     0677  120A  118A  2256  120A  118A  	fcall	_I2C_Master_Write
   997                           
   998                           ;pruebaADXL345.c: 68:         I2C_Master_Write(0b00001000);
   999     067C  3008               	movlw	8
  1000     067D  00F0               	movwf	I2C_Master_Write@d
  1001     067E  3000               	movlw	0
  1002     067F  00F1               	movwf	I2C_Master_Write@d+1
  1003     0680  120A  118A  2256  120A  118A  	fcall	_I2C_Master_Write
  1004                           
  1005                           ;pruebaADXL345.c: 69:         I2C_Master_RepeatedStart();
  1006     0685  120A  118A  223B  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1007                           
  1008                           ;pruebaADXL345.c: 70:         I2C_Master_Write(0x31);
  1009     068A  3031               	movlw	49
  1010     068B  00F0               	movwf	I2C_Master_Write@d
  1011     068C  3000               	movlw	0
  1012     068D  00F1               	movwf	I2C_Master_Write@d+1
  1013     068E  120A  118A  2256  120A  118A  	fcall	_I2C_Master_Write
  1014                           
  1015                           ;pruebaADXL345.c: 71:         I2C_Master_Write(0b00000010);
  1016     0693  3002               	movlw	2
  1017     0694  00F0               	movwf	I2C_Master_Write@d
  1018     0695  3000               	movlw	0
  1019     0696  00F1               	movwf	I2C_Master_Write@d+1
  1020     0697  120A  118A  2256  120A  118A  	fcall	_I2C_Master_Write
  1021                           
  1022                           ;pruebaADXL345.c: 72:         I2C_Master_Stop();
  1023     069C  120A  118A  224D  120A  118A  	fcall	_I2C_Master_Stop
  1024     06A1                     l257:	
  1025                           ;pruebaADXL345.c: 74:     while(1){
  1026                           
  1027                           
  1028                           ;pruebaADXL345.c: 78:         I2C_Master_Start();
  1029     06A1  120A  118A  2244  120A  118A  	fcall	_I2C_Master_Start
  1030                           
  1031                           ;pruebaADXL345.c: 79:         I2C_Master_Write(0x32);
  1032     06A6  3032               	movlw	50
  1033     06A7  00F0               	movwf	I2C_Master_Write@d
  1034     06A8  3000               	movlw	0
  1035     06A9  00F1               	movwf	I2C_Master_Write@d+1
  1036     06AA  120A  118A  2256  120A  118A  	fcall	_I2C_Master_Write
  1037                           
  1038                           ;pruebaADXL345.c: 80:         Xval = I2C_Master_Read(0);
  1039     06AF  3000               	movlw	0
  1040     06B0  00F0               	movwf	I2C_Master_Read@a
  1041     06B1  00F1               	movwf	I2C_Master_Read@a+1
  1042     06B2  120A  118A  22D0  120A  118A  	fcall	_I2C_Master_Read
  1043     06B7  0870               	movf	?_I2C_Master_Read,w
  1044     06B8  1283               	bcf	3,5	;RP0=0, select bank0
  1045     06B9  1303               	bcf	3,6	;RP1=0, select bank0
  1046     06BA  00A5               	movwf	_Xval
  1047                           
  1048                           ;pruebaADXL345.c: 81:         I2C_Master_RepeatedStart();
  1049     06BB  120A  118A  223B  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1050                           
  1051                           ;pruebaADXL345.c: 82:         I2C_Master_Write(0x33);
  1052     06C0  3033               	movlw	51
  1053     06C1  00F0               	movwf	I2C_Master_Write@d
  1054     06C2  3000               	movlw	0
  1055     06C3  00F1               	movwf	I2C_Master_Write@d+1
  1056     06C4  120A  118A  2256  120A  118A  	fcall	_I2C_Master_Write
  1057                           
  1058                           ;pruebaADXL345.c: 83:         Xval2 = I2C_Master_Read(0);
  1059     06C9  3000               	movlw	0
  1060     06CA  00F0               	movwf	I2C_Master_Read@a
  1061     06CB  00F1               	movwf	I2C_Master_Read@a+1
  1062     06CC  120A  118A  22D0  120A  118A  	fcall	_I2C_Master_Read
  1063     06D1  0870               	movf	?_I2C_Master_Read,w
  1064     06D2  1283               	bcf	3,5	;RP0=0, select bank0
  1065     06D3  1303               	bcf	3,6	;RP1=0, select bank0
  1066     06D4  00A4               	movwf	_Xval2
  1067                           
  1068                           ;pruebaADXL345.c: 84:         I2C_Master_RepeatedStart();
  1069     06D5  120A  118A  223B  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1070                           
  1071                           ;pruebaADXL345.c: 85:         I2C_Master_Write(0x34);
  1072     06DA  3034               	movlw	52
  1073     06DB  00F0               	movwf	I2C_Master_Write@d
  1074     06DC  3000               	movlw	0
  1075     06DD  00F1               	movwf	I2C_Master_Write@d+1
  1076     06DE  120A  118A  2256  120A  118A  	fcall	_I2C_Master_Write
  1077                           
  1078                           ;pruebaADXL345.c: 86:         Yval = I2C_Master_Read(0);
  1079     06E3  3000               	movlw	0
  1080     06E4  00F0               	movwf	I2C_Master_Read@a
  1081     06E5  00F1               	movwf	I2C_Master_Read@a+1
  1082     06E6  120A  118A  22D0  120A  118A  	fcall	_I2C_Master_Read
  1083     06EB  0870               	movf	?_I2C_Master_Read,w
  1084     06EC  1283               	bcf	3,5	;RP0=0, select bank0
  1085     06ED  1303               	bcf	3,6	;RP1=0, select bank0
  1086     06EE  00A3               	movwf	_Yval
  1087                           
  1088                           ;pruebaADXL345.c: 87:         I2C_Master_RepeatedStart();
  1089     06EF  120A  118A  223B  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1090                           
  1091                           ;pruebaADXL345.c: 88:         I2C_Master_Write(0x35);
  1092     06F4  3035               	movlw	53
  1093     06F5  00F0               	movwf	I2C_Master_Write@d
  1094     06F6  3000               	movlw	0
  1095     06F7  00F1               	movwf	I2C_Master_Write@d+1
  1096     06F8  120A  118A  2256  120A  118A  	fcall	_I2C_Master_Write
  1097                           
  1098                           ;pruebaADXL345.c: 89:         Yval2 = I2C_Master_Read(0);
  1099     06FD  3000               	movlw	0
  1100     06FE  00F0               	movwf	I2C_Master_Read@a
  1101     06FF  00F1               	movwf	I2C_Master_Read@a+1
  1102     0700  120A  118A  22D0  120A  118A  	fcall	_I2C_Master_Read
  1103     0705  0870               	movf	?_I2C_Master_Read,w
  1104     0706  1283               	bcf	3,5	;RP0=0, select bank0
  1105     0707  1303               	bcf	3,6	;RP1=0, select bank0
  1106     0708  00A2               	movwf	_Yval2
  1107                           
  1108                           ;pruebaADXL345.c: 90:         I2C_Master_RepeatedStart();
  1109     0709  120A  118A  223B  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1110                           
  1111                           ;pruebaADXL345.c: 91:         I2C_Master_Write(0x36);
  1112     070E  3036               	movlw	54
  1113     070F  00F0               	movwf	I2C_Master_Write@d
  1114     0710  3000               	movlw	0
  1115     0711  00F1               	movwf	I2C_Master_Write@d+1
  1116     0712  120A  118A  2256  120A  118A  	fcall	_I2C_Master_Write
  1117                           
  1118                           ;pruebaADXL345.c: 92:         Zval = I2C_Master_Read(0);
  1119     0717  3000               	movlw	0
  1120     0718  00F0               	movwf	I2C_Master_Read@a
  1121     0719  00F1               	movwf	I2C_Master_Read@a+1
  1122     071A  120A  118A  22D0  120A  118A  	fcall	_I2C_Master_Read
  1123     071F  0870               	movf	?_I2C_Master_Read,w
  1124     0720  1283               	bcf	3,5	;RP0=0, select bank0
  1125     0721  1303               	bcf	3,6	;RP1=0, select bank0
  1126     0722  00A1               	movwf	_Zval
  1127                           
  1128                           ;pruebaADXL345.c: 93:         I2C_Master_RepeatedStart();
  1129     0723  120A  118A  223B  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1130                           
  1131                           ;pruebaADXL345.c: 94:         I2C_Master_Write(0x37);
  1132     0728  3037               	movlw	55
  1133     0729  00F0               	movwf	I2C_Master_Write@d
  1134     072A  3000               	movlw	0
  1135     072B  00F1               	movwf	I2C_Master_Write@d+1
  1136     072C  120A  118A  2256  120A  118A  	fcall	_I2C_Master_Write
  1137                           
  1138                           ;pruebaADXL345.c: 95:         Zval2 = I2C_Master_Read(0);
  1139     0731  3000               	movlw	0
  1140     0732  00F0               	movwf	I2C_Master_Read@a
  1141     0733  00F1               	movwf	I2C_Master_Read@a+1
  1142     0734  120A  118A  22D0  120A  118A  	fcall	_I2C_Master_Read
  1143     0739  0870               	movf	?_I2C_Master_Read,w
  1144     073A  1283               	bcf	3,5	;RP0=0, select bank0
  1145     073B  1303               	bcf	3,6	;RP1=0, select bank0
  1146     073C  00A0               	movwf	_Zval2
  1147                           
  1148                           ;pruebaADXL345.c: 96:         I2C_Master_Stop();
  1149     073D  120A  118A  224D  120A  118A  	fcall	_I2C_Master_Stop
  1150     0742                     l1650:
  1151                           
  1152                           ;pruebaADXL345.c: 98:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1153     0742  3003               	movlw	3
  1154     0743  1283               	bcf	3,5	;RP0=0, select bank0
  1155     0744  1303               	bcf	3,6	;RP1=0, select bank0
  1156     0745  00E2               	movwf	??_main+2
  1157     0746  3008               	movlw	8
  1158     0747  00E1               	movwf	??_main+1
  1159     0748  3076               	movlw	118
  1160     0749  00E0               	movwf	??_main
  1161     074A                     u1197:
  1162     074A  0BE0               	decfsz	??_main,f
  1163     074B  2F4A               	goto	u1197
  1164     074C  0BE1               	decfsz	??_main+1,f
  1165     074D  2F4A               	goto	u1197
  1166     074E  0BE2               	decfsz	??_main+2,f
  1167     074F  2F4A               	goto	u1197
  1168     0750  0000               	nop
  1169     0751                     l1652:
  1170                           
  1171                           ;pruebaADXL345.c: 99:          Lcd_Clear();
  1172     0751  120A  118A  226D  120A  118A  	fcall	_Lcd_Clear
  1173                           
  1174                           ;pruebaADXL345.c: 100:          x= (Xval2<<8)| (Xval & 0xFF);
  1175     0756  1283               	bcf	3,5	;RP0=0, select bank0
  1176     0757  1303               	bcf	3,6	;RP1=0, select bank0
  1177     0758  0825               	movf	_Xval,w
  1178     0759  00A9               	movwf	_x
  1179                           
  1180                           ;pruebaADXL345.c: 101:          y= Yval|Yval2 <<8;
  1181     075A  0823               	movf	_Yval,w
  1182     075B  00A8               	movwf	_y
  1183                           
  1184                           ;pruebaADXL345.c: 102:          z= Zval|Zval2 <<8;
  1185     075C  0821               	movf	_Zval,w
  1186     075D  00A7               	movwf	_z
  1187     075E                     l1654:
  1188                           
  1189                           ;pruebaADXL345.c: 103:          x2= x/256;
  1190     075E  3000               	movlw	0
  1191     075F  00F0               	movwf	___awdiv@divisor
  1192     0760  3001               	movlw	1
  1193     0761  00F1               	movwf	___awdiv@divisor+1
  1194     0762  0829               	movf	_x,w
  1195     0763  00E0               	movwf	??_main
  1196     0764  01E1               	clrf	??_main+1
  1197     0765  0860               	movf	??_main,w
  1198     0766  00F2               	movwf	___awdiv@dividend
  1199     0767  0861               	movf	??_main+1,w
  1200     0768  00F3               	movwf	___awdiv@dividend+1
  1201     0769  120A  118A  252D  120A  118A  	fcall	___awdiv
  1202     076E  0870               	movf	?___awdiv,w
  1203     076F  1283               	bcf	3,5	;RP0=0, select bank0
  1204     0770  1303               	bcf	3,6	;RP1=0, select bank0
  1205     0771  00A6               	movwf	_x2
  1206     0772                     l1656:
  1207                           
  1208                           ;pruebaADXL345.c: 104:         sprintf(s, "%u", x2);
  1209     0772  301E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1210     0773  00D3               	movwf	sprintf@f
  1211     0774  0826               	movf	_x2,w
  1212     0775  00E0               	movwf	??_main
  1213     0776  01E1               	clrf	??_main+1
  1214     0777  0860               	movf	??_main,w
  1215     0778  00D4               	movwf	?_sprintf+1
  1216     0779  0861               	movf	??_main+1,w
  1217     077A  00D5               	movwf	?_sprintf+2
  1218     077B  303F               	movlw	(low (_s| 0))& (0+255)
  1219     077C  120A  118A  2594  120A  118A  	fcall	_sprintf
  1220     0781                     l1658:
  1221                           
  1222                           ;pruebaADXL345.c: 105:         sprintf(s2, "%u", y);
  1223     0781  301E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1224     0782  1283               	bcf	3,5	;RP0=0, select bank0
  1225     0783  1303               	bcf	3,6	;RP1=0, select bank0
  1226     0784  00D3               	movwf	sprintf@f
  1227     0785  0828               	movf	_y,w
  1228     0786  00E0               	movwf	??_main
  1229     0787  01E1               	clrf	??_main+1
  1230     0788  0860               	movf	??_main,w
  1231     0789  00D4               	movwf	?_sprintf+1
  1232     078A  0861               	movf	??_main+1,w
  1233     078B  00D5               	movwf	?_sprintf+2
  1234     078C  302B               	movlw	(low (_s2| 0))& (0+255)
  1235     078D  120A  118A  2594  120A  118A  	fcall	_sprintf
  1236     0792                     l1660:
  1237                           
  1238                           ;pruebaADXL345.c: 106:         sprintf(s3, "%u", z);
  1239     0792  301E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1240     0793  1283               	bcf	3,5	;RP0=0, select bank0
  1241     0794  1303               	bcf	3,6	;RP1=0, select bank0
  1242     0795  00D3               	movwf	sprintf@f
  1243     0796  0827               	movf	_z,w
  1244     0797  00E0               	movwf	??_main
  1245     0798  01E1               	clrf	??_main+1
  1246     0799  0860               	movf	??_main,w
  1247     079A  00D4               	movwf	?_sprintf+1
  1248     079B  0861               	movf	??_main+1,w
  1249     079C  00D5               	movwf	?_sprintf+2
  1250     079D  30A0               	movlw	(low (_s3| 0))& (0+255)
  1251     079E  120A  118A  2594  120A  118A  	fcall	_sprintf
  1252     07A3                     l1662:
  1253                           
  1254                           ;pruebaADXL345.c: 107:     Lcd_Set_Cursor(1,1);
  1255     07A3  01F4               	clrf	Lcd_Set_Cursor@b
  1256     07A4  0AF4               	incf	Lcd_Set_Cursor@b,f
  1257     07A5  3001               	movlw	1
  1258     07A6  120A  118A  2424  120A  118A  	fcall	_Lcd_Set_Cursor
  1259     07AB                     l1664:
  1260                           
  1261                           ;pruebaADXL345.c: 108:     Lcd_Write_String(s);
  1262     07AB  303F               	movlw	(low (_s| 0))& (0+255)
  1263     07AC  00F5               	movwf	Lcd_Write_String@a
  1264     07AD  3000               	movlw	0
  1265     07AE  00F6               	movwf	Lcd_Write_String@a+1
  1266     07AF  120A  118A  239E  120A  118A  	fcall	_Lcd_Write_String
  1267     07B4                     l1666:
  1268                           
  1269                           ;pruebaADXL345.c: 109:     Lcd_Set_Cursor(1,5);
  1270     07B4  3005               	movlw	5
  1271     07B5  00F4               	movwf	Lcd_Set_Cursor@b
  1272     07B6  3001               	movlw	1
  1273     07B7  120A  118A  2424  120A  118A  	fcall	_Lcd_Set_Cursor
  1274     07BC                     l1668:
  1275                           
  1276                           ;pruebaADXL345.c: 110:     Lcd_Write_String(s2);
  1277     07BC  302B               	movlw	(low (_s2| 0))& (0+255)
  1278     07BD  00F5               	movwf	Lcd_Write_String@a
  1279     07BE  3000               	movlw	0
  1280     07BF  00F6               	movwf	Lcd_Write_String@a+1
  1281     07C0  120A  118A  239E  120A  118A  	fcall	_Lcd_Write_String
  1282     07C5                     l1670:
  1283                           
  1284                           ;pruebaADXL345.c: 111:     Lcd_Set_Cursor(1,12);
  1285     07C5  300C               	movlw	12
  1286     07C6  00F4               	movwf	Lcd_Set_Cursor@b
  1287     07C7  3001               	movlw	1
  1288     07C8  120A  118A  2424  120A  118A  	fcall	_Lcd_Set_Cursor
  1289     07CD                     l1672:
  1290                           
  1291                           ;pruebaADXL345.c: 112:     Lcd_Write_String(s3);
  1292     07CD  30A0               	movlw	(low (_s3| 0))& (0+255)
  1293     07CE  00F5               	movwf	Lcd_Write_String@a
  1294     07CF  3000               	movlw	0
  1295     07D0  00F6               	movwf	Lcd_Write_String@a+1
  1296     07D1  120A  118A  239E  120A  118A  	fcall	_Lcd_Write_String
  1297     07D6                     l1674:
  1298                           
  1299                           ;pruebaADXL345.c: 113:    Lcd_Set_Cursor(2,1);
  1300     07D6  01F4               	clrf	Lcd_Set_Cursor@b
  1301     07D7  0AF4               	incf	Lcd_Set_Cursor@b,f
  1302     07D8  3002               	movlw	2
  1303     07D9  120A  118A  2424  120A  118A  	fcall	_Lcd_Set_Cursor
  1304     07DE                     l1676:
  1305                           
  1306                           ;pruebaADXL345.c: 114:     Lcd_Write_String("hey");
  1307     07DE  301A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1308     07DF  00F5               	movwf	Lcd_Write_String@a
  1309     07E0  3080               	movlw	128
  1310     07E1  00F6               	movwf	Lcd_Write_String@a+1
  1311     07E2  120A  118A  239E  120A  118A  	fcall	_Lcd_Write_String
  1312     07E7  2EA1               	goto	l257
  1313     07E8  120A  118A  2800   	ljmp	start
  1314     07EB                     __end_of_main:
  1315                           
  1316                           	psect	text1
  1317     0594                     __ptext1:	
  1318 ;; *************** function _sprintf *****************
  1319 ;; Defined at:
  1320 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;  sp              1    wreg     PTR unsigned char 
  1323 ;;		 -> s3(20), s2(20), s(20), 
  1324 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1325 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1328 ;;		 -> s3(20), s2(20), s(20), 
  1329 ;;  tmpval          4    0        struct .
  1330 ;;  val             2    8[BANK0 ] unsigned int 
  1331 ;;  cp              2    0        PTR const unsigned char 
  1332 ;;  len             2    0        unsigned int 
  1333 ;;  c               1   12[BANK0 ] unsigned char 
  1334 ;;  prec            1   10[BANK0 ] char 
  1335 ;;  ap              1    7[BANK0 ] PTR void [1]
  1336 ;;		 -> ?_sprintf(2), 
  1337 ;;  flag            1    6[BANK0 ] unsigned char 
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  2    0[BANK0 ] int 
  1340 ;; Registers used:
  1341 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1347 ;;      Params:         0       3       0       0       0
  1348 ;;      Locals:         0       7       0       0       0
  1349 ;;      Temps:          0       3       0       0       0
  1350 ;;      Totals:         0      13       0       0       0
  1351 ;;Total ram usage:       13 bytes
  1352 ;; Hardware stack levels used: 1
  1353 ;; Hardware stack levels required when called: 1
  1354 ;; This function calls:
  1355 ;;		___lwdiv
  1356 ;;		___lwmod
  1357 ;; This function is called by:
  1358 ;;		_main
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362     0594                     _sprintf:	
  1363                           ;psect for function _sprintf
  1364                           
  1365                           
  1366                           ;incstack = 0
  1367                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1368                           ;sprintf@sp stored from wreg
  1369     0594  1283               	bcf	3,5	;RP0=0, select bank0
  1370     0595  1303               	bcf	3,6	;RP1=0, select bank0
  1371     0596  00DE               	movwf	sprintf@sp
  1372     0597                     l1520:
  1373                           
  1374                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1375     0597  3054               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1376     0598  00DA               	movwf	sprintf@ap
  1377                           
  1378                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1379     0599  2E40               	goto	l1562
  1380     059A                     l1522:
  1381                           
  1382                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1383     059A  3025               	movlw	37
  1384     059B  065F               	xorwf	sprintf@c,w
  1385     059C  1903               	btfsc	3,2
  1386     059D  2D9F               	goto	u981
  1387     059E  2DA0               	goto	u980
  1388     059F                     u981:
  1389     059F  2DAA               	goto	l1528
  1390     05A0                     u980:
  1391     05A0                     l1524:
  1392                           
  1393                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1394     05A0  085E               	movf	sprintf@sp,w
  1395     05A1  0084               	movwf	4
  1396     05A2  085F               	movf	sprintf@c,w
  1397     05A3  1383               	bcf	3,7	;select IRP bank0
  1398     05A4  0080               	movwf	0
  1399     05A5                     l1526:
  1400     05A5  3001               	movlw	1
  1401     05A6  00D6               	movwf	??_sprintf
  1402     05A7  0856               	movf	??_sprintf,w
  1403     05A8  07DE               	addwf	sprintf@sp,f
  1404                           
  1405                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1406     05A9  2E40               	goto	l1562
  1407     05AA                     l1528:
  1408                           
  1409                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1410     05AA  01D9               	clrf	sprintf@flag
  1411                           
  1412                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1413     05AB  2DB1               	goto	l1534
  1414     05AC                     l1530:
  1415                           
  1416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1417     05AC  30C0               	movlw	192
  1418     05AD  00D6               	movwf	??_sprintf
  1419     05AE  0856               	movf	??_sprintf,w
  1420     05AF  04D9               	iorwf	sprintf@flag,f
  1421                           
  1422                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1423     05B0  2DCB               	goto	l1536
  1424     05B1                     l1534:
  1425     05B1  3001               	movlw	1
  1426     05B2  07D3               	addwf	sprintf@f,f
  1427     05B3  30FF               	movlw	-1
  1428     05B4  0753               	addwf	sprintf@f,w
  1429     05B5  0084               	movwf	4
  1430     05B6  120A  118A  200D  120A  118A  	fcall	stringdir
  1431     05BB  00DF               	movwf	sprintf@c
  1432     05BC  00D6               	movwf	??_sprintf
  1433     05BD  01D7               	clrf	??_sprintf+1
  1434                           
  1435                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1436                           ; Switch size 1, requested type "simple"
  1437                           ; Number of cases is 1, Range of values is 0 to 0
  1438                           ; switch strategies available:
  1439                           ; Name         Instructions Cycles
  1440                           ; simple_byte            4     3 (average)
  1441                           ; direct_byte           11     8 (fixed)
  1442                           ; jumptable            260     6 (fixed)
  1443                           ;	Chosen strategy is simple_byte
  1444     05BE  0857               	movf	??_sprintf+1,w
  1445     05BF  3A00               	xorlw	0	; case 0
  1446     05C0  1903               	skipnz
  1447     05C1  2DC3               	goto	l1698
  1448     05C2  2E40               	goto	l1562
  1449     05C3                     l1698:
  1450                           
  1451                           ; Switch size 1, requested type "simple"
  1452                           ; Number of cases is 2, Range of values is 0 to 117
  1453                           ; switch strategies available:
  1454                           ; Name         Instructions Cycles
  1455                           ; simple_byte            7     4 (average)
  1456                           ; jumptable            260     6 (fixed)
  1457                           ;	Chosen strategy is simple_byte
  1458     05C3  0856               	movf	??_sprintf,w
  1459     05C4  3A00               	xorlw	0	; case 0
  1460     05C5  1903               	skipnz
  1461     05C6  2E50               	goto	l1564
  1462     05C7  3A75               	xorlw	117	; case 117
  1463     05C8  1903               	skipnz
  1464     05C9  2DAC               	goto	l1530
  1465     05CA  2E40               	goto	l1562
  1466     05CB                     l1536:
  1467                           
  1468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1469     05CB  085A               	movf	sprintf@ap,w
  1470     05CC  0084               	movwf	4
  1471     05CD  1383               	bcf	3,7	;select IRP bank0
  1472     05CE  0800               	movf	0,w
  1473     05CF  00DB               	movwf	sprintf@val
  1474     05D0  0A84               	incf	4,f
  1475     05D1  0800               	movf	0,w
  1476     05D2  00DC               	movwf	sprintf@val+1
  1477     05D3                     l1538:
  1478     05D3  3002               	movlw	2
  1479     05D4  00D6               	movwf	??_sprintf
  1480     05D5  0856               	movf	??_sprintf,w
  1481     05D6  07DA               	addwf	sprintf@ap,f
  1482     05D7                     l1540:
  1483                           
  1484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1485     05D7  01DF               	clrf	sprintf@c
  1486     05D8  0ADF               	incf	sprintf@c,f
  1487     05D9                     l1546:
  1488                           
  1489                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1490     05D9  085F               	movf	sprintf@c,w
  1491     05DA  00D6               	movwf	??_sprintf
  1492     05DB  0756               	addwf	??_sprintf,w
  1493     05DC  3E10               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1494     05DD  0084               	movwf	4
  1495     05DE  120A  118A  200D  120A  118A  	fcall	stringdir
  1496     05E3  00D7               	movwf	??_sprintf+1
  1497     05E4  120A  118A  200D  120A  118A  	fcall	stringdir
  1498     05E9  00D8               	movwf	??_sprintf+2
  1499     05EA  0858               	movf	??_sprintf+2,w
  1500     05EB  025C               	subwf	sprintf@val+1,w
  1501     05EC  1D03               	skipz
  1502     05ED  2DF0               	goto	u995
  1503     05EE  0857               	movf	??_sprintf+1,w
  1504     05EF  025B               	subwf	sprintf@val,w
  1505     05F0                     u995:
  1506     05F0  1803               	skipnc
  1507     05F1  2DF3               	goto	u991
  1508     05F2  2DF4               	goto	u990
  1509     05F3                     u991:
  1510     05F3  2DF5               	goto	l1550
  1511     05F4                     u990:
  1512     05F4  2DFF               	goto	l1552
  1513     05F5                     l1550:
  1514     05F5  3001               	movlw	1
  1515     05F6  00D6               	movwf	??_sprintf
  1516     05F7  0856               	movf	??_sprintf,w
  1517     05F8  07DF               	addwf	sprintf@c,f
  1518     05F9  3005               	movlw	5
  1519     05FA  065F               	xorwf	sprintf@c,w
  1520     05FB  1D03               	btfss	3,2
  1521     05FC  2DFE               	goto	u1001
  1522     05FD  2DFF               	goto	u1000
  1523     05FE                     u1001:
  1524     05FE  2DD9               	goto	l1546
  1525     05FF                     u1000:
  1526     05FF                     l1552:
  1527                           
  1528                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1529     05FF  085F               	movf	sprintf@c,w
  1530     0600  00DD               	movwf	sprintf@prec
  1531                           
  1532                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1533     0601  2E37               	goto	l1560
  1534     0602                     l1554:
  1535                           
  1536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1537     0602  300A               	movlw	10
  1538     0603  00F8               	movwf	___lwmod@divisor
  1539     0604  3000               	movlw	0
  1540     0605  00F9               	movwf	___lwmod@divisor+1
  1541     0606  085D               	movf	sprintf@prec,w
  1542     0607  00D6               	movwf	??_sprintf
  1543     0608  0756               	addwf	??_sprintf,w
  1544     0609  3E10               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1545     060A  0084               	movwf	4
  1546     060B  120A  118A  200D  120A  118A  	fcall	stringdir
  1547     0610  00F0               	movwf	___lwdiv@divisor
  1548     0611  120A  118A  200D  120A  118A  	fcall	stringdir
  1549     0616  00F1               	movwf	___lwdiv@divisor+1
  1550     0617  085C               	movf	sprintf@val+1,w
  1551     0618  00F3               	movwf	___lwdiv@dividend+1
  1552     0619  085B               	movf	sprintf@val,w
  1553     061A  00F2               	movwf	___lwdiv@dividend
  1554     061B  120A  118A  23E0  120A  118A  	fcall	___lwdiv
  1555     0620  0871               	movf	?___lwdiv+1,w
  1556     0621  00FB               	movwf	___lwmod@dividend+1
  1557     0622  0870               	movf	?___lwdiv,w
  1558     0623  00FA               	movwf	___lwmod@dividend
  1559     0624  120A  118A  2364  120A  118A  	fcall	___lwmod
  1560     0629  0878               	movf	?___lwmod,w
  1561     062A  3E30               	addlw	48
  1562     062B  1283               	bcf	3,5	;RP0=0, select bank0
  1563     062C  1303               	bcf	3,6	;RP1=0, select bank0
  1564     062D  00DF               	movwf	sprintf@c
  1565     062E                     l1556:
  1566                           
  1567                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1568     062E  085E               	movf	sprintf@sp,w
  1569     062F  0084               	movwf	4
  1570     0630  085F               	movf	sprintf@c,w
  1571     0631  1383               	bcf	3,7	;select IRP bank0
  1572     0632  0080               	movwf	0
  1573     0633                     l1558:
  1574     0633  3001               	movlw	1
  1575     0634  00D6               	movwf	??_sprintf
  1576     0635  0856               	movf	??_sprintf,w
  1577     0636  07DE               	addwf	sprintf@sp,f
  1578     0637                     l1560:
  1579                           
  1580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1581     0637  30FF               	movlw	255
  1582     0638  00D6               	movwf	??_sprintf
  1583     0639  0856               	movf	??_sprintf,w
  1584     063A  07DD               	addwf	sprintf@prec,f
  1585     063B  0A5D               	incf	sprintf@prec,w
  1586     063C  1D03               	btfss	3,2
  1587     063D  2E3F               	goto	u1011
  1588     063E  2E40               	goto	u1010
  1589     063F                     u1011:
  1590     063F  2E02               	goto	l1554
  1591     0640                     u1010:
  1592     0640                     l1562:
  1593                           
  1594                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1595     0640  3001               	movlw	1
  1596     0641  07D3               	addwf	sprintf@f,f
  1597     0642  30FF               	movlw	-1
  1598     0643  0753               	addwf	sprintf@f,w
  1599     0644  0084               	movwf	4
  1600     0645  120A  118A  200D  120A  118A  	fcall	stringdir
  1601     064A  00DF               	movwf	sprintf@c
  1602     064B  085F               	movf	sprintf@c,w
  1603     064C  1D03               	btfss	3,2
  1604     064D  2E4F               	goto	u1021
  1605     064E  2E50               	goto	u1020
  1606     064F                     u1021:
  1607     064F  2D9A               	goto	l1522
  1608     0650                     u1020:
  1609     0650                     l1564:
  1610                           
  1611                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1612     0650  085E               	movf	sprintf@sp,w
  1613     0651  0084               	movwf	4
  1614     0652  1383               	bcf	3,7	;select IRP bank0
  1615     0653  0180               	clrf	0
  1616     0654                     l370:
  1617     0654  0008               	return
  1618     0655                     __end_of_sprintf:
  1619                           
  1620                           	psect	text2
  1621     0364                     __ptext2:	
  1622 ;; *************** function ___lwmod *****************
  1623 ;; Defined at:
  1624 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;  divisor         2    8[COMMON] unsigned int 
  1627 ;;  dividend        2   10[COMMON] unsigned int 
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;  counter         1   13[COMMON] unsigned char 
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  2    8[COMMON] unsigned int 
  1632 ;; Registers used:
  1633 ;;		wreg, status,2, status,0
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1639 ;;      Params:         4       0       0       0       0
  1640 ;;      Locals:         1       0       0       0       0
  1641 ;;      Temps:          1       0       0       0       0
  1642 ;;      Totals:         6       0       0       0       0
  1643 ;;Total ram usage:        6 bytes
  1644 ;; Hardware stack levels used: 1
  1645 ;; This function calls:
  1646 ;;		Nothing
  1647 ;; This function is called by:
  1648 ;;		_sprintf
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652     0364                     ___lwmod:	
  1653                           ;psect for function ___lwmod
  1654                           
  1655     0364                     l1402:	
  1656                           ;incstack = 0
  1657                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1658                           
  1659     0364  0878               	movf	___lwmod@divisor,w
  1660     0365  0479               	iorwf	___lwmod@divisor+1,w
  1661     0366  1903               	btfsc	3,2
  1662     0367  2B69               	goto	u831
  1663     0368  2B6A               	goto	u830
  1664     0369                     u831:
  1665     0369  2B99               	goto	l1420
  1666     036A                     u830:
  1667     036A                     l1404:
  1668     036A  01FD               	clrf	___lwmod@counter
  1669     036B  0AFD               	incf	___lwmod@counter,f
  1670     036C  2B78               	goto	l1410
  1671     036D                     l1406:
  1672     036D  3001               	movlw	1
  1673     036E                     u845:
  1674     036E  1003               	clrc
  1675     036F  0DF8               	rlf	___lwmod@divisor,f
  1676     0370  0DF9               	rlf	___lwmod@divisor+1,f
  1677     0371  3EFF               	addlw	-1
  1678     0372  1D03               	skipz
  1679     0373  2B6E               	goto	u845
  1680     0374                     l1408:
  1681     0374  3001               	movlw	1
  1682     0375  00FC               	movwf	??___lwmod
  1683     0376  087C               	movf	??___lwmod,w
  1684     0377  07FD               	addwf	___lwmod@counter,f
  1685     0378                     l1410:
  1686     0378  1FF9               	btfss	___lwmod@divisor+1,7
  1687     0379  2B7B               	goto	u851
  1688     037A  2B7C               	goto	u850
  1689     037B                     u851:
  1690     037B  2B6D               	goto	l1406
  1691     037C                     u850:
  1692     037C                     l1412:
  1693     037C  0879               	movf	___lwmod@divisor+1,w
  1694     037D  027B               	subwf	___lwmod@dividend+1,w
  1695     037E  1D03               	skipz
  1696     037F  2B82               	goto	u865
  1697     0380  0878               	movf	___lwmod@divisor,w
  1698     0381  027A               	subwf	___lwmod@dividend,w
  1699     0382                     u865:
  1700     0382  1C03               	skipc
  1701     0383  2B85               	goto	u861
  1702     0384  2B86               	goto	u860
  1703     0385                     u861:
  1704     0385  2B8C               	goto	l1416
  1705     0386                     u860:
  1706     0386                     l1414:
  1707     0386  0878               	movf	___lwmod@divisor,w
  1708     0387  02FA               	subwf	___lwmod@dividend,f
  1709     0388  0879               	movf	___lwmod@divisor+1,w
  1710     0389  1C03               	skipc
  1711     038A  03FB               	decf	___lwmod@dividend+1,f
  1712     038B  02FB               	subwf	___lwmod@dividend+1,f
  1713     038C                     l1416:
  1714     038C  3001               	movlw	1
  1715     038D                     u875:
  1716     038D  1003               	clrc
  1717     038E  0CF9               	rrf	___lwmod@divisor+1,f
  1718     038F  0CF8               	rrf	___lwmod@divisor,f
  1719     0390  3EFF               	addlw	-1
  1720     0391  1D03               	skipz
  1721     0392  2B8D               	goto	u875
  1722     0393                     l1418:
  1723     0393  3001               	movlw	1
  1724     0394  02FD               	subwf	___lwmod@counter,f
  1725     0395  1D03               	btfss	3,2
  1726     0396  2B98               	goto	u881
  1727     0397  2B99               	goto	u880
  1728     0398                     u881:
  1729     0398  2B7C               	goto	l1412
  1730     0399                     u880:
  1731     0399                     l1420:
  1732     0399  087B               	movf	___lwmod@dividend+1,w
  1733     039A  00F9               	movwf	?___lwmod+1
  1734     039B  087A               	movf	___lwmod@dividend,w
  1735     039C  00F8               	movwf	?___lwmod
  1736     039D                     l656:
  1737     039D  0008               	return
  1738     039E                     __end_of___lwmod:
  1739                           
  1740                           	psect	text3
  1741     03E0                     __ptext3:	
  1742 ;; *************** function ___lwdiv *****************
  1743 ;; Defined at:
  1744 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  divisor         2    0[COMMON] unsigned int 
  1747 ;;  dividend        2    2[COMMON] unsigned int 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  quotient        2    5[COMMON] unsigned int 
  1750 ;;  counter         1    7[COMMON] unsigned char 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  2    0[COMMON] unsigned int 
  1753 ;; Registers used:
  1754 ;;		wreg, status,2, status,0
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1760 ;;      Params:         4       0       0       0       0
  1761 ;;      Locals:         3       0       0       0       0
  1762 ;;      Temps:          1       0       0       0       0
  1763 ;;      Totals:         8       0       0       0       0
  1764 ;;Total ram usage:        8 bytes
  1765 ;; Hardware stack levels used: 1
  1766 ;; This function calls:
  1767 ;;		Nothing
  1768 ;; This function is called by:
  1769 ;;		_sprintf
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773     03E0                     ___lwdiv:	
  1774                           ;psect for function ___lwdiv
  1775                           
  1776     03E0                     l1376:	
  1777                           ;incstack = 0
  1778                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1779                           
  1780     03E0  01F5               	clrf	___lwdiv@quotient
  1781     03E1  01F6               	clrf	___lwdiv@quotient+1
  1782     03E2                     l1378:
  1783     03E2  0870               	movf	___lwdiv@divisor,w
  1784     03E3  0471               	iorwf	___lwdiv@divisor+1,w
  1785     03E4  1903               	btfsc	3,2
  1786     03E5  2BE7               	goto	u761
  1787     03E6  2BE8               	goto	u760
  1788     03E7                     u761:
  1789     03E7  2C1F               	goto	l1398
  1790     03E8                     u760:
  1791     03E8                     l1380:
  1792     03E8  01F7               	clrf	___lwdiv@counter
  1793     03E9  0AF7               	incf	___lwdiv@counter,f
  1794     03EA  2BF6               	goto	l1386
  1795     03EB                     l1382:
  1796     03EB  3001               	movlw	1
  1797     03EC                     u775:
  1798     03EC  1003               	clrc
  1799     03ED  0DF0               	rlf	___lwdiv@divisor,f
  1800     03EE  0DF1               	rlf	___lwdiv@divisor+1,f
  1801     03EF  3EFF               	addlw	-1
  1802     03F0  1D03               	skipz
  1803     03F1  2BEC               	goto	u775
  1804     03F2                     l1384:
  1805     03F2  3001               	movlw	1
  1806     03F3  00F4               	movwf	??___lwdiv
  1807     03F4  0874               	movf	??___lwdiv,w
  1808     03F5  07F7               	addwf	___lwdiv@counter,f
  1809     03F6                     l1386:
  1810     03F6  1FF1               	btfss	___lwdiv@divisor+1,7
  1811     03F7  2BF9               	goto	u781
  1812     03F8  2BFA               	goto	u780
  1813     03F9                     u781:
  1814     03F9  2BEB               	goto	l1382
  1815     03FA                     u780:
  1816     03FA                     l1388:
  1817     03FA  3001               	movlw	1
  1818     03FB                     u795:
  1819     03FB  1003               	clrc
  1820     03FC  0DF5               	rlf	___lwdiv@quotient,f
  1821     03FD  0DF6               	rlf	___lwdiv@quotient+1,f
  1822     03FE  3EFF               	addlw	-1
  1823     03FF  1D03               	skipz
  1824     0400  2BFB               	goto	u795
  1825     0401  0871               	movf	___lwdiv@divisor+1,w
  1826     0402  0273               	subwf	___lwdiv@dividend+1,w
  1827     0403  1D03               	skipz
  1828     0404  2C07               	goto	u805
  1829     0405  0870               	movf	___lwdiv@divisor,w
  1830     0406  0272               	subwf	___lwdiv@dividend,w
  1831     0407                     u805:
  1832     0407  1C03               	skipc
  1833     0408  2C0A               	goto	u801
  1834     0409  2C0B               	goto	u800
  1835     040A                     u801:
  1836     040A  2C12               	goto	l1394
  1837     040B                     u800:
  1838     040B                     l1390:
  1839     040B  0870               	movf	___lwdiv@divisor,w
  1840     040C  02F2               	subwf	___lwdiv@dividend,f
  1841     040D  0871               	movf	___lwdiv@divisor+1,w
  1842     040E  1C03               	skipc
  1843     040F  03F3               	decf	___lwdiv@dividend+1,f
  1844     0410  02F3               	subwf	___lwdiv@dividend+1,f
  1845     0411                     l1392:
  1846     0411  1475               	bsf	___lwdiv@quotient,0
  1847     0412                     l1394:
  1848     0412  3001               	movlw	1
  1849     0413                     u815:
  1850     0413  1003               	clrc
  1851     0414  0CF1               	rrf	___lwdiv@divisor+1,f
  1852     0415  0CF0               	rrf	___lwdiv@divisor,f
  1853     0416  3EFF               	addlw	-1
  1854     0417  1D03               	skipz
  1855     0418  2C13               	goto	u815
  1856     0419                     l1396:
  1857     0419  3001               	movlw	1
  1858     041A  02F7               	subwf	___lwdiv@counter,f
  1859     041B  1D03               	btfss	3,2
  1860     041C  2C1E               	goto	u821
  1861     041D  2C1F               	goto	u820
  1862     041E                     u821:
  1863     041E  2BFA               	goto	l1388
  1864     041F                     u820:
  1865     041F                     l1398:
  1866     041F  0876               	movf	___lwdiv@quotient+1,w
  1867     0420  00F1               	movwf	?___lwdiv+1
  1868     0421  0875               	movf	___lwdiv@quotient,w
  1869     0422  00F0               	movwf	?___lwdiv
  1870     0423                     l646:
  1871     0423  0008               	return
  1872     0424                     __end_of___lwdiv:
  1873                           
  1874                           	psect	text4
  1875     0294                     __ptext4:	
  1876 ;; *************** function _setup *****************
  1877 ;; Defined at:
  1878 ;;		line 122 in file "pruebaADXL345.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;		None
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;		None
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      void 
  1885 ;; Registers used:
  1886 ;;		wreg, status,2, status,0
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1892 ;;      Params:         0       0       0       0       0
  1893 ;;      Locals:         0       0       0       0       0
  1894 ;;      Temps:          0       0       0       0       0
  1895 ;;      Totals:         0       0       0       0       0
  1896 ;;Total ram usage:        0 bytes
  1897 ;; Hardware stack levels used: 1
  1898 ;; This function calls:
  1899 ;;		Nothing
  1900 ;; This function is called by:
  1901 ;;		_main
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905     0294                     _setup:	
  1906                           ;psect for function _setup
  1907                           
  1908     0294                     l1502:	
  1909                           ;incstack = 0
  1910                           ; Regs used in _setup: [wreg+status,2+status,0]
  1911                           
  1912                           
  1913                           ;pruebaADXL345.c: 123:     ANSEL = 0;
  1914     0294  1683               	bsf	3,5	;RP0=1, select bank3
  1915     0295  1703               	bsf	3,6	;RP1=1, select bank3
  1916     0296  0188               	clrf	8	;volatile
  1917                           
  1918                           ;pruebaADXL345.c: 124:     ANSELH = 0;
  1919     0297  0189               	clrf	9	;volatile
  1920     0298                     l1504:
  1921                           
  1922                           ;pruebaADXL345.c: 125:     TRISC1 = 0;
  1923     0298  1683               	bsf	3,5	;RP0=1, select bank1
  1924     0299  1303               	bcf	3,6	;RP1=0, select bank1
  1925     029A  1087               	bcf	7,1	;volatile
  1926     029B                     l1506:
  1927                           
  1928                           ;pruebaADXL345.c: 126:     TRISC2 = 0;
  1929     029B  1107               	bcf	7,2	;volatile
  1930     029C                     l1508:
  1931                           
  1932                           ;pruebaADXL345.c: 127:     TRISC6 = 0;
  1933     029C  1307               	bcf	7,6	;volatile
  1934     029D                     l1510:
  1935                           
  1936                           ;pruebaADXL345.c: 128:     TRISC7 = 0;
  1937     029D  1387               	bcf	7,7	;volatile
  1938                           
  1939                           ;pruebaADXL345.c: 129:     TRISA =0;
  1940     029E  0185               	clrf	5	;volatile
  1941                           
  1942                           ;pruebaADXL345.c: 130:     TRISB = 0;
  1943     029F  0186               	clrf	6	;volatile
  1944                           
  1945                           ;pruebaADXL345.c: 131:     TRISD = 0;
  1946     02A0  0188               	clrf	8	;volatile
  1947                           
  1948                           ;pruebaADXL345.c: 132:     PORTA = 0;
  1949     02A1  1283               	bcf	3,5	;RP0=0, select bank0
  1950     02A2  1303               	bcf	3,6	;RP1=0, select bank0
  1951     02A3  0185               	clrf	5	;volatile
  1952                           
  1953                           ;pruebaADXL345.c: 133:     PORTB = 0;
  1954     02A4  0186               	clrf	6	;volatile
  1955                           
  1956                           ;pruebaADXL345.c: 134:     PORTD = 0;
  1957     02A5  0188               	clrf	8	;volatile
  1958     02A6                     l1512:
  1959                           
  1960                           ;pruebaADXL345.c: 135:     PORTCbits.RC1 = 1;
  1961     02A6  1487               	bsf	7,1	;volatile
  1962     02A7                     l1514:
  1963                           
  1964                           ;pruebaADXL345.c: 136:     PORTCbits.RC2 = 1;
  1965     02A7  1507               	bsf	7,2	;volatile
  1966     02A8                     l1516:
  1967                           
  1968                           ;pruebaADXL345.c: 139:     OSCCONbits.IRCF = 0b0111;
  1969     02A8  3070               	movlw	112
  1970     02A9  1683               	bsf	3,5	;RP0=1, select bank1
  1971     02AA  1303               	bcf	3,6	;RP1=0, select bank1
  1972     02AB  048F               	iorwf	15,f	;volatile
  1973     02AC                     l1518:
  1974                           
  1975                           ;pruebaADXL345.c: 140:     OSCCONbits.SCS = 1;
  1976     02AC  140F               	bsf	15,0	;volatile
  1977     02AD                     l263:
  1978     02AD  0008               	return
  1979     02AE                     __end_of_setup:
  1980                           
  1981                           	psect	text5
  1982     052D                     __ptext5:	
  1983 ;; *************** function ___awdiv *****************
  1984 ;; Defined at:
  1985 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;  divisor         2    0[COMMON] int 
  1988 ;;  dividend        2    2[COMMON] int 
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;  quotient        2    7[COMMON] int 
  1991 ;;  sign            1    6[COMMON] unsigned char 
  1992 ;;  counter         1    5[COMMON] unsigned char 
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  2    0[COMMON] int 
  1995 ;; Registers used:
  1996 ;;		wreg, status,2, status,0
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2002 ;;      Params:         4       0       0       0       0
  2003 ;;      Locals:         4       0       0       0       0
  2004 ;;      Temps:          1       0       0       0       0
  2005 ;;      Totals:         9       0       0       0       0
  2006 ;;Total ram usage:        9 bytes
  2007 ;; Hardware stack levels used: 1
  2008 ;; This function calls:
  2009 ;;		Nothing
  2010 ;; This function is called by:
  2011 ;;		_main
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015     052D                     ___awdiv:	
  2016                           ;psect for function ___awdiv
  2017                           
  2018     052D                     l1572:	
  2019                           ;incstack = 0
  2020                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2021                           
  2022     052D  01F6               	clrf	___awdiv@sign
  2023     052E                     l1574:
  2024     052E  1FF1               	btfss	___awdiv@divisor+1,7
  2025     052F  2D31               	goto	u1031
  2026     0530  2D32               	goto	u1030
  2027     0531                     u1031:
  2028     0531  2D39               	goto	l1580
  2029     0532                     u1030:
  2030     0532                     l1576:
  2031     0532  09F0               	comf	___awdiv@divisor,f
  2032     0533  09F1               	comf	___awdiv@divisor+1,f
  2033     0534  0AF0               	incf	___awdiv@divisor,f
  2034     0535  1903               	skipnz
  2035     0536  0AF1               	incf	___awdiv@divisor+1,f
  2036     0537                     l1578:
  2037     0537  01F6               	clrf	___awdiv@sign
  2038     0538  0AF6               	incf	___awdiv@sign,f
  2039     0539                     l1580:
  2040     0539  1FF3               	btfss	___awdiv@dividend+1,7
  2041     053A  2D3C               	goto	u1041
  2042     053B  2D3D               	goto	u1040
  2043     053C                     u1041:
  2044     053C  2D46               	goto	l1586
  2045     053D                     u1040:
  2046     053D                     l1582:
  2047     053D  09F2               	comf	___awdiv@dividend,f
  2048     053E  09F3               	comf	___awdiv@dividend+1,f
  2049     053F  0AF2               	incf	___awdiv@dividend,f
  2050     0540  1903               	skipnz
  2051     0541  0AF3               	incf	___awdiv@dividend+1,f
  2052     0542                     l1584:
  2053     0542  3001               	movlw	1
  2054     0543  00F4               	movwf	??___awdiv
  2055     0544  0874               	movf	??___awdiv,w
  2056     0545  06F6               	xorwf	___awdiv@sign,f
  2057     0546                     l1586:
  2058     0546  01F7               	clrf	___awdiv@quotient
  2059     0547  01F8               	clrf	___awdiv@quotient+1
  2060     0548                     l1588:
  2061     0548  0870               	movf	___awdiv@divisor,w
  2062     0549  0471               	iorwf	___awdiv@divisor+1,w
  2063     054A  1903               	btfsc	3,2
  2064     054B  2D4D               	goto	u1051
  2065     054C  2D4E               	goto	u1050
  2066     054D                     u1051:
  2067     054D  2D85               	goto	l1608
  2068     054E                     u1050:
  2069     054E                     l1590:
  2070     054E  01F5               	clrf	___awdiv@counter
  2071     054F  0AF5               	incf	___awdiv@counter,f
  2072     0550  2D5C               	goto	l1596
  2073     0551                     l1592:
  2074     0551  3001               	movlw	1
  2075     0552                     u1065:
  2076     0552  1003               	clrc
  2077     0553  0DF0               	rlf	___awdiv@divisor,f
  2078     0554  0DF1               	rlf	___awdiv@divisor+1,f
  2079     0555  3EFF               	addlw	-1
  2080     0556  1D03               	skipz
  2081     0557  2D52               	goto	u1065
  2082     0558                     l1594:
  2083     0558  3001               	movlw	1
  2084     0559  00F4               	movwf	??___awdiv
  2085     055A  0874               	movf	??___awdiv,w
  2086     055B  07F5               	addwf	___awdiv@counter,f
  2087     055C                     l1596:
  2088     055C  1FF1               	btfss	___awdiv@divisor+1,7
  2089     055D  2D5F               	goto	u1071
  2090     055E  2D60               	goto	u1070
  2091     055F                     u1071:
  2092     055F  2D51               	goto	l1592
  2093     0560                     u1070:
  2094     0560                     l1598:
  2095     0560  3001               	movlw	1
  2096     0561                     u1085:
  2097     0561  1003               	clrc
  2098     0562  0DF7               	rlf	___awdiv@quotient,f
  2099     0563  0DF8               	rlf	___awdiv@quotient+1,f
  2100     0564  3EFF               	addlw	-1
  2101     0565  1D03               	skipz
  2102     0566  2D61               	goto	u1085
  2103     0567  0871               	movf	___awdiv@divisor+1,w
  2104     0568  0273               	subwf	___awdiv@dividend+1,w
  2105     0569  1D03               	skipz
  2106     056A  2D6D               	goto	u1095
  2107     056B  0870               	movf	___awdiv@divisor,w
  2108     056C  0272               	subwf	___awdiv@dividend,w
  2109     056D                     u1095:
  2110     056D  1C03               	skipc
  2111     056E  2D70               	goto	u1091
  2112     056F  2D71               	goto	u1090
  2113     0570                     u1091:
  2114     0570  2D78               	goto	l1604
  2115     0571                     u1090:
  2116     0571                     l1600:
  2117     0571  0870               	movf	___awdiv@divisor,w
  2118     0572  02F2               	subwf	___awdiv@dividend,f
  2119     0573  0871               	movf	___awdiv@divisor+1,w
  2120     0574  1C03               	skipc
  2121     0575  03F3               	decf	___awdiv@dividend+1,f
  2122     0576  02F3               	subwf	___awdiv@dividend+1,f
  2123     0577                     l1602:
  2124     0577  1477               	bsf	___awdiv@quotient,0
  2125     0578                     l1604:
  2126     0578  3001               	movlw	1
  2127     0579                     u1105:
  2128     0579  1003               	clrc
  2129     057A  0CF1               	rrf	___awdiv@divisor+1,f
  2130     057B  0CF0               	rrf	___awdiv@divisor,f
  2131     057C  3EFF               	addlw	-1
  2132     057D  1D03               	skipz
  2133     057E  2D79               	goto	u1105
  2134     057F                     l1606:
  2135     057F  3001               	movlw	1
  2136     0580  02F5               	subwf	___awdiv@counter,f
  2137     0581  1D03               	btfss	3,2
  2138     0582  2D84               	goto	u1111
  2139     0583  2D85               	goto	u1110
  2140     0584                     u1111:
  2141     0584  2D60               	goto	l1598
  2142     0585                     u1110:
  2143     0585                     l1608:
  2144     0585  0876               	movf	___awdiv@sign,w
  2145     0586  1903               	btfsc	3,2
  2146     0587  2D89               	goto	u1121
  2147     0588  2D8A               	goto	u1120
  2148     0589                     u1121:
  2149     0589  2D8F               	goto	l1612
  2150     058A                     u1120:
  2151     058A                     l1610:
  2152     058A  09F7               	comf	___awdiv@quotient,f
  2153     058B  09F8               	comf	___awdiv@quotient+1,f
  2154     058C  0AF7               	incf	___awdiv@quotient,f
  2155     058D  1903               	skipnz
  2156     058E  0AF8               	incf	___awdiv@quotient+1,f
  2157     058F                     l1612:
  2158     058F  0878               	movf	___awdiv@quotient+1,w
  2159     0590  00F1               	movwf	?___awdiv+1
  2160     0591  0877               	movf	___awdiv@quotient,w
  2161     0592  00F0               	movwf	?___awdiv
  2162     0593                     l527:
  2163     0593  0008               	return
  2164     0594                     __end_of___awdiv:
  2165                           
  2166                           	psect	text6
  2167     039E                     __ptext6:	
  2168 ;; *************** function _Lcd_Write_String *****************
  2169 ;; Defined at:
  2170 ;;		line 98 in file "LCD.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;  a               2    5[COMMON] PTR unsigned char 
  2173 ;;		 -> STR_4(4), s3(20), s2(20), s(20), 
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;  i               2   10[COMMON] int 
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      void 
  2178 ;; Registers used:
  2179 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2185 ;;      Params:         2       0       0       0       0
  2186 ;;      Locals:         2       0       0       0       0
  2187 ;;      Temps:          3       0       0       0       0
  2188 ;;      Totals:         7       0       0       0       0
  2189 ;;Total ram usage:        7 bytes
  2190 ;; Hardware stack levels used: 1
  2191 ;; Hardware stack levels required when called: 2
  2192 ;; This function calls:
  2193 ;;		_Lcd_Write_Char
  2194 ;; This function is called by:
  2195 ;;		_main
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199     039E                     _Lcd_Write_String:	
  2200                           ;psect for function _Lcd_Write_String
  2201                           
  2202     039E                     l1488:	
  2203                           ;incstack = 0
  2204                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2205                           
  2206                           
  2207                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  2208     039E  01FA               	clrf	Lcd_Write_String@i
  2209     039F  01FB               	clrf	Lcd_Write_String@i+1
  2210     03A0  2BC3               	goto	l1494
  2211     03A1                     l1490:
  2212                           
  2213                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  2214     03A1  087A               	movf	Lcd_Write_String@i,w
  2215     03A2  0775               	addwf	Lcd_Write_String@a,w
  2216     03A3  00F8               	movwf	??_Lcd_Write_String+1
  2217     03A4  0876               	movf	Lcd_Write_String@a+1,w
  2218     03A5  00F7               	movwf	??_Lcd_Write_String
  2219     03A6  1803               	skipnc
  2220     03A7  0AF7               	incf	??_Lcd_Write_String,f
  2221     03A8  1FFA               	btfss	Lcd_Write_String@i,7
  2222     03A9  2BAB               	goto	u940
  2223     03AA  03F7               	decf	??_Lcd_Write_String,f
  2224     03AB                     u940:
  2225     03AB  0877               	movf	??_Lcd_Write_String,w
  2226     03AC  00F9               	movwf	??_Lcd_Write_String+2
  2227     03AD  0879               	movf	??_Lcd_Write_String+2,w
  2228     03AE  1283               	bcf	3,5	;RP0=0, select bank0
  2229     03AF  1303               	bcf	3,6	;RP1=0, select bank0
  2230     03B0  00FF               	movwf	btemp+1
  2231     03B1  0878               	movf	??_Lcd_Write_String+1,w
  2232     03B2  0084               	movwf	4
  2233     03B3  120A  118A  2003  120A  118A  	fcall	stringtab
  2234     03B8  120A  118A  232F  120A  118A  	fcall	_Lcd_Write_Char
  2235     03BD                     l1492:
  2236     03BD  3001               	movlw	1
  2237     03BE  07FA               	addwf	Lcd_Write_String@i,f
  2238     03BF  1803               	skipnc
  2239     03C0  0AFB               	incf	Lcd_Write_String@i+1,f
  2240     03C1  3000               	movlw	0
  2241     03C2  07FB               	addwf	Lcd_Write_String@i+1,f
  2242     03C3                     l1494:
  2243     03C3  087A               	movf	Lcd_Write_String@i,w
  2244     03C4  0775               	addwf	Lcd_Write_String@a,w
  2245     03C5  00F8               	movwf	??_Lcd_Write_String+1
  2246     03C6  0876               	movf	Lcd_Write_String@a+1,w
  2247     03C7  00F7               	movwf	??_Lcd_Write_String
  2248     03C8  1803               	skipnc
  2249     03C9  0AF7               	incf	??_Lcd_Write_String,f
  2250     03CA  1FFA               	btfss	Lcd_Write_String@i,7
  2251     03CB  2BCD               	goto	u950
  2252     03CC  03F7               	decf	??_Lcd_Write_String,f
  2253     03CD                     u950:
  2254     03CD  0877               	movf	??_Lcd_Write_String,w
  2255     03CE  00F9               	movwf	??_Lcd_Write_String+2
  2256     03CF  0879               	movf	??_Lcd_Write_String+2,w
  2257     03D0  1283               	bcf	3,5	;RP0=0, select bank0
  2258     03D1  1303               	bcf	3,6	;RP1=0, select bank0
  2259     03D2  00FF               	movwf	btemp+1
  2260     03D3  0878               	movf	??_Lcd_Write_String+1,w
  2261     03D4  0084               	movwf	4
  2262     03D5  120A  118A  2003  120A  118A  	fcall	stringtab
  2263     03DA  3A00               	xorlw	0
  2264     03DB  1D03               	skipz
  2265     03DC  2BDE               	goto	u961
  2266     03DD  2BDF               	goto	u960
  2267     03DE                     u961:
  2268     03DE  2BA1               	goto	l1490
  2269     03DF                     u960:
  2270     03DF                     l104:
  2271     03DF  0008               	return
  2272     03E0                     __end_of_Lcd_Write_String:
  2273                           
  2274                           	psect	text7
  2275     032F                     __ptext7:	
  2276 ;; *************** function _Lcd_Write_Char *****************
  2277 ;; Defined at:
  2278 ;;		line 83 in file "LCD.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;  a               1    wreg     unsigned char 
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;  a               1    4[COMMON] unsigned char 
  2283 ;;  y               1    3[COMMON] unsigned char 
  2284 ;;  temp            1    2[COMMON] unsigned char 
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  1    wreg      void 
  2287 ;; Registers used:
  2288 ;;		wreg, status,2, status,0, pclath, cstack
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2294 ;;      Params:         0       0       0       0       0
  2295 ;;      Locals:         3       0       0       0       0
  2296 ;;      Temps:          1       0       0       0       0
  2297 ;;      Totals:         4       0       0       0       0
  2298 ;;Total ram usage:        4 bytes
  2299 ;; Hardware stack levels used: 1
  2300 ;; Hardware stack levels required when called: 1
  2301 ;; This function calls:
  2302 ;;		_Lcd_Port
  2303 ;; This function is called by:
  2304 ;;		_Lcd_Write_String
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308     032F                     _Lcd_Write_Char:	
  2309                           ;psect for function _Lcd_Write_Char
  2310                           
  2311                           
  2312                           ;incstack = 0
  2313                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2314                           ;Lcd_Write_Char@a stored from wreg
  2315     032F  00F4               	movwf	Lcd_Write_Char@a
  2316     0330                     l1332:
  2317                           
  2318                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  2319     0330  0874               	movf	Lcd_Write_Char@a,w
  2320     0331  390F               	andlw	15
  2321     0332  00F2               	movwf	Lcd_Write_Char@temp
  2322                           
  2323                           ;LCD.c: 86:     y = a & 0xF0;
  2324     0333  0874               	movf	Lcd_Write_Char@a,w
  2325     0334  39F0               	andlw	240
  2326     0335  00F3               	movwf	Lcd_Write_Char@y
  2327     0336                     l1334:
  2328                           
  2329                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  2330     0336  1283               	bcf	3,5	;RP0=0, select bank0
  2331     0337  1303               	bcf	3,6	;RP1=0, select bank0
  2332     0338  1508               	bsf	8,2	;volatile
  2333     0339                     l1336:
  2334                           
  2335                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  2336     0339  0873               	movf	Lcd_Write_Char@y,w
  2337     033A  00F1               	movwf	??_Lcd_Write_Char
  2338     033B  3004               	movlw	4
  2339     033C                     u685:
  2340     033C  1003               	clrc
  2341     033D  0CF1               	rrf	??_Lcd_Write_Char,f
  2342     033E  3EFF               	addlw	-1
  2343     033F  1D03               	skipz
  2344     0340  2B3C               	goto	u685
  2345     0341  0871               	movf	??_Lcd_Write_Char,w
  2346     0342  120A  118A  22AE  120A  118A  	fcall	_Lcd_Port
  2347     0347                     l1338:
  2348                           
  2349                           ;LCD.c: 89:     RD3 = 1;
  2350     0347  1283               	bcf	3,5	;RP0=0, select bank0
  2351     0348  1303               	bcf	3,6	;RP1=0, select bank0
  2352     0349  1588               	bsf	8,3	;volatile
  2353     034A                     l1340:
  2354                           
  2355                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2356     034A  301A               	movlw	26
  2357     034B  00F1               	movwf	??_Lcd_Write_Char
  2358     034C                     u1207:
  2359     034C  0BF1               	decfsz	??_Lcd_Write_Char,f
  2360     034D  2B4C               	goto	u1207
  2361     034E  0000               	nop
  2362     034F                     l1342:
  2363                           
  2364                           ;LCD.c: 91:     RD3 = 0;
  2365     034F  1283               	bcf	3,5	;RP0=0, select bank0
  2366     0350  1303               	bcf	3,6	;RP1=0, select bank0
  2367     0351  1188               	bcf	8,3	;volatile
  2368     0352                     l1344:
  2369                           
  2370                           ;LCD.c: 92:     Lcd_Port(temp);
  2371     0352  0872               	movf	Lcd_Write_Char@temp,w
  2372     0353  120A  118A  22AE  120A  118A  	fcall	_Lcd_Port
  2373     0358                     l1346:
  2374                           
  2375                           ;LCD.c: 93:     RD3 = 1;
  2376     0358  1283               	bcf	3,5	;RP0=0, select bank0
  2377     0359  1303               	bcf	3,6	;RP1=0, select bank0
  2378     035A  1588               	bsf	8,3	;volatile
  2379     035B                     l1348:
  2380                           
  2381                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2382     035B  301A               	movlw	26
  2383     035C  00F1               	movwf	??_Lcd_Write_Char
  2384     035D                     u1217:
  2385     035D  0BF1               	decfsz	??_Lcd_Write_Char,f
  2386     035E  2B5D               	goto	u1217
  2387     035F  0000               	nop
  2388     0360                     l1350:
  2389                           
  2390                           ;LCD.c: 95:     RD3 = 0;
  2391     0360  1283               	bcf	3,5	;RP0=0, select bank0
  2392     0361  1303               	bcf	3,6	;RP1=0, select bank0
  2393     0362  1188               	bcf	8,3	;volatile
  2394     0363                     l98:
  2395     0363  0008               	return
  2396     0364                     __end_of_Lcd_Write_Char:
  2397                           
  2398                           	psect	text8
  2399     0424                     __ptext8:	
  2400 ;; *************** function _Lcd_Set_Cursor *****************
  2401 ;; Defined at:
  2402 ;;		line 48 in file "LCD.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;  a               1    wreg     unsigned char 
  2405 ;;  b               1    4[COMMON] unsigned char 
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;  a               1    6[COMMON] unsigned char 
  2408 ;;  temp            1    9[COMMON] unsigned char 
  2409 ;;  y               1    8[COMMON] unsigned char 
  2410 ;;  z               1    7[COMMON] unsigned char 
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      void 
  2413 ;; Registers used:
  2414 ;;		wreg, status,2, status,0, pclath, cstack
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2420 ;;      Params:         1       0       0       0       0
  2421 ;;      Locals:         4       0       0       0       0
  2422 ;;      Temps:          1       0       0       0       0
  2423 ;;      Totals:         6       0       0       0       0
  2424 ;;Total ram usage:        6 bytes
  2425 ;; Hardware stack levels used: 1
  2426 ;; Hardware stack levels required when called: 2
  2427 ;; This function calls:
  2428 ;;		_Lcd_Cmd
  2429 ;; This function is called by:
  2430 ;;		_main
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434     0424                     _Lcd_Set_Cursor:	
  2435                           ;psect for function _Lcd_Set_Cursor
  2436                           
  2437                           
  2438                           ;incstack = 0
  2439                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2440                           ;Lcd_Set_Cursor@a stored from wreg
  2441     0424  00F6               	movwf	Lcd_Set_Cursor@a
  2442     0425                     l1458:
  2443                           
  2444                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2445     0425  0376               	decf	Lcd_Set_Cursor@a,w
  2446     0426  1D03               	btfss	3,2
  2447     0427  2C29               	goto	u901
  2448     0428  2C2A               	goto	u900
  2449     0429                     u901:
  2450     0429  2C47               	goto	l1468
  2451     042A                     u900:
  2452     042A                     l1460:
  2453                           
  2454                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2455     042A  0874               	movf	Lcd_Set_Cursor@b,w
  2456     042B  3E7F               	addlw	127
  2457     042C  00F9               	movwf	Lcd_Set_Cursor@temp
  2458                           
  2459                           ;LCD.c: 52:         z = temp >> 4;
  2460     042D  0879               	movf	Lcd_Set_Cursor@temp,w
  2461     042E  00F5               	movwf	??_Lcd_Set_Cursor
  2462     042F  3004               	movlw	4
  2463     0430                     u915:
  2464     0430  1003               	clrc
  2465     0431  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2466     0432  3EFF               	addlw	-1
  2467     0433  1D03               	skipz
  2468     0434  2C30               	goto	u915
  2469     0435  0875               	movf	??_Lcd_Set_Cursor,w
  2470     0436  00F7               	movwf	Lcd_Set_Cursor@z
  2471     0437                     l1462:
  2472                           
  2473                           ;LCD.c: 53:         y = temp & 0x0F;
  2474     0437  0879               	movf	Lcd_Set_Cursor@temp,w
  2475     0438  390F               	andlw	15
  2476     0439  00F8               	movwf	Lcd_Set_Cursor@y
  2477     043A                     l1464:
  2478                           
  2479                           ;LCD.c: 54:         Lcd_Cmd(z);
  2480     043A  0877               	movf	Lcd_Set_Cursor@z,w
  2481     043B  120A  118A  227A  120A  118A  	fcall	_Lcd_Cmd
  2482     0440                     l1466:
  2483                           
  2484                           ;LCD.c: 55:         Lcd_Cmd(y);
  2485     0440  0878               	movf	Lcd_Set_Cursor@y,w
  2486     0441  120A  118A  227A  120A  118A  	fcall	_Lcd_Cmd
  2487                           
  2488                           ;LCD.c: 56:     } else if (a == 2) {
  2489     0446  2C69               	goto	l92
  2490     0447                     l1468:
  2491     0447  3002               	movlw	2
  2492     0448  0676               	xorwf	Lcd_Set_Cursor@a,w
  2493     0449  1D03               	btfss	3,2
  2494     044A  2C4C               	goto	u921
  2495     044B  2C4D               	goto	u920
  2496     044C                     u921:
  2497     044C  2C69               	goto	l92
  2498     044D                     u920:
  2499     044D                     l1470:
  2500                           
  2501                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2502     044D  0874               	movf	Lcd_Set_Cursor@b,w
  2503     044E  3EBF               	addlw	191
  2504     044F  00F9               	movwf	Lcd_Set_Cursor@temp
  2505                           
  2506                           ;LCD.c: 58:         z = temp >> 4;
  2507     0450  0879               	movf	Lcd_Set_Cursor@temp,w
  2508     0451  00F5               	movwf	??_Lcd_Set_Cursor
  2509     0452  3004               	movlw	4
  2510     0453                     u935:
  2511     0453  1003               	clrc
  2512     0454  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2513     0455  3EFF               	addlw	-1
  2514     0456  1D03               	skipz
  2515     0457  2C53               	goto	u935
  2516     0458  0875               	movf	??_Lcd_Set_Cursor,w
  2517     0459  00F7               	movwf	Lcd_Set_Cursor@z
  2518     045A                     l1472:
  2519                           
  2520                           ;LCD.c: 59:         y = temp & 0x0F;
  2521     045A  0879               	movf	Lcd_Set_Cursor@temp,w
  2522     045B  390F               	andlw	15
  2523     045C  00F8               	movwf	Lcd_Set_Cursor@y
  2524     045D                     l1474:
  2525                           
  2526                           ;LCD.c: 60:         Lcd_Cmd(z);
  2527     045D  0877               	movf	Lcd_Set_Cursor@z,w
  2528     045E  120A  118A  227A  120A  118A  	fcall	_Lcd_Cmd
  2529     0463                     l1476:
  2530                           
  2531                           ;LCD.c: 61:         Lcd_Cmd(y);
  2532     0463  0878               	movf	Lcd_Set_Cursor@y,w
  2533     0464  120A  118A  227A  120A  118A  	fcall	_Lcd_Cmd
  2534     0469                     l92:
  2535     0469  0008               	return
  2536     046A                     __end_of_Lcd_Set_Cursor:
  2537                           
  2538                           	psect	text9
  2539     046A                     __ptext9:	
  2540 ;; *************** function _Lcd_Init *****************
  2541 ;; Defined at:
  2542 ;;		line 65 in file "LCD.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;		None
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;		None
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  1    wreg      void 
  2549 ;; Registers used:
  2550 ;;		wreg, status,2, status,0, pclath, cstack
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2556 ;;      Params:         0       0       0       0       0
  2557 ;;      Locals:         0       0       0       0       0
  2558 ;;      Temps:          2       0       0       0       0
  2559 ;;      Totals:         2       0       0       0       0
  2560 ;;Total ram usage:        2 bytes
  2561 ;; Hardware stack levels used: 1
  2562 ;; Hardware stack levels required when called: 2
  2563 ;; This function calls:
  2564 ;;		_Lcd_Cmd
  2565 ;;		_Lcd_Port
  2566 ;; This function is called by:
  2567 ;;		_main
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571     046A                     _Lcd_Init:	
  2572                           ;psect for function _Lcd_Init
  2573                           
  2574     046A                     l1478:	
  2575                           ;incstack = 0
  2576                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2577                           
  2578                           
  2579                           ;LCD.c: 66:     Lcd_Port(0x00);
  2580     046A  3000               	movlw	0
  2581     046B  120A  118A  22AE  120A  118A  	fcall	_Lcd_Port
  2582     0470                     l1480:
  2583                           
  2584                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2585     0470  3034               	movlw	52
  2586     0471  00F5               	movwf	??_Lcd_Init+1
  2587     0472  30F1               	movlw	241
  2588     0473  00F4               	movwf	??_Lcd_Init
  2589     0474                     u1227:
  2590     0474  0BF4               	decfsz	??_Lcd_Init,f
  2591     0475  2C74               	goto	u1227
  2592     0476  0BF5               	decfsz	??_Lcd_Init+1,f
  2593     0477  2C74               	goto	u1227
  2594     0478  2C79               	nop2
  2595     0479                     l1482:
  2596                           
  2597                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2598     0479  3003               	movlw	3
  2599     047A  120A  118A  227A  120A  118A  	fcall	_Lcd_Cmd
  2600                           
  2601                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2602     047F  300D               	movlw	13
  2603     0480  00F5               	movwf	??_Lcd_Init+1
  2604     0481  30FB               	movlw	251
  2605     0482  00F4               	movwf	??_Lcd_Init
  2606     0483                     u1237:
  2607     0483  0BF4               	decfsz	??_Lcd_Init,f
  2608     0484  2C83               	goto	u1237
  2609     0485  0BF5               	decfsz	??_Lcd_Init+1,f
  2610     0486  2C83               	goto	u1237
  2611     0487  2C88               	nop2
  2612     0488                     l1484:
  2613                           
  2614                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2615     0488  3003               	movlw	3
  2616     0489  120A  118A  227A  120A  118A  	fcall	_Lcd_Cmd
  2617     048E                     l1486:
  2618                           
  2619                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2620     048E  301D               	movlw	29
  2621     048F  00F5               	movwf	??_Lcd_Init+1
  2622     0490  3091               	movlw	145
  2623     0491  00F4               	movwf	??_Lcd_Init
  2624     0492                     u1247:
  2625     0492  0BF4               	decfsz	??_Lcd_Init,f
  2626     0493  2C92               	goto	u1247
  2627     0494  0BF5               	decfsz	??_Lcd_Init+1,f
  2628     0495  2C92               	goto	u1247
  2629                           
  2630                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2631     0496  3003               	movlw	3
  2632     0497  120A  118A  227A  120A  118A  	fcall	_Lcd_Cmd
  2633                           
  2634                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2635     049C  3002               	movlw	2
  2636     049D  120A  118A  227A  120A  118A  	fcall	_Lcd_Cmd
  2637                           
  2638                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  2639     04A2  3002               	movlw	2
  2640     04A3  120A  118A  227A  120A  118A  	fcall	_Lcd_Cmd
  2641                           
  2642                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  2643     04A8  3008               	movlw	8
  2644     04A9  120A  118A  227A  120A  118A  	fcall	_Lcd_Cmd
  2645                           
  2646                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  2647     04AE  3000               	movlw	0
  2648     04AF  120A  118A  227A  120A  118A  	fcall	_Lcd_Cmd
  2649                           
  2650                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  2651     04B4  300C               	movlw	12
  2652     04B5  120A  118A  227A  120A  118A  	fcall	_Lcd_Cmd
  2653                           
  2654                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  2655     04BA  3000               	movlw	0
  2656     04BB  120A  118A  227A  120A  118A  	fcall	_Lcd_Cmd
  2657                           
  2658                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  2659     04C0  3006               	movlw	6
  2660     04C1  120A  118A  227A  120A  118A  	fcall	_Lcd_Cmd
  2661     04C6                     l95:
  2662     04C6  0008               	return
  2663     04C7                     __end_of_Lcd_Init:
  2664                           
  2665                           	psect	text10
  2666     026D                     __ptext10:	
  2667 ;; *************** function _Lcd_Clear *****************
  2668 ;; Defined at:
  2669 ;;		line 43 in file "LCD.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;		None
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;		None
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		wreg, status,2, status,0, pclath, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2683 ;;      Params:         0       0       0       0       0
  2684 ;;      Locals:         0       0       0       0       0
  2685 ;;      Temps:          0       0       0       0       0
  2686 ;;      Totals:         0       0       0       0       0
  2687 ;;Total ram usage:        0 bytes
  2688 ;; Hardware stack levels used: 1
  2689 ;; Hardware stack levels required when called: 2
  2690 ;; This function calls:
  2691 ;;		_Lcd_Cmd
  2692 ;; This function is called by:
  2693 ;;		_main
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697     026D                     _Lcd_Clear:	
  2698                           ;psect for function _Lcd_Clear
  2699                           
  2700     026D                     l1456:	
  2701                           ;incstack = 0
  2702                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2703                           
  2704                           
  2705                           ;LCD.c: 44:     Lcd_Cmd(0);
  2706     026D  3000               	movlw	0
  2707     026E  120A  118A  227A  120A  118A  	fcall	_Lcd_Cmd
  2708                           
  2709                           ;LCD.c: 45:     Lcd_Cmd(1);
  2710     0273  3001               	movlw	1
  2711     0274  120A  118A  227A  120A  118A  	fcall	_Lcd_Cmd
  2712     0279                     l86:
  2713     0279  0008               	return
  2714     027A                     __end_of_Lcd_Clear:
  2715                           
  2716                           	psect	text11
  2717     027A                     __ptext11:	
  2718 ;; *************** function _Lcd_Cmd *****************
  2719 ;; Defined at:
  2720 ;;		line 35 in file "LCD.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;  a               1    wreg     unsigned char 
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;  a               1    3[COMMON] unsigned char 
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      void 
  2727 ;; Registers used:
  2728 ;;		wreg, status,2, status,0, pclath, cstack
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2734 ;;      Params:         0       0       0       0       0
  2735 ;;      Locals:         1       0       0       0       0
  2736 ;;      Temps:          2       0       0       0       0
  2737 ;;      Totals:         3       0       0       0       0
  2738 ;;Total ram usage:        3 bytes
  2739 ;; Hardware stack levels used: 1
  2740 ;; Hardware stack levels required when called: 1
  2741 ;; This function calls:
  2742 ;;		_Lcd_Port
  2743 ;; This function is called by:
  2744 ;;		_Lcd_Clear
  2745 ;;		_Lcd_Set_Cursor
  2746 ;;		_Lcd_Init
  2747 ;;		_Lcd_Shift_Right
  2748 ;;		_Lcd_Shift_Left
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752     027A                     _Lcd_Cmd:	
  2753                           ;psect for function _Lcd_Cmd
  2754                           
  2755                           
  2756                           ;incstack = 0
  2757                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2758                           ;Lcd_Cmd@a stored from wreg
  2759     027A  00F3               	movwf	Lcd_Cmd@a
  2760     027B                     l1322:
  2761                           
  2762                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  2763     027B  1283               	bcf	3,5	;RP0=0, select bank0
  2764     027C  1303               	bcf	3,6	;RP1=0, select bank0
  2765     027D  1108               	bcf	8,2	;volatile
  2766     027E                     l1324:
  2767                           
  2768                           ;LCD.c: 37:     Lcd_Port(a);
  2769     027E  0873               	movf	Lcd_Cmd@a,w
  2770     027F  120A  118A  22AE  120A  118A  	fcall	_Lcd_Port
  2771     0284                     l1326:
  2772                           
  2773                           ;LCD.c: 38:     RD3 = 1;
  2774     0284  1283               	bcf	3,5	;RP0=0, select bank0
  2775     0285  1303               	bcf	3,6	;RP1=0, select bank0
  2776     0286  1588               	bsf	8,3	;volatile
  2777     0287                     l1328:
  2778                           
  2779                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2780     0287  300B               	movlw	11
  2781     0288  00F2               	movwf	??_Lcd_Cmd+1
  2782     0289  3062               	movlw	98
  2783     028A  00F1               	movwf	??_Lcd_Cmd
  2784     028B                     u1257:
  2785     028B  0BF1               	decfsz	??_Lcd_Cmd,f
  2786     028C  2A8B               	goto	u1257
  2787     028D  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2788     028E  2A8B               	goto	u1257
  2789     028F  0000               	nop
  2790     0290                     l1330:
  2791                           
  2792                           ;LCD.c: 40:     RD3 = 0;
  2793     0290  1283               	bcf	3,5	;RP0=0, select bank0
  2794     0291  1303               	bcf	3,6	;RP1=0, select bank0
  2795     0292  1188               	bcf	8,3	;volatile
  2796     0293                     l83:
  2797     0293  0008               	return
  2798     0294                     __end_of_Lcd_Cmd:
  2799                           
  2800                           	psect	text12
  2801     02AE                     __ptext12:	
  2802 ;; *************** function _Lcd_Port *****************
  2803 ;; Defined at:
  2804 ;;		line 13 in file "LCD.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;  a               1    wreg     unsigned char 
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;  a               1    0[COMMON] unsigned char 
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      void 
  2811 ;; Registers used:
  2812 ;;		wreg
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2818 ;;      Params:         0       0       0       0       0
  2819 ;;      Locals:         1       0       0       0       0
  2820 ;;      Temps:          0       0       0       0       0
  2821 ;;      Totals:         1       0       0       0       0
  2822 ;;Total ram usage:        1 bytes
  2823 ;; Hardware stack levels used: 1
  2824 ;; This function calls:
  2825 ;;		Nothing
  2826 ;; This function is called by:
  2827 ;;		_Lcd_Cmd
  2828 ;;		_Lcd_Init
  2829 ;;		_Lcd_Write_Char
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833     02AE                     _Lcd_Port:	
  2834                           ;psect for function _Lcd_Port
  2835                           
  2836                           
  2837                           ;incstack = 0
  2838                           ; Regs used in _Lcd_Port: [wreg]
  2839                           ;Lcd_Port@a stored from wreg
  2840     02AE  00F0               	movwf	Lcd_Port@a
  2841     02AF                     l1308:
  2842                           
  2843                           ;LCD.c: 14:     if (a & 1)
  2844     02AF  1C70               	btfss	Lcd_Port@a,0
  2845     02B0  2AB2               	goto	u621
  2846     02B1  2AB3               	goto	u620
  2847     02B2                     u621:
  2848     02B2  2AB7               	goto	l72
  2849     02B3                     u620:
  2850     02B3                     l1310:
  2851                           
  2852                           ;LCD.c: 15:         RD4 = 1;
  2853     02B3  1283               	bcf	3,5	;RP0=0, select bank0
  2854     02B4  1303               	bcf	3,6	;RP1=0, select bank0
  2855     02B5  1608               	bsf	8,4	;volatile
  2856     02B6  2ABA               	goto	l73
  2857     02B7                     l72:	
  2858                           ;LCD.c: 16:     else
  2859                           
  2860                           
  2861                           ;LCD.c: 17:         RD4 = 0;
  2862     02B7  1283               	bcf	3,5	;RP0=0, select bank0
  2863     02B8  1303               	bcf	3,6	;RP1=0, select bank0
  2864     02B9  1208               	bcf	8,4	;volatile
  2865     02BA                     l73:
  2866                           
  2867                           ;LCD.c: 19:     if (a & 2)
  2868     02BA  1CF0               	btfss	Lcd_Port@a,1
  2869     02BB  2ABD               	goto	u631
  2870     02BC  2ABE               	goto	u630
  2871     02BD                     u631:
  2872     02BD  2AC0               	goto	l74
  2873     02BE                     u630:
  2874     02BE                     l1312:
  2875                           
  2876                           ;LCD.c: 20:         RD5 = 1;
  2877     02BE  1688               	bsf	8,5	;volatile
  2878     02BF  2AC1               	goto	l75
  2879     02C0                     l74:	
  2880                           ;LCD.c: 21:     else
  2881                           
  2882                           
  2883                           ;LCD.c: 22:         RD5 = 0;
  2884     02C0  1288               	bcf	8,5	;volatile
  2885     02C1                     l75:
  2886                           
  2887                           ;LCD.c: 24:     if (a & 4)
  2888     02C1  1D70               	btfss	Lcd_Port@a,2
  2889     02C2  2AC4               	goto	u641
  2890     02C3  2AC5               	goto	u640
  2891     02C4                     u641:
  2892     02C4  2AC7               	goto	l76
  2893     02C5                     u640:
  2894     02C5                     l1314:
  2895                           
  2896                           ;LCD.c: 25:         RD6 = 1;
  2897     02C5  1708               	bsf	8,6	;volatile
  2898     02C6  2AC8               	goto	l77
  2899     02C7                     l76:	
  2900                           ;LCD.c: 26:     else
  2901                           
  2902                           
  2903                           ;LCD.c: 27:         RD6 = 0;
  2904     02C7  1308               	bcf	8,6	;volatile
  2905     02C8                     l77:
  2906                           
  2907                           ;LCD.c: 29:     if (a & 8)
  2908     02C8  1DF0               	btfss	Lcd_Port@a,3
  2909     02C9  2ACB               	goto	u651
  2910     02CA  2ACC               	goto	u650
  2911     02CB                     u651:
  2912     02CB  2ACE               	goto	l78
  2913     02CC                     u650:
  2914     02CC                     l1316:
  2915                           
  2916                           ;LCD.c: 30:         RD7 = 1;
  2917     02CC  1788               	bsf	8,7	;volatile
  2918     02CD  2ACF               	goto	l80
  2919     02CE                     l78:	
  2920                           ;LCD.c: 31:     else
  2921                           
  2922                           
  2923                           ;LCD.c: 32:         RD7 = 0;
  2924     02CE  1388               	bcf	8,7	;volatile
  2925     02CF                     l80:
  2926     02CF  0008               	return
  2927     02D0                     __end_of_Lcd_Port:
  2928                           
  2929                           	psect	text13
  2930     0256                     __ptext13:	
  2931 ;; *************** function _I2C_Master_Write *****************
  2932 ;; Defined at:
  2933 ;;		line 65 in file "I2C.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  d               2    0[COMMON] unsigned int 
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;		None
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  1    wreg      void 
  2940 ;; Registers used:
  2941 ;;		wreg, status,2, status,0, pclath, cstack
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2947 ;;      Params:         2       0       0       0       0
  2948 ;;      Locals:         0       0       0       0       0
  2949 ;;      Temps:          0       0       0       0       0
  2950 ;;      Totals:         2       0       0       0       0
  2951 ;;Total ram usage:        2 bytes
  2952 ;; Hardware stack levels used: 1
  2953 ;; Hardware stack levels required when called: 1
  2954 ;; This function calls:
  2955 ;;		_I2C_Master_Wait
  2956 ;; This function is called by:
  2957 ;;		_main
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961     0256                     _I2C_Master_Write:	
  2962                           ;psect for function _I2C_Master_Write
  2963                           
  2964     0256                     l1436:	
  2965                           ;incstack = 0
  2966                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2967                           
  2968                           
  2969                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2970     0256  120A  118A  2260  120A  118A  	fcall	_I2C_Master_Wait
  2971     025B                     l1438:
  2972                           
  2973                           ;I2C.c: 68:     SSPBUF = d;
  2974     025B  0870               	movf	I2C_Master_Write@d,w
  2975     025C  1283               	bcf	3,5	;RP0=0, select bank0
  2976     025D  1303               	bcf	3,6	;RP1=0, select bank0
  2977     025E  0093               	movwf	19	;volatile
  2978     025F                     l47:
  2979     025F  0008               	return
  2980     0260                     __end_of_I2C_Master_Write:
  2981                           
  2982                           	psect	text14
  2983     024D                     __ptext14:	
  2984 ;; *************** function _I2C_Master_Stop *****************
  2985 ;; Defined at:
  2986 ;;		line 55 in file "I2C.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;		None
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;		None
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  1    wreg      void 
  2993 ;; Registers used:
  2994 ;;		wreg, status,2, status,0, pclath, cstack
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3000 ;;      Params:         0       0       0       0       0
  3001 ;;      Locals:         0       0       0       0       0
  3002 ;;      Temps:          0       0       0       0       0
  3003 ;;      Totals:         0       0       0       0       0
  3004 ;;Total ram usage:        0 bytes
  3005 ;; Hardware stack levels used: 1
  3006 ;; Hardware stack levels required when called: 1
  3007 ;; This function calls:
  3008 ;;		_I2C_Master_Wait
  3009 ;; This function is called by:
  3010 ;;		_main
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014     024D                     _I2C_Master_Stop:	
  3015                           ;psect for function _I2C_Master_Stop
  3016                           
  3017     024D                     l1432:	
  3018                           ;incstack = 0
  3019                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3020                           
  3021                           
  3022                           ;I2C.c: 57:     I2C_Master_Wait();
  3023     024D  120A  118A  2260  120A  118A  	fcall	_I2C_Master_Wait
  3024     0252                     l1434:
  3025                           
  3026                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3027     0252  1683               	bsf	3,5	;RP0=1, select bank1
  3028     0253  1303               	bcf	3,6	;RP1=0, select bank1
  3029     0254  1511               	bsf	17,2	;volatile
  3030     0255                     l44:
  3031     0255  0008               	return
  3032     0256                     __end_of_I2C_Master_Stop:
  3033                           
  3034                           	psect	text15
  3035     0244                     __ptext15:	
  3036 ;; *************** function _I2C_Master_Start *****************
  3037 ;; Defined at:
  3038 ;;		line 39 in file "I2C.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;		None
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;		None
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  1    wreg      void 
  3045 ;; Registers used:
  3046 ;;		wreg, status,2, status,0, pclath, cstack
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3052 ;;      Params:         0       0       0       0       0
  3053 ;;      Locals:         0       0       0       0       0
  3054 ;;      Temps:          0       0       0       0       0
  3055 ;;      Totals:         0       0       0       0       0
  3056 ;;Total ram usage:        0 bytes
  3057 ;; Hardware stack levels used: 1
  3058 ;; Hardware stack levels required when called: 1
  3059 ;; This function calls:
  3060 ;;		_I2C_Master_Wait
  3061 ;; This function is called by:
  3062 ;;		_main
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066     0244                     _I2C_Master_Start:	
  3067                           ;psect for function _I2C_Master_Start
  3068                           
  3069     0244                     l1424:	
  3070                           ;incstack = 0
  3071                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3072                           
  3073                           
  3074                           ;I2C.c: 41:     I2C_Master_Wait();
  3075     0244  120A  118A  2260  120A  118A  	fcall	_I2C_Master_Wait
  3076     0249                     l1426:
  3077                           
  3078                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3079     0249  1683               	bsf	3,5	;RP0=1, select bank1
  3080     024A  1303               	bcf	3,6	;RP1=0, select bank1
  3081     024B  1411               	bsf	17,0	;volatile
  3082     024C                     l38:
  3083     024C  0008               	return
  3084     024D                     __end_of_I2C_Master_Start:
  3085                           
  3086                           	psect	text16
  3087     023B                     __ptext16:	
  3088 ;; *************** function _I2C_Master_RepeatedStart *****************
  3089 ;; Defined at:
  3090 ;;		line 47 in file "I2C.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;		None
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;		None
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      void 
  3097 ;; Registers used:
  3098 ;;		wreg, status,2, status,0, pclath, cstack
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3104 ;;      Params:         0       0       0       0       0
  3105 ;;      Locals:         0       0       0       0       0
  3106 ;;      Temps:          0       0       0       0       0
  3107 ;;      Totals:         0       0       0       0       0
  3108 ;;Total ram usage:        0 bytes
  3109 ;; Hardware stack levels used: 1
  3110 ;; Hardware stack levels required when called: 1
  3111 ;; This function calls:
  3112 ;;		_I2C_Master_Wait
  3113 ;; This function is called by:
  3114 ;;		_main
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118     023B                     _I2C_Master_RepeatedStart:	
  3119                           ;psect for function _I2C_Master_RepeatedStart
  3120                           
  3121     023B                     l1428:	
  3122                           ;incstack = 0
  3123                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3124                           
  3125                           
  3126                           ;I2C.c: 49:     I2C_Master_Wait();
  3127     023B  120A  118A  2260  120A  118A  	fcall	_I2C_Master_Wait
  3128     0240                     l1430:
  3129                           
  3130                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  3131     0240  1683               	bsf	3,5	;RP0=1, select bank1
  3132     0241  1303               	bcf	3,6	;RP1=0, select bank1
  3133     0242  1491               	bsf	17,1	;volatile
  3134     0243                     l41:
  3135     0243  0008               	return
  3136     0244                     __end_of_I2C_Master_RepeatedStart:
  3137                           
  3138                           	psect	text17
  3139     02D0                     __ptext17:	
  3140 ;; *************** function _I2C_Master_Read *****************
  3141 ;; Defined at:
  3142 ;;		line 74 in file "I2C.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;  a               2    0[COMMON] unsigned short 
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;  temp            2    4[COMMON] unsigned short 
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  2    0[COMMON] unsigned short 
  3149 ;; Registers used:
  3150 ;;		wreg, status,2, status,0, pclath, cstack
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3156 ;;      Params:         2       0       0       0       0
  3157 ;;      Locals:         2       0       0       0       0
  3158 ;;      Temps:          2       0       0       0       0
  3159 ;;      Totals:         6       0       0       0       0
  3160 ;;Total ram usage:        6 bytes
  3161 ;; Hardware stack levels used: 1
  3162 ;; Hardware stack levels required when called: 1
  3163 ;; This function calls:
  3164 ;;		_I2C_Master_Wait
  3165 ;; This function is called by:
  3166 ;;		_main
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170     02D0                     _I2C_Master_Read:	
  3171                           ;psect for function _I2C_Master_Read
  3172                           
  3173     02D0                     l1440:	
  3174                           ;incstack = 0
  3175                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3176                           
  3177                           
  3178                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3179     02D0  120A  118A  2260  120A  118A  	fcall	_I2C_Master_Wait
  3180     02D5                     l1442:
  3181                           
  3182                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3183     02D5  1683               	bsf	3,5	;RP0=1, select bank1
  3184     02D6  1303               	bcf	3,6	;RP1=0, select bank1
  3185     02D7  1591               	bsf	17,3	;volatile
  3186                           
  3187                           ;I2C.c: 79:     I2C_Master_Wait();
  3188     02D8  120A  118A  2260  120A  118A  	fcall	_I2C_Master_Wait
  3189     02DD                     l1444:
  3190                           
  3191                           ;I2C.c: 80:     temp = SSPBUF;
  3192     02DD  1283               	bcf	3,5	;RP0=0, select bank0
  3193     02DE  1303               	bcf	3,6	;RP1=0, select bank0
  3194     02DF  0813               	movf	19,w	;volatile
  3195     02E0  00F2               	movwf	??_I2C_Master_Read
  3196     02E1  01F3               	clrf	??_I2C_Master_Read+1
  3197     02E2  0872               	movf	??_I2C_Master_Read,w
  3198     02E3  00F4               	movwf	I2C_Master_Read@temp
  3199     02E4  0873               	movf	??_I2C_Master_Read+1,w
  3200     02E5  00F5               	movwf	I2C_Master_Read@temp+1
  3201     02E6                     l1446:
  3202                           
  3203                           ;I2C.c: 81:     I2C_Master_Wait();
  3204     02E6  120A  118A  2260  120A  118A  	fcall	_I2C_Master_Wait
  3205     02EB                     l1448:
  3206                           
  3207                           ;I2C.c: 82:     if(a == 1){
  3208     02EB  0370               	decf	I2C_Master_Read@a,w
  3209     02EC  0471               	iorwf	I2C_Master_Read@a+1,w
  3210     02ED  1D03               	btfss	3,2
  3211     02EE  2AF0               	goto	u891
  3212     02EF  2AF1               	goto	u890
  3213     02F0                     u891:
  3214     02F0  2AF5               	goto	l50
  3215     02F1                     u890:
  3216     02F1                     l1450:
  3217                           
  3218                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3219     02F1  1683               	bsf	3,5	;RP0=1, select bank1
  3220     02F2  1303               	bcf	3,6	;RP1=0, select bank1
  3221     02F3  1291               	bcf	17,5	;volatile
  3222                           
  3223                           ;I2C.c: 84:     }else{
  3224     02F4  2AF8               	goto	l51
  3225     02F5                     l50:
  3226                           
  3227                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3228     02F5  1683               	bsf	3,5	;RP0=1, select bank1
  3229     02F6  1303               	bcf	3,6	;RP1=0, select bank1
  3230     02F7  1691               	bsf	17,5	;volatile
  3231     02F8                     l51:	
  3232                           ;I2C.c: 86:     }
  3233                           
  3234                           
  3235                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3236     02F8  1611               	bsf	17,4	;volatile
  3237     02F9                     l1452:
  3238                           
  3239                           ;I2C.c: 88:     return temp;
  3240     02F9  0875               	movf	I2C_Master_Read@temp+1,w
  3241     02FA  00F1               	movwf	?_I2C_Master_Read+1
  3242     02FB  0874               	movf	I2C_Master_Read@temp,w
  3243     02FC  00F0               	movwf	?_I2C_Master_Read
  3244     02FD                     l52:
  3245     02FD  0008               	return
  3246     02FE                     __end_of_I2C_Master_Read:
  3247                           
  3248                           	psect	text18
  3249     0260                     __ptext18:	
  3250 ;; *************** function _I2C_Master_Wait *****************
  3251 ;; Defined at:
  3252 ;;		line 32 in file "I2C.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;		None
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;		None
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  1    wreg      void 
  3259 ;; Registers used:
  3260 ;;		wreg, status,2
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3266 ;;      Params:         0       0       0       0       0
  3267 ;;      Locals:         0       0       0       0       0
  3268 ;;      Temps:          0       0       0       0       0
  3269 ;;      Totals:         0       0       0       0       0
  3270 ;;Total ram usage:        0 bytes
  3271 ;; Hardware stack levels used: 1
  3272 ;; This function calls:
  3273 ;;		Nothing
  3274 ;; This function is called by:
  3275 ;;		_I2C_Master_Start
  3276 ;;		_I2C_Master_RepeatedStart
  3277 ;;		_I2C_Master_Stop
  3278 ;;		_I2C_Master_Write
  3279 ;;		_I2C_Master_Read
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283     0260                     _I2C_Master_Wait:	
  3284                           ;psect for function _I2C_Master_Wait
  3285                           
  3286     0260                     l1318:	
  3287                           ;incstack = 0
  3288                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3289                           
  3290     0260                     l32:	
  3291                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3292                           
  3293     0260  1683               	bsf	3,5	;RP0=1, select bank1
  3294     0261  1303               	bcf	3,6	;RP1=0, select bank1
  3295     0262  1914               	btfsc	20,2	;volatile
  3296     0263  2A65               	goto	u661
  3297     0264  2A66               	goto	u660
  3298     0265                     u661:
  3299     0265  2A60               	goto	l32
  3300     0266                     u660:
  3301     0266                     l1320:
  3302     0266  0811               	movf	17,w	;volatile
  3303     0267  391F               	andlw	31
  3304     0268  1D03               	btfss	3,2
  3305     0269  2A6B               	goto	u671
  3306     026A  2A6C               	goto	u670
  3307     026B                     u671:
  3308     026B  2A60               	goto	l32
  3309     026C                     u670:
  3310     026C                     l35:
  3311     026C  0008               	return
  3312     026D                     __end_of_I2C_Master_Wait:
  3313                           
  3314                           	psect	text19
  3315     02FE                     __ptext19:	
  3316 ;; *************** function _I2C_Init *****************
  3317 ;; Defined at:
  3318 ;;		line 49 in file "pruebaADXL345.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;  i2c_clk_freq    4    0[BANK0 ] unsigned long 
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;		None
  3323 ;; Return value:  Size  Location     Type
  3324 ;;                  1    wreg      void 
  3325 ;; Registers used:
  3326 ;;		wreg, status,2, status,0, pclath, cstack
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3332 ;;      Params:         0       4       0       0       0
  3333 ;;      Locals:         0       0       0       0       0
  3334 ;;      Temps:          0       4       0       0       0
  3335 ;;      Totals:         0       8       0       0       0
  3336 ;;Total ram usage:        8 bytes
  3337 ;; Hardware stack levels used: 1
  3338 ;; Hardware stack levels required when called: 1
  3339 ;; This function calls:
  3340 ;;		___lldiv
  3341 ;; This function is called by:
  3342 ;;		_main
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346     02FE                     _I2C_Init:	
  3347                           ;psect for function _I2C_Init
  3348                           
  3349     02FE                     l1496:	
  3350                           ;incstack = 0
  3351                           ; Regs used in _I2C_Init: [wreg+status,2+status,0+pclath+cstack]
  3352                           
  3353                           
  3354                           ;pruebaADXL345.c: 49: void I2C_Init(uint32_t i2c_clk_freq);pruebaADXL345.c: 51: {;prueba
      +                          ADXL345.c: 52:   SSPCON = 0x28;
  3355     02FE  3028               	movlw	40
  3356     02FF  1283               	bcf	3,5	;RP0=0, select bank0
  3357     0300  1303               	bcf	3,6	;RP1=0, select bank0
  3358     0301  0094               	movwf	20	;volatile
  3359     0302                     l1498:
  3360                           
  3361                           ;pruebaADXL345.c: 53:   SSPADD = (8000000/(4 * i2c_clk_freq)) - 1;
  3362     0302  0853               	movf	I2C_Init@i2c_clk_freq,w
  3363     0303  00D7               	movwf	??_I2C_Init
  3364     0304  0854               	movf	I2C_Init@i2c_clk_freq+1,w
  3365     0305  00D8               	movwf	??_I2C_Init+1
  3366     0306  0855               	movf	I2C_Init@i2c_clk_freq+2,w
  3367     0307  00D9               	movwf	??_I2C_Init+2
  3368     0308  0856               	movf	I2C_Init@i2c_clk_freq+3,w
  3369     0309  00DA               	movwf	??_I2C_Init+3
  3370     030A  3002               	movlw	2
  3371     030B                     u975:
  3372     030B  1003               	clrc
  3373     030C  0DD7               	rlf	??_I2C_Init,f
  3374     030D  0DD8               	rlf	??_I2C_Init+1,f
  3375     030E  0DD9               	rlf	??_I2C_Init+2,f
  3376     030F  0DDA               	rlf	??_I2C_Init+3,f
  3377     0310                     u970:
  3378     0310  3EFF               	addlw	-1
  3379     0311  1D03               	skipz
  3380     0312  2B0B               	goto	u975
  3381     0313  085A               	movf	??_I2C_Init+3,w
  3382     0314  00F3               	movwf	___lldiv@divisor+3
  3383     0315  0859               	movf	??_I2C_Init+2,w
  3384     0316  00F2               	movwf	___lldiv@divisor+2
  3385     0317  0858               	movf	??_I2C_Init+1,w
  3386     0318  00F1               	movwf	___lldiv@divisor+1
  3387     0319  0857               	movf	??_I2C_Init,w
  3388     031A  00F0               	movwf	___lldiv@divisor
  3389     031B  3000               	movlw	0
  3390     031C  00F7               	movwf	___lldiv@dividend+3
  3391     031D  307A               	movlw	122
  3392     031E  00F6               	movwf	___lldiv@dividend+2
  3393     031F  3012               	movlw	18
  3394     0320  00F5               	movwf	___lldiv@dividend+1
  3395     0321  3000               	movlw	0
  3396     0322  00F4               	movwf	___lldiv@dividend
  3397     0323  120A  118A  24C7  120A  118A  	fcall	___lldiv
  3398     0328  0870               	movf	?___lldiv,w
  3399     0329  3EFF               	addlw	255
  3400     032A  1683               	bsf	3,5	;RP0=1, select bank1
  3401     032B  1303               	bcf	3,6	;RP1=0, select bank1
  3402     032C  0093               	movwf	19	;volatile
  3403     032D                     l1500:
  3404                           
  3405                           ;pruebaADXL345.c: 54:   SSPSTAT = 0;
  3406     032D  0194               	clrf	20	;volatile
  3407     032E                     l252:
  3408     032E  0008               	return
  3409     032F                     __end_of_I2C_Init:
  3410                           
  3411                           	psect	text20
  3412     04C7                     __ptext20:	
  3413 ;; *************** function ___lldiv *****************
  3414 ;; Defined at:
  3415 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  3416 ;; Parameters:    Size  Location     Type
  3417 ;;  divisor         4    0[COMMON] unsigned long 
  3418 ;;  dividend        4    4[COMMON] unsigned long 
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;  quotient        4    9[COMMON] unsigned long 
  3421 ;;  counter         1   13[COMMON] unsigned char 
  3422 ;; Return value:  Size  Location     Type
  3423 ;;                  4    0[COMMON] unsigned long 
  3424 ;; Registers used:
  3425 ;;		wreg, status,2, status,0
  3426 ;; Tracked objects:
  3427 ;;		On entry : 0/0
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3431 ;;      Params:         8       0       0       0       0
  3432 ;;      Locals:         5       0       0       0       0
  3433 ;;      Temps:          1       0       0       0       0
  3434 ;;      Totals:        14       0       0       0       0
  3435 ;;Total ram usage:       14 bytes
  3436 ;; Hardware stack levels used: 1
  3437 ;; This function calls:
  3438 ;;		Nothing
  3439 ;; This function is called by:
  3440 ;;		_I2C_Init
  3441 ;;		_I2C_Master_Init
  3442 ;;		_UART_Init
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446     04C7                     ___lldiv:	
  3447                           ;psect for function ___lldiv
  3448                           
  3449     04C7                     l1352:	
  3450                           ;incstack = 0
  3451                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3452                           
  3453     04C7  3000               	movlw	0
  3454     04C8  00FC               	movwf	___lldiv@quotient+3
  3455     04C9  3000               	movlw	0
  3456     04CA  00FB               	movwf	___lldiv@quotient+2
  3457     04CB  3000               	movlw	0
  3458     04CC  00FA               	movwf	___lldiv@quotient+1
  3459     04CD  3000               	movlw	0
  3460     04CE  00F9               	movwf	___lldiv@quotient
  3461     04CF  0873               	movf	___lldiv@divisor+3,w
  3462     04D0  0472               	iorwf	___lldiv@divisor+2,w
  3463     04D1  0471               	iorwf	___lldiv@divisor+1,w
  3464     04D2  0470               	iorwf	___lldiv@divisor,w
  3465     04D3  1903               	skipnz
  3466     04D4  2CD6               	goto	u691
  3467     04D5  2CD7               	goto	u690
  3468     04D6                     u691:
  3469     04D6  2D24               	goto	l1372
  3470     04D7                     u690:
  3471     04D7                     l1354:
  3472     04D7  01FD               	clrf	___lldiv@counter
  3473     04D8  0AFD               	incf	___lldiv@counter,f
  3474     04D9  2CE7               	goto	l1358
  3475     04DA                     l1356:
  3476     04DA  3001               	movlw	1
  3477     04DB  00F8               	movwf	??___lldiv
  3478     04DC                     u705:
  3479     04DC  1003               	clrc
  3480     04DD  0DF0               	rlf	___lldiv@divisor,f
  3481     04DE  0DF1               	rlf	___lldiv@divisor+1,f
  3482     04DF  0DF2               	rlf	___lldiv@divisor+2,f
  3483     04E0  0DF3               	rlf	___lldiv@divisor+3,f
  3484     04E1  0BF8               	decfsz	??___lldiv,f
  3485     04E2  2CDC               	goto	u705
  3486     04E3  3001               	movlw	1
  3487     04E4  00F8               	movwf	??___lldiv
  3488     04E5  0878               	movf	??___lldiv,w
  3489     04E6  07FD               	addwf	___lldiv@counter,f
  3490     04E7                     l1358:
  3491     04E7  1FF3               	btfss	___lldiv@divisor+3,7
  3492     04E8  2CEA               	goto	u711
  3493     04E9  2CEB               	goto	u710
  3494     04EA                     u711:
  3495     04EA  2CDA               	goto	l1356
  3496     04EB                     u710:
  3497     04EB                     l1360:
  3498     04EB  3001               	movlw	1
  3499     04EC  00F8               	movwf	??___lldiv
  3500     04ED                     u725:
  3501     04ED  1003               	clrc
  3502     04EE  0DF9               	rlf	___lldiv@quotient,f
  3503     04EF  0DFA               	rlf	___lldiv@quotient+1,f
  3504     04F0  0DFB               	rlf	___lldiv@quotient+2,f
  3505     04F1  0DFC               	rlf	___lldiv@quotient+3,f
  3506     04F2  0BF8               	decfsz	??___lldiv,f
  3507     04F3  2CED               	goto	u725
  3508     04F4                     l1362:
  3509     04F4  0873               	movf	___lldiv@divisor+3,w
  3510     04F5  0277               	subwf	___lldiv@dividend+3,w
  3511     04F6  1D03               	skipz
  3512     04F7  2D02               	goto	u735
  3513     04F8  0872               	movf	___lldiv@divisor+2,w
  3514     04F9  0276               	subwf	___lldiv@dividend+2,w
  3515     04FA  1D03               	skipz
  3516     04FB  2D02               	goto	u735
  3517     04FC  0871               	movf	___lldiv@divisor+1,w
  3518     04FD  0275               	subwf	___lldiv@dividend+1,w
  3519     04FE  1D03               	skipz
  3520     04FF  2D02               	goto	u735
  3521     0500  0870               	movf	___lldiv@divisor,w
  3522     0501  0274               	subwf	___lldiv@dividend,w
  3523     0502                     u735:
  3524     0502  1C03               	skipc
  3525     0503  2D05               	goto	u731
  3526     0504  2D06               	goto	u730
  3527     0505                     u731:
  3528     0505  2D15               	goto	l1368
  3529     0506                     u730:
  3530     0506                     l1364:
  3531     0506  0870               	movf	___lldiv@divisor,w
  3532     0507  02F4               	subwf	___lldiv@dividend,f
  3533     0508  0871               	movf	___lldiv@divisor+1,w
  3534     0509  1C03               	skipc
  3535     050A  0F71               	incfsz	___lldiv@divisor+1,w
  3536     050B  02F5               	subwf	___lldiv@dividend+1,f
  3537     050C  0872               	movf	___lldiv@divisor+2,w
  3538     050D  1C03               	skipc
  3539     050E  0F72               	incfsz	___lldiv@divisor+2,w
  3540     050F  02F6               	subwf	___lldiv@dividend+2,f
  3541     0510  0873               	movf	___lldiv@divisor+3,w
  3542     0511  1C03               	skipc
  3543     0512  0F73               	incfsz	___lldiv@divisor+3,w
  3544     0513  02F7               	subwf	___lldiv@dividend+3,f
  3545     0514                     l1366:
  3546     0514  1479               	bsf	___lldiv@quotient,0
  3547     0515                     l1368:
  3548     0515  3001               	movlw	1
  3549     0516                     u745:
  3550     0516  1003               	clrc
  3551     0517  0CF3               	rrf	___lldiv@divisor+3,f
  3552     0518  0CF2               	rrf	___lldiv@divisor+2,f
  3553     0519  0CF1               	rrf	___lldiv@divisor+1,f
  3554     051A  0CF0               	rrf	___lldiv@divisor,f
  3555     051B  3EFF               	addlw	-1
  3556     051C  1D03               	skipz
  3557     051D  2D16               	goto	u745
  3558     051E                     l1370:
  3559     051E  3001               	movlw	1
  3560     051F  02FD               	subwf	___lldiv@counter,f
  3561     0520  1D03               	btfss	3,2
  3562     0521  2D23               	goto	u751
  3563     0522  2D24               	goto	u750
  3564     0523                     u751:
  3565     0523  2CEB               	goto	l1360
  3566     0524                     u750:
  3567     0524                     l1372:
  3568     0524  087C               	movf	___lldiv@quotient+3,w
  3569     0525  00F3               	movwf	?___lldiv+3
  3570     0526  087B               	movf	___lldiv@quotient+2,w
  3571     0527  00F2               	movwf	?___lldiv+2
  3572     0528  087A               	movf	___lldiv@quotient+1,w
  3573     0529  00F1               	movwf	?___lldiv+1
  3574     052A  0879               	movf	___lldiv@quotient,w
  3575     052B  00F0               	movwf	?___lldiv
  3576     052C                     l410:
  3577     052C  0008               	return
  3578     052D                     __end_of___lldiv:
  3579     007E                     btemp	set	126	;btemp
  3580     007E                     wtemp0	set	126
  3581                           
  3582                           	psect	idloc
  3583                           
  3584                           ;Config register IDLOC0 @ 0x2000
  3585                           ;	unspecified, using default values
  3586     2000                     	org	8192
  3587     2000  3FFF               	dw	16383
  3588                           
  3589                           ;Config register IDLOC1 @ 0x2001
  3590                           ;	unspecified, using default values
  3591     2001                     	org	8193
  3592     2001  3FFF               	dw	16383
  3593                           
  3594                           ;Config register IDLOC2 @ 0x2002
  3595                           ;	unspecified, using default values
  3596     2002                     	org	8194
  3597     2002  3FFF               	dw	16383
  3598                           
  3599                           ;Config register IDLOC3 @ 0x2003
  3600                           ;	unspecified, using default values
  3601     2003                     	org	8195
  3602     2003  3FFF               	dw	16383
  3603                           
  3604                           	psect	config
  3605                           
  3606                           ;Config register CONFIG1 @ 0x2007
  3607                           ;	Oscillator Selection bits
  3608                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  3609                           ;	Watchdog Timer Enable bit
  3610                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3611                           ;	Power-up Timer Enable bit
  3612                           ;	PWRTE = OFF, PWRT disabled
  3613                           ;	RE3/MCLR pin function select bit
  3614                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3615                           ;	Code Protection bit
  3616                           ;	CP = OFF, Program memory code protection is disabled
  3617                           ;	Data Code Protection bit
  3618                           ;	CPD = OFF, Data memory code protection is disabled
  3619                           ;	Brown Out Reset Selection bits
  3620                           ;	BOREN = OFF, BOR disabled
  3621                           ;	Internal External Switchover bit
  3622                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3623                           ;	Fail-Safe Clock Monitor Enabled bit
  3624                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3625                           ;	Low Voltage Programming Enable bit
  3626                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3627                           ;	In-Circuit Debugger Mode bit
  3628                           ;	DEBUG = 0x1, unprogrammed default
  3629     2007                     	org	8199
  3630     2007  20D5               	dw	8405
  3631                           
  3632                           ;Config register CONFIG2 @ 0x2008
  3633                           ;	Brown-out Reset Selection bit
  3634                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3635                           ;	Flash Program Memory Self Write Enable bits
  3636                           ;	WRT = OFF, Write protection off
  3637     2008                     	org	8200
  3638     2008  3FFF               	dw	16383

Data Sizes:
    Strings     7
    Constant    25
    Data        0
    BSS         71
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     16      67
    BANK1            80      0      20
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> s3(BANK1[20]), s2(BANK0[20]), s(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_4(CODE[4]), s3(BANK1[20]), s2(BANK0[20]), s(BANK0[20]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5506
                                             13 BANK0      3     3      0
                           _I2C_Init
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1339
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     572
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     684
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     782
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     501
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             8     4      4     868
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     770
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___awdiv
   _setup
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      65       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      43       5       83.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      14       7       25.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      65      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Aug 23 14:34:23 2023

                               _i 002A                                 _s 003F                                 _x 0029  
                               _y 0028                                 _z 0027                                 pc 0002  
                              l32 0260                                l41 0243                                l50 02F5  
                              l35 026C                                l51 02F8                                l52 02FD  
                              l44 0255                                l38 024C                                l47 025F  
                              l80 02CF                                l72 02B7                                l73 02BA  
                              l74 02C0                                l75 02C1                                l83 0293  
                              l76 02C7                                l92 0469                                l77 02C8  
                              l78 02CE                                l86 0279                                l95 04C6  
                              l98 0363                      ___awdiv@sign 0076                                _s2 002B  
                              _s3 00A0                                _x2 0026                                fsr 0004  
                             l104 03DF                               l410 052C                               l252 032E  
                             l263 02AD                               l257 06A1                               l370 0654  
                             l527 0593                               l646 0423                               l656 039D  
                             _GIE 005F                               _RD3 0043                               _RD4 0044  
                             _RD5 0045                               _RD6 0046                               _RD7 0047  
                             u620 02B3                               u621 02B2                               u710 04EB  
                             u630 02BE                               u711 04EA                               u631 02BD  
                             u640 02C5                               u800 040B                               u705 04DC  
                             u641 02C4                               u801 040A                               u730 0506  
                             u650 02CC                               u731 0505                               u651 02CB  
                             u660 0266                               u900 042A                               u820 041F  
                             u725 04ED                               u661 0265                               u901 0429  
                             u821 041E                               u805 0407                               u750 0524  
                             u670 026C                               u830 036A                               u751 0523  
                             u735 0502                               u671 026B                               u815 0413  
                             u831 0369                               u920 044D                               u760 03E8  
                             u745 0516                               u921 044C                               u761 03E7  
                             u690 04D7                               u850 037C                               u691 04D6  
                             u915 0430                               u851 037B                               u940 03AB  
                             u780 03FA                               u860 0386                               u685 033C  
                             u781 03F9                               u861 0385                               u845 036E  
                             u950 03CD                               u935 0453                               u775 03EC  
                             u960 03DF                               u880 0399                               u961 03DE  
                             u881 0398                               u865 0382                               u970 0310  
                             u890 02F1                               u891 02F0                               u795 03FB  
                             u875 038D                               u980 05A0                               u981 059F  
                             u990 05F4                               u975 030B                               u991 05F3  
                             u995 05F0                               fsr0 0004                               indf 0000  
                            l1310 02B3                              l1320 0266                              l1312 02BE  
                            l1314 02C5                              l1330 0290                              l1322 027B  
                            l1410 0378                              l1402 0364                              l1500 032D  
                            l1316 02CC                              l1308 02AF                              l1324 027E  
                            l1340 034A                              l1332 0330                              l1412 037C  
                            l1404 036A                              l1420 0399                              l1318 0260  
                            l1430 0240                              l1326 0284                              l1350 0360  
                            l1342 034F                              l1334 0336                              l1510 029D  
                            l1502 0294                              l1414 0386                              l1406 036D  
                            l1360 04EB                              l1352 04C7                              l1440 02D0  
                            l1424 0244                              l1432 024D                              l1328 0287  
                            l1344 0352                              l1336 0339                              l1600 0571  
                            l1512 02A6                              l1504 0298                              l1416 038C  
                            l1408 0374                              l1520 0597                              l1370 051E  
                            l1362 04F4                              l1354 04D7                              l1450 02F1  
                            l1442 02D5                              l1426 0249                              l1434 0252  
                            l1346 0358                              l1338 0347                              l1610 058A  
                            l1602 0577                              l1514 02A7                              l1506 029B  
                            l1418 0393                              l1530 05AC                              l1522 059A  
                            l1364 0506                              l1356 04DA                              l1372 0524  
                            l1452 02F9                              l1444 02DD                              l1428 023B  
                            l1436 0256                              l1460 042A                              l1348 035B  
                            l1612 058F                              l1604 0578                              l1516 02A8  
                            l1508 029C                              l1380 03E8                              l1540 05D7  
                            l1524 05A0                              l1366 0514                              l1358 04E7  
                            l1446 02E6                              l1438 025B                              l1470 044D  
                            l1462 0437                              l1606 057F                              l1518 02AC  
                            l1390 040B                              l1382 03EB                              l1550 05F5  
                            l1534 05B1                              l1526 05A5                              l1368 0515  
                            l1448 02EB                              l1456 026D                              l1480 0470  
                            l1472 045A                              l1464 043A                              l1608 0585  
                            l1392 0411                              l1384 03F2                              l1376 03E0  
                            l1560 0637                              l1552 05FF                              l1536 05CB  
                            l1528 05AA                              l1482 0479                              l1474 045D  
                            l1466 0440                              l1458 0425                              l1490 03A1  
                            l1394 0412                              l1386 03F6                              l1378 03E2  
                            l1554 0602                              l1546 05D9                              l1538 05D3  
                            l1562 0640                              l1650 0742                              l1484 0488  
                            l1476 0463                              l1468 0447                              l1492 03BD  
                            l1580 0539                              l1572 052D                              l1396 0419  
                            l1388 03FA                              l1556 062E                              l1564 0650  
                            l1660 0792                              l1652 0751                              l1486 048E  
                            l1478 046A                              l1494 03C3                              l1590 054E  
                            l1582 053D                              l1574 052E                              l1398 041F  
                            l1558 0633                              l1670 07C5                              l1662 07A3  
                            l1654 075E                              l1496 02FE                              l1488 039E  
                            l1592 0551                              l1584 0542                              l1576 0532  
                            l1672 07CD                              l1664 07AB                              l1656 0772  
                            l1648 0655                              l1498 0302                              l1594 0558  
                            l1586 0546                              l1578 0537                              l1674 07D6  
                            l1666 07B4                              l1658 0781                              l1596 055C  
                            l1588 0548                              l1676 07DE                              l1668 07BC  
                            l1598 0560                              l1698 05C3                              STR_1 0030  
                            STR_2 0030                              STR_3 0030                              STR_4 002C  
                            u1000 05FF                              _CREN 00C4                              u1001 05FE  
                            u1010 0640                              u1011 063F                              u1020 0650  
                            u1021 064F                              u1110 0585                              u1030 0532  
                            u1111 0584                              u1031 0531                              u1120 058A  
                            u1040 053D                              u1121 0589                              u1105 0579  
                            u1041 053C                              u1050 054E                              u1051 054D  
                            u1070 0560                              u1207 034C                              u1071 055F  
                            u1217 035D                              u1065 0552                              u1090 0571  
                            u1227 0474                              u1091 0570                              u1237 0483  
                            u1085 0561                              u1247 0492                              u1095 056D  
                            u1257 028B                              u1197 074A                              _PEIE 005E  
                            _RCIF 0065                              _OERR 00C1                              _TRMT 04C1  
                            _Xval 0025                              _Yval 0023                              _Zval 0021  
               ?_Lcd_Write_String 0075  __end_of_I2C_Master_RepeatedStart 0244                              _main 0655  
                __end_of_I2C_Init 032F                              btemp 007E                              start 0000  
              ??_Lcd_Write_String 0077                   __end_of_Lcd_Cmd 0294                  ?_I2C_Master_Read 0070  
                ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070                             ?_main 0070  
                 __end_of___awdiv 0594                             _ANSEL 0188                   __end_of___lldiv 052D  
                 ___awdiv@divisor 0070                   __end_of___lwdiv 0424                   __end_of___lwmod 039E  
                 ___awdiv@counter 0075                             _RCREG 001A                             _RCSTA 0018  
                           _SPBRG 0099                             _PORTA 0005                             _PORTB 0006  
                           _PORTD 0008                             _TRISA 0085                             _TRISB 0086  
                           _TRISD 0088                             _SSPIE 0463                             _SSPIF 0063  
                           _TXREG 0019                             _TXSTA 0098                             _Xval2 0024  
                           _Yval2 0022                             _Zval2 0020                   __end_of_dpowers 002C  
                 __end_of_message 0022                             _setup 0294                             pclath 000A  
                           status 0003                             wtemp0 007E                   __end_of_sprintf 0655  
            I2C_Init@i2c_clk_freq 0053                  __end_of_Lcd_Init 04C7                  __end_of_Lcd_Port 02D0  
                 __initialization 07EB                      __end_of_main 07EB                            ??_main 0060  
               ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0070                ??_I2C_Master_Start 0070  
              ??_I2C_Master_Write 0072                  ___awdiv@dividend 0072                            ?_setup 0070  
                          _ANSELH 0189                         ??_Lcd_Cmd 0071                            _SSPADD 0093  
                          _TRISC1 0439                            _TRISC2 043A                            _TRISC3 043B  
                          _TRISC4 043C                            _TRISC6 043E                            _TRISC7 043F  
                          _SSPCON 0014                            _SSPBUF 0013          _I2C_Master_RepeatedStart 023B  
                       ??___awdiv 0074                         ??___lldiv 0078                         ??___lwdiv 0074  
                       ??___lwmod 007C                  ___awdiv@quotient 0077                         ?_I2C_Init 0053  
                       ??_sprintf 0056                   Lcd_Set_Cursor@a 0076                   Lcd_Set_Cursor@b 0074  
                 Lcd_Set_Cursor@y 0078                   Lcd_Set_Cursor@z 0077           __end_of__initialization 07FC  
               __end_of_Lcd_Clear 027A                    __pcstackCOMMON 0070                     __end_of_setup 02AE  
                  _Lcd_Set_Cursor 0424                        ??_I2C_Init 0057                         ?_Lcd_Init 0070  
                       ?_Lcd_Port 0070                           ??_setup 0070                        __pbssBANK0 0020  
                      __pbssBANK1 00A0                        __pmaintext 0655            __end_of_Lcd_Set_Cursor 046A  
                      ??_Lcd_Init 0074                        ??_Lcd_Port 0070                           _SSPCON2 0091  
                         _SSPSTAT 0094                        __stringtab 0003                    _Lcd_Write_Char 032F  
                         _Lcd_Cmd 027A                           ___awdiv 052D                           ___lldiv 04C7  
                         ___lwdiv 03E0                           ___lwmod 0364                   ?_Lcd_Set_Cursor 0074  
                         __ptext1 0594                           __ptext2 0364                           __ptext3 03E0  
                         __ptext4 0294                           __ptext5 052D                           __ptext6 039E  
                         __ptext7 032F                           __ptext8 0424                           __ptext9 046A  
                         _dpowers 0022                           _message 0013                           _sprintf 0594  
                         clrloop0 0234            __end_of_Lcd_Write_Char 0364              end_of_initialization 07FC  
      ??_I2C_Master_RepeatedStart 0070                   ___lldiv@divisor 0070                   ___lldiv@counter 007D  
                I2C_Master_Read@a 0070                         Lcd_Port@a 0070                         _PORTCbits 0007  
                       _PORTDbits 0008                         _TRISCbits 0087                   ?_Lcd_Write_Char 0070  
               Lcd_Write_String@a 0075                 Lcd_Write_String@i 007A                         _Lcd_Clear 026D  
                _Lcd_Write_String 039E               start_initialization 07EB                 ??_I2C_Master_Read 0072  
               ??_I2C_Master_Wait 0070                 ??_I2C_Master_Stop 0070                        ?_Lcd_Clear 0070  
                 Lcd_Write_Char@a 0074                   Lcd_Write_Char@y 0073                         ___latbits 0002  
                   __pcstackBANK0 0053                          ?_Lcd_Cmd 0070                       sprintf@flag 0059  
                     sprintf@prec 005D                  _I2C_Master_Start 0244                  _I2C_Master_Write 0256  
                ___lwdiv@dividend 0072                  ??_Lcd_Set_Cursor 0075                          ?___awdiv 0070  
                        ?___lldiv 0070                          ?___lwdiv 0070                          ?___lwmod 0078  
                       __pstrings 0003                          _I2C_Init 02FE                  ___lwdiv@quotient 0075  
                        ?_sprintf 0053                         clear_ram0 0233                          Lcd_Cmd@a 0073  
                     ??_Lcd_Clear 0074                       __stringbase 0012                  ??_Lcd_Write_Char 0071  
                        _Lcd_Init 046A                          _Lcd_Port 02AE               I2C_Master_Read@temp 0074  
        __end_of_Lcd_Write_String 03E0         ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 0013  
                      sprintf@val 005B                   _I2C_Master_Read 02D0                   _I2C_Master_Wait 0260  
                 _I2C_Master_Stop 024D                   ___lwdiv@divisor 0070                   ___lwdiv@counter 0077  
                        __ptext10 026D                          __ptext11 027A                          __ptext20 04C7  
                        __ptext12 02AE                          __ptext13 0256                          __ptext14 024D  
                        __ptext15 0244                          __ptext16 023B                          __ptext17 02D0  
                        __ptext18 0260                          __ptext19 02FE          __end_of_I2C_Master_Start 024D  
        __end_of_I2C_Master_Write 0260                Lcd_Write_Char@temp 0072                         sprintf@ap 005A  
                       sprintf@sp 005E                  ___lwmod@dividend 007A                  ___lldiv@dividend 0074  
                       stringcode 000D                        _OSCCONbits 008F           __end_of_I2C_Master_Read 02FE  
         __end_of_I2C_Master_Wait 026D           __end_of_I2C_Master_Stop 0256                Lcd_Set_Cursor@temp 0079  
                        sprintf@c 005F                          sprintf@f 0053                  ___lldiv@quotient 0079  
               I2C_Master_Write@d 0070                   ___lwmod@divisor 0078                   ___lwmod@counter 007D  
                        stringdir 000D                          stringtab 0003                       _SSPCON2bits 0091  
