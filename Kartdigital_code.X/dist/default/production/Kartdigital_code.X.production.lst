

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Aug 14 15:53:23 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32     0000                     
    33                           ; Generated 09/02/2023 GMT
    34                           ; 
    35                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67     0000                     	;# 
    68     0001                     	;# 
    69     0002                     	;# 
    70     0003                     	;# 
    71     0004                     	;# 
    72     0005                     	;# 
    73     0006                     	;# 
    74     0007                     	;# 
    75     0008                     	;# 
    76     0009                     	;# 
    77     000A                     	;# 
    78     000B                     	;# 
    79     000C                     	;# 
    80     000D                     	;# 
    81     000E                     	;# 
    82     000E                     	;# 
    83     000F                     	;# 
    84     0010                     	;# 
    85     0011                     	;# 
    86     0012                     	;# 
    87     0013                     	;# 
    88     0014                     	;# 
    89     0015                     	;# 
    90     0015                     	;# 
    91     0016                     	;# 
    92     0017                     	;# 
    93     0018                     	;# 
    94     0019                     	;# 
    95     001A                     	;# 
    96     001B                     	;# 
    97     001B                     	;# 
    98     001C                     	;# 
    99     001D                     	;# 
   100     001E                     	;# 
   101     001F                     	;# 
   102     0081                     	;# 
   103     0085                     	;# 
   104     0086                     	;# 
   105     0087                     	;# 
   106     0088                     	;# 
   107     0089                     	;# 
   108     008C                     	;# 
   109     008D                     	;# 
   110     008E                     	;# 
   111     008F                     	;# 
   112     0090                     	;# 
   113     0091                     	;# 
   114     0092                     	;# 
   115     0093                     	;# 
   116     0093                     	;# 
   117     0093                     	;# 
   118     0094                     	;# 
   119     0095                     	;# 
   120     0096                     	;# 
   121     0097                     	;# 
   122     0098                     	;# 
   123     0099                     	;# 
   124     009A                     	;# 
   125     009B                     	;# 
   126     009C                     	;# 
   127     009D                     	;# 
   128     009E                     	;# 
   129     009F                     	;# 
   130     0105                     	;# 
   131     0107                     	;# 
   132     0108                     	;# 
   133     0109                     	;# 
   134     010C                     	;# 
   135     010C                     	;# 
   136     010D                     	;# 
   137     010E                     	;# 
   138     010F                     	;# 
   139     0185                     	;# 
   140     0187                     	;# 
   141     0188                     	;# 
   142     0189                     	;# 
   143     018C                     	;# 
   144     018D                     	;# 
   145     0000                     	;# 
   146     0001                     	;# 
   147     0002                     	;# 
   148     0003                     	;# 
   149     0004                     	;# 
   150     0005                     	;# 
   151     0006                     	;# 
   152     0007                     	;# 
   153     0008                     	;# 
   154     0009                     	;# 
   155     000A                     	;# 
   156     000B                     	;# 
   157     000C                     	;# 
   158     000D                     	;# 
   159     000E                     	;# 
   160     000E                     	;# 
   161     000F                     	;# 
   162     0010                     	;# 
   163     0011                     	;# 
   164     0012                     	;# 
   165     0013                     	;# 
   166     0014                     	;# 
   167     0015                     	;# 
   168     0015                     	;# 
   169     0016                     	;# 
   170     0017                     	;# 
   171     0018                     	;# 
   172     0019                     	;# 
   173     001A                     	;# 
   174     001B                     	;# 
   175     001B                     	;# 
   176     001C                     	;# 
   177     001D                     	;# 
   178     001E                     	;# 
   179     001F                     	;# 
   180     0081                     	;# 
   181     0085                     	;# 
   182     0086                     	;# 
   183     0087                     	;# 
   184     0088                     	;# 
   185     0089                     	;# 
   186     008C                     	;# 
   187     008D                     	;# 
   188     008E                     	;# 
   189     008F                     	;# 
   190     0090                     	;# 
   191     0091                     	;# 
   192     0092                     	;# 
   193     0093                     	;# 
   194     0093                     	;# 
   195     0093                     	;# 
   196     0094                     	;# 
   197     0095                     	;# 
   198     0096                     	;# 
   199     0097                     	;# 
   200     0098                     	;# 
   201     0099                     	;# 
   202     009A                     	;# 
   203     009B                     	;# 
   204     009C                     	;# 
   205     009D                     	;# 
   206     009E                     	;# 
   207     009F                     	;# 
   208     0105                     	;# 
   209     0107                     	;# 
   210     0108                     	;# 
   211     0109                     	;# 
   212     010C                     	;# 
   213     010C                     	;# 
   214     010D                     	;# 
   215     010E                     	;# 
   216     010F                     	;# 
   217     0185                     	;# 
   218     0187                     	;# 
   219     0188                     	;# 
   220     0189                     	;# 
   221     018C                     	;# 
   222     018D                     	;# 
   223     0000                     	;# 
   224     0001                     	;# 
   225     0002                     	;# 
   226     0003                     	;# 
   227     0004                     	;# 
   228     0005                     	;# 
   229     0006                     	;# 
   230     0007                     	;# 
   231     0008                     	;# 
   232     0009                     	;# 
   233     000A                     	;# 
   234     000B                     	;# 
   235     000C                     	;# 
   236     000D                     	;# 
   237     000E                     	;# 
   238     000E                     	;# 
   239     000F                     	;# 
   240     0010                     	;# 
   241     0011                     	;# 
   242     0012                     	;# 
   243     0013                     	;# 
   244     0014                     	;# 
   245     0015                     	;# 
   246     0015                     	;# 
   247     0016                     	;# 
   248     0017                     	;# 
   249     0018                     	;# 
   250     0019                     	;# 
   251     001A                     	;# 
   252     001B                     	;# 
   253     001B                     	;# 
   254     001C                     	;# 
   255     001D                     	;# 
   256     001E                     	;# 
   257     001F                     	;# 
   258     0081                     	;# 
   259     0085                     	;# 
   260     0086                     	;# 
   261     0087                     	;# 
   262     0088                     	;# 
   263     0089                     	;# 
   264     008C                     	;# 
   265     008D                     	;# 
   266     008E                     	;# 
   267     008F                     	;# 
   268     0090                     	;# 
   269     0091                     	;# 
   270     0092                     	;# 
   271     0093                     	;# 
   272     0093                     	;# 
   273     0093                     	;# 
   274     0094                     	;# 
   275     0095                     	;# 
   276     0096                     	;# 
   277     0097                     	;# 
   278     0098                     	;# 
   279     0099                     	;# 
   280     009A                     	;# 
   281     009B                     	;# 
   282     009C                     	;# 
   283     009D                     	;# 
   284     009E                     	;# 
   285     009F                     	;# 
   286     0105                     	;# 
   287     0107                     	;# 
   288     0108                     	;# 
   289     0109                     	;# 
   290     010C                     	;# 
   291     010C                     	;# 
   292     010D                     	;# 
   293     010E                     	;# 
   294     010F                     	;# 
   295     0185                     	;# 
   296     0187                     	;# 
   297     0188                     	;# 
   298     0189                     	;# 
   299     018C                     	;# 
   300     018D                     	;# 
   301     0000                     	;# 
   302     0001                     	;# 
   303     0002                     	;# 
   304     0003                     	;# 
   305     0004                     	;# 
   306     0005                     	;# 
   307     0006                     	;# 
   308     0007                     	;# 
   309     0008                     	;# 
   310     0009                     	;# 
   311     000A                     	;# 
   312     000B                     	;# 
   313     000C                     	;# 
   314     000D                     	;# 
   315     000E                     	;# 
   316     000E                     	;# 
   317     000F                     	;# 
   318     0010                     	;# 
   319     0011                     	;# 
   320     0012                     	;# 
   321     0013                     	;# 
   322     0014                     	;# 
   323     0015                     	;# 
   324     0015                     	;# 
   325     0016                     	;# 
   326     0017                     	;# 
   327     0018                     	;# 
   328     0019                     	;# 
   329     001A                     	;# 
   330     001B                     	;# 
   331     001B                     	;# 
   332     001C                     	;# 
   333     001D                     	;# 
   334     001E                     	;# 
   335     001F                     	;# 
   336     0081                     	;# 
   337     0085                     	;# 
   338     0086                     	;# 
   339     0087                     	;# 
   340     0088                     	;# 
   341     0089                     	;# 
   342     008C                     	;# 
   343     008D                     	;# 
   344     008E                     	;# 
   345     008F                     	;# 
   346     0090                     	;# 
   347     0091                     	;# 
   348     0092                     	;# 
   349     0093                     	;# 
   350     0093                     	;# 
   351     0093                     	;# 
   352     0094                     	;# 
   353     0095                     	;# 
   354     0096                     	;# 
   355     0097                     	;# 
   356     0098                     	;# 
   357     0099                     	;# 
   358     009A                     	;# 
   359     009B                     	;# 
   360     009C                     	;# 
   361     009D                     	;# 
   362     009E                     	;# 
   363     009F                     	;# 
   364     0105                     	;# 
   365     0107                     	;# 
   366     0108                     	;# 
   367     0109                     	;# 
   368     010C                     	;# 
   369     010C                     	;# 
   370     010D                     	;# 
   371     010E                     	;# 
   372     010F                     	;# 
   373     0185                     	;# 
   374     0187                     	;# 
   375     0188                     	;# 
   376     0189                     	;# 
   377     018C                     	;# 
   378     018D                     	;# 
   379     0000                     	;# 
   380     0001                     	;# 
   381     0002                     	;# 
   382     0003                     	;# 
   383     0004                     	;# 
   384     0005                     	;# 
   385     0006                     	;# 
   386     0007                     	;# 
   387     0008                     	;# 
   388     0009                     	;# 
   389     000A                     	;# 
   390     000B                     	;# 
   391     000C                     	;# 
   392     000D                     	;# 
   393     000E                     	;# 
   394     000E                     	;# 
   395     000F                     	;# 
   396     0010                     	;# 
   397     0011                     	;# 
   398     0012                     	;# 
   399     0013                     	;# 
   400     0014                     	;# 
   401     0015                     	;# 
   402     0015                     	;# 
   403     0016                     	;# 
   404     0017                     	;# 
   405     0018                     	;# 
   406     0019                     	;# 
   407     001A                     	;# 
   408     001B                     	;# 
   409     001B                     	;# 
   410     001C                     	;# 
   411     001D                     	;# 
   412     001E                     	;# 
   413     001F                     	;# 
   414     0081                     	;# 
   415     0085                     	;# 
   416     0086                     	;# 
   417     0087                     	;# 
   418     0088                     	;# 
   419     0089                     	;# 
   420     008C                     	;# 
   421     008D                     	;# 
   422     008E                     	;# 
   423     008F                     	;# 
   424     0090                     	;# 
   425     0091                     	;# 
   426     0092                     	;# 
   427     0093                     	;# 
   428     0093                     	;# 
   429     0093                     	;# 
   430     0094                     	;# 
   431     0095                     	;# 
   432     0096                     	;# 
   433     0097                     	;# 
   434     0098                     	;# 
   435     0099                     	;# 
   436     009A                     	;# 
   437     009B                     	;# 
   438     009C                     	;# 
   439     009D                     	;# 
   440     009E                     	;# 
   441     009F                     	;# 
   442     0105                     	;# 
   443     0107                     	;# 
   444     0108                     	;# 
   445     0109                     	;# 
   446     010C                     	;# 
   447     010C                     	;# 
   448     010D                     	;# 
   449     010E                     	;# 
   450     010F                     	;# 
   451     0185                     	;# 
   452     0187                     	;# 
   453     0188                     	;# 
   454     0189                     	;# 
   455     018C                     	;# 
   456     018D                     	;# 
   457                           
   458                           	psect	strings
   459     058F                     __pstrings:
   460     058F                     stringtab:
   461     058F                     __stringtab:
   462                           
   463                           ;	String table - string pointers are 1 byte each
   464     058F  1BFF               	btfsc	btemp+1,7
   465     0590  2D99               	ljmp	stringcode
   466     0591  1383               	bcf	3,7
   467     0592  187F               	btfsc	btemp+1,0
   468     0593  1783               	bsf	3,7
   469     0594  0800               	movf	0,w
   470     0595  0A84               	incf	4,f
   471     0596  1903               	skipnz
   472     0597  0AFF               	incf	btemp+1,f
   473     0598  0008               	return
   474     0599                     stringcode:
   475     0599                     stringdir:
   476     0599  3005               	movlw	high stringdir
   477     059A  008A               	movwf	10
   478     059B  0804               	movf	4,w
   479     059C  0A84               	incf	4,f
   480     059D  0782               	addwf	2,f
   481     059E                     __stringbase:
   482     059E  3400               	retlw	0
   483     059F                     __end_of__stringtab:
   484     059F                     _dpowers:
   485     059F  3401               	retlw	1
   486     05A0  3400               	retlw	0
   487     05A1  340A               	retlw	10
   488     05A2  3400               	retlw	0
   489     05A3  3464               	retlw	100
   490     05A4  3400               	retlw	0
   491     05A5  34E8               	retlw	232
   492     05A6  3403               	retlw	3
   493     05A7  3410               	retlw	16
   494     05A8  3427               	retlw	39
   495     05A9                     __end_of_dpowers:
   496     05A9                     _message:
   497     05A9  3432               	retlw	50
   498     05AA  342E               	retlw	46
   499     05AB  3445               	retlw	69
   500     05AC  346E               	retlw	110
   501     05AD  3476               	retlw	118
   502     05AE  3469               	retlw	105
   503     05AF  3461               	retlw	97
   504     05B0  3472               	retlw	114
   505     05B1  3420               	retlw	32
   506     05B2  3441               	retlw	65
   507     05B3  3473               	retlw	115
   508     05B4  3463               	retlw	99
   509     05B5  3469               	retlw	105
   510     05B6  3469               	retlw	105
   511     05B7  3400               	retlw	0
   512     05B8                     __end_of_message:
   513     0019                     _TXREG	set	25
   514     0018                     _RCSTA	set	24
   515     000B                     _INTCONbits	set	11
   516     0008                     _PORTD	set	8
   517     001A                     _RCREG	set	26
   518     0018                     _RCSTAbits	set	24
   519     001E                     _ADRESH	set	30
   520     001F                     _ADCON0bits	set	31
   521     000C                     _PIR1bits	set	12
   522     0008                     _PORTDbits	set	8
   523     0013                     _SSPBUF	set	19
   524     0014                     _SSPCON	set	20
   525     00C4                     _CREN	set	196
   526     00C1                     _OERR	set	193
   527     0065                     _RCIF	set	101
   528     0043                     _RD3	set	67
   529     0047                     _RD7	set	71
   530     0046                     _RD6	set	70
   531     0045                     _RD5	set	69
   532     0044                     _RD4	set	68
   533     0063                     _SSPIF	set	99
   534     005E                     _PEIE	set	94
   535     005F                     _GIE	set	95
   536     0098                     _TXSTA	set	152
   537     0099                     _SPBRG	set	153
   538     008C                     _PIE1bits	set	140
   539     009F                     _ADCON1bits	set	159
   540     0088                     _TRISD	set	136
   541     0085                     _TRISA	set	133
   542     008F                     _OSCCON	set	143
   543     0091                     _SSPCON2bits	set	145
   544     0087                     _TRISCbits	set	135
   545     0094                     _SSPSTAT	set	148
   546     0093                     _SSPADD	set	147
   547     0091                     _SSPCON2	set	145
   548     04C1                     _TRMT	set	1217
   549     0463                     _SSPIE	set	1123
   550     043C                     _TRISC4	set	1084
   551     043B                     _TRISC3	set	1083
   552     0189                     _ANSELH	set	393
   553     0188                     _ANSEL	set	392
   554     05B8                     STR_1:
   555     05B8  3431               	retlw	49	;'1'
   556     05B9  342E               	retlw	46	;'.'
   557     05BA  344C               	retlw	76	;'L'
   558     05BB  3465               	retlw	101	;'e'
   559     05BC  3465               	retlw	101	;'e'
   560     05BD  3472               	retlw	114	;'r'
   561     05BE  3420               	retlw	32	;' '
   562     05BF  3470               	retlw	112	;'p'
   563     05C0  346F               	retlw	111	;'o'
   564     05C1  3474               	retlw	116	;'t'
   565     05C2  3465               	retlw	101	;'e'
   566     05C3  346E               	retlw	110	;'n'
   567     05C4  3463               	retlw	99	;'c'
   568     05C5  3469               	retlw	105	;'i'
   569     05C6  346F               	retlw	111	;'o'
   570     05C7  346D               	retlw	109	;'m'
   571     05C8  3465               	retlw	101	;'e'
   572     05C9  3474               	retlw	116	;'t'
   573     05CA  3472               	retlw	114	;'r'
   574     05CB  346F               	retlw	111	;'o'
   575     05CC  340D               	retlw	13
   576     05CD  340A               	retlw	10
   577     05CE  3400               	retlw	0
   578     05CF                     STR_4:
   579     05CF  3425               	retlw	37	;'%'
   580     05D0  3430               	retlw	48	;'0'
   581     05D1  3433               	retlw	51	;'3'
   582     05D2  3475               	retlw	117	;'u'
   583     05D3  340D               	retlw	13
   584     05D4  340A               	retlw	10
   585     05D5  3400               	retlw	0
   586     05CC                     
   587                           	psect	cinit
   588     000F                     start_initialization:	
   589                           ; #config settings
   590                           
   591     000F                     __initialization:
   592                           
   593                           ; Clear objects allocated to BANK0
   594     000F  1283               	bcf	3,5	;RP0=0, select bank0
   595     0010  1303               	bcf	3,6	;RP1=0, select bank0
   596     0011  01D8               	clrf	__pbssBANK0& (0+127)
   597     0012  01D9               	clrf	(__pbssBANK0+1)& (0+127)
   598     0013  01DA               	clrf	(__pbssBANK0+2)& (0+127)
   599     0014                     end_of_initialization:	
   600                           ;End of C runtime variable initialization code
   601                           
   602     0014                     __end_of__initialization:
   603     0014  0183               	clrf	3
   604     0015  120A  118A  299E   	ljmp	_main	;jump to C main() function
   605                           
   606                           	psect	bssBANK0
   607     0058                     __pbssBANK0:
   608     0058                     _a:
   609     0058                     	ds	2
   610     005A                     _valpot:
   611     005A                     	ds	1
   612                           
   613                           	psect	cstackCOMMON
   614     0070                     __pcstackCOMMON:
   615     0070                     ?_UART_Data_Ready:
   616     0070                     ?_isdigit:	
   617                           ; 1 bit 
   618                           
   619     0070                     ?_setup:	
   620                           ; 1 bit 
   621                           
   622     0070                     ?_preguntas:	
   623                           ; 1 bytes @ 0x0
   624                           
   625     0070                     ?_UART_GetC:	
   626                           ; 1 bytes @ 0x0
   627                           
   628     0070                     ?_UART_PutC:	
   629                           ; 1 bytes @ 0x0
   630                           
   631     0070                     ?_isr:	
   632                           ; 1 bytes @ 0x0
   633                           
   634     0070                     ??_isr:	
   635                           ; 1 bytes @ 0x0
   636                           
   637     0070                     ?_uart_read:	
   638                           ; 1 bytes @ 0x0
   639                           
   640     0070                     ?_main:	
   641                           ; 1 bytes @ 0x0
   642                           
   643                           
   644                           ; 1 bytes @ 0x0
   645     0070                     	ds	3
   646     0073                     ??_setup:
   647     0073                     ??_UART_Data_Ready:	
   648                           ; 1 bytes @ 0x3
   649                           
   650     0073                     ??_UART_GetC:	
   651                           ; 1 bytes @ 0x3
   652                           
   653     0073                     ??_UART_PutC:	
   654                           ; 1 bytes @ 0x3
   655                           
   656     0073                     ??_isdigit:	
   657                           ; 1 bytes @ 0x3
   658                           
   659     0073                     ??_uart_read:	
   660                           ; 1 bytes @ 0x3
   661                           
   662     0073                     ?___wmul:	
   663                           ; 1 bytes @ 0x3
   664                           
   665     0073                     ?___lldiv:	
   666                           ; 2 bytes @ 0x3
   667                           
   668     0073                     ?___fltol:	
   669                           ; 4 bytes @ 0x3
   670                           
   671     0073                     UART_PutC@data:	
   672                           ; 4 bytes @ 0x3
   673                           
   674     0073                     _isdigit$958:	
   675                           ; 1 bytes @ 0x3
   676                           
   677     0073                     ___wmul@multiplier:	
   678                           ; 1 bytes @ 0x3
   679                           
   680     0073                     ___lldiv@divisor:	
   681                           ; 2 bytes @ 0x3
   682                           
   683     0073                     ___fltol@f1:	
   684                           ; 4 bytes @ 0x3
   685                           
   686                           
   687                           ; 4 bytes @ 0x3
   688     0073                     	ds	1
   689     0074                     ?_UART_Print:
   690     0074                     isdigit@c:	
   691                           ; 1 bytes @ 0x4
   692                           
   693     0074                     UART_Print@data:	
   694                           ; 1 bytes @ 0x4
   695                           
   696                           
   697                           ; 2 bytes @ 0x4
   698     0074                     	ds	1
   699     0075                     ___wmul@multiplicand:
   700                           
   701                           ; 2 bytes @ 0x5
   702     0075                     	ds	1
   703     0076                     ??_UART_Print:
   704     0076                     UART_Print@i:	
   705                           ; 1 bytes @ 0x6
   706                           
   707                           
   708                           ; 1 bytes @ 0x6
   709     0076                     	ds	1
   710     0077                     ??_preguntas:
   711     0077                     ??___wmul:	
   712                           ; 1 bytes @ 0x7
   713                           
   714     0077                     ??___fltol:	
   715                           ; 1 bytes @ 0x7
   716                           
   717     0077                     ___wmul@product:	
   718                           ; 1 bytes @ 0x7
   719                           
   720     0077                     ___lldiv@dividend:	
   721                           ; 2 bytes @ 0x7
   722                           
   723                           
   724                           ; 4 bytes @ 0x7
   725     0077                     	ds	2
   726     0079                     ??___lwdiv:
   727     0079                     ??___lwmod:	
   728                           ; 1 bytes @ 0x9
   729                           
   730     0079                     ___lwmod@counter:	
   731                           ; 1 bytes @ 0x9
   732                           
   733                           
   734                           ; 1 bytes @ 0x9
   735     0079                     	ds	2
   736                           
   737                           	psect	cstackBANK0
   738     0020                     __pcstackBANK0:
   739     0020                     ??___lldiv:
   740     0020                     ?___lwdiv:	
   741                           ; 1 bytes @ 0x0
   742                           
   743     0020                     ___fltol@sign1:	
   744                           ; 2 bytes @ 0x0
   745                           
   746     0020                     ___lwdiv@divisor:	
   747                           ; 1 bytes @ 0x0
   748                           
   749                           
   750                           ; 2 bytes @ 0x0
   751     0020                     	ds	1
   752     0021                     ___fltol@exp1:
   753     0021                     ___lldiv@quotient:	
   754                           ; 1 bytes @ 0x1
   755                           
   756                           
   757                           ; 4 bytes @ 0x1
   758     0021                     	ds	1
   759     0022                     ___lwdiv@dividend:
   760                           
   761                           ; 2 bytes @ 0x2
   762     0022                     	ds	2
   763     0024                     ___lwdiv@quotient:
   764                           
   765                           ; 2 bytes @ 0x4
   766     0024                     	ds	1
   767     0025                     ___lldiv@counter:
   768                           
   769                           ; 1 bytes @ 0x5
   770     0025                     	ds	1
   771     0026                     ?_UART_Init:
   772     0026                     ___lwdiv@counter:	
   773                           ; 1 bytes @ 0x6
   774                           
   775     0026                     UART_Init@baud_rate:	
   776                           ; 1 bytes @ 0x6
   777                           
   778                           
   779                           ; 4 bytes @ 0x6
   780     0026                     	ds	1
   781     0027                     ?___lwmod:
   782     0027                     ?___xxtofl:	
   783                           ; 2 bytes @ 0x7
   784                           
   785     0027                     ___lwmod@divisor:	
   786                           ; 4 bytes @ 0x7
   787                           
   788     0027                     ___xxtofl@val:	
   789                           ; 2 bytes @ 0x7
   790                           
   791                           
   792                           ; 4 bytes @ 0x7
   793     0027                     	ds	2
   794     0029                     ___lwmod@dividend:
   795                           
   796                           ; 2 bytes @ 0x9
   797     0029                     	ds	1
   798     002A                     ??_UART_Init:
   799                           
   800                           ; 1 bytes @ 0xA
   801     002A                     	ds	1
   802     002B                     ??___xxtofl:
   803     002B                     ?_sprintf:	
   804                           ; 1 bytes @ 0xB
   805                           
   806     002B                     sprintf@f:	
   807                           ; 2 bytes @ 0xB
   808                           
   809                           
   810                           ; 1 bytes @ 0xB
   811     002B                     	ds	3
   812     002E                     ??_sprintf:
   813     002E                     UART_Init@n:	
   814                           ; 1 bytes @ 0xE
   815                           
   816                           
   817                           ; 2 bytes @ 0xE
   818     002E                     	ds	1
   819     002F                     ___xxtofl@sign:
   820                           
   821                           ; 1 bytes @ 0xF
   822     002F                     	ds	1
   823     0030                     ___xxtofl@exp:
   824                           
   825                           ; 1 bytes @ 0x10
   826     0030                     	ds	1
   827     0031                     sprintf@ap:
   828     0031                     ___xxtofl@arg:	
   829                           ; 1 bytes @ 0x11
   830                           
   831                           
   832                           ; 4 bytes @ 0x11
   833     0031                     	ds	1
   834     0032                     sprintf@flag:
   835                           
   836                           ; 1 bytes @ 0x12
   837     0032                     	ds	1
   838     0033                     sprintf@val:
   839                           
   840                           ; 2 bytes @ 0x13
   841     0033                     	ds	2
   842     0035                     ?_map:
   843     0035                     sprintf@prec:	
   844                           ; 2 bytes @ 0x15
   845                           
   846     0035                     map@varmap:	
   847                           ; 1 bytes @ 0x15
   848                           
   849                           
   850                           ; 2 bytes @ 0x15
   851     0035                     	ds	1
   852     0036                     sprintf@sp:
   853                           
   854                           ; 1 bytes @ 0x16
   855     0036                     	ds	1
   856     0037                     map@minval:
   857     0037                     sprintf@width:	
   858                           ; 2 bytes @ 0x17
   859                           
   860                           
   861                           ; 2 bytes @ 0x17
   862     0037                     	ds	2
   863     0039                     sprintf@c:
   864     0039                     map@maxval:	
   865                           ; 1 bytes @ 0x19
   866                           
   867                           
   868                           ; 2 bytes @ 0x19
   869     0039                     	ds	2
   870     003B                     map@minsal:
   871                           
   872                           ; 2 bytes @ 0x1B
   873     003B                     	ds	2
   874     003D                     map@maxsal:
   875                           
   876                           ; 2 bytes @ 0x1D
   877     003D                     	ds	2
   878     003F                     ??_map:
   879                           
   880                           ; 1 bytes @ 0x1F
   881     003F                     	ds	6
   882     0045                     map@valmap:
   883                           
   884                           ; 4 bytes @ 0x25
   885     0045                     	ds	4
   886     0049                     ??_main:
   887                           
   888                           ; 1 bytes @ 0x29
   889     0049                     	ds	3
   890     004C                     main@text:
   891                           
   892                           ; 9 bytes @ 0x2C
   893     004C                     	ds	9
   894     0055                     main@varvolt2:
   895                           
   896                           ; 2 bytes @ 0x35
   897     0055                     	ds	2
   898     0057                     main@c:
   899                           
   900                           ; 1 bytes @ 0x37
   901     0057                     	ds	1
   902                           
   903                           	psect	maintext
   904     019E                     __pmaintext:	
   905 ;;
   906 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   907 ;;
   908 ;; *************** function _main *****************
   909 ;; Defined at:
   910 ;;		line 63 in file "HC05BT_prueba.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;		None
   913 ;; Auto vars:     Size  Location     Type
   914 ;;  c               1   55[BANK0 ] unsigned char 
   915 ;;  varvolt2        2   53[BANK0 ] unsigned int 
   916 ;;  text            9   44[BANK0 ] unsigned char [9]
   917 ;; Return value:  Size  Location     Type
   918 ;;                  1    wreg      void 
   919 ;; Registers used:
   920 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : B00/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   926 ;;      Params:         0       0       0       0       0
   927 ;;      Locals:         0      12       0       0       0
   928 ;;      Temps:          0       3       0       0       0
   929 ;;      Totals:         0      15       0       0       0
   930 ;;Total ram usage:       15 bytes
   931 ;; Hardware stack levels required when called: 4
   932 ;; This function calls:
   933 ;;		_UART_Data_Ready
   934 ;;		_UART_GetC
   935 ;;		_UART_Init
   936 ;;		_UART_Print
   937 ;;		_UART_PutC
   938 ;;		_map
   939 ;;		_preguntas
   940 ;;		_setup
   941 ;;		_sprintf
   942 ;;		_uart_read
   943 ;; This function is called by:
   944 ;;		Startup code after reset
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948     019E                     _main:	
   949                           ;psect for function _main
   950                           
   951     019E                     l1963:	
   952                           ;incstack = 0
   953                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   954                           
   955                           
   956                           ;HC05BT_prueba.c: 65:     setup();
   957     019E  120A  118A  2683  120A  118A  	fcall	_setup
   958     01A3                     l1965:
   959                           
   960                           ;HC05BT_prueba.c: 66:   OSCCON = 0x70;
   961     01A3  3070               	movlw	112
   962     01A4  1683               	bsf	3,5	;RP0=1, select bank1
   963     01A5  1303               	bcf	3,6	;RP1=0, select bank1
   964     01A6  008F               	movwf	15	;volatile
   965     01A7                     l1967:
   966                           
   967                           ;HC05BT_prueba.c: 68:   UART_Init(9600);
   968     01A7  3000               	movlw	0
   969     01A8  1283               	bcf	3,5	;RP0=0, select bank0
   970     01A9  1303               	bcf	3,6	;RP1=0, select bank0
   971     01AA  00A9               	movwf	UART_Init@baud_rate+3
   972     01AB  3000               	movlw	0
   973     01AC  00A8               	movwf	UART_Init@baud_rate+2
   974     01AD  3025               	movlw	37
   975     01AE  00A7               	movwf	UART_Init@baud_rate+1
   976     01AF  3080               	movlw	128
   977     01B0  00A6               	movwf	UART_Init@baud_rate
   978     01B1  120A  118A  23A9  120A  118A  	fcall	_UART_Init
   979     01B6                     l1969:
   980                           
   981                           ;HC05BT_prueba.c: 70:   _delay((unsigned long)((2000)*(8000000/4000.0)));
   982     01B6  3015               	movlw	21
   983     01B7  1283               	bcf	3,5	;RP0=0, select bank0
   984     01B8  1303               	bcf	3,6	;RP1=0, select bank0
   985     01B9  00CB               	movwf	??_main+2
   986     01BA  304B               	movlw	75
   987     01BB  00CA               	movwf	??_main+1
   988     01BC  30BD               	movlw	189
   989     01BD  00C9               	movwf	??_main
   990     01BE                     u1747:
   991     01BE  0BC9               	decfsz	??_main,f
   992     01BF  29BE               	goto	u1747
   993     01C0  0BCA               	decfsz	??_main+1,f
   994     01C1  29BE               	goto	u1747
   995     01C2  0BCB               	decfsz	??_main+2,f
   996     01C3  29BE               	goto	u1747
   997     01C4  29C5               	nop2
   998     01C5                     l1971:
   999                           
  1000                           ;HC05BT_prueba.c: 72:   UART_Print("1.Leer potenciometro\r\n");
  1001     01C5  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1002     01C6  00F4               	movwf	UART_Print@data
  1003     01C7  3080               	movlw	128
  1004     01C8  00F5               	movwf	UART_Print@data+1
  1005     01C9  120A  118A  2658  120A  118A  	fcall	_UART_Print
  1006     01CE                     l1973:
  1007                           
  1008                           ;HC05BT_prueba.c: 74:   _delay((unsigned long)((1000)*(8000000/4000.0)));
  1009     01CE  300B               	movlw	11
  1010     01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1011     01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1012     01D1  00CB               	movwf	??_main+2
  1013     01D2  3026               	movlw	38
  1014     01D3  00CA               	movwf	??_main+1
  1015     01D4  305D               	movlw	93
  1016     01D5  00C9               	movwf	??_main
  1017     01D6                     u1757:
  1018     01D6  0BC9               	decfsz	??_main,f
  1019     01D7  29D6               	goto	u1757
  1020     01D8  0BCA               	decfsz	??_main+1,f
  1021     01D9  29D6               	goto	u1757
  1022     01DA  0BCB               	decfsz	??_main+2,f
  1023     01DB  29D6               	goto	u1757
  1024     01DC                     l1975:
  1025                           
  1026                           ;HC05BT_prueba.c: 76:   UART_Print(message);
  1027     01DC  300B               	movlw	(low ((_message-__stringbase)| (0+32768)))& (0+255)
  1028     01DD  00F4               	movwf	UART_Print@data
  1029     01DE  3080               	movlw	128
  1030     01DF  00F5               	movwf	UART_Print@data+1
  1031     01E0  120A  118A  2658  120A  118A  	fcall	_UART_Print
  1032     01E5                     l1977:
  1033                           
  1034                           ;HC05BT_prueba.c: 78:   _delay((unsigned long)((1000)*(8000000/4000.0)));
  1035     01E5  300B               	movlw	11
  1036     01E6  1283               	bcf	3,5	;RP0=0, select bank0
  1037     01E7  1303               	bcf	3,6	;RP1=0, select bank0
  1038     01E8  00CB               	movwf	??_main+2
  1039     01E9  3026               	movlw	38
  1040     01EA  00CA               	movwf	??_main+1
  1041     01EB  305D               	movlw	93
  1042     01EC  00C9               	movwf	??_main
  1043     01ED                     u1767:
  1044     01ED  0BC9               	decfsz	??_main,f
  1045     01EE  29ED               	goto	u1767
  1046     01EF  0BCA               	decfsz	??_main+1,f
  1047     01F0  29ED               	goto	u1767
  1048     01F1  0BCB               	decfsz	??_main+2,f
  1049     01F2  29ED               	goto	u1767
  1050     01F3                     l1979:
  1051                           
  1052                           ;HC05BT_prueba.c: 80:   UART_Print("\r\n");
  1053     01F3  302E               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
  1054     01F4  00F4               	movwf	UART_Print@data
  1055     01F5  3080               	movlw	128
  1056     01F6  00F5               	movwf	UART_Print@data+1
  1057     01F7  120A  118A  2658  120A  118A  	fcall	_UART_Print
  1058     01FC                     l1981:
  1059                           
  1060                           ;HC05BT_prueba.c: 81:  ADCON0bits.GO =1;
  1061     01FC  1283               	bcf	3,5	;RP0=0, select bank0
  1062     01FD  1303               	bcf	3,6	;RP1=0, select bank0
  1063     01FE  149F               	bsf	31,1	;volatile
  1064     01FF                     l1983:
  1065                           
  1066                           ;HC05BT_prueba.c: 84:   {;HC05BT_prueba.c: 85:        if (ADCON0bits.GO ==0)
  1067     01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1068     0200  1303               	bcf	3,6	;RP1=0, select bank0
  1069     0201  189F               	btfsc	31,1	;volatile
  1070     0202  2A04               	goto	u1721
  1071     0203  2A05               	goto	u1720
  1072     0204                     u1721:
  1073     0204  2A06               	goto	l1987
  1074     0205                     u1720:
  1075     0205                     l1985:
  1076                           
  1077                           ;HC05BT_prueba.c: 86:      ADCON0bits.GO =1;
  1078     0205  149F               	bsf	31,1	;volatile
  1079     0206                     l1987:
  1080                           
  1081                           ;HC05BT_prueba.c: 100:        a ++;
  1082     0206  3001               	movlw	1
  1083     0207  07D8               	addwf	_a,f
  1084     0208  1803               	skipnc
  1085     0209  0AD9               	incf	_a+1,f
  1086     020A  3000               	movlw	0
  1087     020B  07D9               	addwf	_a+1,f
  1088                           
  1089                           ;HC05BT_prueba.c: 101:        PORTD = a;
  1090     020C  0858               	movf	_a,w
  1091     020D  0088               	movwf	8	;volatile
  1092                           
  1093                           ;HC05BT_prueba.c: 102:        _delay((unsigned long)((700)*(8000000/4000.0)));
  1094     020E  3008               	movlw	8
  1095     020F  1283               	bcf	3,5	;RP0=0, select bank0
  1096     0210  1303               	bcf	3,6	;RP1=0, select bank0
  1097     0211  00CB               	movwf	??_main+2
  1098     0212  301B               	movlw	27
  1099     0213  00CA               	movwf	??_main+1
  1100     0214  3026               	movlw	38
  1101     0215  00C9               	movwf	??_main
  1102     0216                     u1777:
  1103     0216  0BC9               	decfsz	??_main,f
  1104     0217  2A16               	goto	u1777
  1105     0218  0BCA               	decfsz	??_main+1,f
  1106     0219  2A16               	goto	u1777
  1107     021A  0BCB               	decfsz	??_main+2,f
  1108     021B  2A16               	goto	u1777
  1109     021C  0000               	nop
  1110     021D                     l1989:
  1111                           
  1112                           ;HC05BT_prueba.c: 103:        UART_Print ("\r\n");
  1113     021D  302E               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
  1114     021E  00F4               	movwf	UART_Print@data
  1115     021F  3080               	movlw	128
  1116     0220  00F5               	movwf	UART_Print@data+1
  1117     0221  120A  118A  2658  120A  118A  	fcall	_UART_Print
  1118     0226                     l1991:
  1119                           
  1120                           ;HC05BT_prueba.c: 104:             sprintf(text, "%03u\r\n", a);
  1121     0226  3031               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1122     0227  1283               	bcf	3,5	;RP0=0, select bank0
  1123     0228  1303               	bcf	3,6	;RP1=0, select bank0
  1124     0229  00AB               	movwf	sprintf@f
  1125     022A  0859               	movf	_a+1,w
  1126     022B  00AD               	movwf	?_sprintf+2
  1127     022C  0858               	movf	_a,w
  1128     022D  00AC               	movwf	?_sprintf+1
  1129     022E  304C               	movlw	(low (main@text| 0))& (0+255)
  1130     022F  120A  118A  2018  120A  118A  	fcall	_sprintf
  1131     0234                     l1993:
  1132                           
  1133                           ;HC05BT_prueba.c: 105:              UART_Print(text);
  1134     0234  304C               	movlw	(low (main@text| 0))& (0+255)
  1135     0235  00F4               	movwf	UART_Print@data
  1136     0236  3000               	movlw	0
  1137     0237  00F5               	movwf	UART_Print@data+1
  1138     0238  120A  118A  2658  120A  118A  	fcall	_UART_Print
  1139     023D                     l1995:
  1140                           
  1141                           ;HC05BT_prueba.c: 106:              _delay((unsigned long)((700)*(8000000/4000.0)));
  1142     023D  3008               	movlw	8
  1143     023E  1283               	bcf	3,5	;RP0=0, select bank0
  1144     023F  1303               	bcf	3,6	;RP1=0, select bank0
  1145     0240  00CB               	movwf	??_main+2
  1146     0241  301B               	movlw	27
  1147     0242  00CA               	movwf	??_main+1
  1148     0243  3026               	movlw	38
  1149     0244  00C9               	movwf	??_main
  1150     0245                     u1787:
  1151     0245  0BC9               	decfsz	??_main,f
  1152     0246  2A45               	goto	u1787
  1153     0247  0BCA               	decfsz	??_main+1,f
  1154     0248  2A45               	goto	u1787
  1155     0249  0BCB               	decfsz	??_main+2,f
  1156     024A  2A45               	goto	u1787
  1157     024B  0000               	nop
  1158                           
  1159                           ;HC05BT_prueba.c: 107:       switch (uart_read()){
  1160     024C  2ABB               	goto	l2025
  1161     024D                     l1997:
  1162                           
  1163                           ;HC05BT_prueba.c: 112:                valpot = ADRESH;
  1164     024D  081E               	movf	30,w	;volatile
  1165     024E  00DA               	movwf	_valpot
  1166     024F                     l1999:
  1167                           
  1168                           ;HC05BT_prueba.c: 113:               uint16_t varvolt2 = map(valpot,0,255,0,5);
  1169     024F  085A               	movf	_valpot,w
  1170     0250  00C9               	movwf	??_main
  1171     0251  01CA               	clrf	??_main+1
  1172     0252  0849               	movf	??_main,w
  1173     0253  00B5               	movwf	map@varmap
  1174     0254  084A               	movf	??_main+1,w
  1175     0255  00B6               	movwf	map@varmap+1
  1176     0256  3000               	movlw	0
  1177     0257  00B7               	movwf	map@minval
  1178     0258  00B8               	movwf	map@minval+1
  1179     0259  30FF               	movlw	255
  1180     025A  00B9               	movwf	map@maxval
  1181     025B  3000               	movlw	0
  1182     025C  00BA               	movwf	map@maxval+1
  1183     025D  3000               	movlw	0
  1184     025E  00BB               	movwf	map@minsal
  1185     025F  00BC               	movwf	map@minsal+1
  1186     0260  3005               	movlw	5
  1187     0261  00BD               	movwf	map@maxsal
  1188     0262  3000               	movlw	0
  1189     0263  00BE               	movwf	map@maxsal+1
  1190     0264  120A  118A  2529  120A  118A  	fcall	_map
  1191     0269  1283               	bcf	3,5	;RP0=0, select bank0
  1192     026A  1303               	bcf	3,6	;RP1=0, select bank0
  1193     026B  0836               	movf	?_map+1,w
  1194     026C  00D6               	movwf	main@varvolt2+1
  1195     026D  0835               	movf	?_map,w
  1196     026E  00D5               	movwf	main@varvolt2
  1197     026F                     l2001:
  1198                           
  1199                           ;HC05BT_prueba.c: 115:               UART_Print ("\r\n");
  1200     026F  302E               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
  1201     0270  00F4               	movwf	UART_Print@data
  1202     0271  3080               	movlw	128
  1203     0272  00F5               	movwf	UART_Print@data+1
  1204     0273  120A  118A  2658  120A  118A  	fcall	_UART_Print
  1205     0278                     l2003:
  1206                           
  1207                           ;HC05BT_prueba.c: 116:             sprintf(text, "%03u\r\n", varvolt2);
  1208     0278  3031               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1209     0279  1283               	bcf	3,5	;RP0=0, select bank0
  1210     027A  1303               	bcf	3,6	;RP1=0, select bank0
  1211     027B  00AB               	movwf	sprintf@f
  1212     027C  0856               	movf	main@varvolt2+1,w
  1213     027D  00AD               	movwf	?_sprintf+2
  1214     027E  0855               	movf	main@varvolt2,w
  1215     027F  00AC               	movwf	?_sprintf+1
  1216     0280  304C               	movlw	(low (main@text| 0))& (0+255)
  1217     0281  120A  118A  2018  120A  118A  	fcall	_sprintf
  1218     0286                     l2005:
  1219                           
  1220                           ;HC05BT_prueba.c: 117:             UART_Print(text);
  1221     0286  304C               	movlw	(low (main@text| 0))& (0+255)
  1222     0287  00F4               	movwf	UART_Print@data
  1223     0288  3000               	movlw	0
  1224     0289  00F5               	movwf	UART_Print@data+1
  1225     028A  120A  118A  2658  120A  118A  	fcall	_UART_Print
  1226     028F                     l2007:
  1227                           
  1228                           ;HC05BT_prueba.c: 120:               preguntas();
  1229     028F  120A  118A  26FC  120A  118A  	fcall	_preguntas
  1230     0294                     l2009:
  1231                           
  1232                           ;HC05BT_prueba.c: 121:              RCREG ='0';
  1233     0294  3030               	movlw	48
  1234     0295  1283               	bcf	3,5	;RP0=0, select bank0
  1235     0296  1303               	bcf	3,6	;RP1=0, select bank0
  1236     0297  009A               	movwf	26	;volatile
  1237                           
  1238                           ;HC05BT_prueba.c: 123:              break;
  1239     0298  2AD4               	goto	l2027
  1240     0299                     l2011:
  1241                           
  1242                           ;HC05BT_prueba.c: 125:                _delay((unsigned long)((2000)*(8000000/4000000.0))
      +                          );
  1243     0299  3006               	movlw	6
  1244     029A  1283               	bcf	3,5	;RP0=0, select bank0
  1245     029B  1303               	bcf	3,6	;RP1=0, select bank0
  1246     029C  00CA               	movwf	??_main+1
  1247     029D  302F               	movlw	47
  1248     029E  00C9               	movwf	??_main
  1249     029F                     u1797:
  1250     029F  0BC9               	decfsz	??_main,f
  1251     02A0  2A9F               	goto	u1797
  1252     02A1  0BCA               	decfsz	??_main+1,f
  1253     02A2  2A9F               	goto	u1797
  1254     02A3  2AA4               	nop2
  1255     02A4                     l2013:
  1256                           
  1257                           ;HC05BT_prueba.c: 126:                PORTD ++;
  1258     02A4  3001               	movlw	1
  1259     02A5  00FF               	movwf	btemp+1
  1260     02A6  087F               	movf	btemp+1,w
  1261     02A7  1283               	bcf	3,5	;RP0=0, select bank0
  1262     02A8  1303               	bcf	3,6	;RP1=0, select bank0
  1263     02A9  0788               	addwf	8,f	;volatile
  1264     02AA  2A94               	goto	l2009
  1265     02AB                     l2017:
  1266                           
  1267                           ;HC05BT_prueba.c: 131:                _delay((unsigned long)((2000)*(8000000/4000000.0))
      +                          );
  1268     02AB  3006               	movlw	6
  1269     02AC  1283               	bcf	3,5	;RP0=0, select bank0
  1270     02AD  1303               	bcf	3,6	;RP1=0, select bank0
  1271     02AE  00CA               	movwf	??_main+1
  1272     02AF  302F               	movlw	47
  1273     02B0  00C9               	movwf	??_main
  1274     02B1                     u1807:
  1275     02B1  0BC9               	decfsz	??_main,f
  1276     02B2  2AB1               	goto	u1807
  1277     02B3  0BCA               	decfsz	??_main+1,f
  1278     02B4  2AB1               	goto	u1807
  1279     02B5  2AB6               	nop2
  1280     02B6                     l2019:
  1281                           
  1282                           ;HC05BT_prueba.c: 132:                PORTD --;
  1283     02B6  3001               	movlw	1
  1284     02B7  1283               	bcf	3,5	;RP0=0, select bank0
  1285     02B8  1303               	bcf	3,6	;RP1=0, select bank0
  1286     02B9  0288               	subwf	8,f	;volatile
  1287     02BA  2A94               	goto	l2009
  1288     02BB                     l2025:
  1289     02BB  120A  118A  26E9  120A  118A  	fcall	_uart_read
  1290     02C0  1283               	bcf	3,5	;RP0=0, select bank0
  1291     02C1  1303               	bcf	3,6	;RP1=0, select bank0
  1292     02C2  00C9               	movwf	??_main
  1293     02C3  01CA               	clrf	??_main+1
  1294                           
  1295                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1296                           ; Switch size 1, requested type "simple"
  1297                           ; Number of cases is 1, Range of values is 0 to 0
  1298                           ; switch strategies available:
  1299                           ; Name         Instructions Cycles
  1300                           ; simple_byte            4     3 (average)
  1301                           ; direct_byte           11     8 (fixed)
  1302                           ; jumptable            260     6 (fixed)
  1303                           ;	Chosen strategy is simple_byte
  1304     02C4  084A               	movf	??_main+1,w
  1305     02C5  3A00               	xorlw	0	; case 0
  1306     02C6  1903               	skipnz
  1307     02C7  2AC9               	goto	l2097
  1308     02C8  2AD4               	goto	l2027
  1309     02C9                     l2097:
  1310                           
  1311                           ; Switch size 1, requested type "simple"
  1312                           ; Number of cases is 3, Range of values is 43 to 49
  1313                           ; switch strategies available:
  1314                           ; Name         Instructions Cycles
  1315                           ; simple_byte           10     6 (average)
  1316                           ; direct_byte           32    11 (fixed)
  1317                           ; jumptable            263     9 (fixed)
  1318                           ;	Chosen strategy is simple_byte
  1319     02C9  0849               	movf	??_main,w
  1320     02CA  3A2B               	xorlw	43	; case 43
  1321     02CB  1903               	skipnz
  1322     02CC  2A99               	goto	l2011
  1323     02CD  3A06               	xorlw	6	; case 45
  1324     02CE  1903               	skipnz
  1325     02CF  2AAB               	goto	l2017
  1326     02D0  3A1C               	xorlw	28	; case 49
  1327     02D1  1903               	skipnz
  1328     02D2  2A4D               	goto	l1997
  1329     02D3  2AD4               	goto	l2027
  1330     02D4                     l2027:
  1331                           
  1332                           ;HC05BT_prueba.c: 139:     if ( UART_Data_Ready() )
  1333     02D4  120A  118A  273B  120A  118A  	fcall	_UART_Data_Ready
  1334     02D9  1C03               	btfss	3,0
  1335     02DA  2ADC               	goto	u1731
  1336     02DB  2ADD               	goto	u1730
  1337     02DC                     u1731:
  1338     02DC  29FF               	goto	l1983
  1339     02DD                     u1730:
  1340     02DD                     l2029:
  1341                           
  1342                           ;HC05BT_prueba.c: 140:     {;HC05BT_prueba.c: 141:       uint8_t c = UART_GetC();
  1343     02DD  120A  118A  2721  120A  118A  	fcall	_UART_GetC
  1344     02E2  1283               	bcf	3,5	;RP0=0, select bank0
  1345     02E3  1303               	bcf	3,6	;RP1=0, select bank0
  1346     02E4  00D7               	movwf	main@c
  1347     02E5                     l2031:
  1348                           
  1349                           ;HC05BT_prueba.c: 142:       UART_PutC(c);
  1350     02E5  0857               	movf	main@c,w
  1351     02E6  120A  118A  272F  120A  118A  	fcall	_UART_PutC
  1352     02EB  29FF               	goto	l1983
  1353     02EC  120A  118A  280C   	ljmp	start
  1354     02EF                     __end_of_main:
  1355                           
  1356                           	psect	text1
  1357     06E9                     __ptext1:	
  1358 ;; *************** function _uart_read *****************
  1359 ;; Defined at:
  1360 ;;		line 50 in file "HC05BT_prueba.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;		None
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;		None
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      unsigned char 
  1367 ;; Registers used:
  1368 ;;		wreg
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1374 ;;      Params:         0       0       0       0       0
  1375 ;;      Locals:         0       0       0       0       0
  1376 ;;      Temps:          0       0       0       0       0
  1377 ;;      Totals:         0       0       0       0       0
  1378 ;;Total ram usage:        0 bytes
  1379 ;; Hardware stack levels used: 1
  1380 ;; Hardware stack levels required when called: 1
  1381 ;; This function calls:
  1382 ;;		Nothing
  1383 ;; This function is called by:
  1384 ;;		_main
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388     06E9                     _uart_read:	
  1389                           ;psect for function _uart_read
  1390                           
  1391     06E9                     l1761:	
  1392                           ;incstack = 0
  1393                           ; Regs used in _uart_read: [wreg]
  1394                           
  1395                           
  1396                           ;HC05BT_prueba.c: 51:  if(PIR1bits.RCIF== 0){
  1397     06E9  1283               	bcf	3,5	;RP0=0, select bank0
  1398     06EA  1303               	bcf	3,6	;RP1=0, select bank0
  1399     06EB  1A8C               	btfsc	12,5	;volatile
  1400     06EC  2EEE               	goto	u1461
  1401     06ED  2EEF               	goto	u1460
  1402     06EE                     u1461:
  1403     06EE  2EFA               	goto	l1773
  1404     06EF                     u1460:
  1405     06EF                     l1763:
  1406                           
  1407                           ;HC05BT_prueba.c: 52:      if (RCSTAbits.OERR){
  1408     06EF  1C98               	btfss	24,1	;volatile
  1409     06F0  2EF2               	goto	u1471
  1410     06F1  2EF3               	goto	u1470
  1411     06F2                     u1471:
  1412     06F2  2EF8               	goto	l1767
  1413     06F3                     u1470:
  1414     06F3                     l1765:
  1415                           
  1416                           ;HC05BT_prueba.c: 53:          RCSTAbits.CREN =0;
  1417     06F3  1218               	bcf	24,4	;volatile
  1418                           
  1419                           ;HC05BT_prueba.c: 54:          __nop();
  1420     06F4  0000               	nop
  1421                           
  1422                           ;HC05BT_prueba.c: 55:          RCSTAbits.CREN =1;
  1423     06F5  1283               	bcf	3,5	;RP0=0, select bank0
  1424     06F6  1303               	bcf	3,6	;RP1=0, select bank0
  1425     06F7  1618               	bsf	24,4	;volatile
  1426     06F8                     l1767:
  1427                           
  1428                           ;HC05BT_prueba.c: 57:      return RCREG;
  1429     06F8  081A               	movf	26,w	;volatile
  1430     06F9  2EFB               	goto	l178
  1431     06FA                     l1773:
  1432                           
  1433                           ;HC05BT_prueba.c: 60:      return 0;
  1434     06FA  3000               	movlw	0
  1435     06FB                     l178:
  1436     06FB  0008               	return
  1437     06FC                     __end_of_uart_read:
  1438                           
  1439                           	psect	text2
  1440     0018                     __ptext2:	
  1441 ;; *************** function _sprintf *****************
  1442 ;; Defined at:
  1443 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;  sp              1    wreg     PTR unsigned char 
  1446 ;;		 -> main@text(9), 
  1447 ;;  f               1   11[BANK0 ] PTR const unsigned char 
  1448 ;;		 -> STR_6(7), STR_4(7), 
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;  sp              1   22[BANK0 ] PTR unsigned char 
  1451 ;;		 -> main@text(9), 
  1452 ;;  tmpval          4    0        struct .
  1453 ;;  width           2   23[BANK0 ] int 
  1454 ;;  val             2   19[BANK0 ] unsigned int 
  1455 ;;  cp              2    0        PTR const unsigned char 
  1456 ;;  len             2    0        unsigned int 
  1457 ;;  c               1   25[BANK0 ] unsigned char 
  1458 ;;  prec            1   21[BANK0 ] char 
  1459 ;;  flag            1   18[BANK0 ] unsigned char 
  1460 ;;  ap              1   17[BANK0 ] PTR void [1]
  1461 ;;		 -> ?_sprintf(2), 
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  2   11[BANK0 ] int 
  1464 ;; Registers used:
  1465 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1471 ;;      Params:         0       3       0       0       0
  1472 ;;      Locals:         0       9       0       0       0
  1473 ;;      Temps:          0       3       0       0       0
  1474 ;;      Totals:         0      15       0       0       0
  1475 ;;Total ram usage:       15 bytes
  1476 ;; Hardware stack levels used: 1
  1477 ;; Hardware stack levels required when called: 2
  1478 ;; This function calls:
  1479 ;;		___lwdiv
  1480 ;;		___lwmod
  1481 ;;		___wmul
  1482 ;;		_isdigit
  1483 ;; This function is called by:
  1484 ;;		_main
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488     0018                     _sprintf:	
  1489                           ;psect for function _sprintf
  1490                           
  1491                           
  1492                           ;incstack = 0
  1493                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1494                           ;sprintf@sp stored from wreg
  1495     0018  1283               	bcf	3,5	;RP0=0, select bank0
  1496     0019  1303               	bcf	3,6	;RP1=0, select bank0
  1497     001A  00B6               	movwf	sprintf@sp
  1498     001B                     l1821:
  1499                           
  1500                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1501     001B  302C               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1502     001C  00B1               	movwf	sprintf@ap
  1503                           
  1504                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1505     001D  2989               	goto	l1907
  1506     001E                     l1823:
  1507                           
  1508                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1509     001E  3025               	movlw	37
  1510     001F  0639               	xorwf	sprintf@c,w
  1511     0020  1903               	btfsc	3,2
  1512     0021  2823               	goto	u1531
  1513     0022  2824               	goto	u1530
  1514     0023                     u1531:
  1515     0023  282E               	goto	l1829
  1516     0024                     u1530:
  1517     0024                     l1825:
  1518                           
  1519                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1520     0024  0836               	movf	sprintf@sp,w
  1521     0025  0084               	movwf	4
  1522     0026  0839               	movf	sprintf@c,w
  1523     0027  1383               	bcf	3,7	;select IRP bank0
  1524     0028  0080               	movwf	0
  1525     0029                     l1827:
  1526     0029  3001               	movlw	1
  1527     002A  00FF               	movwf	btemp+1
  1528     002B  087F               	movf	btemp+1,w
  1529     002C  07B6               	addwf	sprintf@sp,f
  1530                           
  1531                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  1532     002D  2989               	goto	l1907
  1533     002E                     l1829:
  1534                           
  1535                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1536     002E  01B7               	clrf	sprintf@width
  1537     002F  01B8               	clrf	sprintf@width+1
  1538                           
  1539                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1540     0030  01B2               	clrf	sprintf@flag
  1541     0031  2837               	goto	l1835
  1542     0032                     l354:	
  1543                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1544                           
  1545                           
  1546                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1547     0032  1532               	bsf	sprintf@flag,2
  1548     0033                     l1831:
  1549                           
  1550                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 598:     f++;
  1551     0033  3001               	movlw	1
  1552     0034  00FF               	movwf	btemp+1
  1553     0035  087F               	movf	btemp+1,w
  1554     0036  07AB               	addwf	sprintf@f,f
  1555     0037                     l1835:	
  1556                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1557                           
  1558     0037  082B               	movf	sprintf@f,w
  1559     0038  0084               	movwf	4
  1560     0039  120A  118A  2599  120A  118A  	fcall	stringdir
  1561     003E  00AE               	movwf	??_sprintf
  1562     003F  01AF               	clrf	??_sprintf+1
  1563                           
  1564                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1565                           ; Switch size 1, requested type "simple"
  1566                           ; Number of cases is 1, Range of values is 0 to 0
  1567                           ; switch strategies available:
  1568                           ; Name         Instructions Cycles
  1569                           ; simple_byte            4     3 (average)
  1570                           ; direct_byte           11     8 (fixed)
  1571                           ; jumptable            260     6 (fixed)
  1572                           ;	Chosen strategy is simple_byte
  1573     0040  082F               	movf	??_sprintf+1,w
  1574     0041  3A00               	xorlw	0	; case 0
  1575     0042  1903               	skipnz
  1576     0043  2845               	goto	l2099
  1577     0044  284A               	goto	l1837
  1578     0045                     l2099:
  1579                           
  1580                           ; Switch size 1, requested type "simple"
  1581                           ; Number of cases is 1, Range of values is 48 to 48
  1582                           ; switch strategies available:
  1583                           ; Name         Instructions Cycles
  1584                           ; simple_byte            4     3 (average)
  1585                           ; direct_byte           14    11 (fixed)
  1586                           ; jumptable            263     9 (fixed)
  1587                           ;	Chosen strategy is simple_byte
  1588     0045  082E               	movf	??_sprintf,w
  1589     0046  3A30               	xorlw	48	; case 48
  1590     0047  1903               	skipnz
  1591     0048  2832               	goto	l354
  1592     0049  284A               	goto	l1837
  1593     004A                     l1837:
  1594                           
  1595                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1596     004A  082B               	movf	sprintf@f,w
  1597     004B  0084               	movwf	4
  1598     004C  120A  118A  2599  120A  118A  	fcall	stringdir
  1599     0051  120A  118A  270F  120A  118A  	fcall	_isdigit
  1600     0056  1C03               	btfss	3,0
  1601     0057  2859               	goto	u1541
  1602     0058  285A               	goto	u1540
  1603     0059                     u1541:
  1604     0059  28A0               	goto	l1853
  1605     005A                     u1540:
  1606     005A                     l1839:
  1607                           
  1608                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1609     005A  1283               	bcf	3,5	;RP0=0, select bank0
  1610     005B  1303               	bcf	3,6	;RP1=0, select bank0
  1611     005C  01B7               	clrf	sprintf@width
  1612     005D  01B8               	clrf	sprintf@width+1
  1613     005E                     l1841:
  1614                           
  1615                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1616     005E  300A               	movlw	10
  1617     005F  00F3               	movwf	___wmul@multiplier
  1618     0060  3000               	movlw	0
  1619     0061  00F4               	movwf	___wmul@multiplier+1
  1620     0062  1283               	bcf	3,5	;RP0=0, select bank0
  1621     0063  1303               	bcf	3,6	;RP1=0, select bank0
  1622     0064  0838               	movf	sprintf@width+1,w
  1623     0065  00F6               	movwf	___wmul@multiplicand+1
  1624     0066  0837               	movf	sprintf@width,w
  1625     0067  00F5               	movwf	___wmul@multiplicand
  1626     0068  120A  118A  26AB  120A  118A  	fcall	___wmul
  1627     006D  0874               	movf	?___wmul+1,w
  1628     006E  1283               	bcf	3,5	;RP0=0, select bank0
  1629     006F  1303               	bcf	3,6	;RP1=0, select bank0
  1630     0070  00B8               	movwf	sprintf@width+1
  1631     0071  0873               	movf	?___wmul,w
  1632     0072  00B7               	movwf	sprintf@width
  1633     0073                     l1843:
  1634                           
  1635                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1636     0073  082B               	movf	sprintf@f,w
  1637     0074  0084               	movwf	4
  1638     0075  120A  118A  2599  120A  118A  	fcall	stringdir
  1639     007A  3ED0               	addlw	208
  1640     007B  00AE               	movwf	??_sprintf
  1641     007C  30FF               	movlw	255
  1642     007D  1803               	skipnc
  1643     007E  3000               	movlw	0
  1644     007F  00AF               	movwf	??_sprintf+1
  1645     0080  082E               	movf	??_sprintf,w
  1646     0081  07B7               	addwf	sprintf@width,f
  1647     0082  1803               	skipnc
  1648     0083  0AB8               	incf	sprintf@width+1,f
  1649     0084  082F               	movf	??_sprintf+1,w
  1650     0085  07B8               	addwf	sprintf@width+1,f
  1651     0086                     l1845:
  1652     0086  3001               	movlw	1
  1653     0087  00FF               	movwf	btemp+1
  1654     0088  087F               	movf	btemp+1,w
  1655     0089  07AB               	addwf	sprintf@f,f
  1656     008A                     l1847:
  1657                           
  1658                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1659     008A  082B               	movf	sprintf@f,w
  1660     008B  0084               	movwf	4
  1661     008C  120A  118A  2599  120A  118A  	fcall	stringdir
  1662     0091  120A  118A  270F  120A  118A  	fcall	_isdigit
  1663     0096  1803               	btfsc	3,0
  1664     0097  2899               	goto	u1551
  1665     0098  289A               	goto	u1550
  1666     0099                     u1551:
  1667     0099  285E               	goto	l1841
  1668     009A                     u1550:
  1669     009A  28A0               	goto	l1853
  1670     009B                     l1849:
  1671                           
  1672                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1673     009B  30C0               	movlw	192
  1674     009C  00FF               	movwf	btemp+1
  1675     009D  087F               	movf	btemp+1,w
  1676     009E  04B2               	iorwf	sprintf@flag,f
  1677                           
  1678                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 845:    break;
  1679     009F  28BC               	goto	l1855
  1680     00A0                     l1853:
  1681     00A0  3001               	movlw	1
  1682     00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1683     00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1684     00A3  07AB               	addwf	sprintf@f,f
  1685     00A4  30FF               	movlw	-1
  1686     00A5  072B               	addwf	sprintf@f,w
  1687     00A6  0084               	movwf	4
  1688     00A7  120A  118A  2599  120A  118A  	fcall	stringdir
  1689     00AC  00B9               	movwf	sprintf@c
  1690     00AD  00AE               	movwf	??_sprintf
  1691     00AE  01AF               	clrf	??_sprintf+1
  1692                           
  1693                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1694                           ; Switch size 1, requested type "simple"
  1695                           ; Number of cases is 1, Range of values is 0 to 0
  1696                           ; switch strategies available:
  1697                           ; Name         Instructions Cycles
  1698                           ; simple_byte            4     3 (average)
  1699                           ; direct_byte           11     8 (fixed)
  1700                           ; jumptable            260     6 (fixed)
  1701                           ;	Chosen strategy is simple_byte
  1702     00AF  082F               	movf	??_sprintf+1,w
  1703     00B0  3A00               	xorlw	0	; case 0
  1704     00B1  1903               	skipnz
  1705     00B2  28B4               	goto	l2101
  1706     00B3  2989               	goto	l1907
  1707     00B4                     l2101:
  1708                           
  1709                           ; Switch size 1, requested type "simple"
  1710                           ; Number of cases is 2, Range of values is 0 to 117
  1711                           ; switch strategies available:
  1712                           ; Name         Instructions Cycles
  1713                           ; simple_byte            7     4 (average)
  1714                           ; jumptable            260     6 (fixed)
  1715                           ;	Chosen strategy is simple_byte
  1716     00B4  082E               	movf	??_sprintf,w
  1717     00B5  3A00               	xorlw	0	; case 0
  1718     00B6  1903               	skipnz
  1719     00B7  2999               	goto	l1909
  1720     00B8  3A75               	xorlw	117	; case 117
  1721     00B9  1903               	skipnz
  1722     00BA  289B               	goto	l1849
  1723     00BB  2989               	goto	l1907
  1724     00BC                     l1855:
  1725                           
  1726                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1727     00BC  0831               	movf	sprintf@ap,w
  1728     00BD  0084               	movwf	4
  1729     00BE  1383               	bcf	3,7	;select IRP bank0
  1730     00BF  0800               	movf	0,w
  1731     00C0  00B3               	movwf	sprintf@val
  1732     00C1  0A84               	incf	4,f
  1733     00C2  0800               	movf	0,w
  1734     00C3  00B4               	movwf	sprintf@val+1
  1735     00C4                     l1857:
  1736     00C4  3002               	movlw	2
  1737     00C5  00FF               	movwf	btemp+1
  1738     00C6  087F               	movf	btemp+1,w
  1739     00C7  07B1               	addwf	sprintf@ap,f
  1740     00C8                     l1859:
  1741                           
  1742                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1743     00C8  01B9               	clrf	sprintf@c
  1744     00C9  0AB9               	incf	sprintf@c,f
  1745     00CA                     l1865:
  1746                           
  1747                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1748     00CA  0839               	movf	sprintf@c,w
  1749     00CB  00AE               	movwf	??_sprintf
  1750     00CC  072E               	addwf	??_sprintf,w
  1751     00CD  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1752     00CE  0084               	movwf	4
  1753     00CF  120A  118A  2599  120A  118A  	fcall	stringdir
  1754     00D4  00AF               	movwf	??_sprintf+1
  1755     00D5  120A  118A  2599  120A  118A  	fcall	stringdir
  1756     00DA  00B0               	movwf	??_sprintf+2
  1757     00DB  0830               	movf	??_sprintf+2,w
  1758     00DC  0234               	subwf	sprintf@val+1,w
  1759     00DD  1D03               	skipz
  1760     00DE  28E1               	goto	u1565
  1761     00DF  082F               	movf	??_sprintf+1,w
  1762     00E0  0233               	subwf	sprintf@val,w
  1763     00E1                     u1565:
  1764     00E1  1803               	skipnc
  1765     00E2  28E4               	goto	u1561
  1766     00E3  28E5               	goto	u1560
  1767     00E4                     u1561:
  1768     00E4  28E6               	goto	l1869
  1769     00E5                     u1560:
  1770     00E5  28F0               	goto	l1873
  1771     00E6                     l1869:
  1772     00E6  3001               	movlw	1
  1773     00E7  00FF               	movwf	btemp+1
  1774     00E8  087F               	movf	btemp+1,w
  1775     00E9  07B9               	addwf	sprintf@c,f
  1776     00EA                     l1871:
  1777     00EA  3005               	movlw	5
  1778     00EB  0639               	xorwf	sprintf@c,w
  1779     00EC  1D03               	btfss	3,2
  1780     00ED  28EF               	goto	u1571
  1781     00EE  28F0               	goto	u1570
  1782     00EF                     u1571:
  1783     00EF  28CA               	goto	l1865
  1784     00F0                     u1570:
  1785     00F0                     l1873:
  1786                           
  1787                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  1788     00F0  0838               	movf	sprintf@width+1,w
  1789     00F1  3A80               	xorlw	128
  1790     00F2  3C80               	sublw	128
  1791     00F3  1D03               	skipz
  1792     00F4  28F7               	goto	u1585
  1793     00F5  0837               	movf	sprintf@width,w
  1794     00F6  0239               	subwf	sprintf@c,w
  1795     00F7                     u1585:
  1796     00F7  1803               	skipnc
  1797     00F8  28FA               	goto	u1581
  1798     00F9  28FB               	goto	u1580
  1799     00FA                     u1581:
  1800     00FA  2907               	goto	l1877
  1801     00FB                     u1580:
  1802     00FB                     l1875:
  1803                           
  1804                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  1805     00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1806     00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1807     00FD  0839               	movf	sprintf@c,w
  1808     00FE  00AE               	movwf	??_sprintf
  1809     00FF  01AF               	clrf	??_sprintf+1
  1810     0100  082E               	movf	??_sprintf,w
  1811     0101  02B7               	subwf	sprintf@width,f
  1812     0102  082F               	movf	??_sprintf+1,w
  1813     0103  1C03               	skipc
  1814     0104  03B8               	decf	sprintf@width+1,f
  1815     0105  02B8               	subwf	sprintf@width+1,f
  1816     0106  290B               	goto	l1879
  1817     0107                     l1877:
  1818                           
  1819                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  1820     0107  1283               	bcf	3,5	;RP0=0, select bank0
  1821     0108  1303               	bcf	3,6	;RP1=0, select bank0
  1822     0109  01B7               	clrf	sprintf@width
  1823     010A  01B8               	clrf	sprintf@width+1
  1824     010B                     l1879:
  1825                           
  1826                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  1827     010B  1D32               	btfss	sprintf@flag,2
  1828     010C  290E               	goto	u1591
  1829     010D  290F               	goto	u1590
  1830     010E                     u1591:
  1831     010E  292B               	goto	l1889
  1832     010F                     u1590:
  1833     010F                     l1881:
  1834                           
  1835                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  1836     010F  0837               	movf	sprintf@width,w
  1837     0110  0438               	iorwf	sprintf@width+1,w
  1838     0111  1903               	btfsc	3,2
  1839     0112  2914               	goto	u1601
  1840     0113  2915               	goto	u1600
  1841     0114                     u1601:
  1842     0114  2946               	goto	l1897
  1843     0115                     u1600:
  1844     0115                     l1883:
  1845                           
  1846                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  1847     0115  0836               	movf	sprintf@sp,w
  1848     0116  0084               	movwf	4
  1849     0117  3030               	movlw	48
  1850     0118  1383               	bcf	3,7	;select IRP bank0
  1851     0119  0080               	movwf	0
  1852     011A                     l1885:
  1853     011A  3001               	movlw	1
  1854     011B  00FF               	movwf	btemp+1
  1855     011C  087F               	movf	btemp+1,w
  1856     011D  07B6               	addwf	sprintf@sp,f
  1857     011E                     l1887:
  1858     011E  30FF               	movlw	255
  1859     011F  07B7               	addwf	sprintf@width,f
  1860     0120  1803               	skipnc
  1861     0121  0AB8               	incf	sprintf@width+1,f
  1862     0122  30FF               	movlw	255
  1863     0123  07B8               	addwf	sprintf@width+1,f
  1864     0124  0837               	movf	sprintf@width,w
  1865     0125  0438               	iorwf	sprintf@width+1,w
  1866     0126  1D03               	btfss	3,2
  1867     0127  2929               	goto	u1611
  1868     0128  292A               	goto	u1610
  1869     0129                     u1611:
  1870     0129  2915               	goto	l1883
  1871     012A                     u1610:
  1872     012A  2946               	goto	l1897
  1873     012B                     l1889:
  1874                           
  1875                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1450:    if(width
  1876     012B  0837               	movf	sprintf@width,w
  1877     012C  0438               	iorwf	sprintf@width+1,w
  1878     012D  1903               	btfsc	3,2
  1879     012E  2930               	goto	u1621
  1880     012F  2931               	goto	u1620
  1881     0130                     u1621:
  1882     0130  2946               	goto	l1897
  1883     0131                     u1620:
  1884     0131                     l1891:
  1885                           
  1886                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  1887     0131  0836               	movf	sprintf@sp,w
  1888     0132  0084               	movwf	4
  1889     0133  3020               	movlw	32
  1890     0134  1383               	bcf	3,7	;select IRP bank0
  1891     0135  0080               	movwf	0
  1892     0136                     l1893:
  1893     0136  3001               	movlw	1
  1894     0137  00FF               	movwf	btemp+1
  1895     0138  087F               	movf	btemp+1,w
  1896     0139  07B6               	addwf	sprintf@sp,f
  1897     013A                     l1895:
  1898     013A  30FF               	movlw	255
  1899     013B  07B7               	addwf	sprintf@width,f
  1900     013C  1803               	skipnc
  1901     013D  0AB8               	incf	sprintf@width+1,f
  1902     013E  30FF               	movlw	255
  1903     013F  07B8               	addwf	sprintf@width+1,f
  1904     0140  0837               	movf	sprintf@width,w
  1905     0141  0438               	iorwf	sprintf@width+1,w
  1906     0142  1D03               	btfss	3,2
  1907     0143  2945               	goto	u1631
  1908     0144  2946               	goto	u1630
  1909     0145                     u1631:
  1910     0145  2931               	goto	l1891
  1911     0146                     u1630:
  1912     0146                     l1897:
  1913                           
  1914                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1915     0146  0839               	movf	sprintf@c,w
  1916     0147  00B5               	movwf	sprintf@prec
  1917                           
  1918                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1919     0148  2980               	goto	l1905
  1920     0149                     l1899:
  1921                           
  1922                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1923     0149  300A               	movlw	10
  1924     014A  00A7               	movwf	___lwmod@divisor
  1925     014B  3000               	movlw	0
  1926     014C  00A8               	movwf	___lwmod@divisor+1
  1927     014D  0835               	movf	sprintf@prec,w
  1928     014E  00AE               	movwf	??_sprintf
  1929     014F  072E               	addwf	??_sprintf,w
  1930     0150  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1931     0151  0084               	movwf	4
  1932     0152  120A  118A  2599  120A  118A  	fcall	stringdir
  1933     0157  00A0               	movwf	___lwdiv@divisor
  1934     0158  120A  118A  2599  120A  118A  	fcall	stringdir
  1935     015D  00A1               	movwf	___lwdiv@divisor+1
  1936     015E  0834               	movf	sprintf@val+1,w
  1937     015F  00A3               	movwf	___lwdiv@dividend+1
  1938     0160  0833               	movf	sprintf@val,w
  1939     0161  00A2               	movwf	___lwdiv@dividend
  1940     0162  120A  118A  25D6  120A  118A  	fcall	___lwdiv
  1941     0167  1283               	bcf	3,5	;RP0=0, select bank0
  1942     0168  1303               	bcf	3,6	;RP1=0, select bank0
  1943     0169  0821               	movf	?___lwdiv+1,w
  1944     016A  00AA               	movwf	___lwmod@dividend+1
  1945     016B  0820               	movf	?___lwdiv,w
  1946     016C  00A9               	movwf	___lwmod@dividend
  1947     016D  120A  118A  261C  120A  118A  	fcall	___lwmod
  1948     0172  1283               	bcf	3,5	;RP0=0, select bank0
  1949     0173  1303               	bcf	3,6	;RP1=0, select bank0
  1950     0174  0827               	movf	?___lwmod,w
  1951     0175  3E30               	addlw	48
  1952     0176  00B9               	movwf	sprintf@c
  1953     0177                     l1901:
  1954                           
  1955                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1956     0177  0836               	movf	sprintf@sp,w
  1957     0178  0084               	movwf	4
  1958     0179  0839               	movf	sprintf@c,w
  1959     017A  1383               	bcf	3,7	;select IRP bank0
  1960     017B  0080               	movwf	0
  1961     017C                     l1903:
  1962     017C  3001               	movlw	1
  1963     017D  00FF               	movwf	btemp+1
  1964     017E  087F               	movf	btemp+1,w
  1965     017F  07B6               	addwf	sprintf@sp,f
  1966     0180                     l1905:
  1967                           
  1968                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1969     0180  30FF               	movlw	255
  1970     0181  00FF               	movwf	btemp+1
  1971     0182  087F               	movf	btemp+1,w
  1972     0183  07B5               	addwf	sprintf@prec,f
  1973     0184  0A35               	incf	sprintf@prec,w
  1974     0185  1D03               	btfss	3,2
  1975     0186  2988               	goto	u1641
  1976     0187  2989               	goto	u1640
  1977     0188                     u1641:
  1978     0188  2949               	goto	l1899
  1979     0189                     u1640:
  1980     0189                     l1907:
  1981                           
  1982                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1983     0189  3001               	movlw	1
  1984     018A  07AB               	addwf	sprintf@f,f
  1985     018B  30FF               	movlw	-1
  1986     018C  072B               	addwf	sprintf@f,w
  1987     018D  0084               	movwf	4
  1988     018E  120A  118A  2599  120A  118A  	fcall	stringdir
  1989     0193  00B9               	movwf	sprintf@c
  1990     0194  0839               	movf	sprintf@c,w
  1991     0195  1D03               	btfss	3,2
  1992     0196  2998               	goto	u1651
  1993     0197  2999               	goto	u1650
  1994     0198                     u1651:
  1995     0198  281E               	goto	l1823
  1996     0199                     u1650:
  1997     0199                     l1909:
  1998                           
  1999                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2000     0199  0836               	movf	sprintf@sp,w
  2001     019A  0084               	movwf	4
  2002     019B  1383               	bcf	3,7	;select IRP bank0
  2003     019C  0180               	clrf	0
  2004     019D                     l384:
  2005     019D  0008               	return
  2006     019E                     __end_of_sprintf:
  2007                           
  2008                           	psect	text3
  2009     070F                     __ptext3:	
  2010 ;; *************** function _isdigit *****************
  2011 ;; Defined at:
  2012 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;  c               1    wreg     unsigned char 
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;  c               1    4[COMMON] unsigned char 
  2017 ;; Return value:  Size  Location     Type
  2018 ;;		None               void
  2019 ;; Registers used:
  2020 ;;		wreg, status,2, status,0
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2026 ;;      Params:         0       0       0       0       0
  2027 ;;      Locals:         2       0       0       0       0
  2028 ;;      Temps:          0       0       0       0       0
  2029 ;;      Totals:         2       0       0       0       0
  2030 ;;Total ram usage:        2 bytes
  2031 ;; Hardware stack levels used: 1
  2032 ;; Hardware stack levels required when called: 1
  2033 ;; This function calls:
  2034 ;;		Nothing
  2035 ;; This function is called by:
  2036 ;;		_sprintf
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040     070F                     _isdigit:	
  2041                           ;psect for function _isdigit
  2042                           
  2043                           
  2044                           ;incstack = 0
  2045                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2046                           ;isdigit@c stored from wreg
  2047     070F  00F4               	movwf	isdigit@c
  2048     0710                     l1575:
  2049     0710  01F3               	clrf	_isdigit$958
  2050     0711                     l1577:
  2051     0711  303A               	movlw	58
  2052     0712  0274               	subwf	isdigit@c,w
  2053     0713  1803               	skipnc
  2054     0714  2F16               	goto	u961
  2055     0715  2F17               	goto	u960
  2056     0716                     u961:
  2057     0716  2F1F               	goto	l1583
  2058     0717                     u960:
  2059     0717                     l1579:
  2060     0717  3030               	movlw	48
  2061     0718  0274               	subwf	isdigit@c,w
  2062     0719  1C03               	skipc
  2063     071A  2F1C               	goto	u971
  2064     071B  2F1D               	goto	u970
  2065     071C                     u971:
  2066     071C  2F1F               	goto	l1583
  2067     071D                     u970:
  2068     071D                     l1581:
  2069     071D  01F3               	clrf	_isdigit$958
  2070     071E  0AF3               	incf	_isdigit$958,f
  2071     071F                     l1583:
  2072     071F  0C73               	rrf	_isdigit$958,w
  2073     0720                     l841:
  2074     0720  0008               	return
  2075     0721                     __end_of_isdigit:
  2076                           
  2077                           	psect	text4
  2078     061C                     __ptext4:	
  2079 ;; *************** function ___lwmod *****************
  2080 ;; Defined at:
  2081 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;  divisor         2    7[BANK0 ] unsigned int 
  2084 ;;  dividend        2    9[BANK0 ] unsigned int 
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;  counter         1    9[COMMON] unsigned char 
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  2    7[BANK0 ] unsigned int 
  2089 ;; Registers used:
  2090 ;;		wreg, status,2, status,0, btemp+1
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2096 ;;      Params:         0       4       0       0       0
  2097 ;;      Locals:         1       0       0       0       0
  2098 ;;      Temps:          0       0       0       0       0
  2099 ;;      Totals:         1       4       0       0       0
  2100 ;;Total ram usage:        5 bytes
  2101 ;; Hardware stack levels used: 1
  2102 ;; Hardware stack levels required when called: 1
  2103 ;; This function calls:
  2104 ;;		Nothing
  2105 ;; This function is called by:
  2106 ;;		_sprintf
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110     061C                     ___lwmod:	
  2111                           ;psect for function ___lwmod
  2112                           
  2113     061C                     l1691:	
  2114                           ;incstack = 0
  2115                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  2116                           
  2117     061C  1283               	bcf	3,5	;RP0=0, select bank0
  2118     061D  1303               	bcf	3,6	;RP1=0, select bank0
  2119     061E  0827               	movf	___lwmod@divisor,w
  2120     061F  0428               	iorwf	___lwmod@divisor+1,w
  2121     0620  1903               	btfsc	3,2
  2122     0621  2E23               	goto	u1261
  2123     0622  2E24               	goto	u1260
  2124     0623                     u1261:
  2125     0623  2E53               	goto	l1709
  2126     0624                     u1260:
  2127     0624                     l1693:
  2128     0624  01F9               	clrf	___lwmod@counter
  2129     0625  0AF9               	incf	___lwmod@counter,f
  2130     0626  2E32               	goto	l1699
  2131     0627                     l1695:
  2132     0627  3001               	movlw	1
  2133     0628                     u1275:
  2134     0628  1003               	clrc
  2135     0629  0DA7               	rlf	___lwmod@divisor,f
  2136     062A  0DA8               	rlf	___lwmod@divisor+1,f
  2137     062B  3EFF               	addlw	-1
  2138     062C  1D03               	skipz
  2139     062D  2E28               	goto	u1275
  2140     062E                     l1697:
  2141     062E  3001               	movlw	1
  2142     062F  00FF               	movwf	btemp+1
  2143     0630  087F               	movf	btemp+1,w
  2144     0631  07F9               	addwf	___lwmod@counter,f
  2145     0632                     l1699:
  2146     0632  1FA8               	btfss	___lwmod@divisor+1,7
  2147     0633  2E35               	goto	u1281
  2148     0634  2E36               	goto	u1280
  2149     0635                     u1281:
  2150     0635  2E27               	goto	l1695
  2151     0636                     u1280:
  2152     0636                     l1701:
  2153     0636  0828               	movf	___lwmod@divisor+1,w
  2154     0637  022A               	subwf	___lwmod@dividend+1,w
  2155     0638  1D03               	skipz
  2156     0639  2E3C               	goto	u1295
  2157     063A  0827               	movf	___lwmod@divisor,w
  2158     063B  0229               	subwf	___lwmod@dividend,w
  2159     063C                     u1295:
  2160     063C  1C03               	skipc
  2161     063D  2E3F               	goto	u1291
  2162     063E  2E40               	goto	u1290
  2163     063F                     u1291:
  2164     063F  2E46               	goto	l1705
  2165     0640                     u1290:
  2166     0640                     l1703:
  2167     0640  0827               	movf	___lwmod@divisor,w
  2168     0641  02A9               	subwf	___lwmod@dividend,f
  2169     0642  0828               	movf	___lwmod@divisor+1,w
  2170     0643  1C03               	skipc
  2171     0644  03AA               	decf	___lwmod@dividend+1,f
  2172     0645  02AA               	subwf	___lwmod@dividend+1,f
  2173     0646                     l1705:
  2174     0646  3001               	movlw	1
  2175     0647                     u1305:
  2176     0647  1003               	clrc
  2177     0648  0CA8               	rrf	___lwmod@divisor+1,f
  2178     0649  0CA7               	rrf	___lwmod@divisor,f
  2179     064A  3EFF               	addlw	-1
  2180     064B  1D03               	skipz
  2181     064C  2E47               	goto	u1305
  2182     064D                     l1707:
  2183     064D  3001               	movlw	1
  2184     064E  02F9               	subwf	___lwmod@counter,f
  2185     064F  1D03               	btfss	3,2
  2186     0650  2E52               	goto	u1311
  2187     0651  2E53               	goto	u1310
  2188     0652                     u1311:
  2189     0652  2E36               	goto	l1701
  2190     0653                     u1310:
  2191     0653                     l1709:
  2192     0653  082A               	movf	___lwmod@dividend+1,w
  2193     0654  00A8               	movwf	?___lwmod+1
  2194     0655  0829               	movf	___lwmod@dividend,w
  2195     0656  00A7               	movwf	?___lwmod
  2196     0657                     l670:
  2197     0657  0008               	return
  2198     0658                     __end_of___lwmod:
  2199                           
  2200                           	psect	text5
  2201     0683                     __ptext5:	
  2202 ;; *************** function _setup *****************
  2203 ;; Defined at:
  2204 ;;		line 148 in file "HC05BT_prueba.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;		None
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;		None
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  1    wreg      void 
  2211 ;; Registers used:
  2212 ;;		wreg, status,2, status,0
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2218 ;;      Params:         0       0       0       0       0
  2219 ;;      Locals:         0       0       0       0       0
  2220 ;;      Temps:          1       0       0       0       0
  2221 ;;      Totals:         1       0       0       0       0
  2222 ;;Total ram usage:        1 bytes
  2223 ;; Hardware stack levels used: 1
  2224 ;; Hardware stack levels required when called: 1
  2225 ;; This function calls:
  2226 ;;		Nothing
  2227 ;; This function is called by:
  2228 ;;		_main
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232     0683                     _setup:	
  2233                           ;psect for function _setup
  2234                           
  2235     0683                     l1777:	
  2236                           ;incstack = 0
  2237                           ; Regs used in _setup: [wreg+status,2+status,0]
  2238                           
  2239                           
  2240                           ;HC05BT_prueba.c: 149:     ANSEL = 0b00000011;
  2241     0683  3003               	movlw	3
  2242     0684  1683               	bsf	3,5	;RP0=1, select bank3
  2243     0685  1703               	bsf	3,6	;RP1=1, select bank3
  2244     0686  0088               	movwf	8	;volatile
  2245     0687                     l1779:
  2246                           
  2247                           ;HC05BT_prueba.c: 150:     ANSELH = 0;
  2248     0687  0189               	clrf	9	;volatile
  2249     0688                     l1781:
  2250                           
  2251                           ;HC05BT_prueba.c: 152:     TRISA = 0xFF;
  2252     0688  30FF               	movlw	255
  2253     0689  1683               	bsf	3,5	;RP0=1, select bank1
  2254     068A  1303               	bcf	3,6	;RP1=0, select bank1
  2255     068B  0085               	movwf	5	;volatile
  2256                           
  2257                           ;HC05BT_prueba.c: 153:     TRISD= 0;
  2258     068C  0188               	clrf	8	;volatile
  2259                           
  2260                           ;HC05BT_prueba.c: 154:     PORTD = 0;
  2261     068D  1283               	bcf	3,5	;RP0=0, select bank0
  2262     068E  1303               	bcf	3,6	;RP1=0, select bank0
  2263     068F  0188               	clrf	8	;volatile
  2264     0690                     l1783:
  2265                           
  2266                           ;HC05BT_prueba.c: 157:     ADCON1bits.ADFM = 0;
  2267     0690  1683               	bsf	3,5	;RP0=1, select bank1
  2268     0691  1303               	bcf	3,6	;RP1=0, select bank1
  2269     0692  139F               	bcf	31,7	;volatile
  2270     0693                     l1785:
  2271                           
  2272                           ;HC05BT_prueba.c: 158:     ADCON1bits.VCFG0 = 0;
  2273     0693  121F               	bcf	31,4	;volatile
  2274     0694                     l1787:
  2275                           
  2276                           ;HC05BT_prueba.c: 159:     ADCON1bits.VCFG1 = 0;
  2277     0694  129F               	bcf	31,5	;volatile
  2278     0695                     l1789:
  2279                           
  2280                           ;HC05BT_prueba.c: 161:     ADCON0bits.ADCS = 0b01;
  2281     0695  1283               	bcf	3,5	;RP0=0, select bank0
  2282     0696  1303               	bcf	3,6	;RP1=0, select bank0
  2283     0697  081F               	movf	31,w	;volatile
  2284     0698  393F               	andlw	-193
  2285     0699  3840               	iorlw	64
  2286     069A  009F               	movwf	31	;volatile
  2287     069B                     l1791:
  2288                           
  2289                           ;HC05BT_prueba.c: 162:     ADCON0bits.CHS = 0;
  2290     069B  30C3               	movlw	-61
  2291     069C  059F               	andwf	31,f	;volatile
  2292     069D                     l1793:
  2293                           
  2294                           ;HC05BT_prueba.c: 163:     ADCON0bits.ADON= 1;
  2295     069D  141F               	bsf	31,0	;volatile
  2296     069E                     l1795:
  2297                           
  2298                           ;HC05BT_prueba.c: 164:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  2299     069E  3021               	movlw	33
  2300     069F  00F3               	movwf	??_setup
  2301     06A0                     u1817:
  2302     06A0  0BF3               	decfsz	??_setup,f
  2303     06A1  2EA0               	goto	u1817
  2304     06A2                     l1797:
  2305                           
  2306                           ;HC05BT_prueba.c: 166:     PIR1bits.ADIF = 0;
  2307     06A2  1283               	bcf	3,5	;RP0=0, select bank0
  2308     06A3  1303               	bcf	3,6	;RP1=0, select bank0
  2309     06A4  130C               	bcf	12,6	;volatile
  2310     06A5                     l1799:
  2311                           
  2312                           ;HC05BT_prueba.c: 167:     PIE1bits.ADIE = 1;
  2313     06A5  1683               	bsf	3,5	;RP0=1, select bank1
  2314     06A6  1303               	bcf	3,6	;RP1=0, select bank1
  2315     06A7  170C               	bsf	12,6	;volatile
  2316     06A8                     l1801:
  2317                           
  2318                           ;HC05BT_prueba.c: 168:     INTCONbits.PEIE = 1;
  2319     06A8  170B               	bsf	11,6	;volatile
  2320     06A9                     l1803:
  2321                           
  2322                           ;HC05BT_prueba.c: 169:     INTCONbits.GIE = 1;
  2323     06A9  178B               	bsf	11,7	;volatile
  2324     06AA                     l197:
  2325     06AA  0008               	return
  2326     06AB                     __end_of_setup:
  2327                           
  2328                           	psect	text6
  2329     06FC                     __ptext6:	
  2330 ;; *************** function _preguntas *****************
  2331 ;; Defined at:
  2332 ;;		line 172 in file "HC05BT_prueba.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;		None
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;		None
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  1    wreg      void 
  2339 ;; Registers used:
  2340 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2346 ;;      Params:         0       0       0       0       0
  2347 ;;      Locals:         0       0       0       0       0
  2348 ;;      Temps:          0       0       0       0       0
  2349 ;;      Totals:         0       0       0       0       0
  2350 ;;Total ram usage:        0 bytes
  2351 ;; Hardware stack levels used: 1
  2352 ;; Hardware stack levels required when called: 3
  2353 ;; This function calls:
  2354 ;;		_UART_Print
  2355 ;; This function is called by:
  2356 ;;		_main
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360     06FC                     _preguntas:	
  2361                           ;psect for function _preguntas
  2362                           
  2363     06FC                     l1925:	
  2364                           ;incstack = 0
  2365                           ; Regs used in _preguntas: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2366                           
  2367                           
  2368                           ;HC05BT_prueba.c: 174:     UART_Print ("1.Leer potenciometro\r\n");
  2369     06FC  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2370     06FD  00F4               	movwf	UART_Print@data
  2371     06FE  3080               	movlw	128
  2372     06FF  00F5               	movwf	UART_Print@data+1
  2373     0700  120A  118A  2658  120A  118A  	fcall	_UART_Print
  2374                           
  2375                           ;HC05BT_prueba.c: 175:     UART_Print (message);
  2376     0705  300B               	movlw	(low ((_message-__stringbase)| (0+32768)))& (0+255)
  2377     0706  00F4               	movwf	UART_Print@data
  2378     0707  3080               	movlw	128
  2379     0708  00F5               	movwf	UART_Print@data+1
  2380     0709  120A  118A  2658  120A  118A  	fcall	_UART_Print
  2381     070E                     l200:
  2382     070E  0008               	return
  2383     070F                     __end_of_preguntas:
  2384                           
  2385                           	psect	text7
  2386     0658                     __ptext7:	
  2387 ;; *************** function _UART_Print *****************
  2388 ;; Defined at:
  2389 ;;		line 65 in file "USARTmodl.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;  data            2    4[COMMON] PTR const unsigned char 
  2392 ;;		 -> STR_7(23), STR_5(3), main@text(9), STR_3(3), 
  2393 ;;		 -> STR_2(3), message(15), STR_1(23), 
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;  i               1    6[COMMON] unsigned char 
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  1    wreg      void 
  2398 ;; Registers used:
  2399 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2405 ;;      Params:         2       0       0       0       0
  2406 ;;      Locals:         1       0       0       0       0
  2407 ;;      Temps:          0       0       0       0       0
  2408 ;;      Totals:         3       0       0       0       0
  2409 ;;Total ram usage:        3 bytes
  2410 ;; Hardware stack levels used: 1
  2411 ;; Hardware stack levels required when called: 2
  2412 ;; This function calls:
  2413 ;;		_UART_PutC
  2414 ;; This function is called by:
  2415 ;;		_main
  2416 ;;		_preguntas
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420     0658                     _UART_Print:	
  2421                           ;psect for function _UART_Print
  2422                           
  2423     0658                     l1567:	
  2424                           ;incstack = 0
  2425                           ; Regs used in _UART_Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2426                           
  2427                           
  2428                           ;USARTmodl.c: 65: void UART_Print(const char *data);USARTmodl.c: 66: {;USARTmodl.c: 67: 
      +                            uint8_t i = 0;
  2429     0658  01F6               	clrf	UART_Print@i
  2430                           
  2431                           ;USARTmodl.c: 68:   while (data[i] != '\0')
  2432     0659  2E6F               	goto	l1573
  2433     065A                     l1569:
  2434                           
  2435                           ;USARTmodl.c: 69:     UART_PutC (data[i++]);
  2436     065A  0876               	movf	UART_Print@i,w
  2437     065B  0774               	addwf	UART_Print@data,w
  2438     065C  0084               	movwf	4
  2439     065D  0875               	movf	UART_Print@data+1,w
  2440     065E  1803               	skipnc
  2441     065F  0A75               	incf	UART_Print@data+1,w
  2442     0660  00FF               	movwf	btemp+1
  2443     0661  120A  118A  258F  120A  118A  	fcall	stringtab
  2444     0666  120A  118A  272F  120A  118A  	fcall	_UART_PutC
  2445     066B                     l1571:
  2446     066B  3001               	movlw	1
  2447     066C  00FF               	movwf	btemp+1
  2448     066D  087F               	movf	btemp+1,w
  2449     066E  07F6               	addwf	UART_Print@i,f
  2450     066F                     l1573:
  2451                           
  2452                           ;USARTmodl.c: 68:   while (data[i] != '\0')
  2453     066F  0876               	movf	UART_Print@i,w
  2454     0670  0774               	addwf	UART_Print@data,w
  2455     0671  0084               	movwf	4
  2456     0672  0875               	movf	UART_Print@data+1,w
  2457     0673  1803               	skipnc
  2458     0674  0A75               	incf	UART_Print@data+1,w
  2459     0675  1283               	bcf	3,5	;RP0=0, select bank0
  2460     0676  1303               	bcf	3,6	;RP1=0, select bank0
  2461     0677  00FF               	movwf	btemp+1
  2462     0678  120A  118A  258F  120A  118A  	fcall	stringtab
  2463     067D  3A00               	xorlw	0
  2464     067E  1D03               	skipz
  2465     067F  2E81               	goto	u951
  2466     0680  2E82               	goto	u950
  2467     0681                     u951:
  2468     0681  2E5A               	goto	l1569
  2469     0682                     u950:
  2470     0682                     l256:
  2471     0682  0008               	return
  2472     0683                     __end_of_UART_Print:
  2473                           
  2474                           	psect	text8
  2475     072F                     __ptext8:	
  2476 ;; *************** function _UART_PutC *****************
  2477 ;; Defined at:
  2478 ;;		line 59 in file "USARTmodl.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;  data            1    wreg     const unsigned char 
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;  data            1    3[COMMON] const unsigned char 
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  1    wreg      void 
  2485 ;; Registers used:
  2486 ;;		wreg
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2492 ;;      Params:         0       0       0       0       0
  2493 ;;      Locals:         1       0       0       0       0
  2494 ;;      Temps:          0       0       0       0       0
  2495 ;;      Totals:         1       0       0       0       0
  2496 ;;Total ram usage:        1 bytes
  2497 ;; Hardware stack levels used: 1
  2498 ;; Hardware stack levels required when called: 1
  2499 ;; This function calls:
  2500 ;;		Nothing
  2501 ;; This function is called by:
  2502 ;;		_main
  2503 ;;		_UART_Print
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507     072F                     _UART_PutC:	
  2508                           ;psect for function _UART_PutC
  2509                           
  2510                           
  2511                           ;incstack = 0
  2512                           ; Regs used in _UART_PutC: [wreg]
  2513                           ;UART_PutC@data stored from wreg
  2514     072F  00F3               	movwf	UART_PutC@data
  2515     0730                     l1563:
  2516     0730                     l247:	
  2517                           ;USARTmodl.c: 59: void UART_PutC(const char data);USARTmodl.c: 60: {;USARTmodl.c: 61:   
      +                          while (TRMT == 0);
  2518                           
  2519     0730  1683               	bsf	3,5	;RP0=1, select bank1
  2520     0731  1303               	bcf	3,6	;RP1=0, select bank1
  2521     0732  1C98               	btfss	24,1	;volatile
  2522     0733  2F35               	goto	u941
  2523     0734  2F36               	goto	u940
  2524     0735                     u941:
  2525     0735  2F30               	goto	l247
  2526     0736                     u940:
  2527     0736                     l1565:
  2528                           
  2529                           ;USARTmodl.c: 62:   TXREG = data;
  2530     0736  0873               	movf	UART_PutC@data,w
  2531     0737  1283               	bcf	3,5	;RP0=0, select bank0
  2532     0738  1303               	bcf	3,6	;RP1=0, select bank0
  2533     0739  0099               	movwf	25	;volatile
  2534     073A                     l250:
  2535     073A  0008               	return
  2536     073B                     __end_of_UART_PutC:
  2537                           
  2538                           	psect	text9
  2539     0529                     __ptext9:	
  2540 ;; *************** function _map *****************
  2541 ;; Defined at:
  2542 ;;		line 177 in file "HC05BT_prueba.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;  varmap          2   21[BANK0 ] unsigned int 
  2545 ;;  minval          2   23[BANK0 ] unsigned int 
  2546 ;;  maxval          2   25[BANK0 ] unsigned int 
  2547 ;;  minsal          2   27[BANK0 ] unsigned int 
  2548 ;;  maxsal          2   29[BANK0 ] unsigned int 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;  valmap          4   37[BANK0 ] float 
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  2   21[BANK0 ] unsigned int 
  2553 ;; Registers used:
  2554 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2560 ;;      Params:         0      10       0       0       0
  2561 ;;      Locals:         0       4       0       0       0
  2562 ;;      Temps:          0       6       0       0       0
  2563 ;;      Totals:         0      20       0       0       0
  2564 ;;Total ram usage:       20 bytes
  2565 ;; Hardware stack levels used: 1
  2566 ;; Hardware stack levels required when called: 2
  2567 ;; This function calls:
  2568 ;;		___fltol
  2569 ;;		___lwdiv
  2570 ;;		___wmul
  2571 ;;		___xxtofl
  2572 ;; This function is called by:
  2573 ;;		_main
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577     0529                     _map:	
  2578                           ;psect for function _map
  2579                           
  2580     0529                     l1921:	
  2581                           ;incstack = 0
  2582                           ; Regs used in _map: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2583                           
  2584                           
  2585                           ;HC05BT_prueba.c: 178:   float valmap =((varmap - minval) * (maxsal - minsal)) / (maxval
      +                           - minval) + minsal;
  2586     0529  1283               	bcf	3,5	;RP0=0, select bank0
  2587     052A  1303               	bcf	3,6	;RP1=0, select bank0
  2588     052B  083B               	movf	map@minsal,w
  2589     052C  023D               	subwf	map@maxsal,w
  2590     052D  00F5               	movwf	___wmul@multiplicand
  2591     052E  083C               	movf	map@minsal+1,w
  2592     052F  1C03               	skipc
  2593     0530  0A3C               	incf	map@minsal+1,w
  2594     0531  023E               	subwf	map@maxsal+1,w
  2595     0532  00F6               	movwf	___wmul@multiplicand+1
  2596     0533  0837               	movf	map@minval,w
  2597     0534  0235               	subwf	map@varmap,w
  2598     0535  00F3               	movwf	___wmul@multiplier
  2599     0536  0838               	movf	map@minval+1,w
  2600     0537  1C03               	skipc
  2601     0538  0A38               	incf	map@minval+1,w
  2602     0539  0236               	subwf	map@varmap+1,w
  2603     053A  00F4               	movwf	___wmul@multiplier+1
  2604     053B  120A  118A  26AB  120A  118A  	fcall	___wmul
  2605     0540  0874               	movf	?___wmul+1,w
  2606     0541  1283               	bcf	3,5	;RP0=0, select bank0
  2607     0542  1303               	bcf	3,6	;RP1=0, select bank0
  2608     0543  00A3               	movwf	___lwdiv@dividend+1
  2609     0544  0873               	movf	?___wmul,w
  2610     0545  00A2               	movwf	___lwdiv@dividend
  2611     0546  0837               	movf	map@minval,w
  2612     0547  0239               	subwf	map@maxval,w
  2613     0548  00A0               	movwf	___lwdiv@divisor
  2614     0549  0838               	movf	map@minval+1,w
  2615     054A  1C03               	skipc
  2616     054B  0A38               	incf	map@minval+1,w
  2617     054C  023A               	subwf	map@maxval+1,w
  2618     054D  00A1               	movwf	___lwdiv@divisor+1
  2619     054E  120A  118A  25D6  120A  118A  	fcall	___lwdiv
  2620     0553  1283               	bcf	3,5	;RP0=0, select bank0
  2621     0554  1303               	bcf	3,6	;RP1=0, select bank0
  2622     0555  083B               	movf	map@minsal,w
  2623     0556  0720               	addwf	?___lwdiv,w
  2624     0557  00BF               	movwf	??_map
  2625     0558  083C               	movf	map@minsal+1,w
  2626     0559  1803               	skipnc
  2627     055A  0A3C               	incf	map@minsal+1,w
  2628     055B  0721               	addwf	?___lwdiv+1,w
  2629     055C  00C0               	movwf	??_map+1
  2630     055D  083F               	movf	??_map,w
  2631     055E  00C1               	movwf	??_map+2
  2632     055F  0840               	movf	??_map+1,w
  2633     0560  00C2               	movwf	??_map+3
  2634     0561  01C3               	clrf	??_map+4
  2635     0562  01C4               	clrf	??_map+5
  2636     0563  0844               	movf	??_map+5,w
  2637     0564  00AA               	movwf	___xxtofl@val+3
  2638     0565  0843               	movf	??_map+4,w
  2639     0566  00A9               	movwf	___xxtofl@val+2
  2640     0567  0842               	movf	??_map+3,w
  2641     0568  00A8               	movwf	___xxtofl@val+1
  2642     0569  0841               	movf	??_map+2,w
  2643     056A  00A7               	movwf	___xxtofl@val
  2644     056B  3000               	movlw	0
  2645     056C  120A  118A  22EF  120A  118A  	fcall	___xxtofl
  2646     0571  1283               	bcf	3,5	;RP0=0, select bank0
  2647     0572  1303               	bcf	3,6	;RP1=0, select bank0
  2648     0573  082A               	movf	?___xxtofl+3,w
  2649     0574  00C8               	movwf	map@valmap+3
  2650     0575  0829               	movf	?___xxtofl+2,w
  2651     0576  00C7               	movwf	map@valmap+2
  2652     0577  0828               	movf	?___xxtofl+1,w
  2653     0578  00C6               	movwf	map@valmap+1
  2654     0579  0827               	movf	?___xxtofl,w
  2655     057A  00C5               	movwf	map@valmap
  2656                           
  2657                           ;HC05BT_prueba.c: 179:   return valmap;
  2658     057B  0848               	movf	map@valmap+3,w
  2659     057C  00F6               	movwf	___fltol@f1+3
  2660     057D  0847               	movf	map@valmap+2,w
  2661     057E  00F5               	movwf	___fltol@f1+2
  2662     057F  0846               	movf	map@valmap+1,w
  2663     0580  00F4               	movwf	___fltol@f1+1
  2664     0581  0845               	movf	map@valmap,w
  2665     0582  00F3               	movwf	___fltol@f1
  2666     0583  120A  118A  2449  120A  118A  	fcall	___fltol
  2667     0588  0874               	movf	?___fltol+1,w
  2668     0589  1283               	bcf	3,5	;RP0=0, select bank0
  2669     058A  1303               	bcf	3,6	;RP1=0, select bank0
  2670     058B  00B6               	movwf	?_map+1
  2671     058C  0873               	movf	?___fltol,w
  2672     058D  00B5               	movwf	?_map
  2673     058E                     l203:
  2674     058E  0008               	return
  2675     058F                     __end_of_map:
  2676                           
  2677                           	psect	text10
  2678     02EF                     __ptext10:	
  2679 ;; *************** function ___xxtofl *****************
  2680 ;; Defined at:
  2681 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\xxtofl.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;  sign            1    wreg     unsigned char 
  2684 ;;  val             4    7[BANK0 ] long 
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;  sign            1   15[BANK0 ] unsigned char 
  2687 ;;  arg             4   17[BANK0 ] unsigned long 
  2688 ;;  exp             1   16[BANK0 ] unsigned char 
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  4    7[BANK0 ] unsigned char 
  2691 ;; Registers used:
  2692 ;;		wreg, status,2, status,0, btemp+1
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2698 ;;      Params:         0       4       0       0       0
  2699 ;;      Locals:         0       6       0       0       0
  2700 ;;      Temps:          0       4       0       0       0
  2701 ;;      Totals:         0      14       0       0       0
  2702 ;;Total ram usage:       14 bytes
  2703 ;; Hardware stack levels used: 1
  2704 ;; Hardware stack levels required when called: 1
  2705 ;; This function calls:
  2706 ;;		Nothing
  2707 ;; This function is called by:
  2708 ;;		_map
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712     02EF                     ___xxtofl:	
  2713                           ;psect for function ___xxtofl
  2714                           
  2715                           
  2716                           ;incstack = 0
  2717                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  2718                           ;___xxtofl@sign stored from wreg
  2719     02EF  1283               	bcf	3,5	;RP0=0, select bank0
  2720     02F0  1303               	bcf	3,6	;RP1=0, select bank0
  2721     02F1  00AF               	movwf	___xxtofl@sign
  2722     02F2                     l1713:
  2723     02F2  082F               	movf	___xxtofl@sign,w
  2724     02F3  1903               	btfsc	3,2
  2725     02F4  2AF6               	goto	u1321
  2726     02F5  2AF7               	goto	u1320
  2727     02F6                     u1321:
  2728     02F6  2B0B               	goto	l1719
  2729     02F7                     u1320:
  2730     02F7                     l1715:
  2731     02F7  1FAA               	btfss	___xxtofl@val+3,7
  2732     02F8  2AFA               	goto	u1331
  2733     02F9  2AFB               	goto	u1330
  2734     02FA                     u1331:
  2735     02FA  2B0B               	goto	l1719
  2736     02FB                     u1330:
  2737     02FB                     l1717:
  2738     02FB  0927               	comf	___xxtofl@val,w
  2739     02FC  00B1               	movwf	___xxtofl@arg
  2740     02FD  0928               	comf	___xxtofl@val+1,w
  2741     02FE  00B2               	movwf	___xxtofl@arg+1
  2742     02FF  0929               	comf	___xxtofl@val+2,w
  2743     0300  00B3               	movwf	___xxtofl@arg+2
  2744     0301  092A               	comf	___xxtofl@val+3,w
  2745     0302  00B4               	movwf	___xxtofl@arg+3
  2746     0303  0AB1               	incf	___xxtofl@arg,f
  2747     0304  1903               	skipnz
  2748     0305  0AB2               	incf	___xxtofl@arg+1,f
  2749     0306  1903               	skipnz
  2750     0307  0AB3               	incf	___xxtofl@arg+2,f
  2751     0308  1903               	skipnz
  2752     0309  0AB4               	incf	___xxtofl@arg+3,f
  2753     030A  2B13               	goto	l821
  2754     030B                     l1719:
  2755     030B  082A               	movf	___xxtofl@val+3,w
  2756     030C  00B4               	movwf	___xxtofl@arg+3
  2757     030D  0829               	movf	___xxtofl@val+2,w
  2758     030E  00B3               	movwf	___xxtofl@arg+2
  2759     030F  0828               	movf	___xxtofl@val+1,w
  2760     0310  00B2               	movwf	___xxtofl@arg+1
  2761     0311  0827               	movf	___xxtofl@val,w
  2762     0312  00B1               	movwf	___xxtofl@arg
  2763     0313                     l821:
  2764     0313  082A               	movf	___xxtofl@val+3,w
  2765     0314  0429               	iorwf	___xxtofl@val+2,w
  2766     0315  0428               	iorwf	___xxtofl@val+1,w
  2767     0316  0427               	iorwf	___xxtofl@val,w
  2768     0317  1D03               	skipz
  2769     0318  2B1A               	goto	u1341
  2770     0319  2B1B               	goto	u1340
  2771     031A                     u1341:
  2772     031A  2B24               	goto	l1725
  2773     031B                     u1340:
  2774     031B                     l1721:
  2775     031B  3000               	movlw	0
  2776     031C  00AA               	movwf	?___xxtofl+3
  2777     031D  3000               	movlw	0
  2778     031E  00A9               	movwf	?___xxtofl+2
  2779     031F  3000               	movlw	0
  2780     0320  00A8               	movwf	?___xxtofl+1
  2781     0321  3000               	movlw	0
  2782     0322  00A7               	movwf	?___xxtofl
  2783     0323  2BA8               	goto	l823
  2784     0324                     l1725:
  2785     0324  3096               	movlw	150
  2786     0325  00B0               	movwf	___xxtofl@exp
  2787     0326  2B34               	goto	l1731
  2788     0327                     l1727:
  2789     0327  3001               	movlw	1
  2790     0328  00FF               	movwf	btemp+1
  2791     0329  087F               	movf	btemp+1,w
  2792     032A  07B0               	addwf	___xxtofl@exp,f
  2793     032B                     l1729:
  2794     032B  3001               	movlw	1
  2795     032C                     u1355:
  2796     032C  1003               	clrc
  2797     032D  0CB4               	rrf	___xxtofl@arg+3,f
  2798     032E  0CB3               	rrf	___xxtofl@arg+2,f
  2799     032F  0CB2               	rrf	___xxtofl@arg+1,f
  2800     0330  0CB1               	rrf	___xxtofl@arg,f
  2801     0331  3EFF               	addlw	-1
  2802     0332  1D03               	skipz
  2803     0333  2B2C               	goto	u1355
  2804     0334                     l1731:
  2805     0334  30FE               	movlw	254
  2806     0335  0534               	andwf	___xxtofl@arg+3,w
  2807     0336  1D03               	btfss	3,2
  2808     0337  2B39               	goto	u1361
  2809     0338  2B3A               	goto	u1360
  2810     0339                     u1361:
  2811     0339  2B27               	goto	l1727
  2812     033A                     u1360:
  2813     033A  2B56               	goto	l1739
  2814     033B                     l1733:
  2815     033B  3001               	movlw	1
  2816     033C  00FF               	movwf	btemp+1
  2817     033D  087F               	movf	btemp+1,w
  2818     033E  07B0               	addwf	___xxtofl@exp,f
  2819     033F                     l1735:
  2820     033F  3001               	movlw	1
  2821     0340  07B1               	addwf	___xxtofl@arg,f
  2822     0341  3000               	movlw	0
  2823     0342  1803               	skipnc
  2824     0343  3001               	movlw	1
  2825     0344  07B2               	addwf	___xxtofl@arg+1,f
  2826     0345  3000               	movlw	0
  2827     0346  1803               	skipnc
  2828     0347  3001               	movlw	1
  2829     0348  07B3               	addwf	___xxtofl@arg+2,f
  2830     0349  3000               	movlw	0
  2831     034A  1803               	skipnc
  2832     034B  3001               	movlw	1
  2833     034C  07B4               	addwf	___xxtofl@arg+3,f
  2834     034D                     l1737:
  2835     034D  3001               	movlw	1
  2836     034E                     u1375:
  2837     034E  1003               	clrc
  2838     034F  0CB4               	rrf	___xxtofl@arg+3,f
  2839     0350  0CB3               	rrf	___xxtofl@arg+2,f
  2840     0351  0CB2               	rrf	___xxtofl@arg+1,f
  2841     0352  0CB1               	rrf	___xxtofl@arg,f
  2842     0353  3EFF               	addlw	-1
  2843     0354  1D03               	skipz
  2844     0355  2B4E               	goto	u1375
  2845     0356                     l1739:
  2846     0356  30FF               	movlw	255
  2847     0357  0534               	andwf	___xxtofl@arg+3,w
  2848     0358  1D03               	btfss	3,2
  2849     0359  2B5B               	goto	u1381
  2850     035A  2B5C               	goto	u1380
  2851     035B                     u1381:
  2852     035B  2B3B               	goto	l1733
  2853     035C                     u1380:
  2854     035C  2B68               	goto	l1743
  2855     035D                     l1741:
  2856     035D  3001               	movlw	1
  2857     035E  02B0               	subwf	___xxtofl@exp,f
  2858     035F  3001               	movlw	1
  2859     0360  00AB               	movwf	??___xxtofl
  2860     0361                     u1395:
  2861     0361  1003               	clrc
  2862     0362  0DB1               	rlf	___xxtofl@arg,f
  2863     0363  0DB2               	rlf	___xxtofl@arg+1,f
  2864     0364  0DB3               	rlf	___xxtofl@arg+2,f
  2865     0365  0DB4               	rlf	___xxtofl@arg+3,f
  2866     0366  0BAB               	decfsz	??___xxtofl,f
  2867     0367  2B61               	goto	u1395
  2868     0368                     l1743:
  2869     0368  1BB3               	btfsc	___xxtofl@arg+2,7
  2870     0369  2B6B               	goto	u1401
  2871     036A  2B6C               	goto	u1400
  2872     036B                     u1401:
  2873     036B  2B72               	goto	l834
  2874     036C                     u1400:
  2875     036C                     l1745:
  2876     036C  3002               	movlw	2
  2877     036D  0230               	subwf	___xxtofl@exp,w
  2878     036E  1803               	skipnc
  2879     036F  2B71               	goto	u1411
  2880     0370  2B72               	goto	u1410
  2881     0371                     u1411:
  2882     0371  2B5D               	goto	l1741
  2883     0372                     u1410:
  2884     0372                     l834:
  2885     0372  1830               	btfsc	___xxtofl@exp,0
  2886     0373  2B75               	goto	u1421
  2887     0374  2B76               	goto	u1420
  2888     0375                     u1421:
  2889     0375  2B7E               	goto	l835
  2890     0376                     u1420:
  2891     0376                     l1747:
  2892     0376  30FF               	movlw	255
  2893     0377  05B1               	andwf	___xxtofl@arg,f
  2894     0378  30FF               	movlw	255
  2895     0379  05B2               	andwf	___xxtofl@arg+1,f
  2896     037A  307F               	movlw	127
  2897     037B  05B3               	andwf	___xxtofl@arg+2,f
  2898     037C  30FF               	movlw	255
  2899     037D  05B4               	andwf	___xxtofl@arg+3,f
  2900     037E                     l835:
  2901     037E  1003               	clrc
  2902     037F  0CB0               	rrf	___xxtofl@exp,f
  2903     0380                     l1749:
  2904     0380  0830               	movf	___xxtofl@exp,w
  2905     0381  00AB               	movwf	??___xxtofl
  2906     0382  01AC               	clrf	??___xxtofl+1
  2907     0383  01AD               	clrf	??___xxtofl+2
  2908     0384  01AE               	clrf	??___xxtofl+3
  2909     0385  3018               	movlw	24
  2910     0386                     u1435:
  2911     0386  1003               	clrc
  2912     0387  0DAB               	rlf	??___xxtofl,f
  2913     0388  0DAC               	rlf	??___xxtofl+1,f
  2914     0389  0DAD               	rlf	??___xxtofl+2,f
  2915     038A  0DAE               	rlf	??___xxtofl+3,f
  2916     038B                     u1430:
  2917     038B  3EFF               	addlw	-1
  2918     038C  1D03               	skipz
  2919     038D  2B86               	goto	u1435
  2920     038E  082B               	movf	??___xxtofl,w
  2921     038F  04B1               	iorwf	___xxtofl@arg,f
  2922     0390  082C               	movf	??___xxtofl+1,w
  2923     0391  04B2               	iorwf	___xxtofl@arg+1,f
  2924     0392  082D               	movf	??___xxtofl+2,w
  2925     0393  04B3               	iorwf	___xxtofl@arg+2,f
  2926     0394  082E               	movf	??___xxtofl+3,w
  2927     0395  04B4               	iorwf	___xxtofl@arg+3,f
  2928     0396                     l1751:
  2929     0396  082F               	movf	___xxtofl@sign,w
  2930     0397  1903               	btfsc	3,2
  2931     0398  2B9A               	goto	u1441
  2932     0399  2B9B               	goto	u1440
  2933     039A                     u1441:
  2934     039A  2BA0               	goto	l1757
  2935     039B                     u1440:
  2936     039B                     l1753:
  2937     039B  1FAA               	btfss	___xxtofl@val+3,7
  2938     039C  2B9E               	goto	u1451
  2939     039D  2B9F               	goto	u1450
  2940     039E                     u1451:
  2941     039E  2BA0               	goto	l1757
  2942     039F                     u1450:
  2943     039F                     l1755:
  2944     039F  17B4               	bsf	___xxtofl@arg+3,7
  2945     03A0                     l1757:
  2946     03A0  0834               	movf	___xxtofl@arg+3,w
  2947     03A1  00AA               	movwf	?___xxtofl+3
  2948     03A2  0833               	movf	___xxtofl@arg+2,w
  2949     03A3  00A9               	movwf	?___xxtofl+2
  2950     03A4  0832               	movf	___xxtofl@arg+1,w
  2951     03A5  00A8               	movwf	?___xxtofl+1
  2952     03A6  0831               	movf	___xxtofl@arg,w
  2953     03A7  00A7               	movwf	?___xxtofl
  2954     03A8                     l823:
  2955     03A8  0008               	return
  2956     03A9                     __end_of___xxtofl:
  2957                           
  2958                           	psect	text11
  2959     06AB                     __ptext11:	
  2960 ;; *************** function ___wmul *****************
  2961 ;; Defined at:
  2962 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  multiplier      2    3[COMMON] unsigned int 
  2965 ;;  multiplicand    2    5[COMMON] unsigned int 
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;  product         2    7[COMMON] unsigned int 
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  2    3[COMMON] unsigned int 
  2970 ;; Registers used:
  2971 ;;		wreg, status,2, status,0
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2977 ;;      Params:         4       0       0       0       0
  2978 ;;      Locals:         2       0       0       0       0
  2979 ;;      Temps:          0       0       0       0       0
  2980 ;;      Totals:         6       0       0       0       0
  2981 ;;Total ram usage:        6 bytes
  2982 ;; Hardware stack levels used: 1
  2983 ;; Hardware stack levels required when called: 1
  2984 ;; This function calls:
  2985 ;;		Nothing
  2986 ;; This function is called by:
  2987 ;;		_map
  2988 ;;		_sprintf
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           
  2992     06AB                     ___wmul:	
  2993                           ;psect for function ___wmul
  2994                           
  2995     06AB                     l1587:	
  2996                           ;incstack = 0
  2997                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2998                           
  2999     06AB  01F7               	clrf	___wmul@product
  3000     06AC  01F8               	clrf	___wmul@product+1
  3001     06AD                     l1589:
  3002     06AD  1C73               	btfss	___wmul@multiplier,0
  3003     06AE  2EB0               	goto	u981
  3004     06AF  2EB1               	goto	u980
  3005     06B0                     u981:
  3006     06B0  2EB7               	goto	l388
  3007     06B1                     u980:
  3008     06B1                     l1591:
  3009     06B1  0875               	movf	___wmul@multiplicand,w
  3010     06B2  07F7               	addwf	___wmul@product,f
  3011     06B3  1803               	skipnc
  3012     06B4  0AF8               	incf	___wmul@product+1,f
  3013     06B5  0876               	movf	___wmul@multiplicand+1,w
  3014     06B6  07F8               	addwf	___wmul@product+1,f
  3015     06B7                     l388:
  3016     06B7  3001               	movlw	1
  3017     06B8                     u995:
  3018     06B8  1003               	clrc
  3019     06B9  0DF5               	rlf	___wmul@multiplicand,f
  3020     06BA  0DF6               	rlf	___wmul@multiplicand+1,f
  3021     06BB  3EFF               	addlw	-1
  3022     06BC  1D03               	skipz
  3023     06BD  2EB8               	goto	u995
  3024     06BE                     l1593:
  3025     06BE  3001               	movlw	1
  3026     06BF                     u1005:
  3027     06BF  1003               	clrc
  3028     06C0  0CF4               	rrf	___wmul@multiplier+1,f
  3029     06C1  0CF3               	rrf	___wmul@multiplier,f
  3030     06C2  3EFF               	addlw	-1
  3031     06C3  1D03               	skipz
  3032     06C4  2EBF               	goto	u1005
  3033     06C5                     l1595:
  3034     06C5  0873               	movf	___wmul@multiplier,w
  3035     06C6  0474               	iorwf	___wmul@multiplier+1,w
  3036     06C7  1D03               	btfss	3,2
  3037     06C8  2ECA               	goto	u1011
  3038     06C9  2ECB               	goto	u1010
  3039     06CA                     u1011:
  3040     06CA  2EAD               	goto	l1589
  3041     06CB                     u1010:
  3042     06CB                     l1597:
  3043     06CB  0878               	movf	___wmul@product+1,w
  3044     06CC  00F4               	movwf	?___wmul+1
  3045     06CD  0877               	movf	___wmul@product,w
  3046     06CE  00F3               	movwf	?___wmul
  3047     06CF                     l390:
  3048     06CF  0008               	return
  3049     06D0                     __end_of___wmul:
  3050                           
  3051                           	psect	text12
  3052     05D6                     __ptext12:	
  3053 ;; *************** function ___lwdiv *****************
  3054 ;; Defined at:
  3055 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  divisor         2    0[BANK0 ] unsigned int 
  3058 ;;  dividend        2    2[BANK0 ] unsigned int 
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;  quotient        2    4[BANK0 ] unsigned int 
  3061 ;;  counter         1    6[BANK0 ] unsigned char 
  3062 ;; Return value:  Size  Location     Type
  3063 ;;                  2    0[BANK0 ] unsigned int 
  3064 ;; Registers used:
  3065 ;;		wreg, status,2, status,0, btemp+1
  3066 ;; Tracked objects:
  3067 ;;		On entry : 0/0
  3068 ;;		On exit  : 0/0
  3069 ;;		Unchanged: 0/0
  3070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3071 ;;      Params:         0       4       0       0       0
  3072 ;;      Locals:         0       3       0       0       0
  3073 ;;      Temps:          0       0       0       0       0
  3074 ;;      Totals:         0       7       0       0       0
  3075 ;;Total ram usage:        7 bytes
  3076 ;; Hardware stack levels used: 1
  3077 ;; Hardware stack levels required when called: 1
  3078 ;; This function calls:
  3079 ;;		Nothing
  3080 ;; This function is called by:
  3081 ;;		_map
  3082 ;;		_sprintf
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086     05D6                     ___lwdiv:	
  3087                           ;psect for function ___lwdiv
  3088                           
  3089     05D6                     l1665:	
  3090                           ;incstack = 0
  3091                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  3092                           
  3093     05D6  1283               	bcf	3,5	;RP0=0, select bank0
  3094     05D7  1303               	bcf	3,6	;RP1=0, select bank0
  3095     05D8  01A4               	clrf	___lwdiv@quotient
  3096     05D9  01A5               	clrf	___lwdiv@quotient+1
  3097     05DA                     l1667:
  3098     05DA  0820               	movf	___lwdiv@divisor,w
  3099     05DB  0421               	iorwf	___lwdiv@divisor+1,w
  3100     05DC  1903               	btfsc	3,2
  3101     05DD  2DDF               	goto	u1191
  3102     05DE  2DE0               	goto	u1190
  3103     05DF                     u1191:
  3104     05DF  2E17               	goto	l1687
  3105     05E0                     u1190:
  3106     05E0                     l1669:
  3107     05E0  01A6               	clrf	___lwdiv@counter
  3108     05E1  0AA6               	incf	___lwdiv@counter,f
  3109     05E2  2DEE               	goto	l1675
  3110     05E3                     l1671:
  3111     05E3  3001               	movlw	1
  3112     05E4                     u1205:
  3113     05E4  1003               	clrc
  3114     05E5  0DA0               	rlf	___lwdiv@divisor,f
  3115     05E6  0DA1               	rlf	___lwdiv@divisor+1,f
  3116     05E7  3EFF               	addlw	-1
  3117     05E8  1D03               	skipz
  3118     05E9  2DE4               	goto	u1205
  3119     05EA                     l1673:
  3120     05EA  3001               	movlw	1
  3121     05EB  00FF               	movwf	btemp+1
  3122     05EC  087F               	movf	btemp+1,w
  3123     05ED  07A6               	addwf	___lwdiv@counter,f
  3124     05EE                     l1675:
  3125     05EE  1FA1               	btfss	___lwdiv@divisor+1,7
  3126     05EF  2DF1               	goto	u1211
  3127     05F0  2DF2               	goto	u1210
  3128     05F1                     u1211:
  3129     05F1  2DE3               	goto	l1671
  3130     05F2                     u1210:
  3131     05F2                     l1677:
  3132     05F2  3001               	movlw	1
  3133     05F3                     u1225:
  3134     05F3  1003               	clrc
  3135     05F4  0DA4               	rlf	___lwdiv@quotient,f
  3136     05F5  0DA5               	rlf	___lwdiv@quotient+1,f
  3137     05F6  3EFF               	addlw	-1
  3138     05F7  1D03               	skipz
  3139     05F8  2DF3               	goto	u1225
  3140     05F9  0821               	movf	___lwdiv@divisor+1,w
  3141     05FA  0223               	subwf	___lwdiv@dividend+1,w
  3142     05FB  1D03               	skipz
  3143     05FC  2DFF               	goto	u1235
  3144     05FD  0820               	movf	___lwdiv@divisor,w
  3145     05FE  0222               	subwf	___lwdiv@dividend,w
  3146     05FF                     u1235:
  3147     05FF  1C03               	skipc
  3148     0600  2E02               	goto	u1231
  3149     0601  2E03               	goto	u1230
  3150     0602                     u1231:
  3151     0602  2E0A               	goto	l1683
  3152     0603                     u1230:
  3153     0603                     l1679:
  3154     0603  0820               	movf	___lwdiv@divisor,w
  3155     0604  02A2               	subwf	___lwdiv@dividend,f
  3156     0605  0821               	movf	___lwdiv@divisor+1,w
  3157     0606  1C03               	skipc
  3158     0607  03A3               	decf	___lwdiv@dividend+1,f
  3159     0608  02A3               	subwf	___lwdiv@dividend+1,f
  3160     0609                     l1681:
  3161     0609  1424               	bsf	___lwdiv@quotient,0
  3162     060A                     l1683:
  3163     060A  3001               	movlw	1
  3164     060B                     u1245:
  3165     060B  1003               	clrc
  3166     060C  0CA1               	rrf	___lwdiv@divisor+1,f
  3167     060D  0CA0               	rrf	___lwdiv@divisor,f
  3168     060E  3EFF               	addlw	-1
  3169     060F  1D03               	skipz
  3170     0610  2E0B               	goto	u1245
  3171     0611                     l1685:
  3172     0611  3001               	movlw	1
  3173     0612  02A6               	subwf	___lwdiv@counter,f
  3174     0613  1D03               	btfss	3,2
  3175     0614  2E16               	goto	u1251
  3176     0615  2E17               	goto	u1250
  3177     0616                     u1251:
  3178     0616  2DF2               	goto	l1677
  3179     0617                     u1250:
  3180     0617                     l1687:
  3181     0617  0825               	movf	___lwdiv@quotient+1,w
  3182     0618  00A1               	movwf	?___lwdiv+1
  3183     0619  0824               	movf	___lwdiv@quotient,w
  3184     061A  00A0               	movwf	?___lwdiv
  3185     061B                     l660:
  3186     061B  0008               	return
  3187     061C                     __end_of___lwdiv:
  3188                           
  3189                           	psect	text13
  3190     0449                     __ptext13:	
  3191 ;; *************** function ___fltol *****************
  3192 ;; Defined at:
  3193 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fltol.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;  f1              4    3[COMMON] unsigned int 
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;  exp1            1    1[BANK0 ] unsigned char 
  3198 ;;  sign1           1    0[BANK0 ] unsigned char 
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  4    3[COMMON] long 
  3201 ;; Registers used:
  3202 ;;		wreg, status,2, status,0, btemp+1
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3208 ;;      Params:         4       0       0       0       0
  3209 ;;      Locals:         0       2       0       0       0
  3210 ;;      Temps:          4       0       0       0       0
  3211 ;;      Totals:         8       2       0       0       0
  3212 ;;Total ram usage:       10 bytes
  3213 ;; Hardware stack levels used: 1
  3214 ;; Hardware stack levels required when called: 1
  3215 ;; This function calls:
  3216 ;;		Nothing
  3217 ;; This function is called by:
  3218 ;;		_map
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222     0449                     ___fltol:	
  3223                           ;psect for function ___fltol
  3224                           
  3225     0449                     l1627:	
  3226                           ;incstack = 0
  3227                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  3228                           
  3229     0449  1003               	clrc
  3230     044A  0D75               	rlf	___fltol@f1+2,w
  3231     044B  0D76               	rlf	___fltol@f1+3,w
  3232     044C  1283               	bcf	3,5	;RP0=0, select bank0
  3233     044D  1303               	bcf	3,6	;RP1=0, select bank0
  3234     044E  00A1               	movwf	___fltol@exp1
  3235     044F  0821               	movf	___fltol@exp1,w
  3236     0450  1D03               	btfss	3,2
  3237     0451  2C53               	goto	u1091
  3238     0452  2C54               	goto	u1090
  3239     0453                     u1091:
  3240     0453  2C5D               	goto	l1633
  3241     0454                     u1090:
  3242     0454                     l1629:
  3243     0454  3000               	movlw	0
  3244     0455  00F6               	movwf	?___fltol+3
  3245     0456  3000               	movlw	0
  3246     0457  00F5               	movwf	?___fltol+2
  3247     0458  3000               	movlw	0
  3248     0459  00F4               	movwf	?___fltol+1
  3249     045A  3000               	movlw	0
  3250     045B  00F3               	movwf	?___fltol
  3251     045C  2CC0               	goto	l574
  3252     045D                     l1633:
  3253     045D  0873               	movf	___fltol@f1,w
  3254     045E  00F7               	movwf	??___fltol
  3255     045F  0874               	movf	___fltol@f1+1,w
  3256     0460  00F8               	movwf	??___fltol+1
  3257     0461  0875               	movf	___fltol@f1+2,w
  3258     0462  00F9               	movwf	??___fltol+2
  3259     0463  0876               	movf	___fltol@f1+3,w
  3260     0464  00FA               	movwf	??___fltol+3
  3261     0465  301F               	movlw	31
  3262     0466                     u1105:
  3263     0466  1003               	clrc
  3264     0467  0CFA               	rrf	??___fltol+3,f
  3265     0468  0CF9               	rrf	??___fltol+2,f
  3266     0469  0CF8               	rrf	??___fltol+1,f
  3267     046A  0CF7               	rrf	??___fltol,f
  3268     046B                     u1100:
  3269     046B  3EFF               	addlw	-1
  3270     046C  1D03               	skipz
  3271     046D  2C66               	goto	u1105
  3272     046E  0877               	movf	??___fltol,w
  3273     046F  00A0               	movwf	___fltol@sign1
  3274     0470                     l1635:
  3275     0470  17F5               	bsf	___fltol@f1+2,7
  3276     0471                     l1637:
  3277     0471  30FF               	movlw	255
  3278     0472  05F3               	andwf	___fltol@f1,f
  3279     0473  30FF               	movlw	255
  3280     0474  05F4               	andwf	___fltol@f1+1,f
  3281     0475  30FF               	movlw	255
  3282     0476  05F5               	andwf	___fltol@f1+2,f
  3283     0477  3000               	movlw	0
  3284     0478  05F6               	andwf	___fltol@f1+3,f
  3285     0479                     l1639:
  3286     0479  3096               	movlw	150
  3287     047A  02A1               	subwf	___fltol@exp1,f
  3288     047B                     l1641:
  3289     047B  1FA1               	btfss	___fltol@exp1,7
  3290     047C  2C7E               	goto	u1111
  3291     047D  2C7F               	goto	u1110
  3292     047E                     u1111:
  3293     047E  2C99               	goto	l1653
  3294     047F                     u1110:
  3295     047F                     l1643:
  3296     047F  0821               	movf	___fltol@exp1,w
  3297     0480  3A80               	xorlw	128
  3298     0481  3E97               	addlw	151
  3299     0482  1803               	skipnc
  3300     0483  2C85               	goto	u1121
  3301     0484  2C86               	goto	u1120
  3302     0485                     u1121:
  3303     0485  2C87               	goto	l1649
  3304     0486                     u1120:
  3305     0486  2C54               	goto	l1629
  3306     0487                     l1649:
  3307     0487  3001               	movlw	1
  3308     0488                     u1135:
  3309     0488  1003               	clrc
  3310     0489  0CF6               	rrf	___fltol@f1+3,f
  3311     048A  0CF5               	rrf	___fltol@f1+2,f
  3312     048B  0CF4               	rrf	___fltol@f1+1,f
  3313     048C  0CF3               	rrf	___fltol@f1,f
  3314     048D  3EFF               	addlw	-1
  3315     048E  1D03               	skipz
  3316     048F  2C88               	goto	u1135
  3317     0490                     l1651:
  3318     0490  3001               	movlw	1
  3319     0491  00FF               	movwf	btemp+1
  3320     0492  087F               	movf	btemp+1,w
  3321     0493  07A1               	addwf	___fltol@exp1,f
  3322     0494  1D03               	btfss	3,2
  3323     0495  2C97               	goto	u1141
  3324     0496  2C98               	goto	u1140
  3325     0497                     u1141:
  3326     0497  2C87               	goto	l1649
  3327     0498                     u1140:
  3328     0498  2CB0               	goto	l1661
  3329     0499                     l1653:
  3330     0499  3020               	movlw	32
  3331     049A  0221               	subwf	___fltol@exp1,w
  3332     049B  1C03               	skipc
  3333     049C  2C9E               	goto	u1151
  3334     049D  2C9F               	goto	u1150
  3335     049E                     u1151:
  3336     049E  2CAB               	goto	l581
  3337     049F                     u1150:
  3338     049F  2C54               	goto	l1629
  3339     04A0                     l1659:
  3340     04A0  3001               	movlw	1
  3341     04A1  00F7               	movwf	??___fltol
  3342     04A2                     u1165:
  3343     04A2  1003               	clrc
  3344     04A3  0DF3               	rlf	___fltol@f1,f
  3345     04A4  0DF4               	rlf	___fltol@f1+1,f
  3346     04A5  0DF5               	rlf	___fltol@f1+2,f
  3347     04A6  0DF6               	rlf	___fltol@f1+3,f
  3348     04A7  0BF7               	decfsz	??___fltol,f
  3349     04A8  2CA2               	goto	u1165
  3350     04A9  3001               	movlw	1
  3351     04AA  02A1               	subwf	___fltol@exp1,f
  3352     04AB                     l581:
  3353     04AB  0821               	movf	___fltol@exp1,w
  3354     04AC  1D03               	btfss	3,2
  3355     04AD  2CAF               	goto	u1171
  3356     04AE  2CB0               	goto	u1170
  3357     04AF                     u1171:
  3358     04AF  2CA0               	goto	l1659
  3359     04B0                     u1170:
  3360     04B0                     l1661:
  3361     04B0  0820               	movf	___fltol@sign1,w
  3362     04B1  1903               	btfsc	3,2
  3363     04B2  2CB4               	goto	u1181
  3364     04B3  2CB5               	goto	u1180
  3365     04B4                     u1181:
  3366     04B4  2CC0               	goto	l584
  3367     04B5                     u1180:
  3368     04B5                     l1663:
  3369     04B5  09F3               	comf	___fltol@f1,f
  3370     04B6  09F4               	comf	___fltol@f1+1,f
  3371     04B7  09F5               	comf	___fltol@f1+2,f
  3372     04B8  09F6               	comf	___fltol@f1+3,f
  3373     04B9  0AF3               	incf	___fltol@f1,f
  3374     04BA  1903               	skipnz
  3375     04BB  0AF4               	incf	___fltol@f1+1,f
  3376     04BC  1903               	skipnz
  3377     04BD  0AF5               	incf	___fltol@f1+2,f
  3378     04BE  1903               	skipnz
  3379     04BF  0AF6               	incf	___fltol@f1+3,f
  3380     04C0                     l584:
  3381     04C0                     l574:
  3382     04C0  0008               	return
  3383     04C1                     __end_of___fltol:
  3384                           
  3385                           	psect	text14
  3386     03A9                     __ptext14:	
  3387 ;; *************** function _UART_Init *****************
  3388 ;; Defined at:
  3389 ;;		line 14 in file "USARTmodl.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;  baud_rate       4    6[BANK0 ] const unsigned long 
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;  n               2   14[BANK0 ] int 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      void 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3403 ;;      Params:         0       4       0       0       0
  3404 ;;      Locals:         0       2       0       0       0
  3405 ;;      Temps:          0       4       0       0       0
  3406 ;;      Totals:         0      10       0       0       0
  3407 ;;Total ram usage:       10 bytes
  3408 ;; Hardware stack levels used: 1
  3409 ;; Hardware stack levels required when called: 2
  3410 ;; This function calls:
  3411 ;;		___lldiv
  3412 ;; This function is called by:
  3413 ;;		_main
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417     03A9                     _UART_Init:	
  3418                           ;psect for function _UART_Init
  3419                           
  3420     03A9                     l1805:	
  3421                           ;incstack = 0
  3422                           ; Regs used in _UART_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3423                           
  3424                           
  3425                           ;USARTmodl.c: 14: void UART_Init(const uint32_t baud_rate);USARTmodl.c: 15: {;USARTmodl.
      +                          c: 16:   int16_t n = ( 8000000 / (16 * baud_rate) ) - 1;
  3426     03A9  1283               	bcf	3,5	;RP0=0, select bank0
  3427     03AA  1303               	bcf	3,6	;RP1=0, select bank0
  3428     03AB  0826               	movf	UART_Init@baud_rate,w
  3429     03AC  00AA               	movwf	??_UART_Init
  3430     03AD  0827               	movf	UART_Init@baud_rate+1,w
  3431     03AE  00AB               	movwf	??_UART_Init+1
  3432     03AF  0828               	movf	UART_Init@baud_rate+2,w
  3433     03B0  00AC               	movwf	??_UART_Init+2
  3434     03B1  0829               	movf	UART_Init@baud_rate+3,w
  3435     03B2  00AD               	movwf	??_UART_Init+3
  3436     03B3  3004               	movlw	4
  3437     03B4                     u1485:
  3438     03B4  1003               	clrc
  3439     03B5  0DAA               	rlf	??_UART_Init,f
  3440     03B6  0DAB               	rlf	??_UART_Init+1,f
  3441     03B7  0DAC               	rlf	??_UART_Init+2,f
  3442     03B8  0DAD               	rlf	??_UART_Init+3,f
  3443     03B9                     u1480:
  3444     03B9  3EFF               	addlw	-1
  3445     03BA  1D03               	skipz
  3446     03BB  2BB4               	goto	u1485
  3447     03BC  082D               	movf	??_UART_Init+3,w
  3448     03BD  00F6               	movwf	___lldiv@divisor+3
  3449     03BE  082C               	movf	??_UART_Init+2,w
  3450     03BF  00F5               	movwf	___lldiv@divisor+2
  3451     03C0  082B               	movf	??_UART_Init+1,w
  3452     03C1  00F4               	movwf	___lldiv@divisor+1
  3453     03C2  082A               	movf	??_UART_Init,w
  3454     03C3  00F3               	movwf	___lldiv@divisor
  3455     03C4  3000               	movlw	0
  3456     03C5  00FA               	movwf	___lldiv@dividend+3
  3457     03C6  307A               	movlw	122
  3458     03C7  00F9               	movwf	___lldiv@dividend+2
  3459     03C8  3012               	movlw	18
  3460     03C9  00F8               	movwf	___lldiv@dividend+1
  3461     03CA  3000               	movlw	0
  3462     03CB  00F7               	movwf	___lldiv@dividend
  3463     03CC  120A  118A  24C1  120A  118A  	fcall	___lldiv
  3464     03D1  0873               	movf	?___lldiv,w
  3465     03D2  3EFF               	addlw	255
  3466     03D3  1283               	bcf	3,5	;RP0=0, select bank0
  3467     03D4  1303               	bcf	3,6	;RP1=0, select bank0
  3468     03D5  00AE               	movwf	UART_Init@n
  3469     03D6  0874               	movf	?___lldiv+1,w
  3470     03D7  1803               	skipnc
  3471     03D8  3E01               	addlw	1
  3472     03D9  3EFF               	addlw	255
  3473     03DA  00AF               	movwf	UART_Init@n+1
  3474     03DB                     l1807:
  3475                           
  3476                           ;USARTmodl.c: 18:   if (n < 0)
  3477     03DB  1FAF               	btfss	UART_Init@n+1,7
  3478     03DC  2BDE               	goto	u1491
  3479     03DD  2BDF               	goto	u1490
  3480     03DE                     u1491:
  3481     03DE  2BE1               	goto	l1811
  3482     03DF                     u1490:
  3483     03DF                     l1809:
  3484                           
  3485                           ;USARTmodl.c: 19:     n = 0;
  3486     03DF  01AE               	clrf	UART_Init@n
  3487     03E0  01AF               	clrf	UART_Init@n+1
  3488     03E1                     l1811:
  3489                           
  3490                           ;USARTmodl.c: 21:   if (n > 255)
  3491     03E1  082F               	movf	UART_Init@n+1,w
  3492     03E2  3A80               	xorlw	128
  3493     03E3  00FF               	movwf	btemp+1
  3494     03E4  3081               	movlw	129
  3495     03E5  027F               	subwf	btemp+1,w
  3496     03E6  1D03               	skipz
  3497     03E7  2BEA               	goto	u1505
  3498     03E8  3000               	movlw	0
  3499     03E9  022E               	subwf	UART_Init@n,w
  3500     03EA                     u1505:
  3501     03EA  1C03               	skipc
  3502     03EB  2BED               	goto	u1501
  3503     03EC  2BEE               	goto	u1500
  3504     03ED                     u1501:
  3505     03ED  2C3C               	goto	l1819
  3506     03EE                     u1500:
  3507     03EE                     l1813:
  3508                           
  3509                           ;USARTmodl.c: 22:   {;USARTmodl.c: 23:     n = ( 8000000 / (64 * baud_rate) ) - 1;
  3510     03EE  1283               	bcf	3,5	;RP0=0, select bank0
  3511     03EF  1303               	bcf	3,6	;RP1=0, select bank0
  3512     03F0  0826               	movf	UART_Init@baud_rate,w
  3513     03F1  00AA               	movwf	??_UART_Init
  3514     03F2  0827               	movf	UART_Init@baud_rate+1,w
  3515     03F3  00AB               	movwf	??_UART_Init+1
  3516     03F4  0828               	movf	UART_Init@baud_rate+2,w
  3517     03F5  00AC               	movwf	??_UART_Init+2
  3518     03F6  0829               	movf	UART_Init@baud_rate+3,w
  3519     03F7  00AD               	movwf	??_UART_Init+3
  3520     03F8  3006               	movlw	6
  3521     03F9                     u1515:
  3522     03F9  1003               	clrc
  3523     03FA  0DAA               	rlf	??_UART_Init,f
  3524     03FB  0DAB               	rlf	??_UART_Init+1,f
  3525     03FC  0DAC               	rlf	??_UART_Init+2,f
  3526     03FD  0DAD               	rlf	??_UART_Init+3,f
  3527     03FE                     u1510:
  3528     03FE  3EFF               	addlw	-1
  3529     03FF  1D03               	skipz
  3530     0400  2BF9               	goto	u1515
  3531     0401  082D               	movf	??_UART_Init+3,w
  3532     0402  00F6               	movwf	___lldiv@divisor+3
  3533     0403  082C               	movf	??_UART_Init+2,w
  3534     0404  00F5               	movwf	___lldiv@divisor+2
  3535     0405  082B               	movf	??_UART_Init+1,w
  3536     0406  00F4               	movwf	___lldiv@divisor+1
  3537     0407  082A               	movf	??_UART_Init,w
  3538     0408  00F3               	movwf	___lldiv@divisor
  3539     0409  3000               	movlw	0
  3540     040A  00FA               	movwf	___lldiv@dividend+3
  3541     040B  307A               	movlw	122
  3542     040C  00F9               	movwf	___lldiv@dividend+2
  3543     040D  3012               	movlw	18
  3544     040E  00F8               	movwf	___lldiv@dividend+1
  3545     040F  3000               	movlw	0
  3546     0410  00F7               	movwf	___lldiv@dividend
  3547     0411  120A  118A  24C1  120A  118A  	fcall	___lldiv
  3548     0416  0873               	movf	?___lldiv,w
  3549     0417  3EFF               	addlw	255
  3550     0418  1283               	bcf	3,5	;RP0=0, select bank0
  3551     0419  1303               	bcf	3,6	;RP1=0, select bank0
  3552     041A  00AE               	movwf	UART_Init@n
  3553     041B  0874               	movf	?___lldiv+1,w
  3554     041C  1803               	skipnc
  3555     041D  3E01               	addlw	1
  3556     041E  3EFF               	addlw	255
  3557     041F  00AF               	movwf	UART_Init@n+1
  3558     0420                     l1815:
  3559                           
  3560                           ;USARTmodl.c: 24:     if (n > 255)
  3561     0420  082F               	movf	UART_Init@n+1,w
  3562     0421  3A80               	xorlw	128
  3563     0422  00FF               	movwf	btemp+1
  3564     0423  3081               	movlw	129
  3565     0424  027F               	subwf	btemp+1,w
  3566     0425  1D03               	skipz
  3567     0426  2C29               	goto	u1525
  3568     0427  3000               	movlw	0
  3569     0428  022E               	subwf	UART_Init@n,w
  3570     0429                     u1525:
  3571     0429  1C03               	skipc
  3572     042A  2C2C               	goto	u1521
  3573     042B  2C2D               	goto	u1520
  3574     042C                     u1521:
  3575     042C  2C33               	goto	l228
  3576     042D                     u1520:
  3577     042D                     l1817:
  3578                           
  3579                           ;USARTmodl.c: 25:       n = 255;
  3580     042D  30FF               	movlw	255
  3581     042E  1283               	bcf	3,5	;RP0=0, select bank0
  3582     042F  1303               	bcf	3,6	;RP1=0, select bank0
  3583     0430  00AE               	movwf	UART_Init@n
  3584     0431  3000               	movlw	0
  3585     0432  00AF               	movwf	UART_Init@n+1
  3586     0433                     l228:
  3587                           
  3588                           ;USARTmodl.c: 26:     SPBRG = n;
  3589     0433  1283               	bcf	3,5	;RP0=0, select bank0
  3590     0434  1303               	bcf	3,6	;RP1=0, select bank0
  3591     0435  082E               	movf	UART_Init@n,w
  3592     0436  1683               	bsf	3,5	;RP0=1, select bank1
  3593     0437  1303               	bcf	3,6	;RP1=0, select bank1
  3594     0438  0099               	movwf	25	;volatile
  3595                           
  3596                           ;USARTmodl.c: 27:     TXSTA = 0x20;
  3597     0439  3020               	movlw	32
  3598     043A  0098               	movwf	24	;volatile
  3599                           
  3600                           ;USARTmodl.c: 28:   }
  3601     043B  2C44               	goto	l229
  3602     043C                     l1819:
  3603                           
  3604                           ;USARTmodl.c: 31:   {;USARTmodl.c: 32:     SPBRG = n;
  3605     043C  1283               	bcf	3,5	;RP0=0, select bank0
  3606     043D  1303               	bcf	3,6	;RP1=0, select bank0
  3607     043E  082E               	movf	UART_Init@n,w
  3608     043F  1683               	bsf	3,5	;RP0=1, select bank1
  3609     0440  1303               	bcf	3,6	;RP1=0, select bank1
  3610     0441  0099               	movwf	25	;volatile
  3611                           
  3612                           ;USARTmodl.c: 33:     TXSTA = 0x24;
  3613     0442  3024               	movlw	36
  3614     0443  0098               	movwf	24	;volatile
  3615     0444                     l229:	
  3616                           ;USARTmodl.c: 34:   }
  3617                           
  3618                           
  3619                           ;USARTmodl.c: 36:   RCSTA = 0x90;
  3620     0444  3090               	movlw	144
  3621     0445  1283               	bcf	3,5	;RP0=0, select bank0
  3622     0446  1303               	bcf	3,6	;RP1=0, select bank0
  3623     0447  0098               	movwf	24	;volatile
  3624     0448                     l230:
  3625     0448  0008               	return
  3626     0449                     __end_of_UART_Init:
  3627                           
  3628                           	psect	text15
  3629     04C1                     __ptext15:	
  3630 ;; *************** function ___lldiv *****************
  3631 ;; Defined at:
  3632 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;  divisor         4    3[COMMON] unsigned long 
  3635 ;;  dividend        4    7[COMMON] unsigned long 
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;  quotient        4    1[BANK0 ] unsigned long 
  3638 ;;  counter         1    5[BANK0 ] unsigned char 
  3639 ;; Return value:  Size  Location     Type
  3640 ;;                  4    3[COMMON] unsigned long 
  3641 ;; Registers used:
  3642 ;;		wreg, status,2, status,0, btemp+1
  3643 ;; Tracked objects:
  3644 ;;		On entry : 0/0
  3645 ;;		On exit  : 0/0
  3646 ;;		Unchanged: 0/0
  3647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3648 ;;      Params:         8       0       0       0       0
  3649 ;;      Locals:         0       5       0       0       0
  3650 ;;      Temps:          0       1       0       0       0
  3651 ;;      Totals:         8       6       0       0       0
  3652 ;;Total ram usage:       14 bytes
  3653 ;; Hardware stack levels used: 1
  3654 ;; Hardware stack levels required when called: 1
  3655 ;; This function calls:
  3656 ;;		Nothing
  3657 ;; This function is called by:
  3658 ;;		_UART_Init
  3659 ;;		_I2C_Master_Init
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663     04C1                     ___lldiv:	
  3664                           ;psect for function ___lldiv
  3665                           
  3666     04C1                     l1601:	
  3667                           ;incstack = 0
  3668                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  3669                           
  3670     04C1  3000               	movlw	0
  3671     04C2  1283               	bcf	3,5	;RP0=0, select bank0
  3672     04C3  1303               	bcf	3,6	;RP1=0, select bank0
  3673     04C4  00A4               	movwf	___lldiv@quotient+3
  3674     04C5  3000               	movlw	0
  3675     04C6  00A3               	movwf	___lldiv@quotient+2
  3676     04C7  3000               	movlw	0
  3677     04C8  00A2               	movwf	___lldiv@quotient+1
  3678     04C9  3000               	movlw	0
  3679     04CA  00A1               	movwf	___lldiv@quotient
  3680     04CB  0876               	movf	___lldiv@divisor+3,w
  3681     04CC  0475               	iorwf	___lldiv@divisor+2,w
  3682     04CD  0474               	iorwf	___lldiv@divisor+1,w
  3683     04CE  0473               	iorwf	___lldiv@divisor,w
  3684     04CF  1903               	skipnz
  3685     04D0  2CD2               	goto	u1021
  3686     04D1  2CD3               	goto	u1020
  3687     04D2                     u1021:
  3688     04D2  2D20               	goto	l1623
  3689     04D3                     u1020:
  3690     04D3                     l1603:
  3691     04D3  01A5               	clrf	___lldiv@counter
  3692     04D4  0AA5               	incf	___lldiv@counter,f
  3693     04D5  2CE3               	goto	l1609
  3694     04D6                     l1605:
  3695     04D6  3001               	movlw	1
  3696     04D7  00A0               	movwf	??___lldiv
  3697     04D8                     u1035:
  3698     04D8  1003               	clrc
  3699     04D9  0DF3               	rlf	___lldiv@divisor,f
  3700     04DA  0DF4               	rlf	___lldiv@divisor+1,f
  3701     04DB  0DF5               	rlf	___lldiv@divisor+2,f
  3702     04DC  0DF6               	rlf	___lldiv@divisor+3,f
  3703     04DD  0BA0               	decfsz	??___lldiv,f
  3704     04DE  2CD8               	goto	u1035
  3705     04DF                     l1607:
  3706     04DF  3001               	movlw	1
  3707     04E0  00FF               	movwf	btemp+1
  3708     04E1  087F               	movf	btemp+1,w
  3709     04E2  07A5               	addwf	___lldiv@counter,f
  3710     04E3                     l1609:
  3711     04E3  1FF6               	btfss	___lldiv@divisor+3,7
  3712     04E4  2CE6               	goto	u1041
  3713     04E5  2CE7               	goto	u1040
  3714     04E6                     u1041:
  3715     04E6  2CD6               	goto	l1605
  3716     04E7                     u1040:
  3717     04E7                     l1611:
  3718     04E7  3001               	movlw	1
  3719     04E8  00A0               	movwf	??___lldiv
  3720     04E9                     u1055:
  3721     04E9  1003               	clrc
  3722     04EA  0DA1               	rlf	___lldiv@quotient,f
  3723     04EB  0DA2               	rlf	___lldiv@quotient+1,f
  3724     04EC  0DA3               	rlf	___lldiv@quotient+2,f
  3725     04ED  0DA4               	rlf	___lldiv@quotient+3,f
  3726     04EE  0BA0               	decfsz	??___lldiv,f
  3727     04EF  2CE9               	goto	u1055
  3728     04F0                     l1613:
  3729     04F0  0876               	movf	___lldiv@divisor+3,w
  3730     04F1  027A               	subwf	___lldiv@dividend+3,w
  3731     04F2  1D03               	skipz
  3732     04F3  2CFE               	goto	u1065
  3733     04F4  0875               	movf	___lldiv@divisor+2,w
  3734     04F5  0279               	subwf	___lldiv@dividend+2,w
  3735     04F6  1D03               	skipz
  3736     04F7  2CFE               	goto	u1065
  3737     04F8  0874               	movf	___lldiv@divisor+1,w
  3738     04F9  0278               	subwf	___lldiv@dividend+1,w
  3739     04FA  1D03               	skipz
  3740     04FB  2CFE               	goto	u1065
  3741     04FC  0873               	movf	___lldiv@divisor,w
  3742     04FD  0277               	subwf	___lldiv@dividend,w
  3743     04FE                     u1065:
  3744     04FE  1C03               	skipc
  3745     04FF  2D01               	goto	u1061
  3746     0500  2D02               	goto	u1060
  3747     0501                     u1061:
  3748     0501  2D11               	goto	l1619
  3749     0502                     u1060:
  3750     0502                     l1615:
  3751     0502  0873               	movf	___lldiv@divisor,w
  3752     0503  02F7               	subwf	___lldiv@dividend,f
  3753     0504  0874               	movf	___lldiv@divisor+1,w
  3754     0505  1C03               	skipc
  3755     0506  0F74               	incfsz	___lldiv@divisor+1,w
  3756     0507  02F8               	subwf	___lldiv@dividend+1,f
  3757     0508  0875               	movf	___lldiv@divisor+2,w
  3758     0509  1C03               	skipc
  3759     050A  0F75               	incfsz	___lldiv@divisor+2,w
  3760     050B  02F9               	subwf	___lldiv@dividend+2,f
  3761     050C  0876               	movf	___lldiv@divisor+3,w
  3762     050D  1C03               	skipc
  3763     050E  0F76               	incfsz	___lldiv@divisor+3,w
  3764     050F  02FA               	subwf	___lldiv@dividend+3,f
  3765     0510                     l1617:
  3766     0510  1421               	bsf	___lldiv@quotient,0
  3767     0511                     l1619:
  3768     0511  3001               	movlw	1
  3769     0512                     u1075:
  3770     0512  1003               	clrc
  3771     0513  0CF6               	rrf	___lldiv@divisor+3,f
  3772     0514  0CF5               	rrf	___lldiv@divisor+2,f
  3773     0515  0CF4               	rrf	___lldiv@divisor+1,f
  3774     0516  0CF3               	rrf	___lldiv@divisor,f
  3775     0517  3EFF               	addlw	-1
  3776     0518  1D03               	skipz
  3777     0519  2D12               	goto	u1075
  3778     051A                     l1621:
  3779     051A  3001               	movlw	1
  3780     051B  02A5               	subwf	___lldiv@counter,f
  3781     051C  1D03               	btfss	3,2
  3782     051D  2D1F               	goto	u1081
  3783     051E  2D20               	goto	u1080
  3784     051F                     u1081:
  3785     051F  2CE7               	goto	l1611
  3786     0520                     u1080:
  3787     0520                     l1623:
  3788     0520  0824               	movf	___lldiv@quotient+3,w
  3789     0521  00F6               	movwf	?___lldiv+3
  3790     0522  0823               	movf	___lldiv@quotient+2,w
  3791     0523  00F5               	movwf	?___lldiv+2
  3792     0524  0822               	movf	___lldiv@quotient+1,w
  3793     0525  00F4               	movwf	?___lldiv+1
  3794     0526  0821               	movf	___lldiv@quotient,w
  3795     0527  00F3               	movwf	?___lldiv
  3796     0528                     l424:
  3797     0528  0008               	return
  3798     0529                     __end_of___lldiv:
  3799                           
  3800                           	psect	text16
  3801     0721                     __ptext16:	
  3802 ;; *************** function _UART_GetC *****************
  3803 ;; Defined at:
  3804 ;;		line 46 in file "USARTmodl.c"
  3805 ;; Parameters:    Size  Location     Type
  3806 ;;		None
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;		None
  3809 ;; Return value:  Size  Location     Type
  3810 ;;                  1    wreg      unsigned char 
  3811 ;; Registers used:
  3812 ;;		wreg
  3813 ;; Tracked objects:
  3814 ;;		On entry : 0/0
  3815 ;;		On exit  : 0/0
  3816 ;;		Unchanged: 0/0
  3817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3818 ;;      Params:         0       0       0       0       0
  3819 ;;      Locals:         0       0       0       0       0
  3820 ;;      Temps:          0       0       0       0       0
  3821 ;;      Totals:         0       0       0       0       0
  3822 ;;Total ram usage:        0 bytes
  3823 ;; Hardware stack levels used: 1
  3824 ;; Hardware stack levels required when called: 1
  3825 ;; This function calls:
  3826 ;;		Nothing
  3827 ;; This function is called by:
  3828 ;;		_main
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           
  3832     0721                     _UART_GetC:	
  3833                           ;psect for function _UART_GetC
  3834                           
  3835     0721                     l1935:	
  3836                           ;incstack = 0
  3837                           ; Regs used in _UART_GetC: [wreg]
  3838                           
  3839     0721                     l240:	
  3840                           ;USARTmodl.c: 48:   while (RCIF == 0) ;
  3841                           
  3842     0721  1283               	bcf	3,5	;RP0=0, select bank0
  3843     0722  1303               	bcf	3,6	;RP1=0, select bank0
  3844     0723  1E8C               	btfss	12,5	;volatile
  3845     0724  2F26               	goto	u1671
  3846     0725  2F27               	goto	u1670
  3847     0726                     u1671:
  3848     0726  2F21               	goto	l240
  3849     0727                     u1670:
  3850     0727                     l242:
  3851                           
  3852                           ;USARTmodl.c: 49:   if (OERR)
  3853     0727  1C98               	btfss	24,1	;volatile
  3854     0728  2F2A               	goto	u1681
  3855     0729  2F2B               	goto	u1680
  3856     072A                     u1681:
  3857     072A  2F2D               	goto	l1939
  3858     072B                     u1680:
  3859     072B                     l1937:
  3860                           
  3861                           ;USARTmodl.c: 50:   {;USARTmodl.c: 51:     CREN = 0;
  3862     072B  1218               	bcf	24,4	;volatile
  3863                           
  3864                           ;USARTmodl.c: 52:     CREN = 1;
  3865     072C  1618               	bsf	24,4	;volatile
  3866     072D                     l1939:
  3867                           
  3868                           ;USARTmodl.c: 54:   return RCREG;
  3869     072D  081A               	movf	26,w	;volatile
  3870     072E                     l244:
  3871     072E  0008               	return
  3872     072F                     __end_of_UART_GetC:
  3873                           
  3874                           	psect	text17
  3875     073B                     __ptext17:	
  3876 ;; *************** function _UART_Data_Ready *****************
  3877 ;; Defined at:
  3878 ;;		line 41 in file "USARTmodl.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;		None
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;		None
  3883 ;; Return value:  Size  Location     Type
  3884 ;;		None               void
  3885 ;; Registers used:
  3886 ;;		status,2, status,0
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3892 ;;      Params:         0       0       0       0       0
  3893 ;;      Locals:         0       0       0       0       0
  3894 ;;      Temps:          0       0       0       0       0
  3895 ;;      Totals:         0       0       0       0       0
  3896 ;;Total ram usage:        0 bytes
  3897 ;; Hardware stack levels used: 1
  3898 ;; Hardware stack levels required when called: 1
  3899 ;; This function calls:
  3900 ;;		Nothing
  3901 ;; This function is called by:
  3902 ;;		_main
  3903 ;; This function uses a non-reentrant model
  3904 ;;
  3905                           
  3906     073B                     _UART_Data_Ready:	
  3907                           ;psect for function _UART_Data_Ready
  3908                           
  3909     073B                     l1927:	
  3910                           ;incstack = 0
  3911                           ; Regs used in _UART_Data_Ready: [status]
  3912                           
  3913                           
  3914                           ;USARTmodl.c: 43:   return RCIF;
  3915     073B  1283               	bcf	3,5	;RP0=0, select bank0
  3916     073C  1303               	bcf	3,6	;RP1=0, select bank0
  3917     073D  1A8C               	btfsc	12,5	;volatile
  3918     073E  2F40               	goto	u1661
  3919     073F  2F41               	goto	u1660
  3920     0740                     u1661:
  3921     0740  2F43               	goto	l1931
  3922     0741                     u1660:
  3923     0741                     l1929:
  3924     0741  1003               	clrc
  3925     0742  2F44               	goto	l237
  3926     0743                     l1931:
  3927     0743  1403               	setc
  3928     0744                     l237:
  3929     0744  0008               	return
  3930     0745                     __end_of_UART_Data_Ready:
  3931                           
  3932                           	psect	text18
  3933     06D0                     __ptext18:	
  3934 ;; *************** function _isr *****************
  3935 ;; Defined at:
  3936 ;;		line 34 in file "HC05BT_prueba.c"
  3937 ;; Parameters:    Size  Location     Type
  3938 ;;		None
  3939 ;; Auto vars:     Size  Location     Type
  3940 ;;		None
  3941 ;; Return value:  Size  Location     Type
  3942 ;;                  1    wreg      void 
  3943 ;; Registers used:
  3944 ;;		wreg, status,2, status,0
  3945 ;; Tracked objects:
  3946 ;;		On entry : 0/0
  3947 ;;		On exit  : 0/0
  3948 ;;		Unchanged: 0/0
  3949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3950 ;;      Params:         0       0       0       0       0
  3951 ;;      Locals:         0       0       0       0       0
  3952 ;;      Temps:          3       0       0       0       0
  3953 ;;      Totals:         3       0       0       0       0
  3954 ;;Total ram usage:        3 bytes
  3955 ;; Hardware stack levels used: 1
  3956 ;; This function calls:
  3957 ;;		Nothing
  3958 ;; This function is called by:
  3959 ;;		Interrupt level 1
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963     06D0                     _isr:	
  3964                           ;psect for function _isr
  3965                           
  3966     06D0                     i1l1955:
  3967                           
  3968                           ;HC05BT_prueba.c: 36:     if(PIR1bits.ADIF){
  3969     06D0  1283               	bcf	3,5	;RP0=0, select bank0
  3970     06D1  1303               	bcf	3,6	;RP1=0, select bank0
  3971     06D2  1F0C               	btfss	12,6	;volatile
  3972     06D3  2ED5               	goto	u170_21
  3973     06D4  2ED6               	goto	u170_20
  3974     06D5                     u170_21:
  3975     06D5  2EE2               	goto	i1l173
  3976     06D6                     u170_20:
  3977     06D6                     i1l1957:
  3978                           
  3979                           ;HC05BT_prueba.c: 38:          if (ADCON0bits.CHS ==0)
  3980     06D6  0C1F               	rrf	31,w	;volatile
  3981     06D7  00F0               	movwf	??_isr
  3982     06D8  0C70               	rrf	??_isr,w
  3983     06D9  390F               	andlw	15
  3984     06DA  3A00               	xorlw	0
  3985     06DB  1D03               	skipz
  3986     06DC  2EDE               	goto	u171_21
  3987     06DD  2EDF               	goto	u171_20
  3988     06DE                     u171_21:
  3989     06DE  2EE1               	goto	i1l1961
  3990     06DF                     u171_20:
  3991     06DF                     i1l1959:
  3992                           
  3993                           ;HC05BT_prueba.c: 39:           valpot = ADRESH;
  3994     06DF  081E               	movf	30,w	;volatile
  3995     06E0  00DA               	movwf	_valpot
  3996     06E1                     i1l1961:
  3997                           
  3998                           ;HC05BT_prueba.c: 40:          PIR1bits.ADIF =0;
  3999     06E1  130C               	bcf	12,6	;volatile
  4000     06E2                     i1l173:
  4001     06E2  0872               	movf	??_isr+2,w
  4002     06E3  008A               	movwf	10
  4003     06E4  0E71               	swapf	??_isr+1,w
  4004     06E5  0083               	movwf	3
  4005     06E6  0EFE               	swapf	btemp,f
  4006     06E7  0E7E               	swapf	btemp,w
  4007     06E8  0009               	retfie
  4008     06E9                     __end_of_isr:
  4009     007E                     btemp	set	126	;btemp
  4010     007E                     wtemp0	set	126
  4011                           
  4012                           	psect	intentry
  4013     0004                     __pintentry:	
  4014                           ;incstack = 0
  4015                           ; Regs used in _isr: [wreg+status,2+status,0]
  4016                           
  4017     0004                     interrupt_function:
  4018     007E                     saved_w	set	btemp
  4019     0004  00FE               	movwf	btemp
  4020     0005  0E03               	swapf	3,w
  4021     0006  00F1               	movwf	??_isr+1
  4022     0007  080A               	movf	10,w
  4023     0008  00F2               	movwf	??_isr+2
  4024     0009  120A  118A  2ED0   	ljmp	_isr
  4025                           
  4026                           	psect	idloc
  4027                           
  4028                           ;Config register IDLOC0 @ 0x2000
  4029                           ;	unspecified, using default values
  4030     2000                     	org	8192
  4031     2000  3FFF               	dw	16383
  4032                           
  4033                           ;Config register IDLOC1 @ 0x2001
  4034                           ;	unspecified, using default values
  4035     2001                     	org	8193
  4036     2001  3FFF               	dw	16383
  4037                           
  4038                           ;Config register IDLOC2 @ 0x2002
  4039                           ;	unspecified, using default values
  4040     2002                     	org	8194
  4041     2002  3FFF               	dw	16383
  4042                           
  4043                           ;Config register IDLOC3 @ 0x2003
  4044                           ;	unspecified, using default values
  4045     2003                     	org	8195
  4046     2003  3FFF               	dw	16383
  4047                           
  4048                           	psect	config
  4049                           
  4050                           ;Config register CONFIG1 @ 0x2007
  4051                           ;	Oscillator Selection bits
  4052                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  4053                           ;	Watchdog Timer Enable bit
  4054                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4055                           ;	Power-up Timer Enable bit
  4056                           ;	PWRTE = OFF, PWRT disabled
  4057                           ;	RE3/MCLR pin function select bit
  4058                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4059                           ;	Code Protection bit
  4060                           ;	CP = OFF, Program memory code protection is disabled
  4061                           ;	Data Code Protection bit
  4062                           ;	CPD = OFF, Data memory code protection is disabled
  4063                           ;	Brown Out Reset Selection bits
  4064                           ;	BOREN = OFF, BOR disabled
  4065                           ;	Internal External Switchover bit
  4066                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4067                           ;	Fail-Safe Clock Monitor Enabled bit
  4068                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4069                           ;	Low Voltage Programming Enable bit
  4070                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  4071                           ;	In-Circuit Debugger Mode bit
  4072                           ;	DEBUG = 0x1, unprogrammed default
  4073     2007                     	org	8199
  4074     2007  38D5               	dw	14549
  4075                           
  4076                           ;Config register CONFIG2 @ 0x2008
  4077                           ;	Brown-out Reset Selection bit
  4078                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4079                           ;	Flash Program Memory Self Write Enable bits
  4080                           ;	WRT = OFF, Write protection off
  4081     2008                     	org	8200
  4082     2008  3FFF               	dw	16383

Data Sizes:
    Strings     30
    Constant    25
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     56      59
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_6(CODE[7]), STR_4(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 9
		 -> main@text(BANK0[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Print@data	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_7(CODE[23]), STR_5(CODE[3]), main@text(BANK0[9]), STR_3(CODE[3]), 
		 -> STR_2(CODE[3]), message(CODE[15]), STR_1(CODE[23]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    _preguntas->_UART_Print
    _UART_Print->_UART_PutC
    _map->___fltol
    ___xxtofl->___wmul
    ___lwdiv->___wmul
    _UART_Init->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_map
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _map->___xxtofl
    ___xxtofl->___lwdiv
    _UART_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0    6921
                                             41 BANK0     15    15      0
                    _UART_Data_Ready
                          _UART_GetC
                          _UART_Init
                         _UART_Print
                          _UART_PutC
                                _map
                          _preguntas
                              _setup
                            _sprintf
                          _uart_read
 ---------------------------------------------------------------------------------
 (1) _uart_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    20      3    2187
                                             11 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              9 COMMON     1     1      0
                                              7 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _preguntas                                            0     0      0     796
                         _UART_Print
 ---------------------------------------------------------------------------------
 (2) _UART_Print                                           3     1      2     796
                                              4 COMMON     3     1      2
                          _UART_PutC
 ---------------------------------------------------------------------------------
 (3) _UART_PutC                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _map                                                 20    10     10    2122
                                             21 BANK0     20    10     10
                            ___fltol
                            ___lwdiv
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              7 BANK0     14    10      4
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                              0 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                              3 COMMON     8     4      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           10     6      4     852
                                              6 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              3 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _UART_GetC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Data_Ready
   _UART_GetC
   _UART_Init
     ___lldiv
   _UART_Print
     _UART_PutC
   _UART_PutC
   _map
     ___fltol
     ___lwdiv
       ___wmul (ARG)
     ___wmul
     ___xxtofl
       ___lwdiv (ARG)
       ___wmul (ARG)
   _preguntas
     _UART_Print
   _setup
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _uart_read

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      46       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     38      3B       5       73.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      46      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Aug 14 15:53:23 2023

                      _a 0058                        pc 0002                       fsr 0004  
    ___wmul@multiplicand 0075                      l200 070E                      l203 058E  
                    l230 0448                      l240 0721                      l242 0727  
                    l250 073A                      l244 072E                      l228 0433  
                    l237 0744                      l229 0444                      l247 0730  
                    l424 0528                      l256 0682                      l354 0032  
                    l178 06FB                      l197 06AA                      l390 06CF  
                    l384 019D                      l660 061B                      l388 06B7  
                    l581 04AB                      l821 0313                      l574 04C0  
                    l670 0657                      l823 03A8                      l584 04C0  
                    l841 0720                      l834 0372                      l835 037E  
                    _GIE 005F                      _RD3 0043                      _RD4 0044  
                    _RD5 0045                      _RD6 0046                      _RD7 0047  
                    u940 0736                      u941 0735                      u950 0682  
                    u951 0681                      u960 0717                      u961 0716  
                    u970 071D                      u971 071C                      u980 06B1  
                    u981 06B0                      u995 06B8                      _map 0529  
                    _isr 06D0                      fsr0 0004                      indf 0000  
           ___fltol@exp1 0021                     l2001 026F                     l2011 0299  
                   l2003 0278                     l2101 00B4                     l2013 02A4  
                   l2005 0286                     l2031 02E5                     l2007 028F  
                   l2017 02AB                     l2009 0294                     l2025 02BB  
                   l2019 02B6                     l2027 02D4                     l2029 02DD  
                   l1601 04C1                     l1611 04E7                     l1603 04D3  
                   l1621 051A                     l1613 04F0                     l1605 04D6  
                   l1701 0636                     l1615 0502                     l1607 04DF  
                   l1623 0520                     l1703 0640                     l1617 0510  
                   l1609 04E3                     l1641 047B                     l1633 045D  
                   l1721 031B                     l1713 02F2                     l1801 06A8  
                   l1705 0646                     l2097 02C9                     l1619 0511  
                   l1811 03E1                     l1651 0490                     l1643 047F  
                   l1635 0470                     l1627 0449                     l1731 0334  
                   l1715 02F7                     l1563 0730                     l1571 066B  
                   l1803 06A9                     l1707 064D                     l2099 0045  
                   l1813 03EE                     l1805 03A9                     l1661 04B0  
                   l1653 0499                     l1637 0471                     l1629 0454  
                   l1741 035D                     l1733 033B                     l1725 0324  
                   l1717 02FB                     l1565 0736                     l1573 066F  
                   l1709 0653                     l1581 071D                     l1901 0177  
                   l1821 001B                     l1815 0420                     l1807 03DB  
                   l1663 04B5                     l1639 0479                     l1671 05E3  
                   l1591 06B1                     l1751 0396                     l1743 0368  
                   l1735 033F                     l1727 0327                     l1719 030B  
                   l1567 0658                     l1583 071F                     l1575 0710  
                   l1903 017C                     l1831 0033                     l1823 001E  
                   l1817 042D                     l1809 03DF                     l1649 0487  
                   l1681 0609                     l1673 05EA                     l1665 05D6  
                   l1593 06BE                     l1753 039B                     l1745 036C  
                   l1737 034D                     l1729 032B                     l1921 0529  
                   l1569 065A                     l1577 0711                     l1905 0180  
                   l1841 005E                     l1825 0024                     l1761 06E9  
                   l1931 0743                     l1819 043C                     l1659 04A0  
                   l1683 060A                     l1675 05EE                     l1667 05DA  
                   l1595 06C5                     l1587 06AB                     l1755 039F  
                   l1747 0376                     l1739 0356                     l1691 061C  
                   l1579 0717                     l1843 0073                     l1835 0037  
                   l1827 0029                     l1907 0189                     l1763 06EF  
                   l1685 0611                     l1677 05F2                     l1669 05E0  
                   l1597 06CB                     l1589 06AD                     l1757 03A0  
                   l1749 0380                     l1925 06FC                     l1781 0688  
                   l1693 0624                     l1909 0199                     l1845 0086  
                   l1853 00A0                     l1837 004A                     l1829 002E  
                   l1765 06F3                     l1773 06FA                     l1927 073B  
                   l1935 0721                     l1679 0603                     l1687 0617  
                   l1791 069B                     l1783 0690                     l1695 0627  
                   l1871 00EA                     l1855 00BC                     l1847 008A  
                   l1839 005A                     l1767 06F8                     l1929 0741  
                   l1937 072B                     l1793 069D                     l1785 0693  
                   l1777 0683                     l1697 062E                     l1881 010F  
                   l1873 00F0                     l1865 00CA                     l1857 00C4  
                   l1849 009B                     l1939 072D                     l1795 069E  
                   l1787 0694                     l1779 0687                     l1699 0632  
                   l1891 0131                     l1883 0115                     l1875 00FB  
                   l1859 00C8                     l1971 01C5                     l1963 019E  
                   l1797 06A2                     l1789 0695                     l1893 0136  
                   l1885 011A                     l1877 0107                     l1869 00E6  
                   l1981 01FC                     l1973 01CE                     l1965 01A3  
                   ?_map 0035                     l1799 06A5                     l1895 013A  
                   l1887 011E                     l1879 010B                     l1991 0226  
                   l1983 01FF                     l1975 01DC                     l1967 01A7  
                   l1897 0146                     l1889 012B                     l1993 0234  
                   l1985 0205                     l1977 01E5                     l1969 01B6  
                   l1899 0149                     l1995 023D                     l1987 0206  
                   l1979 01F3                     l1997 024D                     l1989 021D  
                   l1999 024F                     ?_isr 0070                     STR_1 05B8  
                   STR_2 05CC                     STR_3 05CC                     STR_4 05CF  
                   STR_5 05CC                     STR_6 05CF                     STR_7 05B8  
                   _CREN 00C4                     u1010 06CB                     u1011 06CA  
                   u1020 04D3                     u1100 046B                     u1021 04D2  
                   u1005 06BF                     u1110 047F                     u1111 047E  
                   u1040 04E7                     u1120 0486                     u1041 04E6  
                   u1121 0485                     u1105 0466                     u1210 05F2  
                   u1035 04D8                     u1211 05F1                     u1060 0502  
                   u1140 0498                     u1061 0501                     u1141 0497  
                   u1205 05E4                     u1150 049F                     u1230 0603  
                   u1310 0653                     u1055 04E9                     u1151 049E  
                   u1135 0488                     u1231 0602                     u1311 0652  
                   u1080 0520                     u1400 036C                     u1320 02F7  
                   u1081 051F                     u1065 04FE                     u1225 05F3  
                   u1401 036B                     u1321 02F6                     u1305 0647  
                   u1170 04B0                     u1090 0454                     u1250 0617  
                   u1410 0372                     u1330 02FB                     u1075 0512  
                   u1171 04AF                     u1091 0453                     u1251 0616  
                   u1235 05FF                     u1411 0371                     u1331 02FA  
                   u1500 03EE                     u1180 04B5                     u1420 0376  
                   u1340 031B                     u1260 0624                     u1501 03ED  
                   u1181 04B4                     u1165 04A2                     u1245 060B  
                   u1421 0375                     u1341 031A                     u1261 0623  
                   u1510 03FE                     u1190 05E0                     u1430 038B  
                   u1191 05DF                     u1520 042D                     u1440 039B  
                   u1360 033A                     u1280 0636                     u1600 0115  
                   u1521 042C                     u1505 03EA                     u1441 039A  
                   u1361 0339                     u1281 0635                     u1601 0114  
                   u1450 039F                     u1290 0640                     u1610 012A  
                   u1530 0024                     u1515 03F9                     u1451 039E  
                   u1435 0386                     u1355 032C                     u1291 063F  
                   u1275 0628                     u1611 0129                     u1531 0023  
                   u1380 035C                     u1620 0131                     u1540 005A  
                   u1460 06EF                     u1525 0429                     u1381 035B  
                   u1621 0130                     u1541 0059                     u1461 06EE  
                   u1630 0146                     u1550 009A                     u1470 06F3  
                   u1375 034E                     u1295 063C                     u1631 0145  
                   u1551 0099                     u1471 06F2                     u1480 03B9  
                   u1640 0189                     u1560 00E5                     u1720 0205  
                   u1641 0188                     u1561 00E4                     u1721 0204  
                   u1490 03DF                     u1650 0199                     u1570 00F0  
                   u1730 02DD                     u1491 03DE                     u1395 0361  
                   u1651 0198                     u1571 00EF                     u1731 02DC  
                   u1660 0741                     u1580 00FB                     u1661 0740  
                   u1485 03B4                     u1581 00FA                     u1565 00E1  
                   u1670 0727                     u1590 010F                     u1671 0726  
                   u1591 010E                     u1807 02B1                     u1680 072B  
                   u1681 072A                     u1817 06A0                     u1585 00F7  
                   u1747 01BE                     u1757 01D6                     u1767 01ED  
                   u1777 0216                     u1787 0245                     _PEIE 005E  
                   u1797 029F                     _RCIF 0065                     _OERR 00C1  
                   _TRMT 04C1                     _main 019E                     btemp 007E  
                   start 000C                    ??_map 003F                    ??_isr 0070  
          ___fltol@sign1 0020                    ?_main 0070          __end_of___fltol 04C1  
                  _ANSEL 0188          __end_of___lldiv 0529          __end_of___lwdiv 061C  
                  i1l173 06E2          __end_of___lwmod 0658                    _RCREG 001A  
                  _RCSTA 0018                    _SPBRG 0099                    _PORTD 0008  
                  _TRISA 0085                    _TRISD 0088                    _SSPIE 0463  
                  _SSPIF 0063                    _TXREG 0019                    _TXSTA 0098  
            ?_UART_Print 0074          __end_of_dpowers 05A9          __end_of_isdigit 0721  
        __end_of_message 05B8                    _setup 0683                    main@c 0057  
                  pclath 000A             main@varvolt2 0055                    status 0003  
                  wtemp0 007E          __end_of_sprintf 019E          __initialization 000F  
           __end_of_main 02EF                   ??_main 0049                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   i1l1961 06E1  
                 i1l1955 06D0                   i1l1957 06D6                   i1l1959 06DF  
                 u170_20 06D6                   u170_21 06D5                   u171_20 06DF  
                 u171_21 06DE                   _OSCCON 008F                   _SSPADD 0093  
                 _TRISC3 043B                   _TRISC4 043C                   _SSPCON 0014  
                 _SSPBUF 0013         __end_of___xxtofl 03A9        __end_of_UART_GetC 072F  
      __end_of_UART_Init 0449        __end_of_UART_PutC 073B                   ___wmul 06AB  
              ??___fltol 0077                ??___lldiv 0020                ??___lwdiv 0079  
              ??___lwmod 0079                   _valpot 005A                ??_isdigit 0073  
                 saved_w 007E                ??_sprintf 002E             ___xxtofl@arg 0031  
           ___xxtofl@exp 0030             ___xxtofl@val 0027  __end_of__initialization 0014  
             ___fltol@f1 0073           __pcstackCOMMON 0070            __end_of_setup 06AB  
           sprintf@width 0037                  ??_setup 0073               __pbssBANK0 0058  
             __pmaintext 019E                  ?___wmul 0073               __pintentry 0004  
              ?___xxtofl 0027             ??_UART_Print 0076                  _SSPCON2 0091  
                _SSPSTAT 0094               __stringtab 058F       __end_of_UART_Print 0683  
                ___fltol 0449                  ___lldiv 04C1                  ___lwdiv 05D6  
                ___lwmod 061C                  __ptext1 06E9                  __ptext2 0018  
                __ptext3 070F                  __ptext4 061C                  __ptext5 0683  
                __ptext6 06FC                  __ptext7 0658                  __ptext8 072F  
                __ptext9 0529                  _dpowers 059F                  _isdigit 070F  
             ??___xxtofl 002B                  _message 05A9              UART_Print@i 0076  
         UART_Print@data 0074                  _sprintf 0018     end_of_initialization 0014  
      __end_of_uart_read 06FC        __end_of_preguntas 070F          ___lldiv@divisor 0073  
        ___lldiv@counter 0025                _RCSTAbits 0018        ??_UART_Data_Ready 0073  
              _UART_GetC 0721                _UART_Init 03A9                _UART_PutC 072F  
              _PORTDbits 0008       UART_Init@baud_rate 0026            ___xxtofl@sign 002F  
              _TRISCbits 0087           __end_of___wmul 06D0               ?_UART_GetC 0070  
             ?_UART_Init 0026               ?_UART_PutC 0070      start_initialization 000F  
            __end_of_map 058F              __end_of_isr 06E9                 ??___wmul 0077  
              ___latbits 0002            __pcstackBANK0 0020              sprintf@flag 0032  
            sprintf@prec 0035         ___lwdiv@dividend 0022                 ?___fltol 0073  
               ?___lldiv 0073                 ?___lwdiv 0020                 ?___lwmod 0027  
            ??_UART_GetC 0073              ??_UART_Init 002A              ??_UART_PutC 0073  
              __pstrings 058F                 ?_isdigit 0070            UART_PutC@data 0073  
       ___lwdiv@quotient 0024                 ?_sprintf 002B               UART_Init@n 002E  
      interrupt_function 0004           ___wmul@product 0077          _UART_Data_Ready 073B  
               _PIE1bits 008C                 _PIR1bits 000C                _uart_read 06E9  
              _preguntas 06FC                map@maxsal 003D                map@maxval 0039  
              map@minsal 003B                map@minval 0037               _ADCON0bits 001F  
            __stringbase 059E               _ADCON1bits 009F        ___wmul@multiplier 0073  
              map@valmap 0045                map@varmap 0035               ?_uart_read 0070  
             ?_preguntas 0070       __end_of__stringtab 059F              _isdigit$958 0073  
             sprintf@val 0033                 ___xxtofl 02EF          ___lwdiv@divisor 0020  
        ___lwdiv@counter 0026                 __ptext10 02EF                 __ptext11 06AB  
               __ptext12 05D6                 __ptext13 0449                 __ptext14 03A9  
               __ptext15 04C1                 __ptext16 0721                 __ptext17 073B  
               __ptext18 06D0  __end_of_UART_Data_Ready 0745                 main@text 004C  
             _INTCONbits 000B                 isdigit@c 0074                 intlevel1 0000  
              sprintf@ap 0031                sprintf@sp 0036         ___lwmod@dividend 0029  
       ___lldiv@dividend 0077                stringcode 0599              ??_uart_read 0073  
            ??_preguntas 0077                 sprintf@c 0039                 sprintf@f 002B  
       ___lldiv@quotient 0021          ___lwmod@divisor 0027          ___lwmod@counter 0079  
               stringdir 0599                 stringtab 058F               _UART_Print 0658  
            _SSPCON2bits 0091         ?_UART_Data_Ready 0070  
