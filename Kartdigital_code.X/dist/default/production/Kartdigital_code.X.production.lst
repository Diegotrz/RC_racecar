

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Aug 13 00:58:02 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32     0000                     
    33                           ; Generated 09/02/2023 GMT
    34                           ; 
    35                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67     0000                     	;# 
    68     0001                     	;# 
    69     0002                     	;# 
    70     0003                     	;# 
    71     0004                     	;# 
    72     0005                     	;# 
    73     0006                     	;# 
    74     0007                     	;# 
    75     0008                     	;# 
    76     0009                     	;# 
    77     000A                     	;# 
    78     000B                     	;# 
    79     000C                     	;# 
    80     000D                     	;# 
    81     000E                     	;# 
    82     000E                     	;# 
    83     000F                     	;# 
    84     0010                     	;# 
    85     0011                     	;# 
    86     0012                     	;# 
    87     0013                     	;# 
    88     0014                     	;# 
    89     0015                     	;# 
    90     0015                     	;# 
    91     0016                     	;# 
    92     0017                     	;# 
    93     0018                     	;# 
    94     0019                     	;# 
    95     001A                     	;# 
    96     001B                     	;# 
    97     001B                     	;# 
    98     001C                     	;# 
    99     001D                     	;# 
   100     001E                     	;# 
   101     001F                     	;# 
   102     0081                     	;# 
   103     0085                     	;# 
   104     0086                     	;# 
   105     0087                     	;# 
   106     0088                     	;# 
   107     0089                     	;# 
   108     008C                     	;# 
   109     008D                     	;# 
   110     008E                     	;# 
   111     008F                     	;# 
   112     0090                     	;# 
   113     0091                     	;# 
   114     0092                     	;# 
   115     0093                     	;# 
   116     0093                     	;# 
   117     0093                     	;# 
   118     0094                     	;# 
   119     0095                     	;# 
   120     0096                     	;# 
   121     0097                     	;# 
   122     0098                     	;# 
   123     0099                     	;# 
   124     009A                     	;# 
   125     009B                     	;# 
   126     009C                     	;# 
   127     009D                     	;# 
   128     009E                     	;# 
   129     009F                     	;# 
   130     0105                     	;# 
   131     0107                     	;# 
   132     0108                     	;# 
   133     0109                     	;# 
   134     010C                     	;# 
   135     010C                     	;# 
   136     010D                     	;# 
   137     010E                     	;# 
   138     010F                     	;# 
   139     0185                     	;# 
   140     0187                     	;# 
   141     0188                     	;# 
   142     0189                     	;# 
   143     018C                     	;# 
   144     018D                     	;# 
   145     0000                     	;# 
   146     0001                     	;# 
   147     0002                     	;# 
   148     0003                     	;# 
   149     0004                     	;# 
   150     0005                     	;# 
   151     0006                     	;# 
   152     0007                     	;# 
   153     0008                     	;# 
   154     0009                     	;# 
   155     000A                     	;# 
   156     000B                     	;# 
   157     000C                     	;# 
   158     000D                     	;# 
   159     000E                     	;# 
   160     000E                     	;# 
   161     000F                     	;# 
   162     0010                     	;# 
   163     0011                     	;# 
   164     0012                     	;# 
   165     0013                     	;# 
   166     0014                     	;# 
   167     0015                     	;# 
   168     0015                     	;# 
   169     0016                     	;# 
   170     0017                     	;# 
   171     0018                     	;# 
   172     0019                     	;# 
   173     001A                     	;# 
   174     001B                     	;# 
   175     001B                     	;# 
   176     001C                     	;# 
   177     001D                     	;# 
   178     001E                     	;# 
   179     001F                     	;# 
   180     0081                     	;# 
   181     0085                     	;# 
   182     0086                     	;# 
   183     0087                     	;# 
   184     0088                     	;# 
   185     0089                     	;# 
   186     008C                     	;# 
   187     008D                     	;# 
   188     008E                     	;# 
   189     008F                     	;# 
   190     0090                     	;# 
   191     0091                     	;# 
   192     0092                     	;# 
   193     0093                     	;# 
   194     0093                     	;# 
   195     0093                     	;# 
   196     0094                     	;# 
   197     0095                     	;# 
   198     0096                     	;# 
   199     0097                     	;# 
   200     0098                     	;# 
   201     0099                     	;# 
   202     009A                     	;# 
   203     009B                     	;# 
   204     009C                     	;# 
   205     009D                     	;# 
   206     009E                     	;# 
   207     009F                     	;# 
   208     0105                     	;# 
   209     0107                     	;# 
   210     0108                     	;# 
   211     0109                     	;# 
   212     010C                     	;# 
   213     010C                     	;# 
   214     010D                     	;# 
   215     010E                     	;# 
   216     010F                     	;# 
   217     0185                     	;# 
   218     0187                     	;# 
   219     0188                     	;# 
   220     0189                     	;# 
   221     018C                     	;# 
   222     018D                     	;# 
   223     0000                     	;# 
   224     0001                     	;# 
   225     0002                     	;# 
   226     0003                     	;# 
   227     0004                     	;# 
   228     0005                     	;# 
   229     0006                     	;# 
   230     0007                     	;# 
   231     0008                     	;# 
   232     0009                     	;# 
   233     000A                     	;# 
   234     000B                     	;# 
   235     000C                     	;# 
   236     000D                     	;# 
   237     000E                     	;# 
   238     000E                     	;# 
   239     000F                     	;# 
   240     0010                     	;# 
   241     0011                     	;# 
   242     0012                     	;# 
   243     0013                     	;# 
   244     0014                     	;# 
   245     0015                     	;# 
   246     0015                     	;# 
   247     0016                     	;# 
   248     0017                     	;# 
   249     0018                     	;# 
   250     0019                     	;# 
   251     001A                     	;# 
   252     001B                     	;# 
   253     001B                     	;# 
   254     001C                     	;# 
   255     001D                     	;# 
   256     001E                     	;# 
   257     001F                     	;# 
   258     0081                     	;# 
   259     0085                     	;# 
   260     0086                     	;# 
   261     0087                     	;# 
   262     0088                     	;# 
   263     0089                     	;# 
   264     008C                     	;# 
   265     008D                     	;# 
   266     008E                     	;# 
   267     008F                     	;# 
   268     0090                     	;# 
   269     0091                     	;# 
   270     0092                     	;# 
   271     0093                     	;# 
   272     0093                     	;# 
   273     0093                     	;# 
   274     0094                     	;# 
   275     0095                     	;# 
   276     0096                     	;# 
   277     0097                     	;# 
   278     0098                     	;# 
   279     0099                     	;# 
   280     009A                     	;# 
   281     009B                     	;# 
   282     009C                     	;# 
   283     009D                     	;# 
   284     009E                     	;# 
   285     009F                     	;# 
   286     0105                     	;# 
   287     0107                     	;# 
   288     0108                     	;# 
   289     0109                     	;# 
   290     010C                     	;# 
   291     010C                     	;# 
   292     010D                     	;# 
   293     010E                     	;# 
   294     010F                     	;# 
   295     0185                     	;# 
   296     0187                     	;# 
   297     0188                     	;# 
   298     0189                     	;# 
   299     018C                     	;# 
   300     018D                     	;# 
   301     0000                     	;# 
   302     0001                     	;# 
   303     0002                     	;# 
   304     0003                     	;# 
   305     0004                     	;# 
   306     0005                     	;# 
   307     0006                     	;# 
   308     0007                     	;# 
   309     0008                     	;# 
   310     0009                     	;# 
   311     000A                     	;# 
   312     000B                     	;# 
   313     000C                     	;# 
   314     000D                     	;# 
   315     000E                     	;# 
   316     000E                     	;# 
   317     000F                     	;# 
   318     0010                     	;# 
   319     0011                     	;# 
   320     0012                     	;# 
   321     0013                     	;# 
   322     0014                     	;# 
   323     0015                     	;# 
   324     0015                     	;# 
   325     0016                     	;# 
   326     0017                     	;# 
   327     0018                     	;# 
   328     0019                     	;# 
   329     001A                     	;# 
   330     001B                     	;# 
   331     001B                     	;# 
   332     001C                     	;# 
   333     001D                     	;# 
   334     001E                     	;# 
   335     001F                     	;# 
   336     0081                     	;# 
   337     0085                     	;# 
   338     0086                     	;# 
   339     0087                     	;# 
   340     0088                     	;# 
   341     0089                     	;# 
   342     008C                     	;# 
   343     008D                     	;# 
   344     008E                     	;# 
   345     008F                     	;# 
   346     0090                     	;# 
   347     0091                     	;# 
   348     0092                     	;# 
   349     0093                     	;# 
   350     0093                     	;# 
   351     0093                     	;# 
   352     0094                     	;# 
   353     0095                     	;# 
   354     0096                     	;# 
   355     0097                     	;# 
   356     0098                     	;# 
   357     0099                     	;# 
   358     009A                     	;# 
   359     009B                     	;# 
   360     009C                     	;# 
   361     009D                     	;# 
   362     009E                     	;# 
   363     009F                     	;# 
   364     0105                     	;# 
   365     0107                     	;# 
   366     0108                     	;# 
   367     0109                     	;# 
   368     010C                     	;# 
   369     010C                     	;# 
   370     010D                     	;# 
   371     010E                     	;# 
   372     010F                     	;# 
   373     0185                     	;# 
   374     0187                     	;# 
   375     0188                     	;# 
   376     0189                     	;# 
   377     018C                     	;# 
   378     018D                     	;# 
   379     0000                     	;# 
   380     0001                     	;# 
   381     0002                     	;# 
   382     0003                     	;# 
   383     0004                     	;# 
   384     0005                     	;# 
   385     0006                     	;# 
   386     0007                     	;# 
   387     0008                     	;# 
   388     0009                     	;# 
   389     000A                     	;# 
   390     000B                     	;# 
   391     000C                     	;# 
   392     000D                     	;# 
   393     000E                     	;# 
   394     000E                     	;# 
   395     000F                     	;# 
   396     0010                     	;# 
   397     0011                     	;# 
   398     0012                     	;# 
   399     0013                     	;# 
   400     0014                     	;# 
   401     0015                     	;# 
   402     0015                     	;# 
   403     0016                     	;# 
   404     0017                     	;# 
   405     0018                     	;# 
   406     0019                     	;# 
   407     001A                     	;# 
   408     001B                     	;# 
   409     001B                     	;# 
   410     001C                     	;# 
   411     001D                     	;# 
   412     001E                     	;# 
   413     001F                     	;# 
   414     0081                     	;# 
   415     0085                     	;# 
   416     0086                     	;# 
   417     0087                     	;# 
   418     0088                     	;# 
   419     0089                     	;# 
   420     008C                     	;# 
   421     008D                     	;# 
   422     008E                     	;# 
   423     008F                     	;# 
   424     0090                     	;# 
   425     0091                     	;# 
   426     0092                     	;# 
   427     0093                     	;# 
   428     0093                     	;# 
   429     0093                     	;# 
   430     0094                     	;# 
   431     0095                     	;# 
   432     0096                     	;# 
   433     0097                     	;# 
   434     0098                     	;# 
   435     0099                     	;# 
   436     009A                     	;# 
   437     009B                     	;# 
   438     009C                     	;# 
   439     009D                     	;# 
   440     009E                     	;# 
   441     009F                     	;# 
   442     0105                     	;# 
   443     0107                     	;# 
   444     0108                     	;# 
   445     0109                     	;# 
   446     010C                     	;# 
   447     010C                     	;# 
   448     010D                     	;# 
   449     010E                     	;# 
   450     010F                     	;# 
   451     0185                     	;# 
   452     0187                     	;# 
   453     0188                     	;# 
   454     0189                     	;# 
   455     018C                     	;# 
   456     018D                     	;# 
   457                           
   458                           	psect	strings
   459     0580                     __pstrings:
   460     0580                     stringtab:
   461     0580                     __stringtab:
   462                           
   463                           ;	String table - string pointers are 1 byte each
   464     0580  1BFF               	btfsc	btemp+1,7
   465     0581  2D8A               	ljmp	stringcode
   466     0582  1383               	bcf	3,7
   467     0583  187F               	btfsc	btemp+1,0
   468     0584  1783               	bsf	3,7
   469     0585  0800               	movf	0,w
   470     0586  0A84               	incf	4,f
   471     0587  1903               	skipnz
   472     0588  0AFF               	incf	btemp+1,f
   473     0589  0008               	return
   474     058A                     stringcode:
   475     058A                     stringdir:
   476     058A  3005               	movlw	high stringdir
   477     058B  008A               	movwf	10
   478     058C  0804               	movf	4,w
   479     058D  0A84               	incf	4,f
   480     058E  0782               	addwf	2,f
   481     058F                     __stringbase:
   482     058F  3400               	retlw	0
   483     0590                     __end_of__stringtab:
   484     0590                     _dpowers:
   485     0590  3401               	retlw	1
   486     0591  3400               	retlw	0
   487     0592  340A               	retlw	10
   488     0593  3400               	retlw	0
   489     0594  3464               	retlw	100
   490     0595  3400               	retlw	0
   491     0596  34E8               	retlw	232
   492     0597  3403               	retlw	3
   493     0598  3410               	retlw	16
   494     0599  3427               	retlw	39
   495     059A                     __end_of_dpowers:
   496     059A                     _message:
   497     059A  3432               	retlw	50
   498     059B  342E               	retlw	46
   499     059C  3445               	retlw	69
   500     059D  346E               	retlw	110
   501     059E  3476               	retlw	118
   502     059F  3469               	retlw	105
   503     05A0  3461               	retlw	97
   504     05A1  3472               	retlw	114
   505     05A2  3420               	retlw	32
   506     05A3  3441               	retlw	65
   507     05A4  3473               	retlw	115
   508     05A5  3463               	retlw	99
   509     05A6  3469               	retlw	105
   510     05A7  3469               	retlw	105
   511     05A8  3400               	retlw	0
   512     05A9                     __end_of_message:
   513     0019                     _TXREG	set	25
   514     0018                     _RCSTA	set	24
   515     000B                     _INTCONbits	set	11
   516     0008                     _PORTD	set	8
   517     001A                     _RCREG	set	26
   518     0018                     _RCSTAbits	set	24
   519     001E                     _ADRESH	set	30
   520     001F                     _ADCON0bits	set	31
   521     000C                     _PIR1bits	set	12
   522     0008                     _PORTDbits	set	8
   523     0013                     _SSPBUF	set	19
   524     0014                     _SSPCON	set	20
   525     00C4                     _CREN	set	196
   526     00C1                     _OERR	set	193
   527     0065                     _RCIF	set	101
   528     0043                     _RD3	set	67
   529     0047                     _RD7	set	71
   530     0046                     _RD6	set	70
   531     0045                     _RD5	set	69
   532     0044                     _RD4	set	68
   533     0063                     _SSPIF	set	99
   534     005E                     _PEIE	set	94
   535     005F                     _GIE	set	95
   536     0098                     _TXSTA	set	152
   537     0099                     _SPBRG	set	153
   538     008C                     _PIE1bits	set	140
   539     009F                     _ADCON1bits	set	159
   540     0088                     _TRISD	set	136
   541     0085                     _TRISA	set	133
   542     008F                     _OSCCON	set	143
   543     0091                     _SSPCON2bits	set	145
   544     0087                     _TRISCbits	set	135
   545     0094                     _SSPSTAT	set	148
   546     0093                     _SSPADD	set	147
   547     0091                     _SSPCON2	set	145
   548     04C1                     _TRMT	set	1217
   549     0463                     _SSPIE	set	1123
   550     043C                     _TRISC4	set	1084
   551     043B                     _TRISC3	set	1083
   552     0189                     _ANSELH	set	393
   553     0188                     _ANSEL	set	392
   554     05A9                     STR_1:
   555     05A9  3431               	retlw	49	;'1'
   556     05AA  342E               	retlw	46	;'.'
   557     05AB  344C               	retlw	76	;'L'
   558     05AC  3465               	retlw	101	;'e'
   559     05AD  3465               	retlw	101	;'e'
   560     05AE  3472               	retlw	114	;'r'
   561     05AF  3420               	retlw	32	;' '
   562     05B0  3470               	retlw	112	;'p'
   563     05B1  346F               	retlw	111	;'o'
   564     05B2  3474               	retlw	116	;'t'
   565     05B3  3465               	retlw	101	;'e'
   566     05B4  346E               	retlw	110	;'n'
   567     05B5  3463               	retlw	99	;'c'
   568     05B6  3469               	retlw	105	;'i'
   569     05B7  346F               	retlw	111	;'o'
   570     05B8  346D               	retlw	109	;'m'
   571     05B9  3465               	retlw	101	;'e'
   572     05BA  3474               	retlw	116	;'t'
   573     05BB  3472               	retlw	114	;'r'
   574     05BC  346F               	retlw	111	;'o'
   575     05BD  340D               	retlw	13
   576     05BE  340A               	retlw	10
   577     05BF  3400               	retlw	0
   578     05C0                     STR_4:
   579     05C0  3425               	retlw	37	;'%'
   580     05C1  3430               	retlw	48	;'0'
   581     05C2  3433               	retlw	51	;'3'
   582     05C3  3475               	retlw	117	;'u'
   583     05C4  340D               	retlw	13
   584     05C5  340A               	retlw	10
   585     05C6  3400               	retlw	0
   586     05BD                     
   587                           	psect	cinit
   588     000F                     start_initialization:	
   589                           ; #config settings
   590                           
   591     000F                     __initialization:
   592                           
   593                           ; Clear objects allocated to BANK0
   594     000F  1283               	bcf	3,5	;RP0=0, select bank0
   595     0010  1303               	bcf	3,6	;RP1=0, select bank0
   596     0011  01D8               	clrf	__pbssBANK0& (0+127)
   597     0012  01D9               	clrf	(__pbssBANK0+1)& (0+127)
   598     0013  01DA               	clrf	(__pbssBANK0+2)& (0+127)
   599     0014                     end_of_initialization:	
   600                           ;End of C runtime variable initialization code
   601                           
   602     0014                     __end_of__initialization:
   603     0014  0183               	clrf	3
   604     0015  120A  118A  299E   	ljmp	_main	;jump to C main() function
   605                           
   606                           	psect	bssBANK0
   607     0058                     __pbssBANK0:
   608     0058                     _a:
   609     0058                     	ds	2
   610     005A                     _valpot:
   611     005A                     	ds	1
   612                           
   613                           	psect	cstackCOMMON
   614     0070                     __pcstackCOMMON:
   615     0070                     ?_UART_Data_Ready:
   616     0070                     ?_isdigit:	
   617                           ; 1 bit 
   618                           
   619     0070                     ?_setup:	
   620                           ; 1 bit 
   621                           
   622     0070                     ?_preguntas:	
   623                           ; 1 bytes @ 0x0
   624                           
   625     0070                     ?_UART_GetC:	
   626                           ; 1 bytes @ 0x0
   627                           
   628     0070                     ?_UART_PutC:	
   629                           ; 1 bytes @ 0x0
   630                           
   631     0070                     ?_isr:	
   632                           ; 1 bytes @ 0x0
   633                           
   634     0070                     ??_isr:	
   635                           ; 1 bytes @ 0x0
   636                           
   637     0070                     ?_uart_read:	
   638                           ; 1 bytes @ 0x0
   639                           
   640     0070                     ?_main:	
   641                           ; 1 bytes @ 0x0
   642                           
   643                           
   644                           ; 1 bytes @ 0x0
   645     0070                     	ds	3
   646     0073                     ??_setup:
   647     0073                     ??_UART_Data_Ready:	
   648                           ; 1 bytes @ 0x3
   649                           
   650     0073                     ??_UART_GetC:	
   651                           ; 1 bytes @ 0x3
   652                           
   653     0073                     ??_UART_PutC:	
   654                           ; 1 bytes @ 0x3
   655                           
   656     0073                     ??_isdigit:	
   657                           ; 1 bytes @ 0x3
   658                           
   659     0073                     ??_uart_read:	
   660                           ; 1 bytes @ 0x3
   661                           
   662     0073                     ?___wmul:	
   663                           ; 1 bytes @ 0x3
   664                           
   665     0073                     ?___lldiv:	
   666                           ; 2 bytes @ 0x3
   667                           
   668     0073                     ?___fltol:	
   669                           ; 4 bytes @ 0x3
   670                           
   671     0073                     UART_PutC@data:	
   672                           ; 4 bytes @ 0x3
   673                           
   674     0073                     _isdigit$958:	
   675                           ; 1 bytes @ 0x3
   676                           
   677     0073                     ___wmul@multiplier:	
   678                           ; 1 bytes @ 0x3
   679                           
   680     0073                     ___lldiv@divisor:	
   681                           ; 2 bytes @ 0x3
   682                           
   683     0073                     ___fltol@f1:	
   684                           ; 4 bytes @ 0x3
   685                           
   686                           
   687                           ; 4 bytes @ 0x3
   688     0073                     	ds	1
   689     0074                     ?_UART_Print:
   690     0074                     isdigit@c:	
   691                           ; 1 bytes @ 0x4
   692                           
   693     0074                     UART_Print@data:	
   694                           ; 1 bytes @ 0x4
   695                           
   696                           
   697                           ; 2 bytes @ 0x4
   698     0074                     	ds	1
   699     0075                     ___wmul@multiplicand:
   700                           
   701                           ; 2 bytes @ 0x5
   702     0075                     	ds	1
   703     0076                     ??_UART_Print:
   704     0076                     UART_Print@i:	
   705                           ; 1 bytes @ 0x6
   706                           
   707                           
   708                           ; 1 bytes @ 0x6
   709     0076                     	ds	1
   710     0077                     ??_preguntas:
   711     0077                     ??___wmul:	
   712                           ; 1 bytes @ 0x7
   713                           
   714     0077                     ??___fltol:	
   715                           ; 1 bytes @ 0x7
   716                           
   717     0077                     ___wmul@product:	
   718                           ; 1 bytes @ 0x7
   719                           
   720     0077                     ___lldiv@dividend:	
   721                           ; 2 bytes @ 0x7
   722                           
   723                           
   724                           ; 4 bytes @ 0x7
   725     0077                     	ds	2
   726     0079                     ??___lwdiv:
   727     0079                     ??___lwmod:	
   728                           ; 1 bytes @ 0x9
   729                           
   730     0079                     ___lwmod@counter:	
   731                           ; 1 bytes @ 0x9
   732                           
   733                           
   734                           ; 1 bytes @ 0x9
   735     0079                     	ds	2
   736                           
   737                           	psect	cstackBANK0
   738     0020                     __pcstackBANK0:
   739     0020                     ??___lldiv:
   740     0020                     ?___lwdiv:	
   741                           ; 1 bytes @ 0x0
   742                           
   743     0020                     ___fltol@sign1:	
   744                           ; 2 bytes @ 0x0
   745                           
   746     0020                     ___lwdiv@divisor:	
   747                           ; 1 bytes @ 0x0
   748                           
   749                           
   750                           ; 2 bytes @ 0x0
   751     0020                     	ds	1
   752     0021                     ___fltol@exp1:
   753     0021                     ___lldiv@quotient:	
   754                           ; 1 bytes @ 0x1
   755                           
   756                           
   757                           ; 4 bytes @ 0x1
   758     0021                     	ds	1
   759     0022                     ___lwdiv@dividend:
   760                           
   761                           ; 2 bytes @ 0x2
   762     0022                     	ds	2
   763     0024                     ___lwdiv@quotient:
   764                           
   765                           ; 2 bytes @ 0x4
   766     0024                     	ds	1
   767     0025                     ___lldiv@counter:
   768                           
   769                           ; 1 bytes @ 0x5
   770     0025                     	ds	1
   771     0026                     ?_UART_Init:
   772     0026                     ___lwdiv@counter:	
   773                           ; 1 bytes @ 0x6
   774                           
   775     0026                     UART_Init@baud_rate:	
   776                           ; 1 bytes @ 0x6
   777                           
   778                           
   779                           ; 4 bytes @ 0x6
   780     0026                     	ds	1
   781     0027                     ?___lwmod:
   782     0027                     ?___xxtofl:	
   783                           ; 2 bytes @ 0x7
   784                           
   785     0027                     ___lwmod@divisor:	
   786                           ; 4 bytes @ 0x7
   787                           
   788     0027                     ___xxtofl@val:	
   789                           ; 2 bytes @ 0x7
   790                           
   791                           
   792                           ; 4 bytes @ 0x7
   793     0027                     	ds	2
   794     0029                     ___lwmod@dividend:
   795                           
   796                           ; 2 bytes @ 0x9
   797     0029                     	ds	1
   798     002A                     ??_UART_Init:
   799                           
   800                           ; 1 bytes @ 0xA
   801     002A                     	ds	1
   802     002B                     ??___xxtofl:
   803     002B                     ?_sprintf:	
   804                           ; 1 bytes @ 0xB
   805                           
   806     002B                     sprintf@f:	
   807                           ; 2 bytes @ 0xB
   808                           
   809                           
   810                           ; 1 bytes @ 0xB
   811     002B                     	ds	3
   812     002E                     ??_sprintf:
   813     002E                     UART_Init@n:	
   814                           ; 1 bytes @ 0xE
   815                           
   816                           
   817                           ; 2 bytes @ 0xE
   818     002E                     	ds	1
   819     002F                     ___xxtofl@sign:
   820                           
   821                           ; 1 bytes @ 0xF
   822     002F                     	ds	1
   823     0030                     ___xxtofl@exp:
   824                           
   825                           ; 1 bytes @ 0x10
   826     0030                     	ds	1
   827     0031                     sprintf@ap:
   828     0031                     ___xxtofl@arg:	
   829                           ; 1 bytes @ 0x11
   830                           
   831                           
   832                           ; 4 bytes @ 0x11
   833     0031                     	ds	1
   834     0032                     sprintf@flag:
   835                           
   836                           ; 1 bytes @ 0x12
   837     0032                     	ds	1
   838     0033                     sprintf@val:
   839                           
   840                           ; 2 bytes @ 0x13
   841     0033                     	ds	2
   842     0035                     ?_map:
   843     0035                     sprintf@prec:	
   844                           ; 2 bytes @ 0x15
   845                           
   846     0035                     map@varmap:	
   847                           ; 1 bytes @ 0x15
   848                           
   849                           
   850                           ; 2 bytes @ 0x15
   851     0035                     	ds	1
   852     0036                     sprintf@sp:
   853                           
   854                           ; 1 bytes @ 0x16
   855     0036                     	ds	1
   856     0037                     map@minval:
   857     0037                     sprintf@width:	
   858                           ; 2 bytes @ 0x17
   859                           
   860                           
   861                           ; 2 bytes @ 0x17
   862     0037                     	ds	2
   863     0039                     sprintf@c:
   864     0039                     map@maxval:	
   865                           ; 1 bytes @ 0x19
   866                           
   867                           
   868                           ; 2 bytes @ 0x19
   869     0039                     	ds	2
   870     003B                     map@minsal:
   871                           
   872                           ; 2 bytes @ 0x1B
   873     003B                     	ds	2
   874     003D                     map@maxsal:
   875                           
   876                           ; 2 bytes @ 0x1D
   877     003D                     	ds	2
   878     003F                     ??_map:
   879                           
   880                           ; 1 bytes @ 0x1F
   881     003F                     	ds	6
   882     0045                     map@valmap:
   883                           
   884                           ; 4 bytes @ 0x25
   885     0045                     	ds	4
   886     0049                     ??_main:
   887                           
   888                           ; 1 bytes @ 0x29
   889     0049                     	ds	3
   890     004C                     main@text:
   891                           
   892                           ; 9 bytes @ 0x2C
   893     004C                     	ds	9
   894     0055                     main@varvolt2:
   895                           
   896                           ; 2 bytes @ 0x35
   897     0055                     	ds	2
   898     0057                     main@c:
   899                           
   900                           ; 1 bytes @ 0x37
   901     0057                     	ds	1
   902                           
   903                           	psect	maintext
   904     019E                     __pmaintext:	
   905 ;;
   906 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   907 ;;
   908 ;; *************** function _main *****************
   909 ;; Defined at:
   910 ;;		line 63 in file "HC05BT_prueba.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;		None
   913 ;; Auto vars:     Size  Location     Type
   914 ;;  c               1   55[BANK0 ] unsigned char 
   915 ;;  varvolt2        2   53[BANK0 ] unsigned int 
   916 ;;  text            9   44[BANK0 ] unsigned char [9]
   917 ;; Return value:  Size  Location     Type
   918 ;;                  1    wreg      void 
   919 ;; Registers used:
   920 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : B00/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   926 ;;      Params:         0       0       0       0       0
   927 ;;      Locals:         0      12       0       0       0
   928 ;;      Temps:          0       3       0       0       0
   929 ;;      Totals:         0      15       0       0       0
   930 ;;Total ram usage:       15 bytes
   931 ;; Hardware stack levels required when called: 4
   932 ;; This function calls:
   933 ;;		_UART_Data_Ready
   934 ;;		_UART_GetC
   935 ;;		_UART_Init
   936 ;;		_UART_Print
   937 ;;		_UART_PutC
   938 ;;		_map
   939 ;;		_preguntas
   940 ;;		_setup
   941 ;;		_sprintf
   942 ;;		_uart_read
   943 ;; This function is called by:
   944 ;;		Startup code after reset
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948     019E                     _main:	
   949                           ;psect for function _main
   950                           
   951     019E                     l1961:	
   952                           ;incstack = 0
   953                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   954                           
   955                           
   956                           ;HC05BT_prueba.c: 65:     setup();
   957     019E  120A  118A  2674  120A  118A  	fcall	_setup
   958     01A3                     l1963:
   959                           
   960                           ;HC05BT_prueba.c: 66:   OSCCON = 0x70;
   961     01A3  3070               	movlw	112
   962     01A4  1683               	bsf	3,5	;RP0=1, select bank1
   963     01A5  1303               	bcf	3,6	;RP1=0, select bank1
   964     01A6  008F               	movwf	15	;volatile
   965     01A7                     l1965:
   966                           
   967                           ;HC05BT_prueba.c: 68:   UART_Init(9600);
   968     01A7  3000               	movlw	0
   969     01A8  1283               	bcf	3,5	;RP0=0, select bank0
   970     01A9  1303               	bcf	3,6	;RP1=0, select bank0
   971     01AA  00A9               	movwf	UART_Init@baud_rate+3
   972     01AB  3000               	movlw	0
   973     01AC  00A8               	movwf	UART_Init@baud_rate+2
   974     01AD  3025               	movlw	37
   975     01AE  00A7               	movwf	UART_Init@baud_rate+1
   976     01AF  3080               	movlw	128
   977     01B0  00A6               	movwf	UART_Init@baud_rate
   978     01B1  120A  118A  239A  120A  118A  	fcall	_UART_Init
   979     01B6                     l1967:
   980                           
   981                           ;HC05BT_prueba.c: 70:   _delay((unsigned long)((2000)*(8000000/4000.0)));
   982     01B6  3015               	movlw	21
   983     01B7  1283               	bcf	3,5	;RP0=0, select bank0
   984     01B8  1303               	bcf	3,6	;RP1=0, select bank0
   985     01B9  00CB               	movwf	??_main+2
   986     01BA  304B               	movlw	75
   987     01BB  00CA               	movwf	??_main+1
   988     01BC  30BD               	movlw	189
   989     01BD  00C9               	movwf	??_main
   990     01BE                     u1747:
   991     01BE  0BC9               	decfsz	??_main,f
   992     01BF  29BE               	goto	u1747
   993     01C0  0BCA               	decfsz	??_main+1,f
   994     01C1  29BE               	goto	u1747
   995     01C2  0BCB               	decfsz	??_main+2,f
   996     01C3  29BE               	goto	u1747
   997     01C4  29C5               	nop2
   998     01C5                     l1969:
   999                           
  1000                           ;HC05BT_prueba.c: 72:   UART_Print("1.Leer potenciometro\r\n");
  1001     01C5  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1002     01C6  00F4               	movwf	UART_Print@data
  1003     01C7  3080               	movlw	128
  1004     01C8  00F5               	movwf	UART_Print@data+1
  1005     01C9  120A  118A  2649  120A  118A  	fcall	_UART_Print
  1006     01CE                     l1971:
  1007                           
  1008                           ;HC05BT_prueba.c: 74:   _delay((unsigned long)((1000)*(8000000/4000.0)));
  1009     01CE  300B               	movlw	11
  1010     01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1011     01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1012     01D1  00CB               	movwf	??_main+2
  1013     01D2  3026               	movlw	38
  1014     01D3  00CA               	movwf	??_main+1
  1015     01D4  305D               	movlw	93
  1016     01D5  00C9               	movwf	??_main
  1017     01D6                     u1757:
  1018     01D6  0BC9               	decfsz	??_main,f
  1019     01D7  29D6               	goto	u1757
  1020     01D8  0BCA               	decfsz	??_main+1,f
  1021     01D9  29D6               	goto	u1757
  1022     01DA  0BCB               	decfsz	??_main+2,f
  1023     01DB  29D6               	goto	u1757
  1024     01DC                     l1973:
  1025                           
  1026                           ;HC05BT_prueba.c: 76:   UART_Print(message);
  1027     01DC  300B               	movlw	(low ((_message-__stringbase)| (0+32768)))& (0+255)
  1028     01DD  00F4               	movwf	UART_Print@data
  1029     01DE  3080               	movlw	128
  1030     01DF  00F5               	movwf	UART_Print@data+1
  1031     01E0  120A  118A  2649  120A  118A  	fcall	_UART_Print
  1032     01E5                     l1975:
  1033                           
  1034                           ;HC05BT_prueba.c: 78:   _delay((unsigned long)((1000)*(8000000/4000.0)));
  1035     01E5  300B               	movlw	11
  1036     01E6  1283               	bcf	3,5	;RP0=0, select bank0
  1037     01E7  1303               	bcf	3,6	;RP1=0, select bank0
  1038     01E8  00CB               	movwf	??_main+2
  1039     01E9  3026               	movlw	38
  1040     01EA  00CA               	movwf	??_main+1
  1041     01EB  305D               	movlw	93
  1042     01EC  00C9               	movwf	??_main
  1043     01ED                     u1767:
  1044     01ED  0BC9               	decfsz	??_main,f
  1045     01EE  29ED               	goto	u1767
  1046     01EF  0BCA               	decfsz	??_main+1,f
  1047     01F0  29ED               	goto	u1767
  1048     01F1  0BCB               	decfsz	??_main+2,f
  1049     01F2  29ED               	goto	u1767
  1050     01F3                     l1977:
  1051                           
  1052                           ;HC05BT_prueba.c: 80:   UART_Print("\r\n");
  1053     01F3  302E               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
  1054     01F4  00F4               	movwf	UART_Print@data
  1055     01F5  3080               	movlw	128
  1056     01F6  00F5               	movwf	UART_Print@data+1
  1057     01F7  120A  118A  2649  120A  118A  	fcall	_UART_Print
  1058     01FC                     l1979:
  1059                           
  1060                           ;HC05BT_prueba.c: 81:  ADCON0bits.GO =1;
  1061     01FC  1283               	bcf	3,5	;RP0=0, select bank0
  1062     01FD  1303               	bcf	3,6	;RP1=0, select bank0
  1063     01FE  149F               	bsf	31,1	;volatile
  1064     01FF                     l1981:
  1065                           
  1066                           ;HC05BT_prueba.c: 84:   {;HC05BT_prueba.c: 85:        if (ADCON0bits.GO ==0)
  1067     01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1068     0200  1303               	bcf	3,6	;RP1=0, select bank0
  1069     0201  189F               	btfsc	31,1	;volatile
  1070     0202  2A04               	goto	u1721
  1071     0203  2A05               	goto	u1720
  1072     0204                     u1721:
  1073     0204  2A06               	goto	l1985
  1074     0205                     u1720:
  1075     0205                     l1983:
  1076                           
  1077                           ;HC05BT_prueba.c: 86:      ADCON0bits.GO =1;
  1078     0205  149F               	bsf	31,1	;volatile
  1079     0206                     l1985:
  1080                           
  1081                           ;HC05BT_prueba.c: 100:        a ++;
  1082     0206  3001               	movlw	1
  1083     0207  07D8               	addwf	_a,f
  1084     0208  1803               	skipnc
  1085     0209  0AD9               	incf	_a+1,f
  1086     020A  3000               	movlw	0
  1087     020B  07D9               	addwf	_a+1,f
  1088                           
  1089                           ;HC05BT_prueba.c: 101:        PORTD = a;
  1090     020C  0858               	movf	_a,w
  1091     020D  0088               	movwf	8	;volatile
  1092                           
  1093                           ;HC05BT_prueba.c: 102:        _delay((unsigned long)((700)*(8000000/4000.0)));
  1094     020E  3008               	movlw	8
  1095     020F  1283               	bcf	3,5	;RP0=0, select bank0
  1096     0210  1303               	bcf	3,6	;RP1=0, select bank0
  1097     0211  00CB               	movwf	??_main+2
  1098     0212  301B               	movlw	27
  1099     0213  00CA               	movwf	??_main+1
  1100     0214  3026               	movlw	38
  1101     0215  00C9               	movwf	??_main
  1102     0216                     u1777:
  1103     0216  0BC9               	decfsz	??_main,f
  1104     0217  2A16               	goto	u1777
  1105     0218  0BCA               	decfsz	??_main+1,f
  1106     0219  2A16               	goto	u1777
  1107     021A  0BCB               	decfsz	??_main+2,f
  1108     021B  2A16               	goto	u1777
  1109     021C  0000               	nop
  1110     021D                     l1987:
  1111                           
  1112                           ;HC05BT_prueba.c: 103:        UART_Print ("\r\n");
  1113     021D  302E               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
  1114     021E  00F4               	movwf	UART_Print@data
  1115     021F  3080               	movlw	128
  1116     0220  00F5               	movwf	UART_Print@data+1
  1117     0221  120A  118A  2649  120A  118A  	fcall	_UART_Print
  1118     0226                     l1989:
  1119                           
  1120                           ;HC05BT_prueba.c: 104:             sprintf(text, "%03u\r\n", a);
  1121     0226  3031               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1122     0227  1283               	bcf	3,5	;RP0=0, select bank0
  1123     0228  1303               	bcf	3,6	;RP1=0, select bank0
  1124     0229  00AB               	movwf	sprintf@f
  1125     022A  0859               	movf	_a+1,w
  1126     022B  00AD               	movwf	?_sprintf+2
  1127     022C  0858               	movf	_a,w
  1128     022D  00AC               	movwf	?_sprintf+1
  1129     022E  304C               	movlw	(low (main@text| 0))& (0+255)
  1130     022F  120A  118A  2018  120A  118A  	fcall	_sprintf
  1131     0234                     l1991:
  1132                           
  1133                           ;HC05BT_prueba.c: 105:              UART_Print(text);
  1134     0234  304C               	movlw	(low (main@text| 0))& (0+255)
  1135     0235  00F4               	movwf	UART_Print@data
  1136     0236  3000               	movlw	0
  1137     0237  00F5               	movwf	UART_Print@data+1
  1138     0238  120A  118A  2649  120A  118A  	fcall	_UART_Print
  1139                           
  1140                           ;HC05BT_prueba.c: 106:       switch (uart_read()){
  1141     023D  2AAC               	goto	l2021
  1142     023E                     l1993:
  1143                           
  1144                           ;HC05BT_prueba.c: 111:                valpot = ADRESH;
  1145     023E  081E               	movf	30,w	;volatile
  1146     023F  00DA               	movwf	_valpot
  1147     0240                     l1995:
  1148                           
  1149                           ;HC05BT_prueba.c: 112:               uint16_t varvolt2 = map(valpot,0,255,0,5);
  1150     0240  085A               	movf	_valpot,w
  1151     0241  00C9               	movwf	??_main
  1152     0242  01CA               	clrf	??_main+1
  1153     0243  0849               	movf	??_main,w
  1154     0244  00B5               	movwf	map@varmap
  1155     0245  084A               	movf	??_main+1,w
  1156     0246  00B6               	movwf	map@varmap+1
  1157     0247  3000               	movlw	0
  1158     0248  00B7               	movwf	map@minval
  1159     0249  00B8               	movwf	map@minval+1
  1160     024A  30FF               	movlw	255
  1161     024B  00B9               	movwf	map@maxval
  1162     024C  3000               	movlw	0
  1163     024D  00BA               	movwf	map@maxval+1
  1164     024E  3000               	movlw	0
  1165     024F  00BB               	movwf	map@minsal
  1166     0250  00BC               	movwf	map@minsal+1
  1167     0251  3005               	movlw	5
  1168     0252  00BD               	movwf	map@maxsal
  1169     0253  3000               	movlw	0
  1170     0254  00BE               	movwf	map@maxsal+1
  1171     0255  120A  118A  251A  120A  118A  	fcall	_map
  1172     025A  1283               	bcf	3,5	;RP0=0, select bank0
  1173     025B  1303               	bcf	3,6	;RP1=0, select bank0
  1174     025C  0836               	movf	?_map+1,w
  1175     025D  00D6               	movwf	main@varvolt2+1
  1176     025E  0835               	movf	?_map,w
  1177     025F  00D5               	movwf	main@varvolt2
  1178     0260                     l1997:
  1179                           
  1180                           ;HC05BT_prueba.c: 114:               UART_Print ("\r\n");
  1181     0260  302E               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
  1182     0261  00F4               	movwf	UART_Print@data
  1183     0262  3080               	movlw	128
  1184     0263  00F5               	movwf	UART_Print@data+1
  1185     0264  120A  118A  2649  120A  118A  	fcall	_UART_Print
  1186     0269                     l1999:
  1187                           
  1188                           ;HC05BT_prueba.c: 115:             sprintf(text, "%03u\r\n", varvolt2);
  1189     0269  3031               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1190     026A  1283               	bcf	3,5	;RP0=0, select bank0
  1191     026B  1303               	bcf	3,6	;RP1=0, select bank0
  1192     026C  00AB               	movwf	sprintf@f
  1193     026D  0856               	movf	main@varvolt2+1,w
  1194     026E  00AD               	movwf	?_sprintf+2
  1195     026F  0855               	movf	main@varvolt2,w
  1196     0270  00AC               	movwf	?_sprintf+1
  1197     0271  304C               	movlw	(low (main@text| 0))& (0+255)
  1198     0272  120A  118A  2018  120A  118A  	fcall	_sprintf
  1199     0277                     l2001:
  1200                           
  1201                           ;HC05BT_prueba.c: 116:             UART_Print(text);
  1202     0277  304C               	movlw	(low (main@text| 0))& (0+255)
  1203     0278  00F4               	movwf	UART_Print@data
  1204     0279  3000               	movlw	0
  1205     027A  00F5               	movwf	UART_Print@data+1
  1206     027B  120A  118A  2649  120A  118A  	fcall	_UART_Print
  1207     0280                     l2003:
  1208                           
  1209                           ;HC05BT_prueba.c: 119:               preguntas();
  1210     0280  120A  118A  26ED  120A  118A  	fcall	_preguntas
  1211     0285                     l2005:
  1212                           
  1213                           ;HC05BT_prueba.c: 120:              RCREG ='0';
  1214     0285  3030               	movlw	48
  1215     0286  1283               	bcf	3,5	;RP0=0, select bank0
  1216     0287  1303               	bcf	3,6	;RP1=0, select bank0
  1217     0288  009A               	movwf	26	;volatile
  1218                           
  1219                           ;HC05BT_prueba.c: 122:              break;
  1220     0289  2AC5               	goto	l2023
  1221     028A                     l2007:
  1222                           
  1223                           ;HC05BT_prueba.c: 124:                _delay((unsigned long)((2000)*(8000000/4000000.0))
      +                          );
  1224     028A  3006               	movlw	6
  1225     028B  1283               	bcf	3,5	;RP0=0, select bank0
  1226     028C  1303               	bcf	3,6	;RP1=0, select bank0
  1227     028D  00CA               	movwf	??_main+1
  1228     028E  302F               	movlw	47
  1229     028F  00C9               	movwf	??_main
  1230     0290                     u1787:
  1231     0290  0BC9               	decfsz	??_main,f
  1232     0291  2A90               	goto	u1787
  1233     0292  0BCA               	decfsz	??_main+1,f
  1234     0293  2A90               	goto	u1787
  1235     0294  2A95               	nop2
  1236     0295                     l2009:
  1237                           
  1238                           ;HC05BT_prueba.c: 125:                PORTD ++;
  1239     0295  3001               	movlw	1
  1240     0296  00FF               	movwf	btemp+1
  1241     0297  087F               	movf	btemp+1,w
  1242     0298  1283               	bcf	3,5	;RP0=0, select bank0
  1243     0299  1303               	bcf	3,6	;RP1=0, select bank0
  1244     029A  0788               	addwf	8,f	;volatile
  1245     029B  2A85               	goto	l2005
  1246     029C                     l2013:
  1247                           
  1248                           ;HC05BT_prueba.c: 130:                _delay((unsigned long)((2000)*(8000000/4000000.0))
      +                          );
  1249     029C  3006               	movlw	6
  1250     029D  1283               	bcf	3,5	;RP0=0, select bank0
  1251     029E  1303               	bcf	3,6	;RP1=0, select bank0
  1252     029F  00CA               	movwf	??_main+1
  1253     02A0  302F               	movlw	47
  1254     02A1  00C9               	movwf	??_main
  1255     02A2                     u1797:
  1256     02A2  0BC9               	decfsz	??_main,f
  1257     02A3  2AA2               	goto	u1797
  1258     02A4  0BCA               	decfsz	??_main+1,f
  1259     02A5  2AA2               	goto	u1797
  1260     02A6  2AA7               	nop2
  1261     02A7                     l2015:
  1262                           
  1263                           ;HC05BT_prueba.c: 131:                PORTD --;
  1264     02A7  3001               	movlw	1
  1265     02A8  1283               	bcf	3,5	;RP0=0, select bank0
  1266     02A9  1303               	bcf	3,6	;RP1=0, select bank0
  1267     02AA  0288               	subwf	8,f	;volatile
  1268     02AB  2A85               	goto	l2005
  1269     02AC                     l2021:
  1270     02AC  120A  118A  26DA  120A  118A  	fcall	_uart_read
  1271     02B1  1283               	bcf	3,5	;RP0=0, select bank0
  1272     02B2  1303               	bcf	3,6	;RP1=0, select bank0
  1273     02B3  00C9               	movwf	??_main
  1274     02B4  01CA               	clrf	??_main+1
  1275                           
  1276                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1277                           ; Switch size 1, requested type "simple"
  1278                           ; Number of cases is 1, Range of values is 0 to 0
  1279                           ; switch strategies available:
  1280                           ; Name         Instructions Cycles
  1281                           ; simple_byte            4     3 (average)
  1282                           ; direct_byte           11     8 (fixed)
  1283                           ; jumptable            260     6 (fixed)
  1284                           ;	Chosen strategy is simple_byte
  1285     02B5  084A               	movf	??_main+1,w
  1286     02B6  3A00               	xorlw	0	; case 0
  1287     02B7  1903               	skipnz
  1288     02B8  2ABA               	goto	l2093
  1289     02B9  2AC5               	goto	l2023
  1290     02BA                     l2093:
  1291                           
  1292                           ; Switch size 1, requested type "simple"
  1293                           ; Number of cases is 3, Range of values is 43 to 49
  1294                           ; switch strategies available:
  1295                           ; Name         Instructions Cycles
  1296                           ; simple_byte           10     6 (average)
  1297                           ; direct_byte           32    11 (fixed)
  1298                           ; jumptable            263     9 (fixed)
  1299                           ;	Chosen strategy is simple_byte
  1300     02BA  0849               	movf	??_main,w
  1301     02BB  3A2B               	xorlw	43	; case 43
  1302     02BC  1903               	skipnz
  1303     02BD  2A8A               	goto	l2007
  1304     02BE  3A06               	xorlw	6	; case 45
  1305     02BF  1903               	skipnz
  1306     02C0  2A9C               	goto	l2013
  1307     02C1  3A1C               	xorlw	28	; case 49
  1308     02C2  1903               	skipnz
  1309     02C3  2A3E               	goto	l1993
  1310     02C4  2AC5               	goto	l2023
  1311     02C5                     l2023:
  1312                           
  1313                           ;HC05BT_prueba.c: 138:     if ( UART_Data_Ready() )
  1314     02C5  120A  118A  272C  120A  118A  	fcall	_UART_Data_Ready
  1315     02CA  1C03               	btfss	3,0
  1316     02CB  2ACD               	goto	u1731
  1317     02CC  2ACE               	goto	u1730
  1318     02CD                     u1731:
  1319     02CD  29FF               	goto	l1981
  1320     02CE                     u1730:
  1321     02CE                     l2025:
  1322                           
  1323                           ;HC05BT_prueba.c: 139:     {;HC05BT_prueba.c: 140:       uint8_t c = UART_GetC();
  1324     02CE  120A  118A  2712  120A  118A  	fcall	_UART_GetC
  1325     02D3  1283               	bcf	3,5	;RP0=0, select bank0
  1326     02D4  1303               	bcf	3,6	;RP1=0, select bank0
  1327     02D5  00D7               	movwf	main@c
  1328     02D6                     l2027:
  1329                           
  1330                           ;HC05BT_prueba.c: 141:       UART_PutC(c);
  1331     02D6  0857               	movf	main@c,w
  1332     02D7  120A  118A  2720  120A  118A  	fcall	_UART_PutC
  1333     02DC  29FF               	goto	l1981
  1334     02DD  120A  118A  280C   	ljmp	start
  1335     02E0                     __end_of_main:
  1336                           
  1337                           	psect	text1
  1338     06DA                     __ptext1:	
  1339 ;; *************** function _uart_read *****************
  1340 ;; Defined at:
  1341 ;;		line 50 in file "HC05BT_prueba.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;		None
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;		None
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      unsigned char 
  1348 ;; Registers used:
  1349 ;;		wreg
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1355 ;;      Params:         0       0       0       0       0
  1356 ;;      Locals:         0       0       0       0       0
  1357 ;;      Temps:          0       0       0       0       0
  1358 ;;      Totals:         0       0       0       0       0
  1359 ;;Total ram usage:        0 bytes
  1360 ;; Hardware stack levels used: 1
  1361 ;; Hardware stack levels required when called: 1
  1362 ;; This function calls:
  1363 ;;		Nothing
  1364 ;; This function is called by:
  1365 ;;		_main
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369     06DA                     _uart_read:	
  1370                           ;psect for function _uart_read
  1371                           
  1372     06DA                     l1759:	
  1373                           ;incstack = 0
  1374                           ; Regs used in _uart_read: [wreg]
  1375                           
  1376                           
  1377                           ;HC05BT_prueba.c: 51:  if(PIR1bits.RCIF== 0){
  1378     06DA  1283               	bcf	3,5	;RP0=0, select bank0
  1379     06DB  1303               	bcf	3,6	;RP1=0, select bank0
  1380     06DC  1A8C               	btfsc	12,5	;volatile
  1381     06DD  2EDF               	goto	u1461
  1382     06DE  2EE0               	goto	u1460
  1383     06DF                     u1461:
  1384     06DF  2EEB               	goto	l1771
  1385     06E0                     u1460:
  1386     06E0                     l1761:
  1387                           
  1388                           ;HC05BT_prueba.c: 52:      if (RCSTAbits.OERR){
  1389     06E0  1C98               	btfss	24,1	;volatile
  1390     06E1  2EE3               	goto	u1471
  1391     06E2  2EE4               	goto	u1470
  1392     06E3                     u1471:
  1393     06E3  2EE9               	goto	l1765
  1394     06E4                     u1470:
  1395     06E4                     l1763:
  1396                           
  1397                           ;HC05BT_prueba.c: 53:          RCSTAbits.CREN =0;
  1398     06E4  1218               	bcf	24,4	;volatile
  1399                           
  1400                           ;HC05BT_prueba.c: 54:          __nop();
  1401     06E5  0000               	nop
  1402                           
  1403                           ;HC05BT_prueba.c: 55:          RCSTAbits.CREN =1;
  1404     06E6  1283               	bcf	3,5	;RP0=0, select bank0
  1405     06E7  1303               	bcf	3,6	;RP1=0, select bank0
  1406     06E8  1618               	bsf	24,4	;volatile
  1407     06E9                     l1765:
  1408                           
  1409                           ;HC05BT_prueba.c: 57:      return RCREG;
  1410     06E9  081A               	movf	26,w	;volatile
  1411     06EA  2EEC               	goto	l178
  1412     06EB                     l1771:
  1413                           
  1414                           ;HC05BT_prueba.c: 60:      return 0;
  1415     06EB  3000               	movlw	0
  1416     06EC                     l178:
  1417     06EC  0008               	return
  1418     06ED                     __end_of_uart_read:
  1419                           
  1420                           	psect	text2
  1421     0018                     __ptext2:	
  1422 ;; *************** function _sprintf *****************
  1423 ;; Defined at:
  1424 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;  sp              1    wreg     PTR unsigned char 
  1427 ;;		 -> main@text(9), 
  1428 ;;  f               1   11[BANK0 ] PTR const unsigned char 
  1429 ;;		 -> STR_6(7), STR_4(7), 
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;  sp              1   22[BANK0 ] PTR unsigned char 
  1432 ;;		 -> main@text(9), 
  1433 ;;  tmpval          4    0        struct .
  1434 ;;  width           2   23[BANK0 ] int 
  1435 ;;  val             2   19[BANK0 ] unsigned int 
  1436 ;;  cp              2    0        PTR const unsigned char 
  1437 ;;  len             2    0        unsigned int 
  1438 ;;  c               1   25[BANK0 ] unsigned char 
  1439 ;;  prec            1   21[BANK0 ] char 
  1440 ;;  flag            1   18[BANK0 ] unsigned char 
  1441 ;;  ap              1   17[BANK0 ] PTR void [1]
  1442 ;;		 -> ?_sprintf(2), 
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  2   11[BANK0 ] int 
  1445 ;; Registers used:
  1446 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1452 ;;      Params:         0       3       0       0       0
  1453 ;;      Locals:         0       9       0       0       0
  1454 ;;      Temps:          0       3       0       0       0
  1455 ;;      Totals:         0      15       0       0       0
  1456 ;;Total ram usage:       15 bytes
  1457 ;; Hardware stack levels used: 1
  1458 ;; Hardware stack levels required when called: 2
  1459 ;; This function calls:
  1460 ;;		___lwdiv
  1461 ;;		___lwmod
  1462 ;;		___wmul
  1463 ;;		_isdigit
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469     0018                     _sprintf:	
  1470                           ;psect for function _sprintf
  1471                           
  1472                           
  1473                           ;incstack = 0
  1474                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1475                           ;sprintf@sp stored from wreg
  1476     0018  1283               	bcf	3,5	;RP0=0, select bank0
  1477     0019  1303               	bcf	3,6	;RP1=0, select bank0
  1478     001A  00B6               	movwf	sprintf@sp
  1479     001B                     l1819:
  1480                           
  1481                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1482     001B  302C               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1483     001C  00B1               	movwf	sprintf@ap
  1484                           
  1485                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1486     001D  2989               	goto	l1905
  1487     001E                     l1821:
  1488                           
  1489                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1490     001E  3025               	movlw	37
  1491     001F  0639               	xorwf	sprintf@c,w
  1492     0020  1903               	btfsc	3,2
  1493     0021  2823               	goto	u1531
  1494     0022  2824               	goto	u1530
  1495     0023                     u1531:
  1496     0023  282E               	goto	l1827
  1497     0024                     u1530:
  1498     0024                     l1823:
  1499                           
  1500                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1501     0024  0836               	movf	sprintf@sp,w
  1502     0025  0084               	movwf	4
  1503     0026  0839               	movf	sprintf@c,w
  1504     0027  1383               	bcf	3,7	;select IRP bank0
  1505     0028  0080               	movwf	0
  1506     0029                     l1825:
  1507     0029  3001               	movlw	1
  1508     002A  00FF               	movwf	btemp+1
  1509     002B  087F               	movf	btemp+1,w
  1510     002C  07B6               	addwf	sprintf@sp,f
  1511                           
  1512                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  1513     002D  2989               	goto	l1905
  1514     002E                     l1827:
  1515                           
  1516                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1517     002E  01B7               	clrf	sprintf@width
  1518     002F  01B8               	clrf	sprintf@width+1
  1519                           
  1520                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1521     0030  01B2               	clrf	sprintf@flag
  1522     0031  2837               	goto	l1833
  1523     0032                     l354:	
  1524                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1525                           
  1526                           
  1527                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1528     0032  1532               	bsf	sprintf@flag,2
  1529     0033                     l1829:
  1530                           
  1531                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 598:     f++;
  1532     0033  3001               	movlw	1
  1533     0034  00FF               	movwf	btemp+1
  1534     0035  087F               	movf	btemp+1,w
  1535     0036  07AB               	addwf	sprintf@f,f
  1536     0037                     l1833:	
  1537                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1538                           
  1539     0037  082B               	movf	sprintf@f,w
  1540     0038  0084               	movwf	4
  1541     0039  120A  118A  258A  120A  118A  	fcall	stringdir
  1542     003E  00AE               	movwf	??_sprintf
  1543     003F  01AF               	clrf	??_sprintf+1
  1544                           
  1545                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1546                           ; Switch size 1, requested type "simple"
  1547                           ; Number of cases is 1, Range of values is 0 to 0
  1548                           ; switch strategies available:
  1549                           ; Name         Instructions Cycles
  1550                           ; simple_byte            4     3 (average)
  1551                           ; direct_byte           11     8 (fixed)
  1552                           ; jumptable            260     6 (fixed)
  1553                           ;	Chosen strategy is simple_byte
  1554     0040  082F               	movf	??_sprintf+1,w
  1555     0041  3A00               	xorlw	0	; case 0
  1556     0042  1903               	skipnz
  1557     0043  2845               	goto	l2095
  1558     0044  284A               	goto	l1835
  1559     0045                     l2095:
  1560                           
  1561                           ; Switch size 1, requested type "simple"
  1562                           ; Number of cases is 1, Range of values is 48 to 48
  1563                           ; switch strategies available:
  1564                           ; Name         Instructions Cycles
  1565                           ; simple_byte            4     3 (average)
  1566                           ; direct_byte           14    11 (fixed)
  1567                           ; jumptable            263     9 (fixed)
  1568                           ;	Chosen strategy is simple_byte
  1569     0045  082E               	movf	??_sprintf,w
  1570     0046  3A30               	xorlw	48	; case 48
  1571     0047  1903               	skipnz
  1572     0048  2832               	goto	l354
  1573     0049  284A               	goto	l1835
  1574     004A                     l1835:
  1575                           
  1576                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1577     004A  082B               	movf	sprintf@f,w
  1578     004B  0084               	movwf	4
  1579     004C  120A  118A  258A  120A  118A  	fcall	stringdir
  1580     0051  120A  118A  2700  120A  118A  	fcall	_isdigit
  1581     0056  1C03               	btfss	3,0
  1582     0057  2859               	goto	u1541
  1583     0058  285A               	goto	u1540
  1584     0059                     u1541:
  1585     0059  28A0               	goto	l1851
  1586     005A                     u1540:
  1587     005A                     l1837:
  1588                           
  1589                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1590     005A  1283               	bcf	3,5	;RP0=0, select bank0
  1591     005B  1303               	bcf	3,6	;RP1=0, select bank0
  1592     005C  01B7               	clrf	sprintf@width
  1593     005D  01B8               	clrf	sprintf@width+1
  1594     005E                     l1839:
  1595                           
  1596                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1597     005E  300A               	movlw	10
  1598     005F  00F3               	movwf	___wmul@multiplier
  1599     0060  3000               	movlw	0
  1600     0061  00F4               	movwf	___wmul@multiplier+1
  1601     0062  1283               	bcf	3,5	;RP0=0, select bank0
  1602     0063  1303               	bcf	3,6	;RP1=0, select bank0
  1603     0064  0838               	movf	sprintf@width+1,w
  1604     0065  00F6               	movwf	___wmul@multiplicand+1
  1605     0066  0837               	movf	sprintf@width,w
  1606     0067  00F5               	movwf	___wmul@multiplicand
  1607     0068  120A  118A  269C  120A  118A  	fcall	___wmul
  1608     006D  0874               	movf	?___wmul+1,w
  1609     006E  1283               	bcf	3,5	;RP0=0, select bank0
  1610     006F  1303               	bcf	3,6	;RP1=0, select bank0
  1611     0070  00B8               	movwf	sprintf@width+1
  1612     0071  0873               	movf	?___wmul,w
  1613     0072  00B7               	movwf	sprintf@width
  1614     0073                     l1841:
  1615                           
  1616                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1617     0073  082B               	movf	sprintf@f,w
  1618     0074  0084               	movwf	4
  1619     0075  120A  118A  258A  120A  118A  	fcall	stringdir
  1620     007A  3ED0               	addlw	208
  1621     007B  00AE               	movwf	??_sprintf
  1622     007C  30FF               	movlw	255
  1623     007D  1803               	skipnc
  1624     007E  3000               	movlw	0
  1625     007F  00AF               	movwf	??_sprintf+1
  1626     0080  082E               	movf	??_sprintf,w
  1627     0081  07B7               	addwf	sprintf@width,f
  1628     0082  1803               	skipnc
  1629     0083  0AB8               	incf	sprintf@width+1,f
  1630     0084  082F               	movf	??_sprintf+1,w
  1631     0085  07B8               	addwf	sprintf@width+1,f
  1632     0086                     l1843:
  1633     0086  3001               	movlw	1
  1634     0087  00FF               	movwf	btemp+1
  1635     0088  087F               	movf	btemp+1,w
  1636     0089  07AB               	addwf	sprintf@f,f
  1637     008A                     l1845:
  1638                           
  1639                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1640     008A  082B               	movf	sprintf@f,w
  1641     008B  0084               	movwf	4
  1642     008C  120A  118A  258A  120A  118A  	fcall	stringdir
  1643     0091  120A  118A  2700  120A  118A  	fcall	_isdigit
  1644     0096  1803               	btfsc	3,0
  1645     0097  2899               	goto	u1551
  1646     0098  289A               	goto	u1550
  1647     0099                     u1551:
  1648     0099  285E               	goto	l1839
  1649     009A                     u1550:
  1650     009A  28A0               	goto	l1851
  1651     009B                     l1847:
  1652                           
  1653                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1654     009B  30C0               	movlw	192
  1655     009C  00FF               	movwf	btemp+1
  1656     009D  087F               	movf	btemp+1,w
  1657     009E  04B2               	iorwf	sprintf@flag,f
  1658                           
  1659                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 845:    break;
  1660     009F  28BC               	goto	l1853
  1661     00A0                     l1851:
  1662     00A0  3001               	movlw	1
  1663     00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1664     00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1665     00A3  07AB               	addwf	sprintf@f,f
  1666     00A4  30FF               	movlw	-1
  1667     00A5  072B               	addwf	sprintf@f,w
  1668     00A6  0084               	movwf	4
  1669     00A7  120A  118A  258A  120A  118A  	fcall	stringdir
  1670     00AC  00B9               	movwf	sprintf@c
  1671     00AD  00AE               	movwf	??_sprintf
  1672     00AE  01AF               	clrf	??_sprintf+1
  1673                           
  1674                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1675                           ; Switch size 1, requested type "simple"
  1676                           ; Number of cases is 1, Range of values is 0 to 0
  1677                           ; switch strategies available:
  1678                           ; Name         Instructions Cycles
  1679                           ; simple_byte            4     3 (average)
  1680                           ; direct_byte           11     8 (fixed)
  1681                           ; jumptable            260     6 (fixed)
  1682                           ;	Chosen strategy is simple_byte
  1683     00AF  082F               	movf	??_sprintf+1,w
  1684     00B0  3A00               	xorlw	0	; case 0
  1685     00B1  1903               	skipnz
  1686     00B2  28B4               	goto	l2097
  1687     00B3  2989               	goto	l1905
  1688     00B4                     l2097:
  1689                           
  1690                           ; Switch size 1, requested type "simple"
  1691                           ; Number of cases is 2, Range of values is 0 to 117
  1692                           ; switch strategies available:
  1693                           ; Name         Instructions Cycles
  1694                           ; simple_byte            7     4 (average)
  1695                           ; jumptable            260     6 (fixed)
  1696                           ;	Chosen strategy is simple_byte
  1697     00B4  082E               	movf	??_sprintf,w
  1698     00B5  3A00               	xorlw	0	; case 0
  1699     00B6  1903               	skipnz
  1700     00B7  2999               	goto	l1907
  1701     00B8  3A75               	xorlw	117	; case 117
  1702     00B9  1903               	skipnz
  1703     00BA  289B               	goto	l1847
  1704     00BB  2989               	goto	l1905
  1705     00BC                     l1853:
  1706                           
  1707                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1708     00BC  0831               	movf	sprintf@ap,w
  1709     00BD  0084               	movwf	4
  1710     00BE  1383               	bcf	3,7	;select IRP bank0
  1711     00BF  0800               	movf	0,w
  1712     00C0  00B3               	movwf	sprintf@val
  1713     00C1  0A84               	incf	4,f
  1714     00C2  0800               	movf	0,w
  1715     00C3  00B4               	movwf	sprintf@val+1
  1716     00C4                     l1855:
  1717     00C4  3002               	movlw	2
  1718     00C5  00FF               	movwf	btemp+1
  1719     00C6  087F               	movf	btemp+1,w
  1720     00C7  07B1               	addwf	sprintf@ap,f
  1721     00C8                     l1857:
  1722                           
  1723                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1724     00C8  01B9               	clrf	sprintf@c
  1725     00C9  0AB9               	incf	sprintf@c,f
  1726     00CA                     l1863:
  1727                           
  1728                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1729     00CA  0839               	movf	sprintf@c,w
  1730     00CB  00AE               	movwf	??_sprintf
  1731     00CC  072E               	addwf	??_sprintf,w
  1732     00CD  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1733     00CE  0084               	movwf	4
  1734     00CF  120A  118A  258A  120A  118A  	fcall	stringdir
  1735     00D4  00AF               	movwf	??_sprintf+1
  1736     00D5  120A  118A  258A  120A  118A  	fcall	stringdir
  1737     00DA  00B0               	movwf	??_sprintf+2
  1738     00DB  0830               	movf	??_sprintf+2,w
  1739     00DC  0234               	subwf	sprintf@val+1,w
  1740     00DD  1D03               	skipz
  1741     00DE  28E1               	goto	u1565
  1742     00DF  082F               	movf	??_sprintf+1,w
  1743     00E0  0233               	subwf	sprintf@val,w
  1744     00E1                     u1565:
  1745     00E1  1803               	skipnc
  1746     00E2  28E4               	goto	u1561
  1747     00E3  28E5               	goto	u1560
  1748     00E4                     u1561:
  1749     00E4  28E6               	goto	l1867
  1750     00E5                     u1560:
  1751     00E5  28F0               	goto	l1871
  1752     00E6                     l1867:
  1753     00E6  3001               	movlw	1
  1754     00E7  00FF               	movwf	btemp+1
  1755     00E8  087F               	movf	btemp+1,w
  1756     00E9  07B9               	addwf	sprintf@c,f
  1757     00EA                     l1869:
  1758     00EA  3005               	movlw	5
  1759     00EB  0639               	xorwf	sprintf@c,w
  1760     00EC  1D03               	btfss	3,2
  1761     00ED  28EF               	goto	u1571
  1762     00EE  28F0               	goto	u1570
  1763     00EF                     u1571:
  1764     00EF  28CA               	goto	l1863
  1765     00F0                     u1570:
  1766     00F0                     l1871:
  1767                           
  1768                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  1769     00F0  0838               	movf	sprintf@width+1,w
  1770     00F1  3A80               	xorlw	128
  1771     00F2  3C80               	sublw	128
  1772     00F3  1D03               	skipz
  1773     00F4  28F7               	goto	u1585
  1774     00F5  0837               	movf	sprintf@width,w
  1775     00F6  0239               	subwf	sprintf@c,w
  1776     00F7                     u1585:
  1777     00F7  1803               	skipnc
  1778     00F8  28FA               	goto	u1581
  1779     00F9  28FB               	goto	u1580
  1780     00FA                     u1581:
  1781     00FA  2907               	goto	l1875
  1782     00FB                     u1580:
  1783     00FB                     l1873:
  1784                           
  1785                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  1786     00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1787     00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1788     00FD  0839               	movf	sprintf@c,w
  1789     00FE  00AE               	movwf	??_sprintf
  1790     00FF  01AF               	clrf	??_sprintf+1
  1791     0100  082E               	movf	??_sprintf,w
  1792     0101  02B7               	subwf	sprintf@width,f
  1793     0102  082F               	movf	??_sprintf+1,w
  1794     0103  1C03               	skipc
  1795     0104  03B8               	decf	sprintf@width+1,f
  1796     0105  02B8               	subwf	sprintf@width+1,f
  1797     0106  290B               	goto	l1877
  1798     0107                     l1875:
  1799                           
  1800                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  1801     0107  1283               	bcf	3,5	;RP0=0, select bank0
  1802     0108  1303               	bcf	3,6	;RP1=0, select bank0
  1803     0109  01B7               	clrf	sprintf@width
  1804     010A  01B8               	clrf	sprintf@width+1
  1805     010B                     l1877:
  1806                           
  1807                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  1808     010B  1D32               	btfss	sprintf@flag,2
  1809     010C  290E               	goto	u1591
  1810     010D  290F               	goto	u1590
  1811     010E                     u1591:
  1812     010E  292B               	goto	l1887
  1813     010F                     u1590:
  1814     010F                     l1879:
  1815                           
  1816                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  1817     010F  0837               	movf	sprintf@width,w
  1818     0110  0438               	iorwf	sprintf@width+1,w
  1819     0111  1903               	btfsc	3,2
  1820     0112  2914               	goto	u1601
  1821     0113  2915               	goto	u1600
  1822     0114                     u1601:
  1823     0114  2946               	goto	l1895
  1824     0115                     u1600:
  1825     0115                     l1881:
  1826                           
  1827                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  1828     0115  0836               	movf	sprintf@sp,w
  1829     0116  0084               	movwf	4
  1830     0117  3030               	movlw	48
  1831     0118  1383               	bcf	3,7	;select IRP bank0
  1832     0119  0080               	movwf	0
  1833     011A                     l1883:
  1834     011A  3001               	movlw	1
  1835     011B  00FF               	movwf	btemp+1
  1836     011C  087F               	movf	btemp+1,w
  1837     011D  07B6               	addwf	sprintf@sp,f
  1838     011E                     l1885:
  1839     011E  30FF               	movlw	255
  1840     011F  07B7               	addwf	sprintf@width,f
  1841     0120  1803               	skipnc
  1842     0121  0AB8               	incf	sprintf@width+1,f
  1843     0122  30FF               	movlw	255
  1844     0123  07B8               	addwf	sprintf@width+1,f
  1845     0124  0837               	movf	sprintf@width,w
  1846     0125  0438               	iorwf	sprintf@width+1,w
  1847     0126  1D03               	btfss	3,2
  1848     0127  2929               	goto	u1611
  1849     0128  292A               	goto	u1610
  1850     0129                     u1611:
  1851     0129  2915               	goto	l1881
  1852     012A                     u1610:
  1853     012A  2946               	goto	l1895
  1854     012B                     l1887:
  1855                           
  1856                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1450:    if(width
  1857     012B  0837               	movf	sprintf@width,w
  1858     012C  0438               	iorwf	sprintf@width+1,w
  1859     012D  1903               	btfsc	3,2
  1860     012E  2930               	goto	u1621
  1861     012F  2931               	goto	u1620
  1862     0130                     u1621:
  1863     0130  2946               	goto	l1895
  1864     0131                     u1620:
  1865     0131                     l1889:
  1866                           
  1867                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  1868     0131  0836               	movf	sprintf@sp,w
  1869     0132  0084               	movwf	4
  1870     0133  3020               	movlw	32
  1871     0134  1383               	bcf	3,7	;select IRP bank0
  1872     0135  0080               	movwf	0
  1873     0136                     l1891:
  1874     0136  3001               	movlw	1
  1875     0137  00FF               	movwf	btemp+1
  1876     0138  087F               	movf	btemp+1,w
  1877     0139  07B6               	addwf	sprintf@sp,f
  1878     013A                     l1893:
  1879     013A  30FF               	movlw	255
  1880     013B  07B7               	addwf	sprintf@width,f
  1881     013C  1803               	skipnc
  1882     013D  0AB8               	incf	sprintf@width+1,f
  1883     013E  30FF               	movlw	255
  1884     013F  07B8               	addwf	sprintf@width+1,f
  1885     0140  0837               	movf	sprintf@width,w
  1886     0141  0438               	iorwf	sprintf@width+1,w
  1887     0142  1D03               	btfss	3,2
  1888     0143  2945               	goto	u1631
  1889     0144  2946               	goto	u1630
  1890     0145                     u1631:
  1891     0145  2931               	goto	l1889
  1892     0146                     u1630:
  1893     0146                     l1895:
  1894                           
  1895                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1896     0146  0839               	movf	sprintf@c,w
  1897     0147  00B5               	movwf	sprintf@prec
  1898                           
  1899                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1900     0148  2980               	goto	l1903
  1901     0149                     l1897:
  1902                           
  1903                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1904     0149  300A               	movlw	10
  1905     014A  00A7               	movwf	___lwmod@divisor
  1906     014B  3000               	movlw	0
  1907     014C  00A8               	movwf	___lwmod@divisor+1
  1908     014D  0835               	movf	sprintf@prec,w
  1909     014E  00AE               	movwf	??_sprintf
  1910     014F  072E               	addwf	??_sprintf,w
  1911     0150  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1912     0151  0084               	movwf	4
  1913     0152  120A  118A  258A  120A  118A  	fcall	stringdir
  1914     0157  00A0               	movwf	___lwdiv@divisor
  1915     0158  120A  118A  258A  120A  118A  	fcall	stringdir
  1916     015D  00A1               	movwf	___lwdiv@divisor+1
  1917     015E  0834               	movf	sprintf@val+1,w
  1918     015F  00A3               	movwf	___lwdiv@dividend+1
  1919     0160  0833               	movf	sprintf@val,w
  1920     0161  00A2               	movwf	___lwdiv@dividend
  1921     0162  120A  118A  25C7  120A  118A  	fcall	___lwdiv
  1922     0167  1283               	bcf	3,5	;RP0=0, select bank0
  1923     0168  1303               	bcf	3,6	;RP1=0, select bank0
  1924     0169  0821               	movf	?___lwdiv+1,w
  1925     016A  00AA               	movwf	___lwmod@dividend+1
  1926     016B  0820               	movf	?___lwdiv,w
  1927     016C  00A9               	movwf	___lwmod@dividend
  1928     016D  120A  118A  260D  120A  118A  	fcall	___lwmod
  1929     0172  1283               	bcf	3,5	;RP0=0, select bank0
  1930     0173  1303               	bcf	3,6	;RP1=0, select bank0
  1931     0174  0827               	movf	?___lwmod,w
  1932     0175  3E30               	addlw	48
  1933     0176  00B9               	movwf	sprintf@c
  1934     0177                     l1899:
  1935                           
  1936                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1937     0177  0836               	movf	sprintf@sp,w
  1938     0178  0084               	movwf	4
  1939     0179  0839               	movf	sprintf@c,w
  1940     017A  1383               	bcf	3,7	;select IRP bank0
  1941     017B  0080               	movwf	0
  1942     017C                     l1901:
  1943     017C  3001               	movlw	1
  1944     017D  00FF               	movwf	btemp+1
  1945     017E  087F               	movf	btemp+1,w
  1946     017F  07B6               	addwf	sprintf@sp,f
  1947     0180                     l1903:
  1948                           
  1949                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1950     0180  30FF               	movlw	255
  1951     0181  00FF               	movwf	btemp+1
  1952     0182  087F               	movf	btemp+1,w
  1953     0183  07B5               	addwf	sprintf@prec,f
  1954     0184  0A35               	incf	sprintf@prec,w
  1955     0185  1D03               	btfss	3,2
  1956     0186  2988               	goto	u1641
  1957     0187  2989               	goto	u1640
  1958     0188                     u1641:
  1959     0188  2949               	goto	l1897
  1960     0189                     u1640:
  1961     0189                     l1905:
  1962                           
  1963                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1964     0189  3001               	movlw	1
  1965     018A  07AB               	addwf	sprintf@f,f
  1966     018B  30FF               	movlw	-1
  1967     018C  072B               	addwf	sprintf@f,w
  1968     018D  0084               	movwf	4
  1969     018E  120A  118A  258A  120A  118A  	fcall	stringdir
  1970     0193  00B9               	movwf	sprintf@c
  1971     0194  0839               	movf	sprintf@c,w
  1972     0195  1D03               	btfss	3,2
  1973     0196  2998               	goto	u1651
  1974     0197  2999               	goto	u1650
  1975     0198                     u1651:
  1976     0198  281E               	goto	l1821
  1977     0199                     u1650:
  1978     0199                     l1907:
  1979                           
  1980                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1981     0199  0836               	movf	sprintf@sp,w
  1982     019A  0084               	movwf	4
  1983     019B  1383               	bcf	3,7	;select IRP bank0
  1984     019C  0180               	clrf	0
  1985     019D                     l384:
  1986     019D  0008               	return
  1987     019E                     __end_of_sprintf:
  1988                           
  1989                           	psect	text3
  1990     0700                     __ptext3:	
  1991 ;; *************** function _isdigit *****************
  1992 ;; Defined at:
  1993 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;  c               1    wreg     unsigned char 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  c               1    4[COMMON] unsigned char 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;		None               void
  2000 ;; Registers used:
  2001 ;;		wreg, status,2, status,0
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2007 ;;      Params:         0       0       0       0       0
  2008 ;;      Locals:         2       0       0       0       0
  2009 ;;      Temps:          0       0       0       0       0
  2010 ;;      Totals:         2       0       0       0       0
  2011 ;;Total ram usage:        2 bytes
  2012 ;; Hardware stack levels used: 1
  2013 ;; Hardware stack levels required when called: 1
  2014 ;; This function calls:
  2015 ;;		Nothing
  2016 ;; This function is called by:
  2017 ;;		_sprintf
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021     0700                     _isdigit:	
  2022                           ;psect for function _isdigit
  2023                           
  2024                           
  2025                           ;incstack = 0
  2026                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2027                           ;isdigit@c stored from wreg
  2028     0700  00F4               	movwf	isdigit@c
  2029     0701                     l1573:
  2030     0701  01F3               	clrf	_isdigit$958
  2031     0702                     l1575:
  2032     0702  303A               	movlw	58
  2033     0703  0274               	subwf	isdigit@c,w
  2034     0704  1803               	skipnc
  2035     0705  2F07               	goto	u961
  2036     0706  2F08               	goto	u960
  2037     0707                     u961:
  2038     0707  2F10               	goto	l1581
  2039     0708                     u960:
  2040     0708                     l1577:
  2041     0708  3030               	movlw	48
  2042     0709  0274               	subwf	isdigit@c,w
  2043     070A  1C03               	skipc
  2044     070B  2F0D               	goto	u971
  2045     070C  2F0E               	goto	u970
  2046     070D                     u971:
  2047     070D  2F10               	goto	l1581
  2048     070E                     u970:
  2049     070E                     l1579:
  2050     070E  01F3               	clrf	_isdigit$958
  2051     070F  0AF3               	incf	_isdigit$958,f
  2052     0710                     l1581:
  2053     0710  0C73               	rrf	_isdigit$958,w
  2054     0711                     l841:
  2055     0711  0008               	return
  2056     0712                     __end_of_isdigit:
  2057                           
  2058                           	psect	text4
  2059     060D                     __ptext4:	
  2060 ;; *************** function ___lwmod *****************
  2061 ;; Defined at:
  2062 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;  divisor         2    7[BANK0 ] unsigned int 
  2065 ;;  dividend        2    9[BANK0 ] unsigned int 
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;  counter         1    9[COMMON] unsigned char 
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  2    7[BANK0 ] unsigned int 
  2070 ;; Registers used:
  2071 ;;		wreg, status,2, status,0, btemp+1
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2077 ;;      Params:         0       4       0       0       0
  2078 ;;      Locals:         1       0       0       0       0
  2079 ;;      Temps:          0       0       0       0       0
  2080 ;;      Totals:         1       4       0       0       0
  2081 ;;Total ram usage:        5 bytes
  2082 ;; Hardware stack levels used: 1
  2083 ;; Hardware stack levels required when called: 1
  2084 ;; This function calls:
  2085 ;;		Nothing
  2086 ;; This function is called by:
  2087 ;;		_sprintf
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091     060D                     ___lwmod:	
  2092                           ;psect for function ___lwmod
  2093                           
  2094     060D                     l1689:	
  2095                           ;incstack = 0
  2096                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  2097                           
  2098     060D  1283               	bcf	3,5	;RP0=0, select bank0
  2099     060E  1303               	bcf	3,6	;RP1=0, select bank0
  2100     060F  0827               	movf	___lwmod@divisor,w
  2101     0610  0428               	iorwf	___lwmod@divisor+1,w
  2102     0611  1903               	btfsc	3,2
  2103     0612  2E14               	goto	u1261
  2104     0613  2E15               	goto	u1260
  2105     0614                     u1261:
  2106     0614  2E44               	goto	l1707
  2107     0615                     u1260:
  2108     0615                     l1691:
  2109     0615  01F9               	clrf	___lwmod@counter
  2110     0616  0AF9               	incf	___lwmod@counter,f
  2111     0617  2E23               	goto	l1697
  2112     0618                     l1693:
  2113     0618  3001               	movlw	1
  2114     0619                     u1275:
  2115     0619  1003               	clrc
  2116     061A  0DA7               	rlf	___lwmod@divisor,f
  2117     061B  0DA8               	rlf	___lwmod@divisor+1,f
  2118     061C  3EFF               	addlw	-1
  2119     061D  1D03               	skipz
  2120     061E  2E19               	goto	u1275
  2121     061F                     l1695:
  2122     061F  3001               	movlw	1
  2123     0620  00FF               	movwf	btemp+1
  2124     0621  087F               	movf	btemp+1,w
  2125     0622  07F9               	addwf	___lwmod@counter,f
  2126     0623                     l1697:
  2127     0623  1FA8               	btfss	___lwmod@divisor+1,7
  2128     0624  2E26               	goto	u1281
  2129     0625  2E27               	goto	u1280
  2130     0626                     u1281:
  2131     0626  2E18               	goto	l1693
  2132     0627                     u1280:
  2133     0627                     l1699:
  2134     0627  0828               	movf	___lwmod@divisor+1,w
  2135     0628  022A               	subwf	___lwmod@dividend+1,w
  2136     0629  1D03               	skipz
  2137     062A  2E2D               	goto	u1295
  2138     062B  0827               	movf	___lwmod@divisor,w
  2139     062C  0229               	subwf	___lwmod@dividend,w
  2140     062D                     u1295:
  2141     062D  1C03               	skipc
  2142     062E  2E30               	goto	u1291
  2143     062F  2E31               	goto	u1290
  2144     0630                     u1291:
  2145     0630  2E37               	goto	l1703
  2146     0631                     u1290:
  2147     0631                     l1701:
  2148     0631  0827               	movf	___lwmod@divisor,w
  2149     0632  02A9               	subwf	___lwmod@dividend,f
  2150     0633  0828               	movf	___lwmod@divisor+1,w
  2151     0634  1C03               	skipc
  2152     0635  03AA               	decf	___lwmod@dividend+1,f
  2153     0636  02AA               	subwf	___lwmod@dividend+1,f
  2154     0637                     l1703:
  2155     0637  3001               	movlw	1
  2156     0638                     u1305:
  2157     0638  1003               	clrc
  2158     0639  0CA8               	rrf	___lwmod@divisor+1,f
  2159     063A  0CA7               	rrf	___lwmod@divisor,f
  2160     063B  3EFF               	addlw	-1
  2161     063C  1D03               	skipz
  2162     063D  2E38               	goto	u1305
  2163     063E                     l1705:
  2164     063E  3001               	movlw	1
  2165     063F  02F9               	subwf	___lwmod@counter,f
  2166     0640  1D03               	btfss	3,2
  2167     0641  2E43               	goto	u1311
  2168     0642  2E44               	goto	u1310
  2169     0643                     u1311:
  2170     0643  2E27               	goto	l1699
  2171     0644                     u1310:
  2172     0644                     l1707:
  2173     0644  082A               	movf	___lwmod@dividend+1,w
  2174     0645  00A8               	movwf	?___lwmod+1
  2175     0646  0829               	movf	___lwmod@dividend,w
  2176     0647  00A7               	movwf	?___lwmod
  2177     0648                     l670:
  2178     0648  0008               	return
  2179     0649                     __end_of___lwmod:
  2180                           
  2181                           	psect	text5
  2182     0674                     __ptext5:	
  2183 ;; *************** function _setup *****************
  2184 ;; Defined at:
  2185 ;;		line 147 in file "HC05BT_prueba.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;		None
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;		None
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      void 
  2192 ;; Registers used:
  2193 ;;		wreg, status,2, status,0
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2199 ;;      Params:         0       0       0       0       0
  2200 ;;      Locals:         0       0       0       0       0
  2201 ;;      Temps:          1       0       0       0       0
  2202 ;;      Totals:         1       0       0       0       0
  2203 ;;Total ram usage:        1 bytes
  2204 ;; Hardware stack levels used: 1
  2205 ;; Hardware stack levels required when called: 1
  2206 ;; This function calls:
  2207 ;;		Nothing
  2208 ;; This function is called by:
  2209 ;;		_main
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213     0674                     _setup:	
  2214                           ;psect for function _setup
  2215                           
  2216     0674                     l1775:	
  2217                           ;incstack = 0
  2218                           ; Regs used in _setup: [wreg+status,2+status,0]
  2219                           
  2220                           
  2221                           ;HC05BT_prueba.c: 148:     ANSEL = 0b00000011;
  2222     0674  3003               	movlw	3
  2223     0675  1683               	bsf	3,5	;RP0=1, select bank3
  2224     0676  1703               	bsf	3,6	;RP1=1, select bank3
  2225     0677  0088               	movwf	8	;volatile
  2226     0678                     l1777:
  2227                           
  2228                           ;HC05BT_prueba.c: 149:     ANSELH = 0;
  2229     0678  0189               	clrf	9	;volatile
  2230     0679                     l1779:
  2231                           
  2232                           ;HC05BT_prueba.c: 151:     TRISA = 0xFF;
  2233     0679  30FF               	movlw	255
  2234     067A  1683               	bsf	3,5	;RP0=1, select bank1
  2235     067B  1303               	bcf	3,6	;RP1=0, select bank1
  2236     067C  0085               	movwf	5	;volatile
  2237                           
  2238                           ;HC05BT_prueba.c: 152:     TRISD= 0;
  2239     067D  0188               	clrf	8	;volatile
  2240                           
  2241                           ;HC05BT_prueba.c: 153:     PORTD = 0;
  2242     067E  1283               	bcf	3,5	;RP0=0, select bank0
  2243     067F  1303               	bcf	3,6	;RP1=0, select bank0
  2244     0680  0188               	clrf	8	;volatile
  2245     0681                     l1781:
  2246                           
  2247                           ;HC05BT_prueba.c: 156:     ADCON1bits.ADFM = 0;
  2248     0681  1683               	bsf	3,5	;RP0=1, select bank1
  2249     0682  1303               	bcf	3,6	;RP1=0, select bank1
  2250     0683  139F               	bcf	31,7	;volatile
  2251     0684                     l1783:
  2252                           
  2253                           ;HC05BT_prueba.c: 157:     ADCON1bits.VCFG0 = 0;
  2254     0684  121F               	bcf	31,4	;volatile
  2255     0685                     l1785:
  2256                           
  2257                           ;HC05BT_prueba.c: 158:     ADCON1bits.VCFG1 = 0;
  2258     0685  129F               	bcf	31,5	;volatile
  2259     0686                     l1787:
  2260                           
  2261                           ;HC05BT_prueba.c: 160:     ADCON0bits.ADCS = 0b01;
  2262     0686  1283               	bcf	3,5	;RP0=0, select bank0
  2263     0687  1303               	bcf	3,6	;RP1=0, select bank0
  2264     0688  081F               	movf	31,w	;volatile
  2265     0689  393F               	andlw	-193
  2266     068A  3840               	iorlw	64
  2267     068B  009F               	movwf	31	;volatile
  2268     068C                     l1789:
  2269                           
  2270                           ;HC05BT_prueba.c: 161:     ADCON0bits.CHS = 0;
  2271     068C  30C3               	movlw	-61
  2272     068D  059F               	andwf	31,f	;volatile
  2273     068E                     l1791:
  2274                           
  2275                           ;HC05BT_prueba.c: 162:     ADCON0bits.ADON= 1;
  2276     068E  141F               	bsf	31,0	;volatile
  2277     068F                     l1793:
  2278                           
  2279                           ;HC05BT_prueba.c: 163:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  2280     068F  3021               	movlw	33
  2281     0690  00F3               	movwf	??_setup
  2282     0691                     u1807:
  2283     0691  0BF3               	decfsz	??_setup,f
  2284     0692  2E91               	goto	u1807
  2285     0693                     l1795:
  2286                           
  2287                           ;HC05BT_prueba.c: 165:     PIR1bits.ADIF = 0;
  2288     0693  1283               	bcf	3,5	;RP0=0, select bank0
  2289     0694  1303               	bcf	3,6	;RP1=0, select bank0
  2290     0695  130C               	bcf	12,6	;volatile
  2291     0696                     l1797:
  2292                           
  2293                           ;HC05BT_prueba.c: 166:     PIE1bits.ADIE = 1;
  2294     0696  1683               	bsf	3,5	;RP0=1, select bank1
  2295     0697  1303               	bcf	3,6	;RP1=0, select bank1
  2296     0698  170C               	bsf	12,6	;volatile
  2297     0699                     l1799:
  2298                           
  2299                           ;HC05BT_prueba.c: 167:     INTCONbits.PEIE = 1;
  2300     0699  170B               	bsf	11,6	;volatile
  2301     069A                     l1801:
  2302                           
  2303                           ;HC05BT_prueba.c: 168:     INTCONbits.GIE = 1;
  2304     069A  178B               	bsf	11,7	;volatile
  2305     069B                     l197:
  2306     069B  0008               	return
  2307     069C                     __end_of_setup:
  2308                           
  2309                           	psect	text6
  2310     06ED                     __ptext6:	
  2311 ;; *************** function _preguntas *****************
  2312 ;; Defined at:
  2313 ;;		line 171 in file "HC05BT_prueba.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;		None
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;		None
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  1    wreg      void 
  2320 ;; Registers used:
  2321 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2327 ;;      Params:         0       0       0       0       0
  2328 ;;      Locals:         0       0       0       0       0
  2329 ;;      Temps:          0       0       0       0       0
  2330 ;;      Totals:         0       0       0       0       0
  2331 ;;Total ram usage:        0 bytes
  2332 ;; Hardware stack levels used: 1
  2333 ;; Hardware stack levels required when called: 3
  2334 ;; This function calls:
  2335 ;;		_UART_Print
  2336 ;; This function is called by:
  2337 ;;		_main
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341     06ED                     _preguntas:	
  2342                           ;psect for function _preguntas
  2343                           
  2344     06ED                     l1923:	
  2345                           ;incstack = 0
  2346                           ; Regs used in _preguntas: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2347                           
  2348                           
  2349                           ;HC05BT_prueba.c: 173:     UART_Print ("1.Leer potenciometro\r\n");
  2350     06ED  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2351     06EE  00F4               	movwf	UART_Print@data
  2352     06EF  3080               	movlw	128
  2353     06F0  00F5               	movwf	UART_Print@data+1
  2354     06F1  120A  118A  2649  120A  118A  	fcall	_UART_Print
  2355                           
  2356                           ;HC05BT_prueba.c: 174:     UART_Print (message);
  2357     06F6  300B               	movlw	(low ((_message-__stringbase)| (0+32768)))& (0+255)
  2358     06F7  00F4               	movwf	UART_Print@data
  2359     06F8  3080               	movlw	128
  2360     06F9  00F5               	movwf	UART_Print@data+1
  2361     06FA  120A  118A  2649  120A  118A  	fcall	_UART_Print
  2362     06FF                     l200:
  2363     06FF  0008               	return
  2364     0700                     __end_of_preguntas:
  2365                           
  2366                           	psect	text7
  2367     0649                     __ptext7:	
  2368 ;; *************** function _UART_Print *****************
  2369 ;; Defined at:
  2370 ;;		line 65 in file "USARTmodl.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;  data            2    4[COMMON] PTR const unsigned char 
  2373 ;;		 -> STR_7(23), STR_5(3), main@text(9), STR_3(3), 
  2374 ;;		 -> STR_2(3), message(15), STR_1(23), 
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;  i               1    6[COMMON] unsigned char 
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  1    wreg      void 
  2379 ;; Registers used:
  2380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2386 ;;      Params:         2       0       0       0       0
  2387 ;;      Locals:         1       0       0       0       0
  2388 ;;      Temps:          0       0       0       0       0
  2389 ;;      Totals:         3       0       0       0       0
  2390 ;;Total ram usage:        3 bytes
  2391 ;; Hardware stack levels used: 1
  2392 ;; Hardware stack levels required when called: 2
  2393 ;; This function calls:
  2394 ;;		_UART_PutC
  2395 ;; This function is called by:
  2396 ;;		_main
  2397 ;;		_preguntas
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401     0649                     _UART_Print:	
  2402                           ;psect for function _UART_Print
  2403                           
  2404     0649                     l1565:	
  2405                           ;incstack = 0
  2406                           ; Regs used in _UART_Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2407                           
  2408                           
  2409                           ;USARTmodl.c: 65: void UART_Print(const char *data);USARTmodl.c: 66: {;USARTmodl.c: 67: 
      +                            uint8_t i = 0;
  2410     0649  01F6               	clrf	UART_Print@i
  2411                           
  2412                           ;USARTmodl.c: 68:   while (data[i] != '\0')
  2413     064A  2E60               	goto	l1571
  2414     064B                     l1567:
  2415                           
  2416                           ;USARTmodl.c: 69:     UART_PutC (data[i++]);
  2417     064B  0876               	movf	UART_Print@i,w
  2418     064C  0774               	addwf	UART_Print@data,w
  2419     064D  0084               	movwf	4
  2420     064E  0875               	movf	UART_Print@data+1,w
  2421     064F  1803               	skipnc
  2422     0650  0A75               	incf	UART_Print@data+1,w
  2423     0651  00FF               	movwf	btemp+1
  2424     0652  120A  118A  2580  120A  118A  	fcall	stringtab
  2425     0657  120A  118A  2720  120A  118A  	fcall	_UART_PutC
  2426     065C                     l1569:
  2427     065C  3001               	movlw	1
  2428     065D  00FF               	movwf	btemp+1
  2429     065E  087F               	movf	btemp+1,w
  2430     065F  07F6               	addwf	UART_Print@i,f
  2431     0660                     l1571:
  2432                           
  2433                           ;USARTmodl.c: 68:   while (data[i] != '\0')
  2434     0660  0876               	movf	UART_Print@i,w
  2435     0661  0774               	addwf	UART_Print@data,w
  2436     0662  0084               	movwf	4
  2437     0663  0875               	movf	UART_Print@data+1,w
  2438     0664  1803               	skipnc
  2439     0665  0A75               	incf	UART_Print@data+1,w
  2440     0666  1283               	bcf	3,5	;RP0=0, select bank0
  2441     0667  1303               	bcf	3,6	;RP1=0, select bank0
  2442     0668  00FF               	movwf	btemp+1
  2443     0669  120A  118A  2580  120A  118A  	fcall	stringtab
  2444     066E  3A00               	xorlw	0
  2445     066F  1D03               	skipz
  2446     0670  2E72               	goto	u951
  2447     0671  2E73               	goto	u950
  2448     0672                     u951:
  2449     0672  2E4B               	goto	l1567
  2450     0673                     u950:
  2451     0673                     l256:
  2452     0673  0008               	return
  2453     0674                     __end_of_UART_Print:
  2454                           
  2455                           	psect	text8
  2456     0720                     __ptext8:	
  2457 ;; *************** function _UART_PutC *****************
  2458 ;; Defined at:
  2459 ;;		line 59 in file "USARTmodl.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;  data            1    wreg     const unsigned char 
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;  data            1    3[COMMON] const unsigned char 
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  1    wreg      void 
  2466 ;; Registers used:
  2467 ;;		wreg
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2473 ;;      Params:         0       0       0       0       0
  2474 ;;      Locals:         1       0       0       0       0
  2475 ;;      Temps:          0       0       0       0       0
  2476 ;;      Totals:         1       0       0       0       0
  2477 ;;Total ram usage:        1 bytes
  2478 ;; Hardware stack levels used: 1
  2479 ;; Hardware stack levels required when called: 1
  2480 ;; This function calls:
  2481 ;;		Nothing
  2482 ;; This function is called by:
  2483 ;;		_main
  2484 ;;		_UART_Print
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488     0720                     _UART_PutC:	
  2489                           ;psect for function _UART_PutC
  2490                           
  2491                           
  2492                           ;incstack = 0
  2493                           ; Regs used in _UART_PutC: [wreg]
  2494                           ;UART_PutC@data stored from wreg
  2495     0720  00F3               	movwf	UART_PutC@data
  2496     0721                     l1561:
  2497     0721                     l247:	
  2498                           ;USARTmodl.c: 59: void UART_PutC(const char data);USARTmodl.c: 60: {;USARTmodl.c: 61:   
      +                          while (TRMT == 0);
  2499                           
  2500     0721  1683               	bsf	3,5	;RP0=1, select bank1
  2501     0722  1303               	bcf	3,6	;RP1=0, select bank1
  2502     0723  1C98               	btfss	24,1	;volatile
  2503     0724  2F26               	goto	u941
  2504     0725  2F27               	goto	u940
  2505     0726                     u941:
  2506     0726  2F21               	goto	l247
  2507     0727                     u940:
  2508     0727                     l1563:
  2509                           
  2510                           ;USARTmodl.c: 62:   TXREG = data;
  2511     0727  0873               	movf	UART_PutC@data,w
  2512     0728  1283               	bcf	3,5	;RP0=0, select bank0
  2513     0729  1303               	bcf	3,6	;RP1=0, select bank0
  2514     072A  0099               	movwf	25	;volatile
  2515     072B                     l250:
  2516     072B  0008               	return
  2517     072C                     __end_of_UART_PutC:
  2518                           
  2519                           	psect	text9
  2520     051A                     __ptext9:	
  2521 ;; *************** function _map *****************
  2522 ;; Defined at:
  2523 ;;		line 176 in file "HC05BT_prueba.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;  varmap          2   21[BANK0 ] unsigned int 
  2526 ;;  minval          2   23[BANK0 ] unsigned int 
  2527 ;;  maxval          2   25[BANK0 ] unsigned int 
  2528 ;;  minsal          2   27[BANK0 ] unsigned int 
  2529 ;;  maxsal          2   29[BANK0 ] unsigned int 
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;  valmap          4   37[BANK0 ] float 
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  2   21[BANK0 ] unsigned int 
  2534 ;; Registers used:
  2535 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2541 ;;      Params:         0      10       0       0       0
  2542 ;;      Locals:         0       4       0       0       0
  2543 ;;      Temps:          0       6       0       0       0
  2544 ;;      Totals:         0      20       0       0       0
  2545 ;;Total ram usage:       20 bytes
  2546 ;; Hardware stack levels used: 1
  2547 ;; Hardware stack levels required when called: 2
  2548 ;; This function calls:
  2549 ;;		___fltol
  2550 ;;		___lwdiv
  2551 ;;		___wmul
  2552 ;;		___xxtofl
  2553 ;; This function is called by:
  2554 ;;		_main
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558     051A                     _map:	
  2559                           ;psect for function _map
  2560                           
  2561     051A                     l1919:	
  2562                           ;incstack = 0
  2563                           ; Regs used in _map: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2564                           
  2565                           
  2566                           ;HC05BT_prueba.c: 177:   float valmap =((varmap - minval) * (maxsal - minsal)) / (maxval
      +                           - minval) + minsal;
  2567     051A  1283               	bcf	3,5	;RP0=0, select bank0
  2568     051B  1303               	bcf	3,6	;RP1=0, select bank0
  2569     051C  083B               	movf	map@minsal,w
  2570     051D  023D               	subwf	map@maxsal,w
  2571     051E  00F5               	movwf	___wmul@multiplicand
  2572     051F  083C               	movf	map@minsal+1,w
  2573     0520  1C03               	skipc
  2574     0521  0A3C               	incf	map@minsal+1,w
  2575     0522  023E               	subwf	map@maxsal+1,w
  2576     0523  00F6               	movwf	___wmul@multiplicand+1
  2577     0524  0837               	movf	map@minval,w
  2578     0525  0235               	subwf	map@varmap,w
  2579     0526  00F3               	movwf	___wmul@multiplier
  2580     0527  0838               	movf	map@minval+1,w
  2581     0528  1C03               	skipc
  2582     0529  0A38               	incf	map@minval+1,w
  2583     052A  0236               	subwf	map@varmap+1,w
  2584     052B  00F4               	movwf	___wmul@multiplier+1
  2585     052C  120A  118A  269C  120A  118A  	fcall	___wmul
  2586     0531  0874               	movf	?___wmul+1,w
  2587     0532  1283               	bcf	3,5	;RP0=0, select bank0
  2588     0533  1303               	bcf	3,6	;RP1=0, select bank0
  2589     0534  00A3               	movwf	___lwdiv@dividend+1
  2590     0535  0873               	movf	?___wmul,w
  2591     0536  00A2               	movwf	___lwdiv@dividend
  2592     0537  0837               	movf	map@minval,w
  2593     0538  0239               	subwf	map@maxval,w
  2594     0539  00A0               	movwf	___lwdiv@divisor
  2595     053A  0838               	movf	map@minval+1,w
  2596     053B  1C03               	skipc
  2597     053C  0A38               	incf	map@minval+1,w
  2598     053D  023A               	subwf	map@maxval+1,w
  2599     053E  00A1               	movwf	___lwdiv@divisor+1
  2600     053F  120A  118A  25C7  120A  118A  	fcall	___lwdiv
  2601     0544  1283               	bcf	3,5	;RP0=0, select bank0
  2602     0545  1303               	bcf	3,6	;RP1=0, select bank0
  2603     0546  083B               	movf	map@minsal,w
  2604     0547  0720               	addwf	?___lwdiv,w
  2605     0548  00BF               	movwf	??_map
  2606     0549  083C               	movf	map@minsal+1,w
  2607     054A  1803               	skipnc
  2608     054B  0A3C               	incf	map@minsal+1,w
  2609     054C  0721               	addwf	?___lwdiv+1,w
  2610     054D  00C0               	movwf	??_map+1
  2611     054E  083F               	movf	??_map,w
  2612     054F  00C1               	movwf	??_map+2
  2613     0550  0840               	movf	??_map+1,w
  2614     0551  00C2               	movwf	??_map+3
  2615     0552  01C3               	clrf	??_map+4
  2616     0553  01C4               	clrf	??_map+5
  2617     0554  0844               	movf	??_map+5,w
  2618     0555  00AA               	movwf	___xxtofl@val+3
  2619     0556  0843               	movf	??_map+4,w
  2620     0557  00A9               	movwf	___xxtofl@val+2
  2621     0558  0842               	movf	??_map+3,w
  2622     0559  00A8               	movwf	___xxtofl@val+1
  2623     055A  0841               	movf	??_map+2,w
  2624     055B  00A7               	movwf	___xxtofl@val
  2625     055C  3000               	movlw	0
  2626     055D  120A  118A  22E0  120A  118A  	fcall	___xxtofl
  2627     0562  1283               	bcf	3,5	;RP0=0, select bank0
  2628     0563  1303               	bcf	3,6	;RP1=0, select bank0
  2629     0564  082A               	movf	?___xxtofl+3,w
  2630     0565  00C8               	movwf	map@valmap+3
  2631     0566  0829               	movf	?___xxtofl+2,w
  2632     0567  00C7               	movwf	map@valmap+2
  2633     0568  0828               	movf	?___xxtofl+1,w
  2634     0569  00C6               	movwf	map@valmap+1
  2635     056A  0827               	movf	?___xxtofl,w
  2636     056B  00C5               	movwf	map@valmap
  2637                           
  2638                           ;HC05BT_prueba.c: 178:   return valmap;
  2639     056C  0848               	movf	map@valmap+3,w
  2640     056D  00F6               	movwf	___fltol@f1+3
  2641     056E  0847               	movf	map@valmap+2,w
  2642     056F  00F5               	movwf	___fltol@f1+2
  2643     0570  0846               	movf	map@valmap+1,w
  2644     0571  00F4               	movwf	___fltol@f1+1
  2645     0572  0845               	movf	map@valmap,w
  2646     0573  00F3               	movwf	___fltol@f1
  2647     0574  120A  118A  243A  120A  118A  	fcall	___fltol
  2648     0579  0874               	movf	?___fltol+1,w
  2649     057A  1283               	bcf	3,5	;RP0=0, select bank0
  2650     057B  1303               	bcf	3,6	;RP1=0, select bank0
  2651     057C  00B6               	movwf	?_map+1
  2652     057D  0873               	movf	?___fltol,w
  2653     057E  00B5               	movwf	?_map
  2654     057F                     l203:
  2655     057F  0008               	return
  2656     0580                     __end_of_map:
  2657                           
  2658                           	psect	text10
  2659     02E0                     __ptext10:	
  2660 ;; *************** function ___xxtofl *****************
  2661 ;; Defined at:
  2662 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\xxtofl.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;  sign            1    wreg     unsigned char 
  2665 ;;  val             4    7[BANK0 ] long 
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;  sign            1   15[BANK0 ] unsigned char 
  2668 ;;  arg             4   17[BANK0 ] unsigned long 
  2669 ;;  exp             1   16[BANK0 ] unsigned char 
  2670 ;; Return value:  Size  Location     Type
  2671 ;;                  4    7[BANK0 ] unsigned char 
  2672 ;; Registers used:
  2673 ;;		wreg, status,2, status,0, btemp+1
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2679 ;;      Params:         0       4       0       0       0
  2680 ;;      Locals:         0       6       0       0       0
  2681 ;;      Temps:          0       4       0       0       0
  2682 ;;      Totals:         0      14       0       0       0
  2683 ;;Total ram usage:       14 bytes
  2684 ;; Hardware stack levels used: 1
  2685 ;; Hardware stack levels required when called: 1
  2686 ;; This function calls:
  2687 ;;		Nothing
  2688 ;; This function is called by:
  2689 ;;		_map
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693     02E0                     ___xxtofl:	
  2694                           ;psect for function ___xxtofl
  2695                           
  2696                           
  2697                           ;incstack = 0
  2698                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  2699                           ;___xxtofl@sign stored from wreg
  2700     02E0  1283               	bcf	3,5	;RP0=0, select bank0
  2701     02E1  1303               	bcf	3,6	;RP1=0, select bank0
  2702     02E2  00AF               	movwf	___xxtofl@sign
  2703     02E3                     l1711:
  2704     02E3  082F               	movf	___xxtofl@sign,w
  2705     02E4  1903               	btfsc	3,2
  2706     02E5  2AE7               	goto	u1321
  2707     02E6  2AE8               	goto	u1320
  2708     02E7                     u1321:
  2709     02E7  2AFC               	goto	l1717
  2710     02E8                     u1320:
  2711     02E8                     l1713:
  2712     02E8  1FAA               	btfss	___xxtofl@val+3,7
  2713     02E9  2AEB               	goto	u1331
  2714     02EA  2AEC               	goto	u1330
  2715     02EB                     u1331:
  2716     02EB  2AFC               	goto	l1717
  2717     02EC                     u1330:
  2718     02EC                     l1715:
  2719     02EC  0927               	comf	___xxtofl@val,w
  2720     02ED  00B1               	movwf	___xxtofl@arg
  2721     02EE  0928               	comf	___xxtofl@val+1,w
  2722     02EF  00B2               	movwf	___xxtofl@arg+1
  2723     02F0  0929               	comf	___xxtofl@val+2,w
  2724     02F1  00B3               	movwf	___xxtofl@arg+2
  2725     02F2  092A               	comf	___xxtofl@val+3,w
  2726     02F3  00B4               	movwf	___xxtofl@arg+3
  2727     02F4  0AB1               	incf	___xxtofl@arg,f
  2728     02F5  1903               	skipnz
  2729     02F6  0AB2               	incf	___xxtofl@arg+1,f
  2730     02F7  1903               	skipnz
  2731     02F8  0AB3               	incf	___xxtofl@arg+2,f
  2732     02F9  1903               	skipnz
  2733     02FA  0AB4               	incf	___xxtofl@arg+3,f
  2734     02FB  2B04               	goto	l821
  2735     02FC                     l1717:
  2736     02FC  082A               	movf	___xxtofl@val+3,w
  2737     02FD  00B4               	movwf	___xxtofl@arg+3
  2738     02FE  0829               	movf	___xxtofl@val+2,w
  2739     02FF  00B3               	movwf	___xxtofl@arg+2
  2740     0300  0828               	movf	___xxtofl@val+1,w
  2741     0301  00B2               	movwf	___xxtofl@arg+1
  2742     0302  0827               	movf	___xxtofl@val,w
  2743     0303  00B1               	movwf	___xxtofl@arg
  2744     0304                     l821:
  2745     0304  082A               	movf	___xxtofl@val+3,w
  2746     0305  0429               	iorwf	___xxtofl@val+2,w
  2747     0306  0428               	iorwf	___xxtofl@val+1,w
  2748     0307  0427               	iorwf	___xxtofl@val,w
  2749     0308  1D03               	skipz
  2750     0309  2B0B               	goto	u1341
  2751     030A  2B0C               	goto	u1340
  2752     030B                     u1341:
  2753     030B  2B15               	goto	l1723
  2754     030C                     u1340:
  2755     030C                     l1719:
  2756     030C  3000               	movlw	0
  2757     030D  00AA               	movwf	?___xxtofl+3
  2758     030E  3000               	movlw	0
  2759     030F  00A9               	movwf	?___xxtofl+2
  2760     0310  3000               	movlw	0
  2761     0311  00A8               	movwf	?___xxtofl+1
  2762     0312  3000               	movlw	0
  2763     0313  00A7               	movwf	?___xxtofl
  2764     0314  2B99               	goto	l823
  2765     0315                     l1723:
  2766     0315  3096               	movlw	150
  2767     0316  00B0               	movwf	___xxtofl@exp
  2768     0317  2B25               	goto	l1729
  2769     0318                     l1725:
  2770     0318  3001               	movlw	1
  2771     0319  00FF               	movwf	btemp+1
  2772     031A  087F               	movf	btemp+1,w
  2773     031B  07B0               	addwf	___xxtofl@exp,f
  2774     031C                     l1727:
  2775     031C  3001               	movlw	1
  2776     031D                     u1355:
  2777     031D  1003               	clrc
  2778     031E  0CB4               	rrf	___xxtofl@arg+3,f
  2779     031F  0CB3               	rrf	___xxtofl@arg+2,f
  2780     0320  0CB2               	rrf	___xxtofl@arg+1,f
  2781     0321  0CB1               	rrf	___xxtofl@arg,f
  2782     0322  3EFF               	addlw	-1
  2783     0323  1D03               	skipz
  2784     0324  2B1D               	goto	u1355
  2785     0325                     l1729:
  2786     0325  30FE               	movlw	254
  2787     0326  0534               	andwf	___xxtofl@arg+3,w
  2788     0327  1D03               	btfss	3,2
  2789     0328  2B2A               	goto	u1361
  2790     0329  2B2B               	goto	u1360
  2791     032A                     u1361:
  2792     032A  2B18               	goto	l1725
  2793     032B                     u1360:
  2794     032B  2B47               	goto	l1737
  2795     032C                     l1731:
  2796     032C  3001               	movlw	1
  2797     032D  00FF               	movwf	btemp+1
  2798     032E  087F               	movf	btemp+1,w
  2799     032F  07B0               	addwf	___xxtofl@exp,f
  2800     0330                     l1733:
  2801     0330  3001               	movlw	1
  2802     0331  07B1               	addwf	___xxtofl@arg,f
  2803     0332  3000               	movlw	0
  2804     0333  1803               	skipnc
  2805     0334  3001               	movlw	1
  2806     0335  07B2               	addwf	___xxtofl@arg+1,f
  2807     0336  3000               	movlw	0
  2808     0337  1803               	skipnc
  2809     0338  3001               	movlw	1
  2810     0339  07B3               	addwf	___xxtofl@arg+2,f
  2811     033A  3000               	movlw	0
  2812     033B  1803               	skipnc
  2813     033C  3001               	movlw	1
  2814     033D  07B4               	addwf	___xxtofl@arg+3,f
  2815     033E                     l1735:
  2816     033E  3001               	movlw	1
  2817     033F                     u1375:
  2818     033F  1003               	clrc
  2819     0340  0CB4               	rrf	___xxtofl@arg+3,f
  2820     0341  0CB3               	rrf	___xxtofl@arg+2,f
  2821     0342  0CB2               	rrf	___xxtofl@arg+1,f
  2822     0343  0CB1               	rrf	___xxtofl@arg,f
  2823     0344  3EFF               	addlw	-1
  2824     0345  1D03               	skipz
  2825     0346  2B3F               	goto	u1375
  2826     0347                     l1737:
  2827     0347  30FF               	movlw	255
  2828     0348  0534               	andwf	___xxtofl@arg+3,w
  2829     0349  1D03               	btfss	3,2
  2830     034A  2B4C               	goto	u1381
  2831     034B  2B4D               	goto	u1380
  2832     034C                     u1381:
  2833     034C  2B2C               	goto	l1731
  2834     034D                     u1380:
  2835     034D  2B59               	goto	l1741
  2836     034E                     l1739:
  2837     034E  3001               	movlw	1
  2838     034F  02B0               	subwf	___xxtofl@exp,f
  2839     0350  3001               	movlw	1
  2840     0351  00AB               	movwf	??___xxtofl
  2841     0352                     u1395:
  2842     0352  1003               	clrc
  2843     0353  0DB1               	rlf	___xxtofl@arg,f
  2844     0354  0DB2               	rlf	___xxtofl@arg+1,f
  2845     0355  0DB3               	rlf	___xxtofl@arg+2,f
  2846     0356  0DB4               	rlf	___xxtofl@arg+3,f
  2847     0357  0BAB               	decfsz	??___xxtofl,f
  2848     0358  2B52               	goto	u1395
  2849     0359                     l1741:
  2850     0359  1BB3               	btfsc	___xxtofl@arg+2,7
  2851     035A  2B5C               	goto	u1401
  2852     035B  2B5D               	goto	u1400
  2853     035C                     u1401:
  2854     035C  2B63               	goto	l834
  2855     035D                     u1400:
  2856     035D                     l1743:
  2857     035D  3002               	movlw	2
  2858     035E  0230               	subwf	___xxtofl@exp,w
  2859     035F  1803               	skipnc
  2860     0360  2B62               	goto	u1411
  2861     0361  2B63               	goto	u1410
  2862     0362                     u1411:
  2863     0362  2B4E               	goto	l1739
  2864     0363                     u1410:
  2865     0363                     l834:
  2866     0363  1830               	btfsc	___xxtofl@exp,0
  2867     0364  2B66               	goto	u1421
  2868     0365  2B67               	goto	u1420
  2869     0366                     u1421:
  2870     0366  2B6F               	goto	l835
  2871     0367                     u1420:
  2872     0367                     l1745:
  2873     0367  30FF               	movlw	255
  2874     0368  05B1               	andwf	___xxtofl@arg,f
  2875     0369  30FF               	movlw	255
  2876     036A  05B2               	andwf	___xxtofl@arg+1,f
  2877     036B  307F               	movlw	127
  2878     036C  05B3               	andwf	___xxtofl@arg+2,f
  2879     036D  30FF               	movlw	255
  2880     036E  05B4               	andwf	___xxtofl@arg+3,f
  2881     036F                     l835:
  2882     036F  1003               	clrc
  2883     0370  0CB0               	rrf	___xxtofl@exp,f
  2884     0371                     l1747:
  2885     0371  0830               	movf	___xxtofl@exp,w
  2886     0372  00AB               	movwf	??___xxtofl
  2887     0373  01AC               	clrf	??___xxtofl+1
  2888     0374  01AD               	clrf	??___xxtofl+2
  2889     0375  01AE               	clrf	??___xxtofl+3
  2890     0376  3018               	movlw	24
  2891     0377                     u1435:
  2892     0377  1003               	clrc
  2893     0378  0DAB               	rlf	??___xxtofl,f
  2894     0379  0DAC               	rlf	??___xxtofl+1,f
  2895     037A  0DAD               	rlf	??___xxtofl+2,f
  2896     037B  0DAE               	rlf	??___xxtofl+3,f
  2897     037C                     u1430:
  2898     037C  3EFF               	addlw	-1
  2899     037D  1D03               	skipz
  2900     037E  2B77               	goto	u1435
  2901     037F  082B               	movf	??___xxtofl,w
  2902     0380  04B1               	iorwf	___xxtofl@arg,f
  2903     0381  082C               	movf	??___xxtofl+1,w
  2904     0382  04B2               	iorwf	___xxtofl@arg+1,f
  2905     0383  082D               	movf	??___xxtofl+2,w
  2906     0384  04B3               	iorwf	___xxtofl@arg+2,f
  2907     0385  082E               	movf	??___xxtofl+3,w
  2908     0386  04B4               	iorwf	___xxtofl@arg+3,f
  2909     0387                     l1749:
  2910     0387  082F               	movf	___xxtofl@sign,w
  2911     0388  1903               	btfsc	3,2
  2912     0389  2B8B               	goto	u1441
  2913     038A  2B8C               	goto	u1440
  2914     038B                     u1441:
  2915     038B  2B91               	goto	l1755
  2916     038C                     u1440:
  2917     038C                     l1751:
  2918     038C  1FAA               	btfss	___xxtofl@val+3,7
  2919     038D  2B8F               	goto	u1451
  2920     038E  2B90               	goto	u1450
  2921     038F                     u1451:
  2922     038F  2B91               	goto	l1755
  2923     0390                     u1450:
  2924     0390                     l1753:
  2925     0390  17B4               	bsf	___xxtofl@arg+3,7
  2926     0391                     l1755:
  2927     0391  0834               	movf	___xxtofl@arg+3,w
  2928     0392  00AA               	movwf	?___xxtofl+3
  2929     0393  0833               	movf	___xxtofl@arg+2,w
  2930     0394  00A9               	movwf	?___xxtofl+2
  2931     0395  0832               	movf	___xxtofl@arg+1,w
  2932     0396  00A8               	movwf	?___xxtofl+1
  2933     0397  0831               	movf	___xxtofl@arg,w
  2934     0398  00A7               	movwf	?___xxtofl
  2935     0399                     l823:
  2936     0399  0008               	return
  2937     039A                     __end_of___xxtofl:
  2938                           
  2939                           	psect	text11
  2940     069C                     __ptext11:	
  2941 ;; *************** function ___wmul *****************
  2942 ;; Defined at:
  2943 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;  multiplier      2    3[COMMON] unsigned int 
  2946 ;;  multiplicand    2    5[COMMON] unsigned int 
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;  product         2    7[COMMON] unsigned int 
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  2    3[COMMON] unsigned int 
  2951 ;; Registers used:
  2952 ;;		wreg, status,2, status,0
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2958 ;;      Params:         4       0       0       0       0
  2959 ;;      Locals:         2       0       0       0       0
  2960 ;;      Temps:          0       0       0       0       0
  2961 ;;      Totals:         6       0       0       0       0
  2962 ;;Total ram usage:        6 bytes
  2963 ;; Hardware stack levels used: 1
  2964 ;; Hardware stack levels required when called: 1
  2965 ;; This function calls:
  2966 ;;		Nothing
  2967 ;; This function is called by:
  2968 ;;		_map
  2969 ;;		_sprintf
  2970 ;; This function uses a non-reentrant model
  2971 ;;
  2972                           
  2973     069C                     ___wmul:	
  2974                           ;psect for function ___wmul
  2975                           
  2976     069C                     l1585:	
  2977                           ;incstack = 0
  2978                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2979                           
  2980     069C  01F7               	clrf	___wmul@product
  2981     069D  01F8               	clrf	___wmul@product+1
  2982     069E                     l1587:
  2983     069E  1C73               	btfss	___wmul@multiplier,0
  2984     069F  2EA1               	goto	u981
  2985     06A0  2EA2               	goto	u980
  2986     06A1                     u981:
  2987     06A1  2EA8               	goto	l388
  2988     06A2                     u980:
  2989     06A2                     l1589:
  2990     06A2  0875               	movf	___wmul@multiplicand,w
  2991     06A3  07F7               	addwf	___wmul@product,f
  2992     06A4  1803               	skipnc
  2993     06A5  0AF8               	incf	___wmul@product+1,f
  2994     06A6  0876               	movf	___wmul@multiplicand+1,w
  2995     06A7  07F8               	addwf	___wmul@product+1,f
  2996     06A8                     l388:
  2997     06A8  3001               	movlw	1
  2998     06A9                     u995:
  2999     06A9  1003               	clrc
  3000     06AA  0DF5               	rlf	___wmul@multiplicand,f
  3001     06AB  0DF6               	rlf	___wmul@multiplicand+1,f
  3002     06AC  3EFF               	addlw	-1
  3003     06AD  1D03               	skipz
  3004     06AE  2EA9               	goto	u995
  3005     06AF                     l1591:
  3006     06AF  3001               	movlw	1
  3007     06B0                     u1005:
  3008     06B0  1003               	clrc
  3009     06B1  0CF4               	rrf	___wmul@multiplier+1,f
  3010     06B2  0CF3               	rrf	___wmul@multiplier,f
  3011     06B3  3EFF               	addlw	-1
  3012     06B4  1D03               	skipz
  3013     06B5  2EB0               	goto	u1005
  3014     06B6                     l1593:
  3015     06B6  0873               	movf	___wmul@multiplier,w
  3016     06B7  0474               	iorwf	___wmul@multiplier+1,w
  3017     06B8  1D03               	btfss	3,2
  3018     06B9  2EBB               	goto	u1011
  3019     06BA  2EBC               	goto	u1010
  3020     06BB                     u1011:
  3021     06BB  2E9E               	goto	l1587
  3022     06BC                     u1010:
  3023     06BC                     l1595:
  3024     06BC  0878               	movf	___wmul@product+1,w
  3025     06BD  00F4               	movwf	?___wmul+1
  3026     06BE  0877               	movf	___wmul@product,w
  3027     06BF  00F3               	movwf	?___wmul
  3028     06C0                     l390:
  3029     06C0  0008               	return
  3030     06C1                     __end_of___wmul:
  3031                           
  3032                           	psect	text12
  3033     05C7                     __ptext12:	
  3034 ;; *************** function ___lwdiv *****************
  3035 ;; Defined at:
  3036 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;  divisor         2    0[BANK0 ] unsigned int 
  3039 ;;  dividend        2    2[BANK0 ] unsigned int 
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;  quotient        2    4[BANK0 ] unsigned int 
  3042 ;;  counter         1    6[BANK0 ] unsigned char 
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  2    0[BANK0 ] unsigned int 
  3045 ;; Registers used:
  3046 ;;		wreg, status,2, status,0, btemp+1
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3052 ;;      Params:         0       4       0       0       0
  3053 ;;      Locals:         0       3       0       0       0
  3054 ;;      Temps:          0       0       0       0       0
  3055 ;;      Totals:         0       7       0       0       0
  3056 ;;Total ram usage:        7 bytes
  3057 ;; Hardware stack levels used: 1
  3058 ;; Hardware stack levels required when called: 1
  3059 ;; This function calls:
  3060 ;;		Nothing
  3061 ;; This function is called by:
  3062 ;;		_map
  3063 ;;		_sprintf
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067     05C7                     ___lwdiv:	
  3068                           ;psect for function ___lwdiv
  3069                           
  3070     05C7                     l1663:	
  3071                           ;incstack = 0
  3072                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  3073                           
  3074     05C7  1283               	bcf	3,5	;RP0=0, select bank0
  3075     05C8  1303               	bcf	3,6	;RP1=0, select bank0
  3076     05C9  01A4               	clrf	___lwdiv@quotient
  3077     05CA  01A5               	clrf	___lwdiv@quotient+1
  3078     05CB                     l1665:
  3079     05CB  0820               	movf	___lwdiv@divisor,w
  3080     05CC  0421               	iorwf	___lwdiv@divisor+1,w
  3081     05CD  1903               	btfsc	3,2
  3082     05CE  2DD0               	goto	u1191
  3083     05CF  2DD1               	goto	u1190
  3084     05D0                     u1191:
  3085     05D0  2E08               	goto	l1685
  3086     05D1                     u1190:
  3087     05D1                     l1667:
  3088     05D1  01A6               	clrf	___lwdiv@counter
  3089     05D2  0AA6               	incf	___lwdiv@counter,f
  3090     05D3  2DDF               	goto	l1673
  3091     05D4                     l1669:
  3092     05D4  3001               	movlw	1
  3093     05D5                     u1205:
  3094     05D5  1003               	clrc
  3095     05D6  0DA0               	rlf	___lwdiv@divisor,f
  3096     05D7  0DA1               	rlf	___lwdiv@divisor+1,f
  3097     05D8  3EFF               	addlw	-1
  3098     05D9  1D03               	skipz
  3099     05DA  2DD5               	goto	u1205
  3100     05DB                     l1671:
  3101     05DB  3001               	movlw	1
  3102     05DC  00FF               	movwf	btemp+1
  3103     05DD  087F               	movf	btemp+1,w
  3104     05DE  07A6               	addwf	___lwdiv@counter,f
  3105     05DF                     l1673:
  3106     05DF  1FA1               	btfss	___lwdiv@divisor+1,7
  3107     05E0  2DE2               	goto	u1211
  3108     05E1  2DE3               	goto	u1210
  3109     05E2                     u1211:
  3110     05E2  2DD4               	goto	l1669
  3111     05E3                     u1210:
  3112     05E3                     l1675:
  3113     05E3  3001               	movlw	1
  3114     05E4                     u1225:
  3115     05E4  1003               	clrc
  3116     05E5  0DA4               	rlf	___lwdiv@quotient,f
  3117     05E6  0DA5               	rlf	___lwdiv@quotient+1,f
  3118     05E7  3EFF               	addlw	-1
  3119     05E8  1D03               	skipz
  3120     05E9  2DE4               	goto	u1225
  3121     05EA  0821               	movf	___lwdiv@divisor+1,w
  3122     05EB  0223               	subwf	___lwdiv@dividend+1,w
  3123     05EC  1D03               	skipz
  3124     05ED  2DF0               	goto	u1235
  3125     05EE  0820               	movf	___lwdiv@divisor,w
  3126     05EF  0222               	subwf	___lwdiv@dividend,w
  3127     05F0                     u1235:
  3128     05F0  1C03               	skipc
  3129     05F1  2DF3               	goto	u1231
  3130     05F2  2DF4               	goto	u1230
  3131     05F3                     u1231:
  3132     05F3  2DFB               	goto	l1681
  3133     05F4                     u1230:
  3134     05F4                     l1677:
  3135     05F4  0820               	movf	___lwdiv@divisor,w
  3136     05F5  02A2               	subwf	___lwdiv@dividend,f
  3137     05F6  0821               	movf	___lwdiv@divisor+1,w
  3138     05F7  1C03               	skipc
  3139     05F8  03A3               	decf	___lwdiv@dividend+1,f
  3140     05F9  02A3               	subwf	___lwdiv@dividend+1,f
  3141     05FA                     l1679:
  3142     05FA  1424               	bsf	___lwdiv@quotient,0
  3143     05FB                     l1681:
  3144     05FB  3001               	movlw	1
  3145     05FC                     u1245:
  3146     05FC  1003               	clrc
  3147     05FD  0CA1               	rrf	___lwdiv@divisor+1,f
  3148     05FE  0CA0               	rrf	___lwdiv@divisor,f
  3149     05FF  3EFF               	addlw	-1
  3150     0600  1D03               	skipz
  3151     0601  2DFC               	goto	u1245
  3152     0602                     l1683:
  3153     0602  3001               	movlw	1
  3154     0603  02A6               	subwf	___lwdiv@counter,f
  3155     0604  1D03               	btfss	3,2
  3156     0605  2E07               	goto	u1251
  3157     0606  2E08               	goto	u1250
  3158     0607                     u1251:
  3159     0607  2DE3               	goto	l1675
  3160     0608                     u1250:
  3161     0608                     l1685:
  3162     0608  0825               	movf	___lwdiv@quotient+1,w
  3163     0609  00A1               	movwf	?___lwdiv+1
  3164     060A  0824               	movf	___lwdiv@quotient,w
  3165     060B  00A0               	movwf	?___lwdiv
  3166     060C                     l660:
  3167     060C  0008               	return
  3168     060D                     __end_of___lwdiv:
  3169                           
  3170                           	psect	text13
  3171     043A                     __ptext13:	
  3172 ;; *************** function ___fltol *****************
  3173 ;; Defined at:
  3174 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fltol.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;  f1              4    3[COMMON] unsigned int 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  exp1            1    1[BANK0 ] unsigned char 
  3179 ;;  sign1           1    0[BANK0 ] unsigned char 
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  4    3[COMMON] long 
  3182 ;; Registers used:
  3183 ;;		wreg, status,2, status,0, btemp+1
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3189 ;;      Params:         4       0       0       0       0
  3190 ;;      Locals:         0       2       0       0       0
  3191 ;;      Temps:          4       0       0       0       0
  3192 ;;      Totals:         8       2       0       0       0
  3193 ;;Total ram usage:       10 bytes
  3194 ;; Hardware stack levels used: 1
  3195 ;; Hardware stack levels required when called: 1
  3196 ;; This function calls:
  3197 ;;		Nothing
  3198 ;; This function is called by:
  3199 ;;		_map
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202                           
  3203     043A                     ___fltol:	
  3204                           ;psect for function ___fltol
  3205                           
  3206     043A                     l1625:	
  3207                           ;incstack = 0
  3208                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  3209                           
  3210     043A  1003               	clrc
  3211     043B  0D75               	rlf	___fltol@f1+2,w
  3212     043C  0D76               	rlf	___fltol@f1+3,w
  3213     043D  1283               	bcf	3,5	;RP0=0, select bank0
  3214     043E  1303               	bcf	3,6	;RP1=0, select bank0
  3215     043F  00A1               	movwf	___fltol@exp1
  3216     0440  0821               	movf	___fltol@exp1,w
  3217     0441  1D03               	btfss	3,2
  3218     0442  2C44               	goto	u1091
  3219     0443  2C45               	goto	u1090
  3220     0444                     u1091:
  3221     0444  2C4E               	goto	l1631
  3222     0445                     u1090:
  3223     0445                     l1627:
  3224     0445  3000               	movlw	0
  3225     0446  00F6               	movwf	?___fltol+3
  3226     0447  3000               	movlw	0
  3227     0448  00F5               	movwf	?___fltol+2
  3228     0449  3000               	movlw	0
  3229     044A  00F4               	movwf	?___fltol+1
  3230     044B  3000               	movlw	0
  3231     044C  00F3               	movwf	?___fltol
  3232     044D  2CB1               	goto	l574
  3233     044E                     l1631:
  3234     044E  0873               	movf	___fltol@f1,w
  3235     044F  00F7               	movwf	??___fltol
  3236     0450  0874               	movf	___fltol@f1+1,w
  3237     0451  00F8               	movwf	??___fltol+1
  3238     0452  0875               	movf	___fltol@f1+2,w
  3239     0453  00F9               	movwf	??___fltol+2
  3240     0454  0876               	movf	___fltol@f1+3,w
  3241     0455  00FA               	movwf	??___fltol+3
  3242     0456  301F               	movlw	31
  3243     0457                     u1105:
  3244     0457  1003               	clrc
  3245     0458  0CFA               	rrf	??___fltol+3,f
  3246     0459  0CF9               	rrf	??___fltol+2,f
  3247     045A  0CF8               	rrf	??___fltol+1,f
  3248     045B  0CF7               	rrf	??___fltol,f
  3249     045C                     u1100:
  3250     045C  3EFF               	addlw	-1
  3251     045D  1D03               	skipz
  3252     045E  2C57               	goto	u1105
  3253     045F  0877               	movf	??___fltol,w
  3254     0460  00A0               	movwf	___fltol@sign1
  3255     0461                     l1633:
  3256     0461  17F5               	bsf	___fltol@f1+2,7
  3257     0462                     l1635:
  3258     0462  30FF               	movlw	255
  3259     0463  05F3               	andwf	___fltol@f1,f
  3260     0464  30FF               	movlw	255
  3261     0465  05F4               	andwf	___fltol@f1+1,f
  3262     0466  30FF               	movlw	255
  3263     0467  05F5               	andwf	___fltol@f1+2,f
  3264     0468  3000               	movlw	0
  3265     0469  05F6               	andwf	___fltol@f1+3,f
  3266     046A                     l1637:
  3267     046A  3096               	movlw	150
  3268     046B  02A1               	subwf	___fltol@exp1,f
  3269     046C                     l1639:
  3270     046C  1FA1               	btfss	___fltol@exp1,7
  3271     046D  2C6F               	goto	u1111
  3272     046E  2C70               	goto	u1110
  3273     046F                     u1111:
  3274     046F  2C8A               	goto	l1651
  3275     0470                     u1110:
  3276     0470                     l1641:
  3277     0470  0821               	movf	___fltol@exp1,w
  3278     0471  3A80               	xorlw	128
  3279     0472  3E97               	addlw	151
  3280     0473  1803               	skipnc
  3281     0474  2C76               	goto	u1121
  3282     0475  2C77               	goto	u1120
  3283     0476                     u1121:
  3284     0476  2C78               	goto	l1647
  3285     0477                     u1120:
  3286     0477  2C45               	goto	l1627
  3287     0478                     l1647:
  3288     0478  3001               	movlw	1
  3289     0479                     u1135:
  3290     0479  1003               	clrc
  3291     047A  0CF6               	rrf	___fltol@f1+3,f
  3292     047B  0CF5               	rrf	___fltol@f1+2,f
  3293     047C  0CF4               	rrf	___fltol@f1+1,f
  3294     047D  0CF3               	rrf	___fltol@f1,f
  3295     047E  3EFF               	addlw	-1
  3296     047F  1D03               	skipz
  3297     0480  2C79               	goto	u1135
  3298     0481                     l1649:
  3299     0481  3001               	movlw	1
  3300     0482  00FF               	movwf	btemp+1
  3301     0483  087F               	movf	btemp+1,w
  3302     0484  07A1               	addwf	___fltol@exp1,f
  3303     0485  1D03               	btfss	3,2
  3304     0486  2C88               	goto	u1141
  3305     0487  2C89               	goto	u1140
  3306     0488                     u1141:
  3307     0488  2C78               	goto	l1647
  3308     0489                     u1140:
  3309     0489  2CA1               	goto	l1659
  3310     048A                     l1651:
  3311     048A  3020               	movlw	32
  3312     048B  0221               	subwf	___fltol@exp1,w
  3313     048C  1C03               	skipc
  3314     048D  2C8F               	goto	u1151
  3315     048E  2C90               	goto	u1150
  3316     048F                     u1151:
  3317     048F  2C9C               	goto	l581
  3318     0490                     u1150:
  3319     0490  2C45               	goto	l1627
  3320     0491                     l1657:
  3321     0491  3001               	movlw	1
  3322     0492  00F7               	movwf	??___fltol
  3323     0493                     u1165:
  3324     0493  1003               	clrc
  3325     0494  0DF3               	rlf	___fltol@f1,f
  3326     0495  0DF4               	rlf	___fltol@f1+1,f
  3327     0496  0DF5               	rlf	___fltol@f1+2,f
  3328     0497  0DF6               	rlf	___fltol@f1+3,f
  3329     0498  0BF7               	decfsz	??___fltol,f
  3330     0499  2C93               	goto	u1165
  3331     049A  3001               	movlw	1
  3332     049B  02A1               	subwf	___fltol@exp1,f
  3333     049C                     l581:
  3334     049C  0821               	movf	___fltol@exp1,w
  3335     049D  1D03               	btfss	3,2
  3336     049E  2CA0               	goto	u1171
  3337     049F  2CA1               	goto	u1170
  3338     04A0                     u1171:
  3339     04A0  2C91               	goto	l1657
  3340     04A1                     u1170:
  3341     04A1                     l1659:
  3342     04A1  0820               	movf	___fltol@sign1,w
  3343     04A2  1903               	btfsc	3,2
  3344     04A3  2CA5               	goto	u1181
  3345     04A4  2CA6               	goto	u1180
  3346     04A5                     u1181:
  3347     04A5  2CB1               	goto	l584
  3348     04A6                     u1180:
  3349     04A6                     l1661:
  3350     04A6  09F3               	comf	___fltol@f1,f
  3351     04A7  09F4               	comf	___fltol@f1+1,f
  3352     04A8  09F5               	comf	___fltol@f1+2,f
  3353     04A9  09F6               	comf	___fltol@f1+3,f
  3354     04AA  0AF3               	incf	___fltol@f1,f
  3355     04AB  1903               	skipnz
  3356     04AC  0AF4               	incf	___fltol@f1+1,f
  3357     04AD  1903               	skipnz
  3358     04AE  0AF5               	incf	___fltol@f1+2,f
  3359     04AF  1903               	skipnz
  3360     04B0  0AF6               	incf	___fltol@f1+3,f
  3361     04B1                     l584:
  3362     04B1                     l574:
  3363     04B1  0008               	return
  3364     04B2                     __end_of___fltol:
  3365                           
  3366                           	psect	text14
  3367     039A                     __ptext14:	
  3368 ;; *************** function _UART_Init *****************
  3369 ;; Defined at:
  3370 ;;		line 14 in file "USARTmodl.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;  baud_rate       4    6[BANK0 ] const unsigned long 
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;  n               2   14[BANK0 ] int 
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  1    wreg      void 
  3377 ;; Registers used:
  3378 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3384 ;;      Params:         0       4       0       0       0
  3385 ;;      Locals:         0       2       0       0       0
  3386 ;;      Temps:          0       4       0       0       0
  3387 ;;      Totals:         0      10       0       0       0
  3388 ;;Total ram usage:       10 bytes
  3389 ;; Hardware stack levels used: 1
  3390 ;; Hardware stack levels required when called: 2
  3391 ;; This function calls:
  3392 ;;		___lldiv
  3393 ;; This function is called by:
  3394 ;;		_main
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397                           
  3398     039A                     _UART_Init:	
  3399                           ;psect for function _UART_Init
  3400                           
  3401     039A                     l1803:	
  3402                           ;incstack = 0
  3403                           ; Regs used in _UART_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3404                           
  3405                           
  3406                           ;USARTmodl.c: 14: void UART_Init(const uint32_t baud_rate);USARTmodl.c: 15: {;USARTmodl.
      +                          c: 16:   int16_t n = ( 8000000 / (16 * baud_rate) ) - 1;
  3407     039A  1283               	bcf	3,5	;RP0=0, select bank0
  3408     039B  1303               	bcf	3,6	;RP1=0, select bank0
  3409     039C  0826               	movf	UART_Init@baud_rate,w
  3410     039D  00AA               	movwf	??_UART_Init
  3411     039E  0827               	movf	UART_Init@baud_rate+1,w
  3412     039F  00AB               	movwf	??_UART_Init+1
  3413     03A0  0828               	movf	UART_Init@baud_rate+2,w
  3414     03A1  00AC               	movwf	??_UART_Init+2
  3415     03A2  0829               	movf	UART_Init@baud_rate+3,w
  3416     03A3  00AD               	movwf	??_UART_Init+3
  3417     03A4  3004               	movlw	4
  3418     03A5                     u1485:
  3419     03A5  1003               	clrc
  3420     03A6  0DAA               	rlf	??_UART_Init,f
  3421     03A7  0DAB               	rlf	??_UART_Init+1,f
  3422     03A8  0DAC               	rlf	??_UART_Init+2,f
  3423     03A9  0DAD               	rlf	??_UART_Init+3,f
  3424     03AA                     u1480:
  3425     03AA  3EFF               	addlw	-1
  3426     03AB  1D03               	skipz
  3427     03AC  2BA5               	goto	u1485
  3428     03AD  082D               	movf	??_UART_Init+3,w
  3429     03AE  00F6               	movwf	___lldiv@divisor+3
  3430     03AF  082C               	movf	??_UART_Init+2,w
  3431     03B0  00F5               	movwf	___lldiv@divisor+2
  3432     03B1  082B               	movf	??_UART_Init+1,w
  3433     03B2  00F4               	movwf	___lldiv@divisor+1
  3434     03B3  082A               	movf	??_UART_Init,w
  3435     03B4  00F3               	movwf	___lldiv@divisor
  3436     03B5  3000               	movlw	0
  3437     03B6  00FA               	movwf	___lldiv@dividend+3
  3438     03B7  307A               	movlw	122
  3439     03B8  00F9               	movwf	___lldiv@dividend+2
  3440     03B9  3012               	movlw	18
  3441     03BA  00F8               	movwf	___lldiv@dividend+1
  3442     03BB  3000               	movlw	0
  3443     03BC  00F7               	movwf	___lldiv@dividend
  3444     03BD  120A  118A  24B2  120A  118A  	fcall	___lldiv
  3445     03C2  0873               	movf	?___lldiv,w
  3446     03C3  3EFF               	addlw	255
  3447     03C4  1283               	bcf	3,5	;RP0=0, select bank0
  3448     03C5  1303               	bcf	3,6	;RP1=0, select bank0
  3449     03C6  00AE               	movwf	UART_Init@n
  3450     03C7  0874               	movf	?___lldiv+1,w
  3451     03C8  1803               	skipnc
  3452     03C9  3E01               	addlw	1
  3453     03CA  3EFF               	addlw	255
  3454     03CB  00AF               	movwf	UART_Init@n+1
  3455     03CC                     l1805:
  3456                           
  3457                           ;USARTmodl.c: 18:   if (n < 0)
  3458     03CC  1FAF               	btfss	UART_Init@n+1,7
  3459     03CD  2BCF               	goto	u1491
  3460     03CE  2BD0               	goto	u1490
  3461     03CF                     u1491:
  3462     03CF  2BD2               	goto	l1809
  3463     03D0                     u1490:
  3464     03D0                     l1807:
  3465                           
  3466                           ;USARTmodl.c: 19:     n = 0;
  3467     03D0  01AE               	clrf	UART_Init@n
  3468     03D1  01AF               	clrf	UART_Init@n+1
  3469     03D2                     l1809:
  3470                           
  3471                           ;USARTmodl.c: 21:   if (n > 255)
  3472     03D2  082F               	movf	UART_Init@n+1,w
  3473     03D3  3A80               	xorlw	128
  3474     03D4  00FF               	movwf	btemp+1
  3475     03D5  3081               	movlw	129
  3476     03D6  027F               	subwf	btemp+1,w
  3477     03D7  1D03               	skipz
  3478     03D8  2BDB               	goto	u1505
  3479     03D9  3000               	movlw	0
  3480     03DA  022E               	subwf	UART_Init@n,w
  3481     03DB                     u1505:
  3482     03DB  1C03               	skipc
  3483     03DC  2BDE               	goto	u1501
  3484     03DD  2BDF               	goto	u1500
  3485     03DE                     u1501:
  3486     03DE  2C2D               	goto	l1817
  3487     03DF                     u1500:
  3488     03DF                     l1811:
  3489                           
  3490                           ;USARTmodl.c: 22:   {;USARTmodl.c: 23:     n = ( 8000000 / (64 * baud_rate) ) - 1;
  3491     03DF  1283               	bcf	3,5	;RP0=0, select bank0
  3492     03E0  1303               	bcf	3,6	;RP1=0, select bank0
  3493     03E1  0826               	movf	UART_Init@baud_rate,w
  3494     03E2  00AA               	movwf	??_UART_Init
  3495     03E3  0827               	movf	UART_Init@baud_rate+1,w
  3496     03E4  00AB               	movwf	??_UART_Init+1
  3497     03E5  0828               	movf	UART_Init@baud_rate+2,w
  3498     03E6  00AC               	movwf	??_UART_Init+2
  3499     03E7  0829               	movf	UART_Init@baud_rate+3,w
  3500     03E8  00AD               	movwf	??_UART_Init+3
  3501     03E9  3006               	movlw	6
  3502     03EA                     u1515:
  3503     03EA  1003               	clrc
  3504     03EB  0DAA               	rlf	??_UART_Init,f
  3505     03EC  0DAB               	rlf	??_UART_Init+1,f
  3506     03ED  0DAC               	rlf	??_UART_Init+2,f
  3507     03EE  0DAD               	rlf	??_UART_Init+3,f
  3508     03EF                     u1510:
  3509     03EF  3EFF               	addlw	-1
  3510     03F0  1D03               	skipz
  3511     03F1  2BEA               	goto	u1515
  3512     03F2  082D               	movf	??_UART_Init+3,w
  3513     03F3  00F6               	movwf	___lldiv@divisor+3
  3514     03F4  082C               	movf	??_UART_Init+2,w
  3515     03F5  00F5               	movwf	___lldiv@divisor+2
  3516     03F6  082B               	movf	??_UART_Init+1,w
  3517     03F7  00F4               	movwf	___lldiv@divisor+1
  3518     03F8  082A               	movf	??_UART_Init,w
  3519     03F9  00F3               	movwf	___lldiv@divisor
  3520     03FA  3000               	movlw	0
  3521     03FB  00FA               	movwf	___lldiv@dividend+3
  3522     03FC  307A               	movlw	122
  3523     03FD  00F9               	movwf	___lldiv@dividend+2
  3524     03FE  3012               	movlw	18
  3525     03FF  00F8               	movwf	___lldiv@dividend+1
  3526     0400  3000               	movlw	0
  3527     0401  00F7               	movwf	___lldiv@dividend
  3528     0402  120A  118A  24B2  120A  118A  	fcall	___lldiv
  3529     0407  0873               	movf	?___lldiv,w
  3530     0408  3EFF               	addlw	255
  3531     0409  1283               	bcf	3,5	;RP0=0, select bank0
  3532     040A  1303               	bcf	3,6	;RP1=0, select bank0
  3533     040B  00AE               	movwf	UART_Init@n
  3534     040C  0874               	movf	?___lldiv+1,w
  3535     040D  1803               	skipnc
  3536     040E  3E01               	addlw	1
  3537     040F  3EFF               	addlw	255
  3538     0410  00AF               	movwf	UART_Init@n+1
  3539     0411                     l1813:
  3540                           
  3541                           ;USARTmodl.c: 24:     if (n > 255)
  3542     0411  082F               	movf	UART_Init@n+1,w
  3543     0412  3A80               	xorlw	128
  3544     0413  00FF               	movwf	btemp+1
  3545     0414  3081               	movlw	129
  3546     0415  027F               	subwf	btemp+1,w
  3547     0416  1D03               	skipz
  3548     0417  2C1A               	goto	u1525
  3549     0418  3000               	movlw	0
  3550     0419  022E               	subwf	UART_Init@n,w
  3551     041A                     u1525:
  3552     041A  1C03               	skipc
  3553     041B  2C1D               	goto	u1521
  3554     041C  2C1E               	goto	u1520
  3555     041D                     u1521:
  3556     041D  2C24               	goto	l228
  3557     041E                     u1520:
  3558     041E                     l1815:
  3559                           
  3560                           ;USARTmodl.c: 25:       n = 255;
  3561     041E  30FF               	movlw	255
  3562     041F  1283               	bcf	3,5	;RP0=0, select bank0
  3563     0420  1303               	bcf	3,6	;RP1=0, select bank0
  3564     0421  00AE               	movwf	UART_Init@n
  3565     0422  3000               	movlw	0
  3566     0423  00AF               	movwf	UART_Init@n+1
  3567     0424                     l228:
  3568                           
  3569                           ;USARTmodl.c: 26:     SPBRG = n;
  3570     0424  1283               	bcf	3,5	;RP0=0, select bank0
  3571     0425  1303               	bcf	3,6	;RP1=0, select bank0
  3572     0426  082E               	movf	UART_Init@n,w
  3573     0427  1683               	bsf	3,5	;RP0=1, select bank1
  3574     0428  1303               	bcf	3,6	;RP1=0, select bank1
  3575     0429  0099               	movwf	25	;volatile
  3576                           
  3577                           ;USARTmodl.c: 27:     TXSTA = 0x20;
  3578     042A  3020               	movlw	32
  3579     042B  0098               	movwf	24	;volatile
  3580                           
  3581                           ;USARTmodl.c: 28:   }
  3582     042C  2C35               	goto	l229
  3583     042D                     l1817:
  3584                           
  3585                           ;USARTmodl.c: 31:   {;USARTmodl.c: 32:     SPBRG = n;
  3586     042D  1283               	bcf	3,5	;RP0=0, select bank0
  3587     042E  1303               	bcf	3,6	;RP1=0, select bank0
  3588     042F  082E               	movf	UART_Init@n,w
  3589     0430  1683               	bsf	3,5	;RP0=1, select bank1
  3590     0431  1303               	bcf	3,6	;RP1=0, select bank1
  3591     0432  0099               	movwf	25	;volatile
  3592                           
  3593                           ;USARTmodl.c: 33:     TXSTA = 0x24;
  3594     0433  3024               	movlw	36
  3595     0434  0098               	movwf	24	;volatile
  3596     0435                     l229:	
  3597                           ;USARTmodl.c: 34:   }
  3598                           
  3599                           
  3600                           ;USARTmodl.c: 36:   RCSTA = 0x90;
  3601     0435  3090               	movlw	144
  3602     0436  1283               	bcf	3,5	;RP0=0, select bank0
  3603     0437  1303               	bcf	3,6	;RP1=0, select bank0
  3604     0438  0098               	movwf	24	;volatile
  3605     0439                     l230:
  3606     0439  0008               	return
  3607     043A                     __end_of_UART_Init:
  3608                           
  3609                           	psect	text15
  3610     04B2                     __ptext15:	
  3611 ;; *************** function ___lldiv *****************
  3612 ;; Defined at:
  3613 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;  divisor         4    3[COMMON] unsigned long 
  3616 ;;  dividend        4    7[COMMON] unsigned long 
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;  quotient        4    1[BANK0 ] unsigned long 
  3619 ;;  counter         1    5[BANK0 ] unsigned char 
  3620 ;; Return value:  Size  Location     Type
  3621 ;;                  4    3[COMMON] unsigned long 
  3622 ;; Registers used:
  3623 ;;		wreg, status,2, status,0, btemp+1
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3629 ;;      Params:         8       0       0       0       0
  3630 ;;      Locals:         0       5       0       0       0
  3631 ;;      Temps:          0       1       0       0       0
  3632 ;;      Totals:         8       6       0       0       0
  3633 ;;Total ram usage:       14 bytes
  3634 ;; Hardware stack levels used: 1
  3635 ;; Hardware stack levels required when called: 1
  3636 ;; This function calls:
  3637 ;;		Nothing
  3638 ;; This function is called by:
  3639 ;;		_UART_Init
  3640 ;;		_I2C_Master_Init
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644     04B2                     ___lldiv:	
  3645                           ;psect for function ___lldiv
  3646                           
  3647     04B2                     l1599:	
  3648                           ;incstack = 0
  3649                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  3650                           
  3651     04B2  3000               	movlw	0
  3652     04B3  1283               	bcf	3,5	;RP0=0, select bank0
  3653     04B4  1303               	bcf	3,6	;RP1=0, select bank0
  3654     04B5  00A4               	movwf	___lldiv@quotient+3
  3655     04B6  3000               	movlw	0
  3656     04B7  00A3               	movwf	___lldiv@quotient+2
  3657     04B8  3000               	movlw	0
  3658     04B9  00A2               	movwf	___lldiv@quotient+1
  3659     04BA  3000               	movlw	0
  3660     04BB  00A1               	movwf	___lldiv@quotient
  3661     04BC  0876               	movf	___lldiv@divisor+3,w
  3662     04BD  0475               	iorwf	___lldiv@divisor+2,w
  3663     04BE  0474               	iorwf	___lldiv@divisor+1,w
  3664     04BF  0473               	iorwf	___lldiv@divisor,w
  3665     04C0  1903               	skipnz
  3666     04C1  2CC3               	goto	u1021
  3667     04C2  2CC4               	goto	u1020
  3668     04C3                     u1021:
  3669     04C3  2D11               	goto	l1621
  3670     04C4                     u1020:
  3671     04C4                     l1601:
  3672     04C4  01A5               	clrf	___lldiv@counter
  3673     04C5  0AA5               	incf	___lldiv@counter,f
  3674     04C6  2CD4               	goto	l1607
  3675     04C7                     l1603:
  3676     04C7  3001               	movlw	1
  3677     04C8  00A0               	movwf	??___lldiv
  3678     04C9                     u1035:
  3679     04C9  1003               	clrc
  3680     04CA  0DF3               	rlf	___lldiv@divisor,f
  3681     04CB  0DF4               	rlf	___lldiv@divisor+1,f
  3682     04CC  0DF5               	rlf	___lldiv@divisor+2,f
  3683     04CD  0DF6               	rlf	___lldiv@divisor+3,f
  3684     04CE  0BA0               	decfsz	??___lldiv,f
  3685     04CF  2CC9               	goto	u1035
  3686     04D0                     l1605:
  3687     04D0  3001               	movlw	1
  3688     04D1  00FF               	movwf	btemp+1
  3689     04D2  087F               	movf	btemp+1,w
  3690     04D3  07A5               	addwf	___lldiv@counter,f
  3691     04D4                     l1607:
  3692     04D4  1FF6               	btfss	___lldiv@divisor+3,7
  3693     04D5  2CD7               	goto	u1041
  3694     04D6  2CD8               	goto	u1040
  3695     04D7                     u1041:
  3696     04D7  2CC7               	goto	l1603
  3697     04D8                     u1040:
  3698     04D8                     l1609:
  3699     04D8  3001               	movlw	1
  3700     04D9  00A0               	movwf	??___lldiv
  3701     04DA                     u1055:
  3702     04DA  1003               	clrc
  3703     04DB  0DA1               	rlf	___lldiv@quotient,f
  3704     04DC  0DA2               	rlf	___lldiv@quotient+1,f
  3705     04DD  0DA3               	rlf	___lldiv@quotient+2,f
  3706     04DE  0DA4               	rlf	___lldiv@quotient+3,f
  3707     04DF  0BA0               	decfsz	??___lldiv,f
  3708     04E0  2CDA               	goto	u1055
  3709     04E1                     l1611:
  3710     04E1  0876               	movf	___lldiv@divisor+3,w
  3711     04E2  027A               	subwf	___lldiv@dividend+3,w
  3712     04E3  1D03               	skipz
  3713     04E4  2CEF               	goto	u1065
  3714     04E5  0875               	movf	___lldiv@divisor+2,w
  3715     04E6  0279               	subwf	___lldiv@dividend+2,w
  3716     04E7  1D03               	skipz
  3717     04E8  2CEF               	goto	u1065
  3718     04E9  0874               	movf	___lldiv@divisor+1,w
  3719     04EA  0278               	subwf	___lldiv@dividend+1,w
  3720     04EB  1D03               	skipz
  3721     04EC  2CEF               	goto	u1065
  3722     04ED  0873               	movf	___lldiv@divisor,w
  3723     04EE  0277               	subwf	___lldiv@dividend,w
  3724     04EF                     u1065:
  3725     04EF  1C03               	skipc
  3726     04F0  2CF2               	goto	u1061
  3727     04F1  2CF3               	goto	u1060
  3728     04F2                     u1061:
  3729     04F2  2D02               	goto	l1617
  3730     04F3                     u1060:
  3731     04F3                     l1613:
  3732     04F3  0873               	movf	___lldiv@divisor,w
  3733     04F4  02F7               	subwf	___lldiv@dividend,f
  3734     04F5  0874               	movf	___lldiv@divisor+1,w
  3735     04F6  1C03               	skipc
  3736     04F7  0F74               	incfsz	___lldiv@divisor+1,w
  3737     04F8  02F8               	subwf	___lldiv@dividend+1,f
  3738     04F9  0875               	movf	___lldiv@divisor+2,w
  3739     04FA  1C03               	skipc
  3740     04FB  0F75               	incfsz	___lldiv@divisor+2,w
  3741     04FC  02F9               	subwf	___lldiv@dividend+2,f
  3742     04FD  0876               	movf	___lldiv@divisor+3,w
  3743     04FE  1C03               	skipc
  3744     04FF  0F76               	incfsz	___lldiv@divisor+3,w
  3745     0500  02FA               	subwf	___lldiv@dividend+3,f
  3746     0501                     l1615:
  3747     0501  1421               	bsf	___lldiv@quotient,0
  3748     0502                     l1617:
  3749     0502  3001               	movlw	1
  3750     0503                     u1075:
  3751     0503  1003               	clrc
  3752     0504  0CF6               	rrf	___lldiv@divisor+3,f
  3753     0505  0CF5               	rrf	___lldiv@divisor+2,f
  3754     0506  0CF4               	rrf	___lldiv@divisor+1,f
  3755     0507  0CF3               	rrf	___lldiv@divisor,f
  3756     0508  3EFF               	addlw	-1
  3757     0509  1D03               	skipz
  3758     050A  2D03               	goto	u1075
  3759     050B                     l1619:
  3760     050B  3001               	movlw	1
  3761     050C  02A5               	subwf	___lldiv@counter,f
  3762     050D  1D03               	btfss	3,2
  3763     050E  2D10               	goto	u1081
  3764     050F  2D11               	goto	u1080
  3765     0510                     u1081:
  3766     0510  2CD8               	goto	l1609
  3767     0511                     u1080:
  3768     0511                     l1621:
  3769     0511  0824               	movf	___lldiv@quotient+3,w
  3770     0512  00F6               	movwf	?___lldiv+3
  3771     0513  0823               	movf	___lldiv@quotient+2,w
  3772     0514  00F5               	movwf	?___lldiv+2
  3773     0515  0822               	movf	___lldiv@quotient+1,w
  3774     0516  00F4               	movwf	?___lldiv+1
  3775     0517  0821               	movf	___lldiv@quotient,w
  3776     0518  00F3               	movwf	?___lldiv
  3777     0519                     l424:
  3778     0519  0008               	return
  3779     051A                     __end_of___lldiv:
  3780                           
  3781                           	psect	text16
  3782     0712                     __ptext16:	
  3783 ;; *************** function _UART_GetC *****************
  3784 ;; Defined at:
  3785 ;;		line 46 in file "USARTmodl.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;		None
  3788 ;; Auto vars:     Size  Location     Type
  3789 ;;		None
  3790 ;; Return value:  Size  Location     Type
  3791 ;;                  1    wreg      unsigned char 
  3792 ;; Registers used:
  3793 ;;		wreg
  3794 ;; Tracked objects:
  3795 ;;		On entry : 0/0
  3796 ;;		On exit  : 0/0
  3797 ;;		Unchanged: 0/0
  3798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3799 ;;      Params:         0       0       0       0       0
  3800 ;;      Locals:         0       0       0       0       0
  3801 ;;      Temps:          0       0       0       0       0
  3802 ;;      Totals:         0       0       0       0       0
  3803 ;;Total ram usage:        0 bytes
  3804 ;; Hardware stack levels used: 1
  3805 ;; Hardware stack levels required when called: 1
  3806 ;; This function calls:
  3807 ;;		Nothing
  3808 ;; This function is called by:
  3809 ;;		_main
  3810 ;; This function uses a non-reentrant model
  3811 ;;
  3812                           
  3813     0712                     _UART_GetC:	
  3814                           ;psect for function _UART_GetC
  3815                           
  3816     0712                     l1933:	
  3817                           ;incstack = 0
  3818                           ; Regs used in _UART_GetC: [wreg]
  3819                           
  3820     0712                     l240:	
  3821                           ;USARTmodl.c: 48:   while (RCIF == 0) ;
  3822                           
  3823     0712  1283               	bcf	3,5	;RP0=0, select bank0
  3824     0713  1303               	bcf	3,6	;RP1=0, select bank0
  3825     0714  1E8C               	btfss	12,5	;volatile
  3826     0715  2F17               	goto	u1671
  3827     0716  2F18               	goto	u1670
  3828     0717                     u1671:
  3829     0717  2F12               	goto	l240
  3830     0718                     u1670:
  3831     0718                     l242:
  3832                           
  3833                           ;USARTmodl.c: 49:   if (OERR)
  3834     0718  1C98               	btfss	24,1	;volatile
  3835     0719  2F1B               	goto	u1681
  3836     071A  2F1C               	goto	u1680
  3837     071B                     u1681:
  3838     071B  2F1E               	goto	l1937
  3839     071C                     u1680:
  3840     071C                     l1935:
  3841                           
  3842                           ;USARTmodl.c: 50:   {;USARTmodl.c: 51:     CREN = 0;
  3843     071C  1218               	bcf	24,4	;volatile
  3844                           
  3845                           ;USARTmodl.c: 52:     CREN = 1;
  3846     071D  1618               	bsf	24,4	;volatile
  3847     071E                     l1937:
  3848                           
  3849                           ;USARTmodl.c: 54:   return RCREG;
  3850     071E  081A               	movf	26,w	;volatile
  3851     071F                     l244:
  3852     071F  0008               	return
  3853     0720                     __end_of_UART_GetC:
  3854                           
  3855                           	psect	text17
  3856     072C                     __ptext17:	
  3857 ;; *************** function _UART_Data_Ready *****************
  3858 ;; Defined at:
  3859 ;;		line 41 in file "USARTmodl.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;		None
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;		None
  3864 ;; Return value:  Size  Location     Type
  3865 ;;		None               void
  3866 ;; Registers used:
  3867 ;;		status,2, status,0
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3873 ;;      Params:         0       0       0       0       0
  3874 ;;      Locals:         0       0       0       0       0
  3875 ;;      Temps:          0       0       0       0       0
  3876 ;;      Totals:         0       0       0       0       0
  3877 ;;Total ram usage:        0 bytes
  3878 ;; Hardware stack levels used: 1
  3879 ;; Hardware stack levels required when called: 1
  3880 ;; This function calls:
  3881 ;;		Nothing
  3882 ;; This function is called by:
  3883 ;;		_main
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887     072C                     _UART_Data_Ready:	
  3888                           ;psect for function _UART_Data_Ready
  3889                           
  3890     072C                     l1925:	
  3891                           ;incstack = 0
  3892                           ; Regs used in _UART_Data_Ready: [status]
  3893                           
  3894                           
  3895                           ;USARTmodl.c: 43:   return RCIF;
  3896     072C  1283               	bcf	3,5	;RP0=0, select bank0
  3897     072D  1303               	bcf	3,6	;RP1=0, select bank0
  3898     072E  1A8C               	btfsc	12,5	;volatile
  3899     072F  2F31               	goto	u1661
  3900     0730  2F32               	goto	u1660
  3901     0731                     u1661:
  3902     0731  2F34               	goto	l1929
  3903     0732                     u1660:
  3904     0732                     l1927:
  3905     0732  1003               	clrc
  3906     0733  2F35               	goto	l237
  3907     0734                     l1929:
  3908     0734  1403               	setc
  3909     0735                     l237:
  3910     0735  0008               	return
  3911     0736                     __end_of_UART_Data_Ready:
  3912                           
  3913                           	psect	text18
  3914     06C1                     __ptext18:	
  3915 ;; *************** function _isr *****************
  3916 ;; Defined at:
  3917 ;;		line 34 in file "HC05BT_prueba.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;		None
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;		None
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  1    wreg      void 
  3924 ;; Registers used:
  3925 ;;		wreg, status,2, status,0
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3931 ;;      Params:         0       0       0       0       0
  3932 ;;      Locals:         0       0       0       0       0
  3933 ;;      Temps:          3       0       0       0       0
  3934 ;;      Totals:         3       0       0       0       0
  3935 ;;Total ram usage:        3 bytes
  3936 ;; Hardware stack levels used: 1
  3937 ;; This function calls:
  3938 ;;		Nothing
  3939 ;; This function is called by:
  3940 ;;		Interrupt level 1
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944     06C1                     _isr:	
  3945                           ;psect for function _isr
  3946                           
  3947     06C1                     i1l1953:
  3948                           
  3949                           ;HC05BT_prueba.c: 36:     if(PIR1bits.ADIF){
  3950     06C1  1283               	bcf	3,5	;RP0=0, select bank0
  3951     06C2  1303               	bcf	3,6	;RP1=0, select bank0
  3952     06C3  1F0C               	btfss	12,6	;volatile
  3953     06C4  2EC6               	goto	u170_21
  3954     06C5  2EC7               	goto	u170_20
  3955     06C6                     u170_21:
  3956     06C6  2ED3               	goto	i1l173
  3957     06C7                     u170_20:
  3958     06C7                     i1l1955:
  3959                           
  3960                           ;HC05BT_prueba.c: 38:          if (ADCON0bits.CHS ==0)
  3961     06C7  0C1F               	rrf	31,w	;volatile
  3962     06C8  00F0               	movwf	??_isr
  3963     06C9  0C70               	rrf	??_isr,w
  3964     06CA  390F               	andlw	15
  3965     06CB  3A00               	xorlw	0
  3966     06CC  1D03               	skipz
  3967     06CD  2ECF               	goto	u171_21
  3968     06CE  2ED0               	goto	u171_20
  3969     06CF                     u171_21:
  3970     06CF  2ED2               	goto	i1l1959
  3971     06D0                     u171_20:
  3972     06D0                     i1l1957:
  3973                           
  3974                           ;HC05BT_prueba.c: 39:           valpot = ADRESH;
  3975     06D0  081E               	movf	30,w	;volatile
  3976     06D1  00DA               	movwf	_valpot
  3977     06D2                     i1l1959:
  3978                           
  3979                           ;HC05BT_prueba.c: 40:          PIR1bits.ADIF =0;
  3980     06D2  130C               	bcf	12,6	;volatile
  3981     06D3                     i1l173:
  3982     06D3  0872               	movf	??_isr+2,w
  3983     06D4  008A               	movwf	10
  3984     06D5  0E71               	swapf	??_isr+1,w
  3985     06D6  0083               	movwf	3
  3986     06D7  0EFE               	swapf	btemp,f
  3987     06D8  0E7E               	swapf	btemp,w
  3988     06D9  0009               	retfie
  3989     06DA                     __end_of_isr:
  3990     007E                     btemp	set	126	;btemp
  3991     007E                     wtemp0	set	126
  3992                           
  3993                           	psect	intentry
  3994     0004                     __pintentry:	
  3995                           ;incstack = 0
  3996                           ; Regs used in _isr: [wreg+status,2+status,0]
  3997                           
  3998     0004                     interrupt_function:
  3999     007E                     saved_w	set	btemp
  4000     0004  00FE               	movwf	btemp
  4001     0005  0E03               	swapf	3,w
  4002     0006  00F1               	movwf	??_isr+1
  4003     0007  080A               	movf	10,w
  4004     0008  00F2               	movwf	??_isr+2
  4005     0009  120A  118A  2EC1   	ljmp	_isr
  4006                           
  4007                           	psect	idloc
  4008                           
  4009                           ;Config register IDLOC0 @ 0x2000
  4010                           ;	unspecified, using default values
  4011     2000                     	org	8192
  4012     2000  3FFF               	dw	16383
  4013                           
  4014                           ;Config register IDLOC1 @ 0x2001
  4015                           ;	unspecified, using default values
  4016     2001                     	org	8193
  4017     2001  3FFF               	dw	16383
  4018                           
  4019                           ;Config register IDLOC2 @ 0x2002
  4020                           ;	unspecified, using default values
  4021     2002                     	org	8194
  4022     2002  3FFF               	dw	16383
  4023                           
  4024                           ;Config register IDLOC3 @ 0x2003
  4025                           ;	unspecified, using default values
  4026     2003                     	org	8195
  4027     2003  3FFF               	dw	16383
  4028                           
  4029                           	psect	config
  4030                           
  4031                           ;Config register CONFIG1 @ 0x2007
  4032                           ;	Oscillator Selection bits
  4033                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  4034                           ;	Watchdog Timer Enable bit
  4035                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4036                           ;	Power-up Timer Enable bit
  4037                           ;	PWRTE = OFF, PWRT disabled
  4038                           ;	RE3/MCLR pin function select bit
  4039                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4040                           ;	Code Protection bit
  4041                           ;	CP = OFF, Program memory code protection is disabled
  4042                           ;	Data Code Protection bit
  4043                           ;	CPD = OFF, Data memory code protection is disabled
  4044                           ;	Brown Out Reset Selection bits
  4045                           ;	BOREN = OFF, BOR disabled
  4046                           ;	Internal External Switchover bit
  4047                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4048                           ;	Fail-Safe Clock Monitor Enabled bit
  4049                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4050                           ;	Low Voltage Programming Enable bit
  4051                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  4052                           ;	In-Circuit Debugger Mode bit
  4053                           ;	DEBUG = 0x1, unprogrammed default
  4054     2007                     	org	8199
  4055     2007  38D5               	dw	14549
  4056                           
  4057                           ;Config register CONFIG2 @ 0x2008
  4058                           ;	Brown-out Reset Selection bit
  4059                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4060                           ;	Flash Program Memory Self Write Enable bits
  4061                           ;	WRT = OFF, Write protection off
  4062     2008                     	org	8200
  4063     2008  3FFF               	dw	16383

Data Sizes:
    Strings     30
    Constant    25
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     56      59
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_6(CODE[7]), STR_4(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 9
		 -> main@text(BANK0[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Print@data	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_7(CODE[23]), STR_5(CODE[3]), main@text(BANK0[9]), STR_3(CODE[3]), 
		 -> STR_2(CODE[3]), message(CODE[15]), STR_1(CODE[23]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    _preguntas->_UART_Print
    _UART_Print->_UART_PutC
    _map->___fltol
    ___xxtofl->___wmul
    ___lwdiv->___wmul
    _UART_Init->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_map
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _map->___xxtofl
    ___xxtofl->___lwdiv
    _UART_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0    6921
                                             41 BANK0     15    15      0
                    _UART_Data_Ready
                          _UART_GetC
                          _UART_Init
                         _UART_Print
                          _UART_PutC
                                _map
                          _preguntas
                              _setup
                            _sprintf
                          _uart_read
 ---------------------------------------------------------------------------------
 (1) _uart_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    20      3    2187
                                             11 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              9 COMMON     1     1      0
                                              7 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _preguntas                                            0     0      0     796
                         _UART_Print
 ---------------------------------------------------------------------------------
 (2) _UART_Print                                           3     1      2     796
                                              4 COMMON     3     1      2
                          _UART_PutC
 ---------------------------------------------------------------------------------
 (3) _UART_PutC                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _map                                                 20    10     10    2122
                                             21 BANK0     20    10     10
                            ___fltol
                            ___lwdiv
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              7 BANK0     14    10      4
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                              0 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                              3 COMMON     8     4      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           10     6      4     852
                                              6 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              3 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _UART_GetC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Data_Ready
   _UART_GetC
   _UART_Init
     ___lldiv
   _UART_Print
     _UART_PutC
   _UART_PutC
   _map
     ___fltol
     ___lwdiv
       ___wmul (ARG)
     ___wmul
     ___xxtofl
       ___lwdiv (ARG)
       ___wmul (ARG)
   _preguntas
     _UART_Print
   _setup
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _uart_read

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      46       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     38      3B       5       73.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      46      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Aug 13 00:58:02 2023

                      _a 0058                        pc 0002                       fsr 0004  
    ___wmul@multiplicand 0075                      l200 06FF                      l203 057F  
                    l230 0439                      l240 0712                      l242 0718  
                    l250 072B                      l244 071F                      l228 0424  
                    l237 0735                      l229 0435                      l247 0721  
                    l424 0519                      l256 0673                      l354 0032  
                    l178 06EC                      l197 069B                      l390 06C0  
                    l384 019D                      l660 060C                      l388 06A8  
                    l581 049C                      l821 0304                      l574 04B1  
                    l670 0648                      l823 0399                      l584 04B1  
                    l841 0711                      l834 0363                      l835 036F  
                    _GIE 005F                      _RD3 0043                      _RD4 0044  
                    _RD5 0045                      _RD6 0046                      _RD7 0047  
                    u940 0727                      u941 0726                      u950 0673  
                    u951 0672                      u960 0708                      u961 0707  
                    u970 070E                      u971 070D                      u980 06A2  
                    u981 06A1                      u995 06A9                      _map 051A  
                    _isr 06C1                      fsr0 0004                      indf 0000  
           ___fltol@exp1 0021                     l2001 0277                     l2003 0280  
                   l2013 029C                     l2005 0285                     l2021 02AC  
                   l2015 02A7                     l2007 028A                     l2023 02C5  
                   l2025 02CE                     l2009 0295                     l2027 02D6  
                   l1601 04C4                     l1611 04E1                     l1603 04C7  
                   l1613 04F3                     l1605 04D0                     l1621 0511  
                   l1701 0631                     l2093 02BA                     l1615 0501  
                   l1607 04D4                     l1631 044E                     l1711 02E3  
                   l1703 0637                     l2095 0045                     l1617 0502  
                   l1609 04D8                     l1641 0470                     l1633 0461  
                   l1625 043A                     l1713 02E8                     l1561 0721  
                   l1801 069A                     l1705 063E                     l2097 00B4  
                   l1619 050B                     l1811 03DF                     l1803 039A  
                   l1651 048A                     l1635 0462                     l1627 0445  
                   l1731 032C                     l1723 0315                     l1715 02EC  
                   l1563 0727                     l1571 0660                     l1707 0644  
                   l1813 0411                     l1805 03CC                     l1661 04A6  
                   l1637 046A                     l1741 0359                     l1733 0330  
                   l1725 0318                     l1717 02FC                     l1565 0649  
                   l1581 0710                     l1573 0701                     l1901 017C  
                   l1821 001E                     l1815 041E                     l1807 03D0  
                   l1647 0478                     l1639 046C                     l1671 05DB  
                   l1663 05C7                     l1591 06AF                     l1751 038C  
                   l1743 035D                     l1735 033E                     l1727 031C  
                   l1719 030C                     l1567 064B                     l1575 0702  
                   l1903 0180                     l1823 0024                     l1817 042D  
                   l1809 03D2                     l1657 0491                     l1649 0481  
                   l1681 05FB                     l1673 05DF                     l1665 05CB  
                   l1593 06B6                     l1585 069C                     l1753 0390  
                   l1745 0367                     l1737 0347                     l1729 0325  
                   l1569 065C                     l1577 0708                     l1841 0073  
                   l1833 0037                     l1825 0029                     l1905 0189  
                   l1761 06E0                     l1659 04A1                     l1683 0602  
                   l1675 05E3                     l1667 05D1                     l1595 06BC  
                   l1587 069E                     l1755 0391                     l1747 0371  
                   l1739 034E                     l1923 06ED                     l1691 0615  
                   l1579 070E                     l1907 0199                     l1843 0086  
                   l1851 00A0                     l1835 004A                     l1827 002E  
                   l1819 001B                     l1763 06E4                     l1771 06EB  
                   l1925 072C                     l1933 0712                     l1677 05F4  
                   l1669 05D4                     l1685 0608                     l1589 06A2  
                   l1749 0387                     l1781 0681                     l1693 0618  
                   l1853 00BC                     l1845 008A                     l1837 005A  
                   l1829 0033                     l1765 06E9                     l1927 0732  
                   l1935 071C                     l1599 04B2                     l1679 05FA  
                   l1919 051A                     l1791 068E                     l1783 0684  
                   l1775 0674                     l1695 061F                     l1871 00F0  
                   l1863 00CA                     l1855 00C4                     l1847 009B  
                   l1839 005E                     l1759 06DA                     l1929 0734  
                   l1937 071E                     l1793 068F                     l1785 0685  
                   l1777 0678                     l1697 0623                     l1689 060D  
                   l1881 0115                     l1873 00FB                     l1857 00C8  
                   l1961 019E                     l1795 0693                     l1787 0686  
                   l1779 0679                     l1699 0627                     l1891 0136  
                   l1883 011A                     l1875 0107                     l1867 00E6  
                   l1971 01CE                     l1963 01A3                     l1797 0696  
                   l1789 068C                     l1893 013A                     l1885 011E  
                   l1877 010B                     l1869 00EA                     l1981 01FF  
                   l1973 01DC                     l1965 01A7                     ?_map 0035  
                   l1799 0699                     l1895 0146                     l1879 010F  
                   l1887 012B                     l1991 0234                     l1983 0205  
                   l1975 01E5                     l1967 01B6                     l1897 0149  
                   l1889 0131                     l1993 023E                     l1985 0206  
                   l1977 01F3                     l1969 01C5                     l1899 0177  
                   l1995 0240                     l1987 021D                     l1979 01FC  
                   l1997 0260                     l1989 0226                     l1999 0269  
                   ?_isr 0070                     STR_1 05A9                     STR_2 05BD  
                   STR_3 05BD                     STR_4 05C0                     STR_5 05BD  
                   STR_6 05C0                     STR_7 05A9                     _CREN 00C4  
                   u1010 06BC                     u1011 06BB                     u1020 04C4  
                   u1100 045C                     u1021 04C3                     u1005 06B0  
                   u1110 0470                     u1111 046F                     u1040 04D8  
                   u1120 0477                     u1041 04D7                     u1121 0476  
                   u1105 0457                     u1210 05E3                     u1035 04C9  
                   u1211 05E2                     u1060 04F3                     u1140 0489  
                   u1061 04F2                     u1141 0488                     u1205 05D5  
                   u1150 0490                     u1230 05F4                     u1310 0644  
                   u1055 04DA                     u1151 048F                     u1135 0479  
                   u1231 05F3                     u1311 0643                     u1080 0511  
                   u1400 035D                     u1320 02E8                     u1081 0510  
                   u1065 04EF                     u1225 05E4                     u1401 035C  
                   u1321 02E7                     u1305 0638                     u1170 04A1  
                   u1090 0445                     u1250 0608                     u1410 0363  
                   u1330 02EC                     u1075 0503                     u1171 04A0  
                   u1091 0444                     u1251 0607                     u1235 05F0  
                   u1411 0362                     u1331 02EB                     u1500 03DF  
                   u1180 04A6                     u1420 0367                     u1340 030C  
                   u1260 0615                     u1501 03DE                     u1181 04A5  
                   u1165 0493                     u1245 05FC                     u1421 0366  
                   u1341 030B                     u1261 0614                     u1510 03EF  
                   u1190 05D1                     u1430 037C                     u1191 05D0  
                   u1520 041E                     u1440 038C                     u1360 032B  
                   u1280 0627                     u1600 0115                     u1521 041D  
                   u1505 03DB                     u1441 038B                     u1361 032A  
                   u1281 0626                     u1601 0114                     u1450 0390  
                   u1290 0631                     u1610 012A                     u1530 0024  
                   u1515 03EA                     u1451 038F                     u1435 0377  
                   u1355 031D                     u1291 0630                     u1275 0619  
                   u1611 0129                     u1531 0023                     u1380 034D  
                   u1620 0131                     u1540 005A                     u1460 06E0  
                   u1525 041A                     u1381 034C                     u1621 0130  
                   u1541 0059                     u1461 06DF                     u1630 0146  
                   u1550 009A                     u1470 06E4                     u1375 033F  
                   u1295 062D                     u1631 0145                     u1551 0099  
                   u1471 06E3                     u1480 03AA                     u1640 0189  
                   u1560 00E5                     u1720 0205                     u1641 0188  
                   u1561 00E4                     u1721 0204                     u1490 03D0  
                   u1650 0199                     u1570 00F0                     u1730 02CE  
                   u1491 03CF                     u1395 0352                     u1651 0198  
                   u1571 00EF                     u1731 02CD                     u1660 0732  
                   u1580 00FB                     u1661 0731                     u1485 03A5  
                   u1581 00FA                     u1565 00E1                     u1670 0718  
                   u1590 010F                     u1671 0717                     u1807 0691  
                   u1591 010E                     u1680 071C                     u1681 071B  
                   u1585 00F7                     u1747 01BE                     u1757 01D6  
                   u1767 01ED                     u1777 0216                     u1787 0290  
                   _PEIE 005E                     u1797 02A2                     _RCIF 0065  
                   _OERR 00C1                     _TRMT 04C1                     _main 019E  
                   btemp 007E                     start 000C                    ??_map 003F  
                  ??_isr 0070            ___fltol@sign1 0020                    ?_main 0070  
        __end_of___fltol 04B2                    _ANSEL 0188          __end_of___lldiv 051A  
        __end_of___lwdiv 060D                    i1l173 06D3          __end_of___lwmod 0649  
                  _RCREG 001A                    _RCSTA 0018                    _SPBRG 0099  
                  _PORTD 0008                    _TRISA 0085                    _TRISD 0088  
                  _SSPIE 0463                    _SSPIF 0063                    _TXREG 0019  
                  _TXSTA 0098              ?_UART_Print 0074          __end_of_dpowers 059A  
        __end_of_isdigit 0712          __end_of_message 05A9                    _setup 0674  
                  main@c 0057                    pclath 000A             main@varvolt2 0055  
                  status 0003                    wtemp0 007E          __end_of_sprintf 019E  
        __initialization 000F             __end_of_main 02E0                   ??_main 0049  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
                 i1l1953 06C1                   i1l1955 06C7                   i1l1957 06D0  
                 i1l1959 06D2                   u170_20 06C7                   u170_21 06C6  
                 u171_20 06D0                   u171_21 06CF                   _OSCCON 008F  
                 _SSPADD 0093                   _TRISC3 043B                   _TRISC4 043C  
                 _SSPCON 0014                   _SSPBUF 0013         __end_of___xxtofl 039A  
      __end_of_UART_GetC 0720        __end_of_UART_Init 043A        __end_of_UART_PutC 072C  
                 ___wmul 069C                ??___fltol 0077                ??___lldiv 0020  
              ??___lwdiv 0079                ??___lwmod 0079                   _valpot 005A  
              ??_isdigit 0073                   saved_w 007E                ??_sprintf 002E  
           ___xxtofl@arg 0031             ___xxtofl@exp 0030             ___xxtofl@val 0027  
__end_of__initialization 0014               ___fltol@f1 0073           __pcstackCOMMON 0070  
          __end_of_setup 069C             sprintf@width 0037                  ??_setup 0073  
             __pbssBANK0 0058               __pmaintext 019E                  ?___wmul 0073  
             __pintentry 0004                ?___xxtofl 0027             ??_UART_Print 0076  
                _SSPCON2 0091                  _SSPSTAT 0094               __stringtab 0580  
     __end_of_UART_Print 0674                  ___fltol 043A                  ___lldiv 04B2  
                ___lwdiv 05C7                  ___lwmod 060D                  __ptext1 06DA  
                __ptext2 0018                  __ptext3 0700                  __ptext4 060D  
                __ptext5 0674                  __ptext6 06ED                  __ptext7 0649  
                __ptext8 0720                  __ptext9 051A                  _dpowers 0590  
                _isdigit 0700               ??___xxtofl 002B                  _message 059A  
            UART_Print@i 0076           UART_Print@data 0074                  _sprintf 0018  
   end_of_initialization 0014        __end_of_uart_read 06ED        __end_of_preguntas 0700  
        ___lldiv@divisor 0073          ___lldiv@counter 0025                _RCSTAbits 0018  
      ??_UART_Data_Ready 0073                _UART_GetC 0712                _UART_Init 039A  
              _UART_PutC 0720                _PORTDbits 0008       UART_Init@baud_rate 0026  
          ___xxtofl@sign 002F                _TRISCbits 0087           __end_of___wmul 06C1  
             ?_UART_GetC 0070               ?_UART_Init 0026               ?_UART_PutC 0070  
    start_initialization 000F              __end_of_map 0580              __end_of_isr 06DA  
               ??___wmul 0077                ___latbits 0002            __pcstackBANK0 0020  
            sprintf@flag 0032              sprintf@prec 0035         ___lwdiv@dividend 0022  
               ?___fltol 0073                 ?___lldiv 0073                 ?___lwdiv 0020  
               ?___lwmod 0027              ??_UART_GetC 0073              ??_UART_Init 002A  
            ??_UART_PutC 0073                __pstrings 0580                 ?_isdigit 0070  
          UART_PutC@data 0073         ___lwdiv@quotient 0024                 ?_sprintf 002B  
             UART_Init@n 002E        interrupt_function 0004           ___wmul@product 0077  
        _UART_Data_Ready 072C                 _PIE1bits 008C                 _PIR1bits 000C  
              _uart_read 06DA                _preguntas 06ED                map@maxsal 003D  
              map@maxval 0039                map@minsal 003B                map@minval 0037  
             _ADCON0bits 001F              __stringbase 058F               _ADCON1bits 009F  
      ___wmul@multiplier 0073                map@valmap 0045                map@varmap 0035  
             ?_uart_read 0070               ?_preguntas 0070       __end_of__stringtab 0590  
            _isdigit$958 0073               sprintf@val 0033                 ___xxtofl 02E0  
        ___lwdiv@divisor 0020          ___lwdiv@counter 0026                 __ptext10 02E0  
               __ptext11 069C                 __ptext12 05C7                 __ptext13 043A  
               __ptext14 039A                 __ptext15 04B2                 __ptext16 0712  
               __ptext17 072C                 __ptext18 06C1  __end_of_UART_Data_Ready 0736  
               main@text 004C               _INTCONbits 000B                 isdigit@c 0074  
               intlevel1 0000                sprintf@ap 0031                sprintf@sp 0036  
       ___lwmod@dividend 0029         ___lldiv@dividend 0077                stringcode 058A  
            ??_uart_read 0073              ??_preguntas 0077                 sprintf@c 0039  
               sprintf@f 002B         ___lldiv@quotient 0021          ___lwmod@divisor 0027  
        ___lwmod@counter 0079                 stringdir 058A                 stringtab 0580  
             _UART_Print 0649              _SSPCON2bits 0091         ?_UART_Data_Ready 0070  
