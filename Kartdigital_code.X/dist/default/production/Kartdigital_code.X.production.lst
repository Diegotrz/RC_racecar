

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Aug 22 16:09:43 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27     0000                     
    28                           ; Generated 09/02/2023 GMT
    29                           ; 
    30                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62     0000                     	;# 
    63     0001                     	;# 
    64     0002                     	;# 
    65     0003                     	;# 
    66     0004                     	;# 
    67     0005                     	;# 
    68     0006                     	;# 
    69     0007                     	;# 
    70     0008                     	;# 
    71     0009                     	;# 
    72     000A                     	;# 
    73     000B                     	;# 
    74     000C                     	;# 
    75     000D                     	;# 
    76     000E                     	;# 
    77     000E                     	;# 
    78     000F                     	;# 
    79     0010                     	;# 
    80     0011                     	;# 
    81     0012                     	;# 
    82     0013                     	;# 
    83     0014                     	;# 
    84     0015                     	;# 
    85     0015                     	;# 
    86     0016                     	;# 
    87     0017                     	;# 
    88     0018                     	;# 
    89     0019                     	;# 
    90     001A                     	;# 
    91     001B                     	;# 
    92     001B                     	;# 
    93     001C                     	;# 
    94     001D                     	;# 
    95     001E                     	;# 
    96     001F                     	;# 
    97     0081                     	;# 
    98     0085                     	;# 
    99     0086                     	;# 
   100     0087                     	;# 
   101     0088                     	;# 
   102     0089                     	;# 
   103     008C                     	;# 
   104     008D                     	;# 
   105     008E                     	;# 
   106     008F                     	;# 
   107     0090                     	;# 
   108     0091                     	;# 
   109     0092                     	;# 
   110     0093                     	;# 
   111     0093                     	;# 
   112     0093                     	;# 
   113     0094                     	;# 
   114     0095                     	;# 
   115     0096                     	;# 
   116     0097                     	;# 
   117     0098                     	;# 
   118     0099                     	;# 
   119     009A                     	;# 
   120     009B                     	;# 
   121     009C                     	;# 
   122     009D                     	;# 
   123     009E                     	;# 
   124     009F                     	;# 
   125     0105                     	;# 
   126     0107                     	;# 
   127     0108                     	;# 
   128     0109                     	;# 
   129     010C                     	;# 
   130     010C                     	;# 
   131     010D                     	;# 
   132     010E                     	;# 
   133     010F                     	;# 
   134     0185                     	;# 
   135     0187                     	;# 
   136     0188                     	;# 
   137     0189                     	;# 
   138     018C                     	;# 
   139     018D                     	;# 
   140     0000                     	;# 
   141     0001                     	;# 
   142     0002                     	;# 
   143     0003                     	;# 
   144     0004                     	;# 
   145     0005                     	;# 
   146     0006                     	;# 
   147     0007                     	;# 
   148     0008                     	;# 
   149     0009                     	;# 
   150     000A                     	;# 
   151     000B                     	;# 
   152     000C                     	;# 
   153     000D                     	;# 
   154     000E                     	;# 
   155     000E                     	;# 
   156     000F                     	;# 
   157     0010                     	;# 
   158     0011                     	;# 
   159     0012                     	;# 
   160     0013                     	;# 
   161     0014                     	;# 
   162     0015                     	;# 
   163     0015                     	;# 
   164     0016                     	;# 
   165     0017                     	;# 
   166     0018                     	;# 
   167     0019                     	;# 
   168     001A                     	;# 
   169     001B                     	;# 
   170     001B                     	;# 
   171     001C                     	;# 
   172     001D                     	;# 
   173     001E                     	;# 
   174     001F                     	;# 
   175     0081                     	;# 
   176     0085                     	;# 
   177     0086                     	;# 
   178     0087                     	;# 
   179     0088                     	;# 
   180     0089                     	;# 
   181     008C                     	;# 
   182     008D                     	;# 
   183     008E                     	;# 
   184     008F                     	;# 
   185     0090                     	;# 
   186     0091                     	;# 
   187     0092                     	;# 
   188     0093                     	;# 
   189     0093                     	;# 
   190     0093                     	;# 
   191     0094                     	;# 
   192     0095                     	;# 
   193     0096                     	;# 
   194     0097                     	;# 
   195     0098                     	;# 
   196     0099                     	;# 
   197     009A                     	;# 
   198     009B                     	;# 
   199     009C                     	;# 
   200     009D                     	;# 
   201     009E                     	;# 
   202     009F                     	;# 
   203     0105                     	;# 
   204     0107                     	;# 
   205     0108                     	;# 
   206     0109                     	;# 
   207     010C                     	;# 
   208     010C                     	;# 
   209     010D                     	;# 
   210     010E                     	;# 
   211     010F                     	;# 
   212     0185                     	;# 
   213     0187                     	;# 
   214     0188                     	;# 
   215     0189                     	;# 
   216     018C                     	;# 
   217     018D                     	;# 
   218     0000                     	;# 
   219     0001                     	;# 
   220     0002                     	;# 
   221     0003                     	;# 
   222     0004                     	;# 
   223     0005                     	;# 
   224     0006                     	;# 
   225     0007                     	;# 
   226     0008                     	;# 
   227     0009                     	;# 
   228     000A                     	;# 
   229     000B                     	;# 
   230     000C                     	;# 
   231     000D                     	;# 
   232     000E                     	;# 
   233     000E                     	;# 
   234     000F                     	;# 
   235     0010                     	;# 
   236     0011                     	;# 
   237     0012                     	;# 
   238     0013                     	;# 
   239     0014                     	;# 
   240     0015                     	;# 
   241     0015                     	;# 
   242     0016                     	;# 
   243     0017                     	;# 
   244     0018                     	;# 
   245     0019                     	;# 
   246     001A                     	;# 
   247     001B                     	;# 
   248     001B                     	;# 
   249     001C                     	;# 
   250     001D                     	;# 
   251     001E                     	;# 
   252     001F                     	;# 
   253     0081                     	;# 
   254     0085                     	;# 
   255     0086                     	;# 
   256     0087                     	;# 
   257     0088                     	;# 
   258     0089                     	;# 
   259     008C                     	;# 
   260     008D                     	;# 
   261     008E                     	;# 
   262     008F                     	;# 
   263     0090                     	;# 
   264     0091                     	;# 
   265     0092                     	;# 
   266     0093                     	;# 
   267     0093                     	;# 
   268     0093                     	;# 
   269     0094                     	;# 
   270     0095                     	;# 
   271     0096                     	;# 
   272     0097                     	;# 
   273     0098                     	;# 
   274     0099                     	;# 
   275     009A                     	;# 
   276     009B                     	;# 
   277     009C                     	;# 
   278     009D                     	;# 
   279     009E                     	;# 
   280     009F                     	;# 
   281     0105                     	;# 
   282     0107                     	;# 
   283     0108                     	;# 
   284     0109                     	;# 
   285     010C                     	;# 
   286     010C                     	;# 
   287     010D                     	;# 
   288     010E                     	;# 
   289     010F                     	;# 
   290     0185                     	;# 
   291     0187                     	;# 
   292     0188                     	;# 
   293     0189                     	;# 
   294     018C                     	;# 
   295     018D                     	;# 
   296     0000                     	;# 
   297     0001                     	;# 
   298     0002                     	;# 
   299     0003                     	;# 
   300     0004                     	;# 
   301     0005                     	;# 
   302     0006                     	;# 
   303     0007                     	;# 
   304     0008                     	;# 
   305     0009                     	;# 
   306     000A                     	;# 
   307     000B                     	;# 
   308     000C                     	;# 
   309     000D                     	;# 
   310     000E                     	;# 
   311     000E                     	;# 
   312     000F                     	;# 
   313     0010                     	;# 
   314     0011                     	;# 
   315     0012                     	;# 
   316     0013                     	;# 
   317     0014                     	;# 
   318     0015                     	;# 
   319     0015                     	;# 
   320     0016                     	;# 
   321     0017                     	;# 
   322     0018                     	;# 
   323     0019                     	;# 
   324     001A                     	;# 
   325     001B                     	;# 
   326     001B                     	;# 
   327     001C                     	;# 
   328     001D                     	;# 
   329     001E                     	;# 
   330     001F                     	;# 
   331     0081                     	;# 
   332     0085                     	;# 
   333     0086                     	;# 
   334     0087                     	;# 
   335     0088                     	;# 
   336     0089                     	;# 
   337     008C                     	;# 
   338     008D                     	;# 
   339     008E                     	;# 
   340     008F                     	;# 
   341     0090                     	;# 
   342     0091                     	;# 
   343     0092                     	;# 
   344     0093                     	;# 
   345     0093                     	;# 
   346     0093                     	;# 
   347     0094                     	;# 
   348     0095                     	;# 
   349     0096                     	;# 
   350     0097                     	;# 
   351     0098                     	;# 
   352     0099                     	;# 
   353     009A                     	;# 
   354     009B                     	;# 
   355     009C                     	;# 
   356     009D                     	;# 
   357     009E                     	;# 
   358     009F                     	;# 
   359     0105                     	;# 
   360     0107                     	;# 
   361     0108                     	;# 
   362     0109                     	;# 
   363     010C                     	;# 
   364     010C                     	;# 
   365     010D                     	;# 
   366     010E                     	;# 
   367     010F                     	;# 
   368     0185                     	;# 
   369     0187                     	;# 
   370     0188                     	;# 
   371     0189                     	;# 
   372     018C                     	;# 
   373     018D                     	;# 
   374     0000                     	;# 
   375     0001                     	;# 
   376     0002                     	;# 
   377     0003                     	;# 
   378     0004                     	;# 
   379     0005                     	;# 
   380     0006                     	;# 
   381     0007                     	;# 
   382     0008                     	;# 
   383     0009                     	;# 
   384     000A                     	;# 
   385     000B                     	;# 
   386     000C                     	;# 
   387     000D                     	;# 
   388     000E                     	;# 
   389     000E                     	;# 
   390     000F                     	;# 
   391     0010                     	;# 
   392     0011                     	;# 
   393     0012                     	;# 
   394     0013                     	;# 
   395     0014                     	;# 
   396     0015                     	;# 
   397     0015                     	;# 
   398     0016                     	;# 
   399     0017                     	;# 
   400     0018                     	;# 
   401     0019                     	;# 
   402     001A                     	;# 
   403     001B                     	;# 
   404     001B                     	;# 
   405     001C                     	;# 
   406     001D                     	;# 
   407     001E                     	;# 
   408     001F                     	;# 
   409     0081                     	;# 
   410     0085                     	;# 
   411     0086                     	;# 
   412     0087                     	;# 
   413     0088                     	;# 
   414     0089                     	;# 
   415     008C                     	;# 
   416     008D                     	;# 
   417     008E                     	;# 
   418     008F                     	;# 
   419     0090                     	;# 
   420     0091                     	;# 
   421     0092                     	;# 
   422     0093                     	;# 
   423     0093                     	;# 
   424     0093                     	;# 
   425     0094                     	;# 
   426     0095                     	;# 
   427     0096                     	;# 
   428     0097                     	;# 
   429     0098                     	;# 
   430     0099                     	;# 
   431     009A                     	;# 
   432     009B                     	;# 
   433     009C                     	;# 
   434     009D                     	;# 
   435     009E                     	;# 
   436     009F                     	;# 
   437     0105                     	;# 
   438     0107                     	;# 
   439     0108                     	;# 
   440     0109                     	;# 
   441     010C                     	;# 
   442     010C                     	;# 
   443     010D                     	;# 
   444     010E                     	;# 
   445     010F                     	;# 
   446     0185                     	;# 
   447     0187                     	;# 
   448     0188                     	;# 
   449     0189                     	;# 
   450     018C                     	;# 
   451     018D                     	;# 
   452                           
   453                           	psect	idataBANK0
   454     0485                     __pidataBANK0:
   455                           
   456                           ;initializer for _x
   457     0485  3464               	retlw	100
   458     0486  3400               	retlw	0
   459                           
   460                           ;initializer for _z
   461     0487  3402               	retlw	2
   462                           
   463                           ;initializer for _y
   464     0488  345E               	retlw	94
   465                           
   466                           ;initializer for _datos
   467     0489  3476               	retlw	118
   468     048A  3461               	retlw	97
   469     048B  3472               	retlw	114
   470     048C  346C               	retlw	108
   471     048D  343A               	retlw	58
   472     048E  3420               	retlw	32
   473     048F  3430               	retlw	48
   474     0490  3430               	retlw	48
   475     0491  3430               	retlw	48
   476     0492  343A               	retlw	58
   477     0493  3430               	retlw	48
   478     0494  3430               	retlw	48
   479     0495  3430               	retlw	48
   480     0496  343A               	retlw	58
   481     0497  3430               	retlw	48
   482     0498  3430               	retlw	48
   483     0499  3430               	retlw	48
   484     049A  3400               	retlw	0
   485                           
   486                           	psect	strings
   487     0003                     __pstrings:
   488     0003                     stringtab:
   489     0003                     __stringtab:
   490                           
   491                           ;	String table - string pointers are 1 byte each
   492     0003  1BFF               	btfsc	btemp+1,7
   493     0004  280D               	ljmp	stringcode
   494     0005  1383               	bcf	3,7
   495     0006  187F               	btfsc	btemp+1,0
   496     0007  1783               	bsf	3,7
   497     0008  0800               	movf	0,w
   498     0009  0A84               	incf	4,f
   499     000A  1903               	skipnz
   500     000B  0AFF               	incf	btemp+1,f
   501     000C  0008               	return
   502     000D                     stringcode:
   503     000D                     stringdir:
   504     000D  3000               	movlw	high stringdir
   505     000E  008A               	movwf	10
   506     000F  0804               	movf	4,w
   507     0010  0A84               	incf	4,f
   508     0011  0782               	addwf	2,f
   509     0012                     __stringbase:
   510     0012  3400               	retlw	0
   511     0013                     __end_of__stringtab:
   512     0013                     _message:
   513     0013  3432               	retlw	50
   514     0014  342E               	retlw	46
   515     0015  3445               	retlw	69
   516     0016  346E               	retlw	110
   517     0017  3476               	retlw	118
   518     0018  3469               	retlw	105
   519     0019  3461               	retlw	97
   520     001A  3472               	retlw	114
   521     001B  3420               	retlw	32
   522     001C  3441               	retlw	65
   523     001D  3473               	retlw	115
   524     001E  3463               	retlw	99
   525     001F  3469               	retlw	105
   526     0020  3469               	retlw	105
   527     0021  3400               	retlw	0
   528     0022                     __end_of_message:
   529     0008                     _PORTD	set	8
   530     0006                     _PORTB	set	6
   531     0019                     _TXREG	set	25
   532     001A                     _RCREG	set	26
   533     0018                     _RCSTA	set	24
   534     0008                     _PORTDbits	set	8
   535     0013                     _SSPBUF	set	19
   536     0014                     _SSPCON	set	20
   537     00C4                     _CREN	set	196
   538     00C1                     _OERR	set	193
   539     0065                     _RCIF	set	101
   540     0043                     _RD3	set	67
   541     0047                     _RD7	set	71
   542     0046                     _RD6	set	70
   543     0045                     _RD5	set	69
   544     0044                     _RD4	set	68
   545     0063                     _SSPIF	set	99
   546     005E                     _PEIE	set	94
   547     005F                     _GIE	set	95
   548     0088                     _TRISD	set	136
   549     0086                     _TRISB	set	134
   550     0098                     _TXSTA	set	152
   551     0099                     _SPBRG	set	153
   552     0091                     _SSPCON2bits	set	145
   553     0087                     _TRISCbits	set	135
   554     0094                     _SSPSTAT	set	148
   555     0093                     _SSPADD	set	147
   556     0091                     _SSPCON2	set	145
   557     04C1                     _TRMT	set	1217
   558     0463                     _SSPIE	set	1123
   559     043C                     _TRISC4	set	1084
   560     043B                     _TRISC3	set	1083
   561     0189                     _ANSELH	set	393
   562     0188                     _ANSEL	set	392
   563     0022                     STR_1:
   564     0022  3448               	retlw	72	;'H'
   565     0023  346F               	retlw	111	;'o'
   566     0024  346C               	retlw	108	;'l'
   567     0025  3461               	retlw	97	;'a'
   568     0026  3400               	retlw	0
   569                           
   570                           	psect	cinit
   571     07ED                     start_initialization:	
   572                           ; #config settings
   573                           
   574     07ED                     __initialization:
   575                           
   576                           ; Initialize objects allocated to BANK0
   577     07ED  1383               	bcf	3,7	;select IRP bank0
   578     07EE  3036               	movlw	low (__pdataBANK0+22)
   579     07EF  00FD               	movwf	btemp+-1
   580     07F0  3004               	movlw	high __pidataBANK0
   581     07F1  00FE               	movwf	btemp
   582     07F2  3085               	movlw	low __pidataBANK0
   583     07F3  00FF               	movwf	btemp+1
   584     07F4  3020               	movlw	low __pdataBANK0
   585     07F5  0084               	movwf	4
   586     07F6  120A  118A  2476  120A  118A  	fcall	init_ram0
   587                           
   588                           ; Clear objects allocated to BANK0
   589     07FB  01C1               	clrf	__pbssBANK0& (0+127)
   590     07FC                     end_of_initialization:	
   591                           ;End of C runtime variable initialization code
   592                           
   593     07FC                     __end_of__initialization:
   594     07FC  0183               	clrf	3
   595     07FD  120A  118A  2F69   	ljmp	_main	;jump to C main() function
   596                           
   597                           	psect	bssBANK0
   598     0041                     __pbssBANK0:
   599     0041                     _dato:
   600     0041                     	ds	1
   601                           
   602                           	psect	dataBANK0
   603     0020                     __pdataBANK0:
   604     0020                     _x:
   605     0020                     	ds	2
   606     0022                     _z:
   607     0022                     	ds	1
   608     0023                     _y:
   609     0023                     	ds	1
   610     0024                     _datos:
   611     0024                     	ds	18
   612                           
   613                           	psect	inittext
   614     0472                     init_fetch0:	
   615                           ;	Called with low address in FSR and high address in W
   616                           
   617     0472  087E               	movf	btemp,w
   618     0473  008A               	movwf	10
   619     0474  087F               	movf	btemp+1,w
   620     0475  0082               	movwf	2
   621     0476                     init_ram0:	
   622                           ;Called with:
   623                           ;	high address of idata address in btemp 
   624                           ;	low address of idata address in btemp+1 
   625                           ;	low address of data in FSR
   626                           ;	high address + 1 of data in btemp-1
   627                           
   628     0476  120A  118A  2472  120A  118A  	fcall	init_fetch0
   629     047B  0080               	movwf	0
   630     047C  0A84               	incf	4,f
   631     047D  0804               	movf	4,w
   632     047E  067D               	xorwf	btemp+-1,w
   633     047F  1903               	btfsc	3,2
   634     0480  3400               	retlw	0
   635     0481  0AFF               	incf	btemp+1,f
   636     0482  1903               	btfsc	3,2
   637     0483  0AFE               	incf	btemp,f
   638     0484  2C76               	goto	init_ram0
   639                           
   640                           	psect	cstackCOMMON
   641     0070                     __pcstackCOMMON:
   642     0070                     ?_setup:
   643     0070                     ?_Lcd_Port:	
   644                           ; 1 bytes @ 0x0
   645                           
   646     0070                     ??_Lcd_Port:	
   647                           ; 1 bytes @ 0x0
   648                           
   649     0070                     ?_Lcd_Cmd:	
   650                           ; 1 bytes @ 0x0
   651                           
   652     0070                     ?_Lcd_Init:	
   653                           ; 1 bytes @ 0x0
   654                           
   655     0070                     ?_Lcd_Write_Char:	
   656                           ; 1 bytes @ 0x0
   657                           
   658     0070                     ?_main:	
   659                           ; 1 bytes @ 0x0
   660                           
   661     0070                     ?___awdiv:	
   662                           ; 1 bytes @ 0x0
   663                           
   664     0070                     ?___awmod:	
   665                           ; 2 bytes @ 0x0
   666                           
   667     0070                     ?___lldiv:	
   668                           ; 2 bytes @ 0x0
   669                           
   670     0070                     Lcd_Port@a:	
   671                           ; 4 bytes @ 0x0
   672                           
   673     0070                     ___awdiv@divisor:	
   674                           ; 1 bytes @ 0x0
   675                           
   676     0070                     ___awmod@divisor:	
   677                           ; 2 bytes @ 0x0
   678                           
   679     0070                     ___lldiv@divisor:	
   680                           ; 2 bytes @ 0x0
   681                           
   682                           
   683                           ; 4 bytes @ 0x0
   684     0070                     	ds	1
   685     0071                     ??_Lcd_Cmd:
   686     0071                     ??_Lcd_Write_Char:	
   687                           ; 1 bytes @ 0x1
   688                           
   689                           
   690                           ; 1 bytes @ 0x1
   691     0071                     	ds	1
   692     0072                     Lcd_Write_Char@temp:
   693     0072                     ___awdiv@dividend:	
   694                           ; 1 bytes @ 0x2
   695                           
   696     0072                     ___awmod@dividend:	
   697                           ; 2 bytes @ 0x2
   698                           
   699                           
   700                           ; 2 bytes @ 0x2
   701     0072                     	ds	1
   702     0073                     Lcd_Cmd@a:
   703     0073                     Lcd_Write_Char@y:	
   704                           ; 1 bytes @ 0x3
   705                           
   706                           
   707                           ; 1 bytes @ 0x3
   708     0073                     	ds	1
   709     0074                     ?_Lcd_Set_Cursor:
   710     0074                     ??_Lcd_Init:	
   711                           ; 1 bytes @ 0x4
   712                           
   713     0074                     ??___awdiv:	
   714                           ; 1 bytes @ 0x4
   715                           
   716     0074                     ??___awmod:	
   717                           ; 1 bytes @ 0x4
   718                           
   719     0074                     Lcd_Set_Cursor@b:	
   720                           ; 1 bytes @ 0x4
   721                           
   722     0074                     Lcd_Write_Char@a:	
   723                           ; 1 bytes @ 0x4
   724                           
   725     0074                     ___awdiv@counter:	
   726                           ; 1 bytes @ 0x4
   727                           
   728     0074                     ___awmod@counter:	
   729                           ; 1 bytes @ 0x4
   730                           
   731     0074                     ___lldiv@dividend:	
   732                           ; 1 bytes @ 0x4
   733                           
   734                           
   735                           ; 4 bytes @ 0x4
   736     0074                     	ds	1
   737     0075                     ??_Lcd_Set_Cursor:
   738     0075                     ?_Lcd_Write_String:	
   739                           ; 1 bytes @ 0x5
   740                           
   741     0075                     ___awdiv@sign:	
   742                           ; 1 bytes @ 0x5
   743                           
   744     0075                     ___awmod@sign:	
   745                           ; 1 bytes @ 0x5
   746                           
   747     0075                     Lcd_Write_String@a:	
   748                           ; 1 bytes @ 0x5
   749                           
   750                           
   751                           ; 2 bytes @ 0x5
   752     0075                     	ds	1
   753     0076                     Lcd_Set_Cursor@a:
   754     0076                     ___awdiv@quotient:	
   755                           ; 1 bytes @ 0x6
   756                           
   757                           
   758                           ; 2 bytes @ 0x6
   759     0076                     	ds	1
   760     0077                     ??_Lcd_Write_String:
   761     0077                     Lcd_Set_Cursor@z:	
   762                           ; 1 bytes @ 0x7
   763                           
   764                           
   765                           ; 1 bytes @ 0x7
   766     0077                     	ds	1
   767     0078                     ??___lldiv:
   768     0078                     Lcd_Set_Cursor@y:	
   769                           ; 1 bytes @ 0x8
   770                           
   771                           
   772                           ; 1 bytes @ 0x8
   773     0078                     	ds	1
   774     0079                     Lcd_Set_Cursor@temp:
   775     0079                     ___lldiv@quotient:	
   776                           ; 1 bytes @ 0x9
   777                           
   778                           
   779                           ; 4 bytes @ 0x9
   780     0079                     	ds	1
   781     007A                     Lcd_Write_String@i:
   782                           
   783                           ; 2 bytes @ 0xA
   784     007A                     	ds	3
   785     007D                     ___lldiv@counter:
   786                           
   787                           ; 1 bytes @ 0xD
   788     007D                     	ds	1
   789     007E                     ??_setup:
   790                           
   791                           	psect	cstackBANK0
   792     0036                     __pcstackBANK0:	
   793                           ; 1 bytes @ 0xE
   794                           
   795     0036                     ?_I2C_Master_Init:
   796     0036                     I2C_Master_Init@c:	
   797                           ; 1 bytes @ 0x0
   798                           
   799                           
   800                           ; 4 bytes @ 0x0
   801     0036                     	ds	4
   802     003A                     ??_I2C_Master_Init:
   803                           
   804                           ; 1 bytes @ 0x4
   805     003A                     	ds	4
   806     003E                     ??_main:
   807                           
   808                           ; 1 bytes @ 0x8
   809     003E                     	ds	3
   810                           
   811                           	psect	maintext
   812     0769                     __pmaintext:	
   813 ;;
   814 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   815 ;;
   816 ;; *************** function _main *****************
   817 ;; Defined at:
   818 ;;		line 54 in file "pruebaI2C.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;		None
   821 ;; Auto vars:     Size  Location     Type
   822 ;;  x               2    0        int 
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   827 ;; Tracked objects:
   828 ;;		On entry : B00/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   832 ;;      Params:         0       0       0       0       0
   833 ;;      Locals:         0       0       0       0       0
   834 ;;      Temps:          0       3       0       0       0
   835 ;;      Totals:         0       3       0       0       0
   836 ;;Total ram usage:        3 bytes
   837 ;; Hardware stack levels required when called: 3
   838 ;; This function calls:
   839 ;;		_I2C_Master_Init
   840 ;;		_Lcd_Init
   841 ;;		_Lcd_Set_Cursor
   842 ;;		_Lcd_Write_String
   843 ;;		___awdiv
   844 ;;		___awmod
   845 ;;		_setup
   846 ;; This function is called by:
   847 ;;		Startup code after reset
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851     0769                     _main:	
   852                           ;psect for function _main
   853                           
   854     0769                     l1342:	
   855                           ;incstack = 0
   856                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   857                           
   858                           
   859                           ;pruebaI2C.c: 55:     setup();
   860     0769  120A  118A  24B5  120A  118A  	fcall	_setup
   861     076E                     l1344:
   862                           
   863                           ;pruebaI2C.c: 56:     Lcd_Init();
   864     076E  120A  118A  263F  120A  118A  	fcall	_Lcd_Init
   865     0773                     l1346:
   866                           
   867                           ;pruebaI2C.c: 57:     I2C_Master_Init(100000);
   868     0773  3000               	movlw	0
   869     0774  1283               	bcf	3,5	;RP0=0, select bank0
   870     0775  1303               	bcf	3,6	;RP1=0, select bank0
   871     0776  00B9               	movwf	I2C_Master_Init@c+3
   872     0777  3001               	movlw	1
   873     0778  00B8               	movwf	I2C_Master_Init@c+2
   874     0779  3086               	movlw	134
   875     077A  00B7               	movwf	I2C_Master_Init@c+1
   876     077B  30A0               	movlw	160
   877     077C  00B6               	movwf	I2C_Master_Init@c
   878     077D  120A  118A  2526  120A  118A  	fcall	_I2C_Master_Init
   879     0782                     l1348:
   880                           
   881                           ;pruebaI2C.c: 72:         _delay((unsigned long)((200)*(8000000/4000.0)));
   882     0782  3003               	movlw	3
   883     0783  1283               	bcf	3,5	;RP0=0, select bank0
   884     0784  1303               	bcf	3,6	;RP1=0, select bank0
   885     0785  00C0               	movwf	??_main+2
   886     0786  3008               	movlw	8
   887     0787  00BF               	movwf	??_main+1
   888     0788  3076               	movlw	118
   889     0789  00BE               	movwf	??_main
   890     078A                     u967:
   891     078A  0BBE               	decfsz	??_main,f
   892     078B  2F8A               	goto	u967
   893     078C  0BBF               	decfsz	??_main+1,f
   894     078D  2F8A               	goto	u967
   895     078E  0BC0               	decfsz	??_main+2,f
   896     078F  2F8A               	goto	u967
   897     0790  0000               	nop
   898     0791                     l1350:
   899     0791                     l1352:
   900                           
   901                           ;pruebaI2C.c: 82:          datos[6] = x / 10 + '0';
   902     0791  300A               	movlw	10
   903     0792  00F0               	movwf	___awdiv@divisor
   904     0793  3000               	movlw	0
   905     0794  00F1               	movwf	___awdiv@divisor+1
   906     0795  306F               	movlw	111
   907     0796  00F2               	movwf	___awdiv@dividend
   908     0797  3000               	movlw	0
   909     0798  00F3               	movwf	___awdiv@dividend+1
   910     0799  120A  118A  2702  120A  118A  	fcall	___awdiv
   911     079E  0870               	movf	?___awdiv,w
   912     079F  3E30               	addlw	48
   913     07A0  1283               	bcf	3,5	;RP0=0, select bank0
   914     07A1  1303               	bcf	3,6	;RP1=0, select bank0
   915     07A2  00AA               	movwf	_datos+6
   916     07A3                     l1354:
   917                           
   918                           ;pruebaI2C.c: 83:         datos[7] = x % 10 + '0';
   919     07A3  300A               	movlw	10
   920     07A4  00F0               	movwf	___awmod@divisor
   921     07A5  3000               	movlw	0
   922     07A6  00F1               	movwf	___awmod@divisor+1
   923     07A7  306F               	movlw	111
   924     07A8  00F2               	movwf	___awmod@dividend
   925     07A9  3000               	movlw	0
   926     07AA  00F3               	movwf	___awmod@dividend+1
   927     07AB  120A  118A  25E6  120A  118A  	fcall	___awmod
   928     07B0  0870               	movf	?___awmod,w
   929     07B1  3E30               	addlw	48
   930     07B2  1283               	bcf	3,5	;RP0=0, select bank0
   931     07B3  1303               	bcf	3,6	;RP1=0, select bank0
   932     07B4  00AB               	movwf	_datos+7
   933     07B5                     l1356:
   934                           
   935                           ;pruebaI2C.c: 84:         datos[8] = x / 10 + '0';
   936     07B5  300A               	movlw	10
   937     07B6  00F0               	movwf	___awdiv@divisor
   938     07B7  3000               	movlw	0
   939     07B8  00F1               	movwf	___awdiv@divisor+1
   940     07B9  306F               	movlw	111
   941     07BA  00F2               	movwf	___awdiv@dividend
   942     07BB  3000               	movlw	0
   943     07BC  00F3               	movwf	___awdiv@dividend+1
   944     07BD  120A  118A  2702  120A  118A  	fcall	___awdiv
   945     07C2  0870               	movf	?___awdiv,w
   946     07C3  3E30               	addlw	48
   947     07C4  1283               	bcf	3,5	;RP0=0, select bank0
   948     07C5  1303               	bcf	3,6	;RP1=0, select bank0
   949     07C6  00AC               	movwf	_datos+8
   950     07C7                     l1358:
   951                           
   952                           ;pruebaI2C.c: 85:         Lcd_Set_Cursor(1,1);
   953     07C7  01F4               	clrf	Lcd_Set_Cursor@b
   954     07C8  0AF4               	incf	Lcd_Set_Cursor@b,f
   955     07C9  3001               	movlw	1
   956     07CA  120A  118A  25A0  120A  118A  	fcall	_Lcd_Set_Cursor
   957     07CF                     l1360:
   958                           
   959                           ;pruebaI2C.c: 87:     Lcd_Write_String(datos);
   960     07CF  3024               	movlw	(low (_datos| 0))& (0+255)
   961     07D0  00F5               	movwf	Lcd_Write_String@a
   962     07D1  3000               	movlw	0
   963     07D2  00F6               	movwf	Lcd_Write_String@a+1
   964     07D3  120A  118A  255E  120A  118A  	fcall	_Lcd_Write_String
   965     07D8                     l1362:
   966                           
   967                           ;pruebaI2C.c: 88:     Lcd_Set_Cursor(2,1);
   968     07D8  01F4               	clrf	Lcd_Set_Cursor@b
   969     07D9  0AF4               	incf	Lcd_Set_Cursor@b,f
   970     07DA  3002               	movlw	2
   971     07DB  120A  118A  25A0  120A  118A  	fcall	_Lcd_Set_Cursor
   972     07E0                     l1364:
   973                           
   974                           ;pruebaI2C.c: 89:     Lcd_Write_String("Hola");
   975     07E0  3010               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   976     07E1  00F5               	movwf	Lcd_Write_String@a
   977     07E2  3080               	movlw	128
   978     07E3  00F6               	movwf	Lcd_Write_String@a+1
   979     07E4  120A  118A  255E  120A  118A  	fcall	_Lcd_Write_String
   980     07E9  2F82               	goto	l1348
   981     07EA  120A  118A  2800   	ljmp	start
   982     07ED                     __end_of_main:
   983                           
   984                           	psect	text1
   985     04B5                     __ptext1:	
   986 ;; *************** function _setup *****************
   987 ;; Defined at:
   988 ;;		line 96 in file "pruebaI2C.c"
   989 ;; Parameters:    Size  Location     Type
   990 ;;		None
   991 ;; Auto vars:     Size  Location     Type
   992 ;;		None
   993 ;; Return value:  Size  Location     Type
   994 ;;                  1    wreg      void 
   995 ;; Registers used:
   996 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   997 ;; Tracked objects:
   998 ;;		On entry : 0/0
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1002 ;;      Params:         0       0       0       0       0
  1003 ;;      Locals:         0       0       0       0       0
  1004 ;;      Temps:          0       0       0       0       0
  1005 ;;      Totals:         0       0       0       0       0
  1006 ;;Total ram usage:        0 bytes
  1007 ;; Hardware stack levels used: 1
  1008 ;; Hardware stack levels required when called: 2
  1009 ;; This function calls:
  1010 ;;		_I2C_Master_Init
  1011 ;; This function is called by:
  1012 ;;		_main
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016     04B5                     _setup:	
  1017                           ;psect for function _setup
  1018                           
  1019     04B5                     l1234:	
  1020                           ;incstack = 0
  1021                           ; Regs used in _setup: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1022                           
  1023                           
  1024                           ;pruebaI2C.c: 97:     ANSEL = 0;
  1025     04B5  1683               	bsf	3,5	;RP0=1, select bank3
  1026     04B6  1703               	bsf	3,6	;RP1=1, select bank3
  1027     04B7  0188               	clrf	8	;volatile
  1028                           
  1029                           ;pruebaI2C.c: 98:     ANSELH = 0;
  1030     04B8  0189               	clrf	9	;volatile
  1031                           
  1032                           ;pruebaI2C.c: 99:     TRISB = 0;
  1033     04B9  1683               	bsf	3,5	;RP0=1, select bank1
  1034     04BA  1303               	bcf	3,6	;RP1=0, select bank1
  1035     04BB  0186               	clrf	6	;volatile
  1036                           
  1037                           ;pruebaI2C.c: 100:     TRISD = 0;
  1038     04BC  0188               	clrf	8	;volatile
  1039                           
  1040                           ;pruebaI2C.c: 101:     PORTB = 0;
  1041     04BD  1283               	bcf	3,5	;RP0=0, select bank0
  1042     04BE  1303               	bcf	3,6	;RP1=0, select bank0
  1043     04BF  0186               	clrf	6	;volatile
  1044                           
  1045                           ;pruebaI2C.c: 102:     PORTD = 0;
  1046     04C0  0188               	clrf	8	;volatile
  1047     04C1                     l1236:
  1048                           
  1049                           ;pruebaI2C.c: 103:     I2C_Master_Init(100000);
  1050     04C1  3000               	movlw	0
  1051     04C2  00B9               	movwf	I2C_Master_Init@c+3
  1052     04C3  3001               	movlw	1
  1053     04C4  00B8               	movwf	I2C_Master_Init@c+2
  1054     04C5  3086               	movlw	134
  1055     04C6  00B7               	movwf	I2C_Master_Init@c+1
  1056     04C7  30A0               	movlw	160
  1057     04C8  00B6               	movwf	I2C_Master_Init@c
  1058     04C9  120A  118A  2526  120A  118A  	fcall	_I2C_Master_Init
  1059     04CE                     l208:
  1060     04CE  0008               	return
  1061     04CF                     __end_of_setup:
  1062                           
  1063                           	psect	text2
  1064     0526                     __ptext2:	
  1065 ;; *************** function _I2C_Master_Init *****************
  1066 ;; Defined at:
  1067 ;;		line 16 in file "I2C.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;  c               4    0[BANK0 ] const unsigned long 
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;		None
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  1    wreg      void 
  1074 ;; Registers used:
  1075 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1081 ;;      Params:         0       4       0       0       0
  1082 ;;      Locals:         0       0       0       0       0
  1083 ;;      Temps:          0       4       0       0       0
  1084 ;;      Totals:         0       8       0       0       0
  1085 ;;Total ram usage:        8 bytes
  1086 ;; Hardware stack levels used: 1
  1087 ;; Hardware stack levels required when called: 1
  1088 ;; This function calls:
  1089 ;;		___lldiv
  1090 ;; This function is called by:
  1091 ;;		_main
  1092 ;;		_setup
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096     0526                     _I2C_Master_Init:	
  1097                           ;psect for function _I2C_Master_Init
  1098                           
  1099     0526                     l1154:	
  1100                           ;incstack = 0
  1101                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1102                           
  1103                           
  1104                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1105     0526  3028               	movlw	40
  1106     0527  1283               	bcf	3,5	;RP0=0, select bank0
  1107     0528  1303               	bcf	3,6	;RP1=0, select bank0
  1108     0529  0094               	movwf	20	;volatile
  1109     052A                     l1156:
  1110                           
  1111                           ;I2C.c: 19:     SSPCON2 = 0;
  1112     052A  1683               	bsf	3,5	;RP0=1, select bank1
  1113     052B  1303               	bcf	3,6	;RP1=0, select bank1
  1114     052C  0191               	clrf	17	;volatile
  1115     052D                     l1158:
  1116                           
  1117                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1118     052D  1283               	bcf	3,5	;RP0=0, select bank0
  1119     052E  1303               	bcf	3,6	;RP1=0, select bank0
  1120     052F  0836               	movf	I2C_Master_Init@c,w
  1121     0530  00BA               	movwf	??_I2C_Master_Init
  1122     0531  0837               	movf	I2C_Master_Init@c+1,w
  1123     0532  00BB               	movwf	??_I2C_Master_Init+1
  1124     0533  0838               	movf	I2C_Master_Init@c+2,w
  1125     0534  00BC               	movwf	??_I2C_Master_Init+2
  1126     0535  0839               	movf	I2C_Master_Init@c+3,w
  1127     0536  00BD               	movwf	??_I2C_Master_Init+3
  1128     0537  3002               	movlw	2
  1129     0538                     u635:
  1130     0538  1003               	clrc
  1131     0539  0DBA               	rlf	??_I2C_Master_Init,f
  1132     053A  0DBB               	rlf	??_I2C_Master_Init+1,f
  1133     053B  0DBC               	rlf	??_I2C_Master_Init+2,f
  1134     053C  0DBD               	rlf	??_I2C_Master_Init+3,f
  1135     053D                     u630:
  1136     053D  3EFF               	addlw	-1
  1137     053E  1D03               	skipz
  1138     053F  2D38               	goto	u635
  1139     0540  083D               	movf	??_I2C_Master_Init+3,w
  1140     0541  00F3               	movwf	___lldiv@divisor+3
  1141     0542  083C               	movf	??_I2C_Master_Init+2,w
  1142     0543  00F2               	movwf	___lldiv@divisor+2
  1143     0544  083B               	movf	??_I2C_Master_Init+1,w
  1144     0545  00F1               	movwf	___lldiv@divisor+1
  1145     0546  083A               	movf	??_I2C_Master_Init,w
  1146     0547  00F0               	movwf	___lldiv@divisor
  1147     0548  3000               	movlw	0
  1148     0549  00F7               	movwf	___lldiv@dividend+3
  1149     054A  307A               	movlw	122
  1150     054B  00F6               	movwf	___lldiv@dividend+2
  1151     054C  3012               	movlw	18
  1152     054D  00F5               	movwf	___lldiv@dividend+1
  1153     054E  3000               	movlw	0
  1154     054F  00F4               	movwf	___lldiv@dividend
  1155     0550  120A  118A  269C  120A  118A  	fcall	___lldiv
  1156     0555  0870               	movf	?___lldiv,w
  1157     0556  3EFF               	addlw	255
  1158     0557  1683               	bsf	3,5	;RP0=1, select bank1
  1159     0558  1303               	bcf	3,6	;RP1=0, select bank1
  1160     0559  0093               	movwf	19	;volatile
  1161     055A                     l1160:
  1162                           
  1163                           ;I2C.c: 21:     SSPSTAT = 0;
  1164     055A  0194               	clrf	20	;volatile
  1165     055B                     l1162:
  1166                           
  1167                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1168     055B  1587               	bsf	7,3	;volatile
  1169     055C                     l1164:
  1170                           
  1171                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1172     055C  1607               	bsf	7,4	;volatile
  1173     055D                     l29:
  1174     055D  0008               	return
  1175     055E                     __end_of_I2C_Master_Init:
  1176                           
  1177                           	psect	text3
  1178     069C                     __ptext3:	
  1179 ;; *************** function ___lldiv *****************
  1180 ;; Defined at:
  1181 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;  divisor         4    0[COMMON] unsigned long 
  1184 ;;  dividend        4    4[COMMON] unsigned long 
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;  quotient        4    9[COMMON] unsigned long 
  1187 ;;  counter         1   13[COMMON] unsigned char 
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  4    0[COMMON] unsigned long 
  1190 ;; Registers used:
  1191 ;;		wreg, status,2, status,0, btemp+1
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1197 ;;      Params:         8       0       0       0       0
  1198 ;;      Locals:         5       0       0       0       0
  1199 ;;      Temps:          1       0       0       0       0
  1200 ;;      Totals:        14       0       0       0       0
  1201 ;;Total ram usage:       14 bytes
  1202 ;; Hardware stack levels used: 1
  1203 ;; This function calls:
  1204 ;;		Nothing
  1205 ;; This function is called by:
  1206 ;;		_I2C_Master_Init
  1207 ;;		_UART_Init
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211     069C                     ___lldiv:	
  1212                           ;psect for function ___lldiv
  1213                           
  1214     069C                     l1128:	
  1215                           ;incstack = 0
  1216                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1217                           
  1218     069C  3000               	movlw	0
  1219     069D  00FC               	movwf	___lldiv@quotient+3
  1220     069E  3000               	movlw	0
  1221     069F  00FB               	movwf	___lldiv@quotient+2
  1222     06A0  3000               	movlw	0
  1223     06A1  00FA               	movwf	___lldiv@quotient+1
  1224     06A2  3000               	movlw	0
  1225     06A3  00F9               	movwf	___lldiv@quotient
  1226     06A4  0873               	movf	___lldiv@divisor+3,w
  1227     06A5  0472               	iorwf	___lldiv@divisor+2,w
  1228     06A6  0471               	iorwf	___lldiv@divisor+1,w
  1229     06A7  0470               	iorwf	___lldiv@divisor,w
  1230     06A8  1903               	skipnz
  1231     06A9  2EAB               	goto	u561
  1232     06AA  2EAC               	goto	u560
  1233     06AB                     u561:
  1234     06AB  2EF9               	goto	l1150
  1235     06AC                     u560:
  1236     06AC                     l1130:
  1237     06AC  01FD               	clrf	___lldiv@counter
  1238     06AD  0AFD               	incf	___lldiv@counter,f
  1239     06AE  2EBC               	goto	l1136
  1240     06AF                     l1132:
  1241     06AF  3001               	movlw	1
  1242     06B0  00F8               	movwf	??___lldiv
  1243     06B1                     u575:
  1244     06B1  1003               	clrc
  1245     06B2  0DF0               	rlf	___lldiv@divisor,f
  1246     06B3  0DF1               	rlf	___lldiv@divisor+1,f
  1247     06B4  0DF2               	rlf	___lldiv@divisor+2,f
  1248     06B5  0DF3               	rlf	___lldiv@divisor+3,f
  1249     06B6  0BF8               	decfsz	??___lldiv,f
  1250     06B7  2EB1               	goto	u575
  1251     06B8                     l1134:
  1252     06B8  3001               	movlw	1
  1253     06B9  00FF               	movwf	btemp+1
  1254     06BA  087F               	movf	btemp+1,w
  1255     06BB  07FD               	addwf	___lldiv@counter,f
  1256     06BC                     l1136:
  1257     06BC  1FF3               	btfss	___lldiv@divisor+3,7
  1258     06BD  2EBF               	goto	u581
  1259     06BE  2EC0               	goto	u580
  1260     06BF                     u581:
  1261     06BF  2EAF               	goto	l1132
  1262     06C0                     u580:
  1263     06C0                     l1138:
  1264     06C0  3001               	movlw	1
  1265     06C1  00F8               	movwf	??___lldiv
  1266     06C2                     u595:
  1267     06C2  1003               	clrc
  1268     06C3  0DF9               	rlf	___lldiv@quotient,f
  1269     06C4  0DFA               	rlf	___lldiv@quotient+1,f
  1270     06C5  0DFB               	rlf	___lldiv@quotient+2,f
  1271     06C6  0DFC               	rlf	___lldiv@quotient+3,f
  1272     06C7  0BF8               	decfsz	??___lldiv,f
  1273     06C8  2EC2               	goto	u595
  1274     06C9                     l1140:
  1275     06C9  0873               	movf	___lldiv@divisor+3,w
  1276     06CA  0277               	subwf	___lldiv@dividend+3,w
  1277     06CB  1D03               	skipz
  1278     06CC  2ED7               	goto	u605
  1279     06CD  0872               	movf	___lldiv@divisor+2,w
  1280     06CE  0276               	subwf	___lldiv@dividend+2,w
  1281     06CF  1D03               	skipz
  1282     06D0  2ED7               	goto	u605
  1283     06D1  0871               	movf	___lldiv@divisor+1,w
  1284     06D2  0275               	subwf	___lldiv@dividend+1,w
  1285     06D3  1D03               	skipz
  1286     06D4  2ED7               	goto	u605
  1287     06D5  0870               	movf	___lldiv@divisor,w
  1288     06D6  0274               	subwf	___lldiv@dividend,w
  1289     06D7                     u605:
  1290     06D7  1C03               	skipc
  1291     06D8  2EDA               	goto	u601
  1292     06D9  2EDB               	goto	u600
  1293     06DA                     u601:
  1294     06DA  2EEA               	goto	l1146
  1295     06DB                     u600:
  1296     06DB                     l1142:
  1297     06DB  0870               	movf	___lldiv@divisor,w
  1298     06DC  02F4               	subwf	___lldiv@dividend,f
  1299     06DD  0871               	movf	___lldiv@divisor+1,w
  1300     06DE  1C03               	skipc
  1301     06DF  0F71               	incfsz	___lldiv@divisor+1,w
  1302     06E0  02F5               	subwf	___lldiv@dividend+1,f
  1303     06E1  0872               	movf	___lldiv@divisor+2,w
  1304     06E2  1C03               	skipc
  1305     06E3  0F72               	incfsz	___lldiv@divisor+2,w
  1306     06E4  02F6               	subwf	___lldiv@dividend+2,f
  1307     06E5  0873               	movf	___lldiv@divisor+3,w
  1308     06E6  1C03               	skipc
  1309     06E7  0F73               	incfsz	___lldiv@divisor+3,w
  1310     06E8  02F7               	subwf	___lldiv@dividend+3,f
  1311     06E9                     l1144:
  1312     06E9  1479               	bsf	___lldiv@quotient,0
  1313     06EA                     l1146:
  1314     06EA  3001               	movlw	1
  1315     06EB                     u615:
  1316     06EB  1003               	clrc
  1317     06EC  0CF3               	rrf	___lldiv@divisor+3,f
  1318     06ED  0CF2               	rrf	___lldiv@divisor+2,f
  1319     06EE  0CF1               	rrf	___lldiv@divisor+1,f
  1320     06EF  0CF0               	rrf	___lldiv@divisor,f
  1321     06F0  3EFF               	addlw	-1
  1322     06F1  1D03               	skipz
  1323     06F2  2EEB               	goto	u615
  1324     06F3                     l1148:
  1325     06F3  3001               	movlw	1
  1326     06F4  02FD               	subwf	___lldiv@counter,f
  1327     06F5  1D03               	btfss	3,2
  1328     06F6  2EF8               	goto	u621
  1329     06F7  2EF9               	goto	u620
  1330     06F8                     u621:
  1331     06F8  2EC0               	goto	l1138
  1332     06F9                     u620:
  1333     06F9                     l1150:
  1334     06F9  087C               	movf	___lldiv@quotient+3,w
  1335     06FA  00F3               	movwf	?___lldiv+3
  1336     06FB  087B               	movf	___lldiv@quotient+2,w
  1337     06FC  00F2               	movwf	?___lldiv+2
  1338     06FD  087A               	movf	___lldiv@quotient+1,w
  1339     06FE  00F1               	movwf	?___lldiv+1
  1340     06FF  0879               	movf	___lldiv@quotient,w
  1341     0700  00F0               	movwf	?___lldiv
  1342     0701                     l330:
  1343     0701  0008               	return
  1344     0702                     __end_of___lldiv:
  1345                           
  1346                           	psect	text4
  1347     05E6                     __ptext4:	
  1348 ;; *************** function ___awmod *****************
  1349 ;; Defined at:
  1350 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;  divisor         2    0[COMMON] int 
  1353 ;;  dividend        2    2[COMMON] int 
  1354 ;; Auto vars:     Size  Location     Type
  1355 ;;  sign            1    5[COMMON] unsigned char 
  1356 ;;  counter         1    4[COMMON] unsigned char 
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  2    0[COMMON] int 
  1359 ;; Registers used:
  1360 ;;		wreg, status,2, status,0, btemp+1
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1366 ;;      Params:         4       0       0       0       0
  1367 ;;      Locals:         2       0       0       0       0
  1368 ;;      Temps:          0       0       0       0       0
  1369 ;;      Totals:         6       0       0       0       0
  1370 ;;Total ram usage:        6 bytes
  1371 ;; Hardware stack levels used: 1
  1372 ;; This function calls:
  1373 ;;		Nothing
  1374 ;; This function is called by:
  1375 ;;		_main
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379     05E6                     ___awmod:	
  1380                           ;psect for function ___awmod
  1381                           
  1382     05E6                     l1282:	
  1383                           ;incstack = 0
  1384                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1385                           
  1386     05E6  01F5               	clrf	___awmod@sign
  1387     05E7                     l1284:
  1388     05E7  1FF3               	btfss	___awmod@dividend+1,7
  1389     05E8  2DEA               	goto	u821
  1390     05E9  2DEB               	goto	u820
  1391     05EA                     u821:
  1392     05EA  2DF2               	goto	l1290
  1393     05EB                     u820:
  1394     05EB                     l1286:
  1395     05EB  09F2               	comf	___awmod@dividend,f
  1396     05EC  09F3               	comf	___awmod@dividend+1,f
  1397     05ED  0AF2               	incf	___awmod@dividend,f
  1398     05EE  1903               	skipnz
  1399     05EF  0AF3               	incf	___awmod@dividend+1,f
  1400     05F0                     l1288:
  1401     05F0  01F5               	clrf	___awmod@sign
  1402     05F1  0AF5               	incf	___awmod@sign,f
  1403     05F2                     l1290:
  1404     05F2  1FF1               	btfss	___awmod@divisor+1,7
  1405     05F3  2DF5               	goto	u831
  1406     05F4  2DF6               	goto	u830
  1407     05F5                     u831:
  1408     05F5  2DFB               	goto	l1294
  1409     05F6                     u830:
  1410     05F6                     l1292:
  1411     05F6  09F0               	comf	___awmod@divisor,f
  1412     05F7  09F1               	comf	___awmod@divisor+1,f
  1413     05F8  0AF0               	incf	___awmod@divisor,f
  1414     05F9  1903               	skipnz
  1415     05FA  0AF1               	incf	___awmod@divisor+1,f
  1416     05FB                     l1294:
  1417     05FB  0870               	movf	___awmod@divisor,w
  1418     05FC  0471               	iorwf	___awmod@divisor+1,w
  1419     05FD  1903               	btfsc	3,2
  1420     05FE  2E00               	goto	u841
  1421     05FF  2E01               	goto	u840
  1422     0600                     u841:
  1423     0600  2E30               	goto	l1312
  1424     0601                     u840:
  1425     0601                     l1296:
  1426     0601  01F4               	clrf	___awmod@counter
  1427     0602  0AF4               	incf	___awmod@counter,f
  1428     0603  2E0F               	goto	l1302
  1429     0604                     l1298:
  1430     0604  3001               	movlw	1
  1431     0605                     u855:
  1432     0605  1003               	clrc
  1433     0606  0DF0               	rlf	___awmod@divisor,f
  1434     0607  0DF1               	rlf	___awmod@divisor+1,f
  1435     0608  3EFF               	addlw	-1
  1436     0609  1D03               	skipz
  1437     060A  2E05               	goto	u855
  1438     060B                     l1300:
  1439     060B  3001               	movlw	1
  1440     060C  00FF               	movwf	btemp+1
  1441     060D  087F               	movf	btemp+1,w
  1442     060E  07F4               	addwf	___awmod@counter,f
  1443     060F                     l1302:
  1444     060F  1FF1               	btfss	___awmod@divisor+1,7
  1445     0610  2E12               	goto	u861
  1446     0611  2E13               	goto	u860
  1447     0612                     u861:
  1448     0612  2E04               	goto	l1298
  1449     0613                     u860:
  1450     0613                     l1304:
  1451     0613  0871               	movf	___awmod@divisor+1,w
  1452     0614  0273               	subwf	___awmod@dividend+1,w
  1453     0615  1D03               	skipz
  1454     0616  2E19               	goto	u875
  1455     0617  0870               	movf	___awmod@divisor,w
  1456     0618  0272               	subwf	___awmod@dividend,w
  1457     0619                     u875:
  1458     0619  1C03               	skipc
  1459     061A  2E1C               	goto	u871
  1460     061B  2E1D               	goto	u870
  1461     061C                     u871:
  1462     061C  2E23               	goto	l1308
  1463     061D                     u870:
  1464     061D                     l1306:
  1465     061D  0870               	movf	___awmod@divisor,w
  1466     061E  02F2               	subwf	___awmod@dividend,f
  1467     061F  0871               	movf	___awmod@divisor+1,w
  1468     0620  1C03               	skipc
  1469     0621  03F3               	decf	___awmod@dividend+1,f
  1470     0622  02F3               	subwf	___awmod@dividend+1,f
  1471     0623                     l1308:
  1472     0623  3001               	movlw	1
  1473     0624                     u885:
  1474     0624  1003               	clrc
  1475     0625  0CF1               	rrf	___awmod@divisor+1,f
  1476     0626  0CF0               	rrf	___awmod@divisor,f
  1477     0627  3EFF               	addlw	-1
  1478     0628  1D03               	skipz
  1479     0629  2E24               	goto	u885
  1480     062A                     l1310:
  1481     062A  3001               	movlw	1
  1482     062B  02F4               	subwf	___awmod@counter,f
  1483     062C  1D03               	btfss	3,2
  1484     062D  2E2F               	goto	u891
  1485     062E  2E30               	goto	u890
  1486     062F                     u891:
  1487     062F  2E13               	goto	l1304
  1488     0630                     u890:
  1489     0630                     l1312:
  1490     0630  0875               	movf	___awmod@sign,w
  1491     0631  1903               	btfsc	3,2
  1492     0632  2E34               	goto	u901
  1493     0633  2E35               	goto	u900
  1494     0634                     u901:
  1495     0634  2E3A               	goto	l1316
  1496     0635                     u900:
  1497     0635                     l1314:
  1498     0635  09F2               	comf	___awmod@dividend,f
  1499     0636  09F3               	comf	___awmod@dividend+1,f
  1500     0637  0AF2               	incf	___awmod@dividend,f
  1501     0638  1903               	skipnz
  1502     0639  0AF3               	incf	___awmod@dividend+1,f
  1503     063A                     l1316:
  1504     063A  0873               	movf	___awmod@dividend+1,w
  1505     063B  00F1               	movwf	?___awmod+1
  1506     063C  0872               	movf	___awmod@dividend,w
  1507     063D  00F0               	movwf	?___awmod
  1508     063E                     l460:
  1509     063E  0008               	return
  1510     063F                     __end_of___awmod:
  1511                           
  1512                           	psect	text5
  1513     0702                     __ptext5:	
  1514 ;; *************** function ___awdiv *****************
  1515 ;; Defined at:
  1516 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;  divisor         2    0[COMMON] int 
  1519 ;;  dividend        2    2[COMMON] int 
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;  quotient        2    6[COMMON] int 
  1522 ;;  sign            1    5[COMMON] unsigned char 
  1523 ;;  counter         1    4[COMMON] unsigned char 
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  2    0[COMMON] int 
  1526 ;; Registers used:
  1527 ;;		wreg, status,2, status,0, btemp+1
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1533 ;;      Params:         4       0       0       0       0
  1534 ;;      Locals:         4       0       0       0       0
  1535 ;;      Temps:          0       0       0       0       0
  1536 ;;      Totals:         8       0       0       0       0
  1537 ;;Total ram usage:        8 bytes
  1538 ;; Hardware stack levels used: 1
  1539 ;; This function calls:
  1540 ;;		Nothing
  1541 ;; This function is called by:
  1542 ;;		_main
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546     0702                     ___awdiv:	
  1547                           ;psect for function ___awdiv
  1548                           
  1549     0702                     l1238:	
  1550                           ;incstack = 0
  1551                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  1552                           
  1553     0702  01F5               	clrf	___awdiv@sign
  1554     0703                     l1240:
  1555     0703  1FF1               	btfss	___awdiv@divisor+1,7
  1556     0704  2F06               	goto	u721
  1557     0705  2F07               	goto	u720
  1558     0706                     u721:
  1559     0706  2F0E               	goto	l1246
  1560     0707                     u720:
  1561     0707                     l1242:
  1562     0707  09F0               	comf	___awdiv@divisor,f
  1563     0708  09F1               	comf	___awdiv@divisor+1,f
  1564     0709  0AF0               	incf	___awdiv@divisor,f
  1565     070A  1903               	skipnz
  1566     070B  0AF1               	incf	___awdiv@divisor+1,f
  1567     070C                     l1244:
  1568     070C  01F5               	clrf	___awdiv@sign
  1569     070D  0AF5               	incf	___awdiv@sign,f
  1570     070E                     l1246:
  1571     070E  1FF3               	btfss	___awdiv@dividend+1,7
  1572     070F  2F11               	goto	u731
  1573     0710  2F12               	goto	u730
  1574     0711                     u731:
  1575     0711  2F1B               	goto	l1252
  1576     0712                     u730:
  1577     0712                     l1248:
  1578     0712  09F2               	comf	___awdiv@dividend,f
  1579     0713  09F3               	comf	___awdiv@dividend+1,f
  1580     0714  0AF2               	incf	___awdiv@dividend,f
  1581     0715  1903               	skipnz
  1582     0716  0AF3               	incf	___awdiv@dividend+1,f
  1583     0717                     l1250:
  1584     0717  3001               	movlw	1
  1585     0718  00FF               	movwf	btemp+1
  1586     0719  087F               	movf	btemp+1,w
  1587     071A  06F5               	xorwf	___awdiv@sign,f
  1588     071B                     l1252:
  1589     071B  01F6               	clrf	___awdiv@quotient
  1590     071C  01F7               	clrf	___awdiv@quotient+1
  1591     071D                     l1254:
  1592     071D  0870               	movf	___awdiv@divisor,w
  1593     071E  0471               	iorwf	___awdiv@divisor+1,w
  1594     071F  1903               	btfsc	3,2
  1595     0720  2F22               	goto	u741
  1596     0721  2F23               	goto	u740
  1597     0722                     u741:
  1598     0722  2F5A               	goto	l1274
  1599     0723                     u740:
  1600     0723                     l1256:
  1601     0723  01F4               	clrf	___awdiv@counter
  1602     0724  0AF4               	incf	___awdiv@counter,f
  1603     0725  2F31               	goto	l1262
  1604     0726                     l1258:
  1605     0726  3001               	movlw	1
  1606     0727                     u755:
  1607     0727  1003               	clrc
  1608     0728  0DF0               	rlf	___awdiv@divisor,f
  1609     0729  0DF1               	rlf	___awdiv@divisor+1,f
  1610     072A  3EFF               	addlw	-1
  1611     072B  1D03               	skipz
  1612     072C  2F27               	goto	u755
  1613     072D                     l1260:
  1614     072D  3001               	movlw	1
  1615     072E  00FF               	movwf	btemp+1
  1616     072F  087F               	movf	btemp+1,w
  1617     0730  07F4               	addwf	___awdiv@counter,f
  1618     0731                     l1262:
  1619     0731  1FF1               	btfss	___awdiv@divisor+1,7
  1620     0732  2F34               	goto	u761
  1621     0733  2F35               	goto	u760
  1622     0734                     u761:
  1623     0734  2F26               	goto	l1258
  1624     0735                     u760:
  1625     0735                     l1264:
  1626     0735  3001               	movlw	1
  1627     0736                     u775:
  1628     0736  1003               	clrc
  1629     0737  0DF6               	rlf	___awdiv@quotient,f
  1630     0738  0DF7               	rlf	___awdiv@quotient+1,f
  1631     0739  3EFF               	addlw	-1
  1632     073A  1D03               	skipz
  1633     073B  2F36               	goto	u775
  1634     073C  0871               	movf	___awdiv@divisor+1,w
  1635     073D  0273               	subwf	___awdiv@dividend+1,w
  1636     073E  1D03               	skipz
  1637     073F  2F42               	goto	u785
  1638     0740  0870               	movf	___awdiv@divisor,w
  1639     0741  0272               	subwf	___awdiv@dividend,w
  1640     0742                     u785:
  1641     0742  1C03               	skipc
  1642     0743  2F45               	goto	u781
  1643     0744  2F46               	goto	u780
  1644     0745                     u781:
  1645     0745  2F4D               	goto	l1270
  1646     0746                     u780:
  1647     0746                     l1266:
  1648     0746  0870               	movf	___awdiv@divisor,w
  1649     0747  02F2               	subwf	___awdiv@dividend,f
  1650     0748  0871               	movf	___awdiv@divisor+1,w
  1651     0749  1C03               	skipc
  1652     074A  03F3               	decf	___awdiv@dividend+1,f
  1653     074B  02F3               	subwf	___awdiv@dividend+1,f
  1654     074C                     l1268:
  1655     074C  1476               	bsf	___awdiv@quotient,0
  1656     074D                     l1270:
  1657     074D  3001               	movlw	1
  1658     074E                     u795:
  1659     074E  1003               	clrc
  1660     074F  0CF1               	rrf	___awdiv@divisor+1,f
  1661     0750  0CF0               	rrf	___awdiv@divisor,f
  1662     0751  3EFF               	addlw	-1
  1663     0752  1D03               	skipz
  1664     0753  2F4E               	goto	u795
  1665     0754                     l1272:
  1666     0754  3001               	movlw	1
  1667     0755  02F4               	subwf	___awdiv@counter,f
  1668     0756  1D03               	btfss	3,2
  1669     0757  2F59               	goto	u801
  1670     0758  2F5A               	goto	u800
  1671     0759                     u801:
  1672     0759  2F35               	goto	l1264
  1673     075A                     u800:
  1674     075A                     l1274:
  1675     075A  0875               	movf	___awdiv@sign,w
  1676     075B  1903               	btfsc	3,2
  1677     075C  2F5E               	goto	u811
  1678     075D  2F5F               	goto	u810
  1679     075E                     u811:
  1680     075E  2F64               	goto	l1278
  1681     075F                     u810:
  1682     075F                     l1276:
  1683     075F  09F6               	comf	___awdiv@quotient,f
  1684     0760  09F7               	comf	___awdiv@quotient+1,f
  1685     0761  0AF6               	incf	___awdiv@quotient,f
  1686     0762  1903               	skipnz
  1687     0763  0AF7               	incf	___awdiv@quotient+1,f
  1688     0764                     l1278:
  1689     0764  0877               	movf	___awdiv@quotient+1,w
  1690     0765  00F1               	movwf	?___awdiv+1
  1691     0766  0876               	movf	___awdiv@quotient,w
  1692     0767  00F0               	movwf	?___awdiv
  1693     0768                     l447:
  1694     0768  0008               	return
  1695     0769                     __end_of___awdiv:
  1696                           
  1697                           	psect	text6
  1698     055E                     __ptext6:	
  1699 ;; *************** function _Lcd_Write_String *****************
  1700 ;; Defined at:
  1701 ;;		line 98 in file "LCD.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;  a               2    5[COMMON] PTR unsigned char 
  1704 ;;		 -> STR_1(5), datos(18), 
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;  i               2   10[COMMON] int 
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      void 
  1709 ;; Registers used:
  1710 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1716 ;;      Params:         2       0       0       0       0
  1717 ;;      Locals:         2       0       0       0       0
  1718 ;;      Temps:          3       0       0       0       0
  1719 ;;      Totals:         7       0       0       0       0
  1720 ;;Total ram usage:        7 bytes
  1721 ;; Hardware stack levels used: 1
  1722 ;; Hardware stack levels required when called: 2
  1723 ;; This function calls:
  1724 ;;		_Lcd_Write_Char
  1725 ;; This function is called by:
  1726 ;;		_main
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730     055E                     _Lcd_Write_String:	
  1731                           ;psect for function _Lcd_Write_String
  1732                           
  1733     055E                     l1226:	
  1734                           ;incstack = 0
  1735                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1736                           
  1737                           
  1738                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  1739     055E  01FA               	clrf	Lcd_Write_String@i
  1740     055F  01FB               	clrf	Lcd_Write_String@i+1
  1741     0560  2D83               	goto	l1232
  1742     0561                     l1228:
  1743                           
  1744                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  1745     0561  087A               	movf	Lcd_Write_String@i,w
  1746     0562  0775               	addwf	Lcd_Write_String@a,w
  1747     0563  00F8               	movwf	??_Lcd_Write_String+1
  1748     0564  0876               	movf	Lcd_Write_String@a+1,w
  1749     0565  00F7               	movwf	??_Lcd_Write_String
  1750     0566  1803               	skipnc
  1751     0567  0AF7               	incf	??_Lcd_Write_String,f
  1752     0568  1FFA               	btfss	Lcd_Write_String@i,7
  1753     0569  2D6B               	goto	u690
  1754     056A  03F7               	decf	??_Lcd_Write_String,f
  1755     056B                     u690:
  1756     056B  0877               	movf	??_Lcd_Write_String,w
  1757     056C  00F9               	movwf	??_Lcd_Write_String+2
  1758     056D  0879               	movf	??_Lcd_Write_String+2,w
  1759     056E  1283               	bcf	3,5	;RP0=0, select bank0
  1760     056F  1303               	bcf	3,6	;RP1=0, select bank0
  1761     0570  00FF               	movwf	btemp+1
  1762     0571  0878               	movf	??_Lcd_Write_String+1,w
  1763     0572  0084               	movwf	4
  1764     0573  120A  118A  2003  120A  118A  	fcall	stringtab
  1765     0578  120A  118A  24F1  120A  118A  	fcall	_Lcd_Write_Char
  1766     057D                     l1230:
  1767     057D  3001               	movlw	1
  1768     057E  07FA               	addwf	Lcd_Write_String@i,f
  1769     057F  1803               	skipnc
  1770     0580  0AFB               	incf	Lcd_Write_String@i+1,f
  1771     0581  3000               	movlw	0
  1772     0582  07FB               	addwf	Lcd_Write_String@i+1,f
  1773     0583                     l1232:
  1774     0583  087A               	movf	Lcd_Write_String@i,w
  1775     0584  0775               	addwf	Lcd_Write_String@a,w
  1776     0585  00F8               	movwf	??_Lcd_Write_String+1
  1777     0586  0876               	movf	Lcd_Write_String@a+1,w
  1778     0587  00F7               	movwf	??_Lcd_Write_String
  1779     0588  1803               	skipnc
  1780     0589  0AF7               	incf	??_Lcd_Write_String,f
  1781     058A  1FFA               	btfss	Lcd_Write_String@i,7
  1782     058B  2D8D               	goto	u700
  1783     058C  03F7               	decf	??_Lcd_Write_String,f
  1784     058D                     u700:
  1785     058D  0877               	movf	??_Lcd_Write_String,w
  1786     058E  00F9               	movwf	??_Lcd_Write_String+2
  1787     058F  0879               	movf	??_Lcd_Write_String+2,w
  1788     0590  1283               	bcf	3,5	;RP0=0, select bank0
  1789     0591  1303               	bcf	3,6	;RP1=0, select bank0
  1790     0592  00FF               	movwf	btemp+1
  1791     0593  0878               	movf	??_Lcd_Write_String+1,w
  1792     0594  0084               	movwf	4
  1793     0595  120A  118A  2003  120A  118A  	fcall	stringtab
  1794     059A  3A00               	xorlw	0
  1795     059B  1D03               	skipz
  1796     059C  2D9E               	goto	u711
  1797     059D  2D9F               	goto	u710
  1798     059E                     u711:
  1799     059E  2D61               	goto	l1228
  1800     059F                     u710:
  1801     059F                     l104:
  1802     059F  0008               	return
  1803     05A0                     __end_of_Lcd_Write_String:
  1804                           
  1805                           	psect	text7
  1806     04F1                     __ptext7:	
  1807 ;; *************** function _Lcd_Write_Char *****************
  1808 ;; Defined at:
  1809 ;;		line 83 in file "LCD.c"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;  a               1    wreg     unsigned char 
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;  a               1    4[COMMON] unsigned char 
  1814 ;;  y               1    3[COMMON] unsigned char 
  1815 ;;  temp            1    2[COMMON] unsigned char 
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      void 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2, status,0, pclath, cstack
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1825 ;;      Params:         0       0       0       0       0
  1826 ;;      Locals:         3       0       0       0       0
  1827 ;;      Temps:          1       0       0       0       0
  1828 ;;      Totals:         4       0       0       0       0
  1829 ;;Total ram usage:        4 bytes
  1830 ;; Hardware stack levels used: 1
  1831 ;; Hardware stack levels required when called: 1
  1832 ;; This function calls:
  1833 ;;		_Lcd_Port
  1834 ;; This function is called by:
  1835 ;;		_Lcd_Write_String
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839     04F1                     _Lcd_Write_Char:	
  1840                           ;psect for function _Lcd_Write_Char
  1841                           
  1842                           
  1843                           ;incstack = 0
  1844                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1845                           ;Lcd_Write_Char@a stored from wreg
  1846     04F1  00F4               	movwf	Lcd_Write_Char@a
  1847     04F2                     l1176:
  1848                           
  1849                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  1850     04F2  0874               	movf	Lcd_Write_Char@a,w
  1851     04F3  390F               	andlw	15
  1852     04F4  00F2               	movwf	Lcd_Write_Char@temp
  1853                           
  1854                           ;LCD.c: 86:     y = a & 0xF0;
  1855     04F5  0874               	movf	Lcd_Write_Char@a,w
  1856     04F6  39F0               	andlw	240
  1857     04F7  00F3               	movwf	Lcd_Write_Char@y
  1858     04F8                     l1178:
  1859                           
  1860                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  1861     04F8  1283               	bcf	3,5	;RP0=0, select bank0
  1862     04F9  1303               	bcf	3,6	;RP1=0, select bank0
  1863     04FA  1508               	bsf	8,2	;volatile
  1864     04FB                     l1180:
  1865                           
  1866                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  1867     04FB  0873               	movf	Lcd_Write_Char@y,w
  1868     04FC  00F1               	movwf	??_Lcd_Write_Char
  1869     04FD  3004               	movlw	4
  1870     04FE                     u645:
  1871     04FE  1003               	clrc
  1872     04FF  0CF1               	rrf	??_Lcd_Write_Char,f
  1873     0500  3EFF               	addlw	-1
  1874     0501  1D03               	skipz
  1875     0502  2CFE               	goto	u645
  1876     0503  0871               	movf	??_Lcd_Write_Char,w
  1877     0504  120A  118A  24CF  120A  118A  	fcall	_Lcd_Port
  1878     0509                     l1182:
  1879                           
  1880                           ;LCD.c: 89:     RD3 = 1;
  1881     0509  1283               	bcf	3,5	;RP0=0, select bank0
  1882     050A  1303               	bcf	3,6	;RP1=0, select bank0
  1883     050B  1588               	bsf	8,3	;volatile
  1884     050C                     l1184:
  1885                           
  1886                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1887     050C  301A               	movlw	26
  1888     050D  00F1               	movwf	??_Lcd_Write_Char
  1889     050E                     u977:
  1890     050E  0BF1               	decfsz	??_Lcd_Write_Char,f
  1891     050F  2D0E               	goto	u977
  1892     0510  0000               	nop
  1893     0511                     l1186:
  1894                           
  1895                           ;LCD.c: 91:     RD3 = 0;
  1896     0511  1283               	bcf	3,5	;RP0=0, select bank0
  1897     0512  1303               	bcf	3,6	;RP1=0, select bank0
  1898     0513  1188               	bcf	8,3	;volatile
  1899     0514                     l1188:
  1900                           
  1901                           ;LCD.c: 92:     Lcd_Port(temp);
  1902     0514  0872               	movf	Lcd_Write_Char@temp,w
  1903     0515  120A  118A  24CF  120A  118A  	fcall	_Lcd_Port
  1904     051A                     l1190:
  1905                           
  1906                           ;LCD.c: 93:     RD3 = 1;
  1907     051A  1283               	bcf	3,5	;RP0=0, select bank0
  1908     051B  1303               	bcf	3,6	;RP1=0, select bank0
  1909     051C  1588               	bsf	8,3	;volatile
  1910     051D                     l1192:
  1911                           
  1912                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1913     051D  301A               	movlw	26
  1914     051E  00F1               	movwf	??_Lcd_Write_Char
  1915     051F                     u987:
  1916     051F  0BF1               	decfsz	??_Lcd_Write_Char,f
  1917     0520  2D1F               	goto	u987
  1918     0521  0000               	nop
  1919     0522                     l1194:
  1920                           
  1921                           ;LCD.c: 95:     RD3 = 0;
  1922     0522  1283               	bcf	3,5	;RP0=0, select bank0
  1923     0523  1303               	bcf	3,6	;RP1=0, select bank0
  1924     0524  1188               	bcf	8,3	;volatile
  1925     0525                     l98:
  1926     0525  0008               	return
  1927     0526                     __end_of_Lcd_Write_Char:
  1928                           
  1929                           	psect	text8
  1930     05A0                     __ptext8:	
  1931 ;; *************** function _Lcd_Set_Cursor *****************
  1932 ;; Defined at:
  1933 ;;		line 48 in file "LCD.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;  a               1    wreg     unsigned char 
  1936 ;;  b               1    4[COMMON] unsigned char 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  a               1    6[COMMON] unsigned char 
  1939 ;;  temp            1    9[COMMON] unsigned char 
  1940 ;;  y               1    8[COMMON] unsigned char 
  1941 ;;  z               1    7[COMMON] unsigned char 
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  1    wreg      void 
  1944 ;; Registers used:
  1945 ;;		wreg, status,2, status,0, pclath, cstack
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1951 ;;      Params:         1       0       0       0       0
  1952 ;;      Locals:         4       0       0       0       0
  1953 ;;      Temps:          1       0       0       0       0
  1954 ;;      Totals:         6       0       0       0       0
  1955 ;;Total ram usage:        6 bytes
  1956 ;; Hardware stack levels used: 1
  1957 ;; Hardware stack levels required when called: 2
  1958 ;; This function calls:
  1959 ;;		_Lcd_Cmd
  1960 ;; This function is called by:
  1961 ;;		_main
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965     05A0                     _Lcd_Set_Cursor:	
  1966                           ;psect for function _Lcd_Set_Cursor
  1967                           
  1968                           
  1969                           ;incstack = 0
  1970                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1971                           ;Lcd_Set_Cursor@a stored from wreg
  1972     05A0  00F6               	movwf	Lcd_Set_Cursor@a
  1973     05A1                     l1196:
  1974                           
  1975                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  1976     05A1  0376               	decf	Lcd_Set_Cursor@a,w
  1977     05A2  1D03               	btfss	3,2
  1978     05A3  2DA5               	goto	u651
  1979     05A4  2DA6               	goto	u650
  1980     05A5                     u651:
  1981     05A5  2DC3               	goto	l1206
  1982     05A6                     u650:
  1983     05A6                     l1198:
  1984                           
  1985                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  1986     05A6  0874               	movf	Lcd_Set_Cursor@b,w
  1987     05A7  3E7F               	addlw	127
  1988     05A8  00F9               	movwf	Lcd_Set_Cursor@temp
  1989                           
  1990                           ;LCD.c: 52:         z = temp >> 4;
  1991     05A9  0879               	movf	Lcd_Set_Cursor@temp,w
  1992     05AA  00F5               	movwf	??_Lcd_Set_Cursor
  1993     05AB  3004               	movlw	4
  1994     05AC                     u665:
  1995     05AC  1003               	clrc
  1996     05AD  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1997     05AE  3EFF               	addlw	-1
  1998     05AF  1D03               	skipz
  1999     05B0  2DAC               	goto	u665
  2000     05B1  0875               	movf	??_Lcd_Set_Cursor,w
  2001     05B2  00F7               	movwf	Lcd_Set_Cursor@z
  2002     05B3                     l1200:
  2003                           
  2004                           ;LCD.c: 53:         y = temp & 0x0F;
  2005     05B3  0879               	movf	Lcd_Set_Cursor@temp,w
  2006     05B4  390F               	andlw	15
  2007     05B5  00F8               	movwf	Lcd_Set_Cursor@y
  2008     05B6                     l1202:
  2009                           
  2010                           ;LCD.c: 54:         Lcd_Cmd(z);
  2011     05B6  0877               	movf	Lcd_Set_Cursor@z,w
  2012     05B7  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2013     05BC                     l1204:
  2014                           
  2015                           ;LCD.c: 55:         Lcd_Cmd(y);
  2016     05BC  0878               	movf	Lcd_Set_Cursor@y,w
  2017     05BD  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2018                           
  2019                           ;LCD.c: 56:     } else if (a == 2) {
  2020     05C2  2DE5               	goto	l92
  2021     05C3                     l1206:
  2022     05C3  3002               	movlw	2
  2023     05C4  0676               	xorwf	Lcd_Set_Cursor@a,w
  2024     05C5  1D03               	btfss	3,2
  2025     05C6  2DC8               	goto	u671
  2026     05C7  2DC9               	goto	u670
  2027     05C8                     u671:
  2028     05C8  2DE5               	goto	l92
  2029     05C9                     u670:
  2030     05C9                     l1208:
  2031                           
  2032                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2033     05C9  0874               	movf	Lcd_Set_Cursor@b,w
  2034     05CA  3EBF               	addlw	191
  2035     05CB  00F9               	movwf	Lcd_Set_Cursor@temp
  2036                           
  2037                           ;LCD.c: 58:         z = temp >> 4;
  2038     05CC  0879               	movf	Lcd_Set_Cursor@temp,w
  2039     05CD  00F5               	movwf	??_Lcd_Set_Cursor
  2040     05CE  3004               	movlw	4
  2041     05CF                     u685:
  2042     05CF  1003               	clrc
  2043     05D0  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2044     05D1  3EFF               	addlw	-1
  2045     05D2  1D03               	skipz
  2046     05D3  2DCF               	goto	u685
  2047     05D4  0875               	movf	??_Lcd_Set_Cursor,w
  2048     05D5  00F7               	movwf	Lcd_Set_Cursor@z
  2049     05D6                     l1210:
  2050                           
  2051                           ;LCD.c: 59:         y = temp & 0x0F;
  2052     05D6  0879               	movf	Lcd_Set_Cursor@temp,w
  2053     05D7  390F               	andlw	15
  2054     05D8  00F8               	movwf	Lcd_Set_Cursor@y
  2055     05D9                     l1212:
  2056                           
  2057                           ;LCD.c: 60:         Lcd_Cmd(z);
  2058     05D9  0877               	movf	Lcd_Set_Cursor@z,w
  2059     05DA  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2060     05DF                     l1214:
  2061                           
  2062                           ;LCD.c: 61:         Lcd_Cmd(y);
  2063     05DF  0878               	movf	Lcd_Set_Cursor@y,w
  2064     05E0  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2065     05E5                     l92:
  2066     05E5  0008               	return
  2067     05E6                     __end_of_Lcd_Set_Cursor:
  2068                           
  2069                           	psect	text9
  2070     063F                     __ptext9:	
  2071 ;; *************** function _Lcd_Init *****************
  2072 ;; Defined at:
  2073 ;;		line 65 in file "LCD.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;		None
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;		None
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  1    wreg      void 
  2080 ;; Registers used:
  2081 ;;		wreg, status,2, status,0, pclath, cstack
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2087 ;;      Params:         0       0       0       0       0
  2088 ;;      Locals:         0       0       0       0       0
  2089 ;;      Temps:          2       0       0       0       0
  2090 ;;      Totals:         2       0       0       0       0
  2091 ;;Total ram usage:        2 bytes
  2092 ;; Hardware stack levels used: 1
  2093 ;; Hardware stack levels required when called: 2
  2094 ;; This function calls:
  2095 ;;		_Lcd_Cmd
  2096 ;;		_Lcd_Port
  2097 ;; This function is called by:
  2098 ;;		_main
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102     063F                     _Lcd_Init:	
  2103                           ;psect for function _Lcd_Init
  2104                           
  2105     063F                     l1216:	
  2106                           ;incstack = 0
  2107                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2108                           
  2109                           
  2110                           ;LCD.c: 66:     Lcd_Port(0x00);
  2111     063F  3000               	movlw	0
  2112     0640  120A  118A  24CF  120A  118A  	fcall	_Lcd_Port
  2113     0645                     l1218:
  2114                           
  2115                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2116     0645  3034               	movlw	52
  2117     0646  00F5               	movwf	??_Lcd_Init+1
  2118     0647  30F1               	movlw	241
  2119     0648  00F4               	movwf	??_Lcd_Init
  2120     0649                     u997:
  2121     0649  0BF4               	decfsz	??_Lcd_Init,f
  2122     064A  2E49               	goto	u997
  2123     064B  0BF5               	decfsz	??_Lcd_Init+1,f
  2124     064C  2E49               	goto	u997
  2125     064D  2E4E               	nop2
  2126     064E                     l1220:
  2127                           
  2128                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2129     064E  3003               	movlw	3
  2130     064F  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2131                           
  2132                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2133     0654  300D               	movlw	13
  2134     0655  00F5               	movwf	??_Lcd_Init+1
  2135     0656  30FB               	movlw	251
  2136     0657  00F4               	movwf	??_Lcd_Init
  2137     0658                     u1007:
  2138     0658  0BF4               	decfsz	??_Lcd_Init,f
  2139     0659  2E58               	goto	u1007
  2140     065A  0BF5               	decfsz	??_Lcd_Init+1,f
  2141     065B  2E58               	goto	u1007
  2142     065C  2E5D               	nop2
  2143     065D                     l1222:
  2144                           
  2145                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2146     065D  3003               	movlw	3
  2147     065E  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2148     0663                     l1224:
  2149                           
  2150                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2151     0663  301D               	movlw	29
  2152     0664  00F5               	movwf	??_Lcd_Init+1
  2153     0665  3091               	movlw	145
  2154     0666  00F4               	movwf	??_Lcd_Init
  2155     0667                     u1017:
  2156     0667  0BF4               	decfsz	??_Lcd_Init,f
  2157     0668  2E67               	goto	u1017
  2158     0669  0BF5               	decfsz	??_Lcd_Init+1,f
  2159     066A  2E67               	goto	u1017
  2160                           
  2161                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2162     066B  3003               	movlw	3
  2163     066C  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2164                           
  2165                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2166     0671  3002               	movlw	2
  2167     0672  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2168                           
  2169                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  2170     0677  3002               	movlw	2
  2171     0678  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2172                           
  2173                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  2174     067D  3008               	movlw	8
  2175     067E  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2176                           
  2177                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  2178     0683  3000               	movlw	0
  2179     0684  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2180                           
  2181                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  2182     0689  300C               	movlw	12
  2183     068A  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2184                           
  2185                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  2186     068F  3000               	movlw	0
  2187     0690  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2188                           
  2189                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  2190     0695  3006               	movlw	6
  2191     0696  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2192     069B                     l95:
  2193     069B  0008               	return
  2194     069C                     __end_of_Lcd_Init:
  2195                           
  2196                           	psect	text10
  2197     049B                     __ptext10:	
  2198 ;; *************** function _Lcd_Cmd *****************
  2199 ;; Defined at:
  2200 ;;		line 35 in file "LCD.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;  a               1    wreg     unsigned char 
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;  a               1    3[COMMON] unsigned char 
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      void 
  2207 ;; Registers used:
  2208 ;;		wreg, status,2, status,0, pclath, cstack
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2214 ;;      Params:         0       0       0       0       0
  2215 ;;      Locals:         1       0       0       0       0
  2216 ;;      Temps:          2       0       0       0       0
  2217 ;;      Totals:         3       0       0       0       0
  2218 ;;Total ram usage:        3 bytes
  2219 ;; Hardware stack levels used: 1
  2220 ;; Hardware stack levels required when called: 1
  2221 ;; This function calls:
  2222 ;;		_Lcd_Port
  2223 ;; This function is called by:
  2224 ;;		_Lcd_Set_Cursor
  2225 ;;		_Lcd_Init
  2226 ;;		_Lcd_Clear
  2227 ;;		_Lcd_Shift_Right
  2228 ;;		_Lcd_Shift_Left
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232     049B                     _Lcd_Cmd:	
  2233                           ;psect for function _Lcd_Cmd
  2234                           
  2235                           
  2236                           ;incstack = 0
  2237                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2238                           ;Lcd_Cmd@a stored from wreg
  2239     049B  00F3               	movwf	Lcd_Cmd@a
  2240     049C                     l1166:
  2241                           
  2242                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  2243     049C  1283               	bcf	3,5	;RP0=0, select bank0
  2244     049D  1303               	bcf	3,6	;RP1=0, select bank0
  2245     049E  1108               	bcf	8,2	;volatile
  2246     049F                     l1168:
  2247                           
  2248                           ;LCD.c: 37:     Lcd_Port(a);
  2249     049F  0873               	movf	Lcd_Cmd@a,w
  2250     04A0  120A  118A  24CF  120A  118A  	fcall	_Lcd_Port
  2251     04A5                     l1170:
  2252                           
  2253                           ;LCD.c: 38:     RD3 = 1;
  2254     04A5  1283               	bcf	3,5	;RP0=0, select bank0
  2255     04A6  1303               	bcf	3,6	;RP1=0, select bank0
  2256     04A7  1588               	bsf	8,3	;volatile
  2257     04A8                     l1172:
  2258                           
  2259                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2260     04A8  300B               	movlw	11
  2261     04A9  00F2               	movwf	??_Lcd_Cmd+1
  2262     04AA  3062               	movlw	98
  2263     04AB  00F1               	movwf	??_Lcd_Cmd
  2264     04AC                     u1027:
  2265     04AC  0BF1               	decfsz	??_Lcd_Cmd,f
  2266     04AD  2CAC               	goto	u1027
  2267     04AE  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2268     04AF  2CAC               	goto	u1027
  2269     04B0  0000               	nop
  2270     04B1                     l1174:
  2271                           
  2272                           ;LCD.c: 40:     RD3 = 0;
  2273     04B1  1283               	bcf	3,5	;RP0=0, select bank0
  2274     04B2  1303               	bcf	3,6	;RP1=0, select bank0
  2275     04B3  1188               	bcf	8,3	;volatile
  2276     04B4                     l83:
  2277     04B4  0008               	return
  2278     04B5                     __end_of_Lcd_Cmd:
  2279                           
  2280                           	psect	text11
  2281     04CF                     __ptext11:	
  2282 ;; *************** function _Lcd_Port *****************
  2283 ;; Defined at:
  2284 ;;		line 13 in file "LCD.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;  a               1    wreg     unsigned char 
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;  a               1    0[COMMON] unsigned char 
  2289 ;; Return value:  Size  Location     Type
  2290 ;;                  1    wreg      void 
  2291 ;; Registers used:
  2292 ;;		wreg
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2298 ;;      Params:         0       0       0       0       0
  2299 ;;      Locals:         1       0       0       0       0
  2300 ;;      Temps:          0       0       0       0       0
  2301 ;;      Totals:         1       0       0       0       0
  2302 ;;Total ram usage:        1 bytes
  2303 ;; Hardware stack levels used: 1
  2304 ;; This function calls:
  2305 ;;		Nothing
  2306 ;; This function is called by:
  2307 ;;		_Lcd_Cmd
  2308 ;;		_Lcd_Init
  2309 ;;		_Lcd_Write_Char
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313     04CF                     _Lcd_Port:	
  2314                           ;psect for function _Lcd_Port
  2315                           
  2316                           
  2317                           ;incstack = 0
  2318                           ; Regs used in _Lcd_Port: [wreg]
  2319                           ;Lcd_Port@a stored from wreg
  2320     04CF  00F0               	movwf	Lcd_Port@a
  2321     04D0                     l1118:
  2322                           
  2323                           ;LCD.c: 14:     if (a & 1)
  2324     04D0  1C70               	btfss	Lcd_Port@a,0
  2325     04D1  2CD3               	goto	u521
  2326     04D2  2CD4               	goto	u520
  2327     04D3                     u521:
  2328     04D3  2CD8               	goto	l72
  2329     04D4                     u520:
  2330     04D4                     l1120:
  2331                           
  2332                           ;LCD.c: 15:         RD4 = 1;
  2333     04D4  1283               	bcf	3,5	;RP0=0, select bank0
  2334     04D5  1303               	bcf	3,6	;RP1=0, select bank0
  2335     04D6  1608               	bsf	8,4	;volatile
  2336     04D7  2CDB               	goto	l73
  2337     04D8                     l72:	
  2338                           ;LCD.c: 16:     else
  2339                           
  2340                           
  2341                           ;LCD.c: 17:         RD4 = 0;
  2342     04D8  1283               	bcf	3,5	;RP0=0, select bank0
  2343     04D9  1303               	bcf	3,6	;RP1=0, select bank0
  2344     04DA  1208               	bcf	8,4	;volatile
  2345     04DB                     l73:
  2346                           
  2347                           ;LCD.c: 19:     if (a & 2)
  2348     04DB  1CF0               	btfss	Lcd_Port@a,1
  2349     04DC  2CDE               	goto	u531
  2350     04DD  2CDF               	goto	u530
  2351     04DE                     u531:
  2352     04DE  2CE1               	goto	l74
  2353     04DF                     u530:
  2354     04DF                     l1122:
  2355                           
  2356                           ;LCD.c: 20:         RD5 = 1;
  2357     04DF  1688               	bsf	8,5	;volatile
  2358     04E0  2CE2               	goto	l75
  2359     04E1                     l74:	
  2360                           ;LCD.c: 21:     else
  2361                           
  2362                           
  2363                           ;LCD.c: 22:         RD5 = 0;
  2364     04E1  1288               	bcf	8,5	;volatile
  2365     04E2                     l75:
  2366                           
  2367                           ;LCD.c: 24:     if (a & 4)
  2368     04E2  1D70               	btfss	Lcd_Port@a,2
  2369     04E3  2CE5               	goto	u541
  2370     04E4  2CE6               	goto	u540
  2371     04E5                     u541:
  2372     04E5  2CE8               	goto	l76
  2373     04E6                     u540:
  2374     04E6                     l1124:
  2375                           
  2376                           ;LCD.c: 25:         RD6 = 1;
  2377     04E6  1708               	bsf	8,6	;volatile
  2378     04E7  2CE9               	goto	l77
  2379     04E8                     l76:	
  2380                           ;LCD.c: 26:     else
  2381                           
  2382                           
  2383                           ;LCD.c: 27:         RD6 = 0;
  2384     04E8  1308               	bcf	8,6	;volatile
  2385     04E9                     l77:
  2386                           
  2387                           ;LCD.c: 29:     if (a & 8)
  2388     04E9  1DF0               	btfss	Lcd_Port@a,3
  2389     04EA  2CEC               	goto	u551
  2390     04EB  2CED               	goto	u550
  2391     04EC                     u551:
  2392     04EC  2CEF               	goto	l78
  2393     04ED                     u550:
  2394     04ED                     l1126:
  2395                           
  2396                           ;LCD.c: 30:         RD7 = 1;
  2397     04ED  1788               	bsf	8,7	;volatile
  2398     04EE  2CF0               	goto	l80
  2399     04EF                     l78:	
  2400                           ;LCD.c: 31:     else
  2401                           
  2402                           
  2403                           ;LCD.c: 32:         RD7 = 0;
  2404     04EF  1388               	bcf	8,7	;volatile
  2405     04F0                     l80:
  2406     04F0  0008               	return
  2407     04F1                     __end_of_Lcd_Port:
  2408     007E                     btemp	set	126	;btemp
  2409     007E                     wtemp0	set	126
  2410                           
  2411                           	psect	idloc
  2412                           
  2413                           ;Config register IDLOC0 @ 0x2000
  2414                           ;	unspecified, using default values
  2415     2000                     	org	8192
  2416     2000  3FFF               	dw	16383
  2417                           
  2418                           ;Config register IDLOC1 @ 0x2001
  2419                           ;	unspecified, using default values
  2420     2001                     	org	8193
  2421     2001  3FFF               	dw	16383
  2422                           
  2423                           ;Config register IDLOC2 @ 0x2002
  2424                           ;	unspecified, using default values
  2425     2002                     	org	8194
  2426     2002  3FFF               	dw	16383
  2427                           
  2428                           ;Config register IDLOC3 @ 0x2003
  2429                           ;	unspecified, using default values
  2430     2003                     	org	8195
  2431     2003  3FFF               	dw	16383
  2432                           
  2433                           	psect	config
  2434                           
  2435                           ;Config register CONFIG1 @ 0x2007
  2436                           ;	Oscillator Selection bits
  2437                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  2438                           ;	Watchdog Timer Enable bit
  2439                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2440                           ;	Power-up Timer Enable bit
  2441                           ;	PWRTE = OFF, PWRT disabled
  2442                           ;	RE3/MCLR pin function select bit
  2443                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2444                           ;	Code Protection bit
  2445                           ;	CP = OFF, Program memory code protection is disabled
  2446                           ;	Data Code Protection bit
  2447                           ;	CPD = OFF, Data memory code protection is disabled
  2448                           ;	Brown Out Reset Selection bits
  2449                           ;	BOREN = OFF, BOR disabled
  2450                           ;	Internal External Switchover bit
  2451                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2452                           ;	Fail-Safe Clock Monitor Enabled bit
  2453                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2454                           ;	Low Voltage Programming Enable bit
  2455                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2456                           ;	In-Circuit Debugger Mode bit
  2457                           ;	DEBUG = 0x1, unprogrammed default
  2458     2007                     	org	8199
  2459     2007  20D6               	dw	8406
  2460                           
  2461                           ;Config register CONFIG2 @ 0x2008
  2462                           ;	Brown-out Reset Selection bit
  2463                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2464                           ;	Flash Program Memory Self Write Enable bits
  2465                           ;	WRT = OFF, Write protection off
  2466     2008                     	org	8200
  2467     2008  3FFF               	dw	16383

Data Sizes:
    Strings     5
    Constant    15
    Data        22
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[5]), datos(BANK0[18]), 


Critical Paths under _main in COMMON

    _I2C_Master_Init->___lldiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init
    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    3853
                                              8 BANK0      3     3      0
                    _I2C_Master_Init
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     792
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     792
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     604
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     420
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     532
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___awdiv
   ___awmod
   _setup
     _I2C_Master_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      22       5       42.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      30      12        0.0%
ABS                  0      0      30       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Aug 22 16:09:43 2023

                       _x 0020                         _y 0023                         _z 0022  
                       pc 0002                        l29 055D                        l80 04F0  
                      l72 04D8                        l73 04DB                        l74 04E1  
                      l75 04E2                        l83 04B4                        l76 04E8  
                      l92 05E5                        l77 04E9                        l78 04EF  
                      l95 069B                        l98 0525              ___awdiv@sign 0075  
                      fsr 0004                       l104 059F                       l208 04CE  
                     l330 0701                       l460 063E                       l447 0768  
                     _GIE 005F                       _RD3 0043                       _RD4 0044  
                     _RD5 0045                       _RD6 0046                       _RD7 0047  
                     u520 04D4                       u600 06DB                       u521 04D3  
                     u601 06DA                       u530 04DF                       u531 04DE  
                     u540 04E6                       u700 058D                       u620 06F9  
                     u541 04E5                       u621 06F8                       u605 06D7  
                     u550 04ED                       u710 059F                       u630 053D  
                     u551 04EC                       u711 059E                       u615 06EB  
                     u800 075A                       u720 0707                       u560 06AC  
                     u801 0759                       u721 0706                       u561 06AB  
                     u650 05A6                       u810 075F                       u730 0712  
                     u651 05A5                       u811 075E                       u731 0711  
                     u635 0538                       u740 0723                       u900 0635  
                     u820 05EB                       u580 06C0                       u645 04FE  
                     u741 0722                       u901 0634                       u821 05EA  
                     u581 06BF                       u670 05C9                       u830 05F6  
                     u671 05C8                       u831 05F5                       u575 06B1  
                     u760 0735                       u840 0601                       u665 05AC  
                     u761 0734                       u841 0600                       u690 056B  
                     u755 0727                       u595 06C2                       u780 0746  
                     u860 0613                       u685 05CF                       u781 0745  
                     u861 0612                       u870 061D                       u775 0736  
                     u871 061C                       u855 0605                       u785 0742  
                     u890 0630                       u795 074E                       u891 062F  
                     u875 0619                       u885 0624                       u967 078A  
                     u977 050E                       u987 051F                       u997 0649  
                     fsr0 0004                       indf 0000              ___awmod@sign 0075  
                    l1120 04D4                      l1200 05B3                      l1122 04DF  
                    l1210 05D6                      l1202 05B6                      l1130 06AC  
                    l1124 04E6                      l1220 064E                      l1212 05D9  
                    l1204 05BC                      l1300 060B                      l1140 06C9  
                    l1132 06AF                      l1126 04ED                      l1118 04D0  
                    l1222 065D                      l1214 05DF                      l1206 05C3  
                    l1230 057D                      l1310 062A                      l1302 060F  
                    l1142 06DB                      l1134 06B8                      l1150 06F9  
                    l1224 0663                      l1216 063F                      l1208 05C9  
                    l1232 0583                      l1240 0703                      l1304 0613  
                    l1312 0630                      l1144 06E9                      l1136 06BC  
                    l1128 069C                      l1160 055A                      l1170 04A5  
                    l1218 0645                      l1226 055E                      l1250 0717  
                    l1242 0707                      l1314 0635                      l1306 061D  
                    l1146 06EA                      l1138 06C0                      l1162 055B  
                    l1154 0526                      l1234 04B5                      l1172 04A8  
                    l1180 04FB                      l1228 0561                      l1260 072D  
                    l1252 071B                      l1244 070C                      l1316 063A  
                    l1308 0623                      l1148 06F3                      l1164 055C  
                    l1156 052A                      l1236 04C1                      l1174 04B1  
                    l1166 049C                      l1190 051A                      l1182 0509  
                    l1270 074D                      l1262 0731                      l1254 071D  
                    l1246 070E                      l1238 0702                      l1158 052D  
                    l1350 0791                      l1342 0769                      l1168 049F  
                    l1192 051D                      l1184 050C                      l1176 04F2  
                    l1272 0754                      l1264 0735                      l1256 0723  
                    l1248 0712                      l1360 07CF                      l1352 0791  
                    l1344 076E                      l1194 0522                      l1186 0511  
                    l1178 04F8                      l1266 0746                      l1258 0726  
                    l1274 075A                      l1290 05F2                      l1282 05E6  
                    l1362 07D8                      l1354 07A3                      l1346 0773  
                    l1196 05A1                      l1188 0514                      l1276 075F  
                    l1268 074C                      l1292 05F6                      l1284 05E7  
                    l1364 07E0                      l1356 07B5                      l1348 0782  
                    l1198 05A6                      l1278 0764                      l1294 05FB  
                    l1286 05EB                      l1358 07C7                      l1296 0601  
                    l1288 05F0                      l1298 0604                      STR_1 0022  
                    _CREN 00C4                      u1007 0658                      u1017 0667  
                    u1027 04AC                      _PEIE 005E                      _RCIF 0065  
                    _OERR 00C1                      _TRMT 04C1         ?_Lcd_Write_String 0075  
                    _dato 0041                      _main 0769                      btemp 007E  
                    start 0000        ??_Lcd_Write_String 0077           __end_of_Lcd_Cmd 04B5  
        ?_I2C_Master_Init 0036                     ?_main 0070           __end_of___awdiv 0769  
         __end_of___awmod 063F                     _ANSEL 0188           __end_of___lldiv 0702  
         ___awdiv@divisor 0070           ___awdiv@counter 0074                     _RCREG 001A  
                   _RCSTA 0018                     _SPBRG 0099                     _PORTB 0006  
                   _PORTD 0008                     _TRISB 0086                     _TRISD 0088  
                   _SSPIE 0463                     _SSPIF 0063                     _TXREG 0019  
                   _TXSTA 0098                     _datos 0024           __end_of_message 0022  
                   _setup 04B5                     pclath 000A                     status 0003  
                   wtemp0 007E          __end_of_Lcd_Init 069C          __end_of_Lcd_Port 04F1  
         __initialization 07ED              __end_of_main 07ED                    ??_main 003E  
        ___awdiv@dividend 0072                    ?_setup 0070                    _ANSELH 0189  
               ??_Lcd_Cmd 0071                    _SSPADD 0093                    _TRISC3 043B  
                  _TRISC4 043C                    _SSPCON 0014                    _SSPBUF 0013  
               ??___awdiv 0074                 ??___awmod 0074                 ??___lldiv 0078  
        ___awdiv@quotient 0076           ___awmod@divisor 0070           ___awmod@counter 0074  
         Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078  
         Lcd_Set_Cursor@z 0077   __end_of__initialization 07FC            __pcstackCOMMON 0070  
            __pidataBANK0 0485             __end_of_setup 04CF            _Lcd_Set_Cursor 05A0  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070                   ??_setup 007E  
              __pbssBANK0 0041                __pmaintext 0769    __end_of_Lcd_Set_Cursor 05E6  
              ??_Lcd_Init 0074                ??_Lcd_Port 0070                   _SSPCON2 0091  
                 _SSPSTAT 0094                __stringtab 0003            _Lcd_Write_Char 04F1  
                 _Lcd_Cmd 049B                   ___awdiv 0702                   ___awmod 05E6  
                 ___lldiv 069C           ?_Lcd_Set_Cursor 0074                   __ptext1 04B5  
                 __ptext2 0526                   __ptext3 069C                   __ptext4 05E6  
                 __ptext5 0702                   __ptext6 055E                   __ptext7 04F1  
                 __ptext8 05A0                   __ptext9 063F                   _message 0013  
        ___awmod@dividend 0072    __end_of_Lcd_Write_Char 0526      end_of_initialization 07FC  
         ___lldiv@divisor 0070           ___lldiv@counter 007D          I2C_Master_Init@c 0036  
               Lcd_Port@a 0070                 _PORTDbits 0008                 _TRISCbits 0087  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0075         Lcd_Write_String@i 007A  
        _Lcd_Write_String 055E       start_initialization 07ED         ??_I2C_Master_Init 003A  
              init_fetch0 0472               __pdataBANK0 0020           Lcd_Write_Char@a 0074  
         Lcd_Write_Char@y 0073                 ___latbits 0002             __pcstackBANK0 0036  
                ?_Lcd_Cmd 0070          ??_Lcd_Set_Cursor 0075                  ?___awdiv 0070  
                ?___awmod 0070                  ?___lldiv 0070                 __pstrings 0003  
                Lcd_Cmd@a 0073               __stringbase 0012          ??_Lcd_Write_Char 0071  
                _Lcd_Init 063F                  _Lcd_Port 04CF  __end_of_Lcd_Write_String 05A0  
      __end_of__stringtab 0013           _I2C_Master_Init 0526                  __ptext10 049B  
                __ptext11 04CF                  init_ram0 0476        Lcd_Write_Char@temp 0072  
        ___lldiv@dividend 0074                 stringcode 000D   __end_of_I2C_Master_Init 055E  
      Lcd_Set_Cursor@temp 0079          ___lldiv@quotient 0079                  stringdir 000D  
                stringtab 0003               _SSPCON2bits 0091  
