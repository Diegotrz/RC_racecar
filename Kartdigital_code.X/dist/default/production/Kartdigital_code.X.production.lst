

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Aug 24 22:10:05 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35     0000                     
    36                           ; Generated 09/02/2023 GMT
    37                           ; 
    38                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F887 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70     0000                     	;# 
    71     0001                     	;# 
    72     0002                     	;# 
    73     0003                     	;# 
    74     0004                     	;# 
    75     0005                     	;# 
    76     0006                     	;# 
    77     0007                     	;# 
    78     0008                     	;# 
    79     0009                     	;# 
    80     000A                     	;# 
    81     000B                     	;# 
    82     000C                     	;# 
    83     000D                     	;# 
    84     000E                     	;# 
    85     000E                     	;# 
    86     000F                     	;# 
    87     0010                     	;# 
    88     0011                     	;# 
    89     0012                     	;# 
    90     0013                     	;# 
    91     0014                     	;# 
    92     0015                     	;# 
    93     0015                     	;# 
    94     0016                     	;# 
    95     0017                     	;# 
    96     0018                     	;# 
    97     0019                     	;# 
    98     001A                     	;# 
    99     001B                     	;# 
   100     001B                     	;# 
   101     001C                     	;# 
   102     001D                     	;# 
   103     001E                     	;# 
   104     001F                     	;# 
   105     0081                     	;# 
   106     0085                     	;# 
   107     0086                     	;# 
   108     0087                     	;# 
   109     0088                     	;# 
   110     0089                     	;# 
   111     008C                     	;# 
   112     008D                     	;# 
   113     008E                     	;# 
   114     008F                     	;# 
   115     0090                     	;# 
   116     0091                     	;# 
   117     0092                     	;# 
   118     0093                     	;# 
   119     0093                     	;# 
   120     0093                     	;# 
   121     0094                     	;# 
   122     0095                     	;# 
   123     0096                     	;# 
   124     0097                     	;# 
   125     0098                     	;# 
   126     0099                     	;# 
   127     009A                     	;# 
   128     009B                     	;# 
   129     009C                     	;# 
   130     009D                     	;# 
   131     009E                     	;# 
   132     009F                     	;# 
   133     0105                     	;# 
   134     0107                     	;# 
   135     0108                     	;# 
   136     0109                     	;# 
   137     010C                     	;# 
   138     010C                     	;# 
   139     010D                     	;# 
   140     010E                     	;# 
   141     010F                     	;# 
   142     0185                     	;# 
   143     0187                     	;# 
   144     0188                     	;# 
   145     0189                     	;# 
   146     018C                     	;# 
   147     018D                     	;# 
   148     0000                     	;# 
   149     0001                     	;# 
   150     0002                     	;# 
   151     0003                     	;# 
   152     0004                     	;# 
   153     0005                     	;# 
   154     0006                     	;# 
   155     0007                     	;# 
   156     0008                     	;# 
   157     0009                     	;# 
   158     000A                     	;# 
   159     000B                     	;# 
   160     000C                     	;# 
   161     000D                     	;# 
   162     000E                     	;# 
   163     000E                     	;# 
   164     000F                     	;# 
   165     0010                     	;# 
   166     0011                     	;# 
   167     0012                     	;# 
   168     0013                     	;# 
   169     0014                     	;# 
   170     0015                     	;# 
   171     0015                     	;# 
   172     0016                     	;# 
   173     0017                     	;# 
   174     0018                     	;# 
   175     0019                     	;# 
   176     001A                     	;# 
   177     001B                     	;# 
   178     001B                     	;# 
   179     001C                     	;# 
   180     001D                     	;# 
   181     001E                     	;# 
   182     001F                     	;# 
   183     0081                     	;# 
   184     0085                     	;# 
   185     0086                     	;# 
   186     0087                     	;# 
   187     0088                     	;# 
   188     0089                     	;# 
   189     008C                     	;# 
   190     008D                     	;# 
   191     008E                     	;# 
   192     008F                     	;# 
   193     0090                     	;# 
   194     0091                     	;# 
   195     0092                     	;# 
   196     0093                     	;# 
   197     0093                     	;# 
   198     0093                     	;# 
   199     0094                     	;# 
   200     0095                     	;# 
   201     0096                     	;# 
   202     0097                     	;# 
   203     0098                     	;# 
   204     0099                     	;# 
   205     009A                     	;# 
   206     009B                     	;# 
   207     009C                     	;# 
   208     009D                     	;# 
   209     009E                     	;# 
   210     009F                     	;# 
   211     0105                     	;# 
   212     0107                     	;# 
   213     0108                     	;# 
   214     0109                     	;# 
   215     010C                     	;# 
   216     010C                     	;# 
   217     010D                     	;# 
   218     010E                     	;# 
   219     010F                     	;# 
   220     0185                     	;# 
   221     0187                     	;# 
   222     0188                     	;# 
   223     0189                     	;# 
   224     018C                     	;# 
   225     018D                     	;# 
   226     0000                     	;# 
   227     0001                     	;# 
   228     0002                     	;# 
   229     0003                     	;# 
   230     0004                     	;# 
   231     0005                     	;# 
   232     0006                     	;# 
   233     0007                     	;# 
   234     0008                     	;# 
   235     0009                     	;# 
   236     000A                     	;# 
   237     000B                     	;# 
   238     000C                     	;# 
   239     000D                     	;# 
   240     000E                     	;# 
   241     000E                     	;# 
   242     000F                     	;# 
   243     0010                     	;# 
   244     0011                     	;# 
   245     0012                     	;# 
   246     0013                     	;# 
   247     0014                     	;# 
   248     0015                     	;# 
   249     0015                     	;# 
   250     0016                     	;# 
   251     0017                     	;# 
   252     0018                     	;# 
   253     0019                     	;# 
   254     001A                     	;# 
   255     001B                     	;# 
   256     001B                     	;# 
   257     001C                     	;# 
   258     001D                     	;# 
   259     001E                     	;# 
   260     001F                     	;# 
   261     0081                     	;# 
   262     0085                     	;# 
   263     0086                     	;# 
   264     0087                     	;# 
   265     0088                     	;# 
   266     0089                     	;# 
   267     008C                     	;# 
   268     008D                     	;# 
   269     008E                     	;# 
   270     008F                     	;# 
   271     0090                     	;# 
   272     0091                     	;# 
   273     0092                     	;# 
   274     0093                     	;# 
   275     0093                     	;# 
   276     0093                     	;# 
   277     0094                     	;# 
   278     0095                     	;# 
   279     0096                     	;# 
   280     0097                     	;# 
   281     0098                     	;# 
   282     0099                     	;# 
   283     009A                     	;# 
   284     009B                     	;# 
   285     009C                     	;# 
   286     009D                     	;# 
   287     009E                     	;# 
   288     009F                     	;# 
   289     0105                     	;# 
   290     0107                     	;# 
   291     0108                     	;# 
   292     0109                     	;# 
   293     010C                     	;# 
   294     010C                     	;# 
   295     010D                     	;# 
   296     010E                     	;# 
   297     010F                     	;# 
   298     0185                     	;# 
   299     0187                     	;# 
   300     0188                     	;# 
   301     0189                     	;# 
   302     018C                     	;# 
   303     018D                     	;# 
   304     0000                     	;# 
   305     0001                     	;# 
   306     0002                     	;# 
   307     0003                     	;# 
   308     0004                     	;# 
   309     0005                     	;# 
   310     0006                     	;# 
   311     0007                     	;# 
   312     0008                     	;# 
   313     0009                     	;# 
   314     000A                     	;# 
   315     000B                     	;# 
   316     000C                     	;# 
   317     000D                     	;# 
   318     000E                     	;# 
   319     000E                     	;# 
   320     000F                     	;# 
   321     0010                     	;# 
   322     0011                     	;# 
   323     0012                     	;# 
   324     0013                     	;# 
   325     0014                     	;# 
   326     0015                     	;# 
   327     0015                     	;# 
   328     0016                     	;# 
   329     0017                     	;# 
   330     0018                     	;# 
   331     0019                     	;# 
   332     001A                     	;# 
   333     001B                     	;# 
   334     001B                     	;# 
   335     001C                     	;# 
   336     001D                     	;# 
   337     001E                     	;# 
   338     001F                     	;# 
   339     0081                     	;# 
   340     0085                     	;# 
   341     0086                     	;# 
   342     0087                     	;# 
   343     0088                     	;# 
   344     0089                     	;# 
   345     008C                     	;# 
   346     008D                     	;# 
   347     008E                     	;# 
   348     008F                     	;# 
   349     0090                     	;# 
   350     0091                     	;# 
   351     0092                     	;# 
   352     0093                     	;# 
   353     0093                     	;# 
   354     0093                     	;# 
   355     0094                     	;# 
   356     0095                     	;# 
   357     0096                     	;# 
   358     0097                     	;# 
   359     0098                     	;# 
   360     0099                     	;# 
   361     009A                     	;# 
   362     009B                     	;# 
   363     009C                     	;# 
   364     009D                     	;# 
   365     009E                     	;# 
   366     009F                     	;# 
   367     0105                     	;# 
   368     0107                     	;# 
   369     0108                     	;# 
   370     0109                     	;# 
   371     010C                     	;# 
   372     010C                     	;# 
   373     010D                     	;# 
   374     010E                     	;# 
   375     010F                     	;# 
   376     0185                     	;# 
   377     0187                     	;# 
   378     0188                     	;# 
   379     0189                     	;# 
   380     018C                     	;# 
   381     018D                     	;# 
   382     0000                     	;# 
   383     0001                     	;# 
   384     0002                     	;# 
   385     0003                     	;# 
   386     0004                     	;# 
   387     0005                     	;# 
   388     0006                     	;# 
   389     0007                     	;# 
   390     0008                     	;# 
   391     0009                     	;# 
   392     000A                     	;# 
   393     000B                     	;# 
   394     000C                     	;# 
   395     000D                     	;# 
   396     000E                     	;# 
   397     000E                     	;# 
   398     000F                     	;# 
   399     0010                     	;# 
   400     0011                     	;# 
   401     0012                     	;# 
   402     0013                     	;# 
   403     0014                     	;# 
   404     0015                     	;# 
   405     0015                     	;# 
   406     0016                     	;# 
   407     0017                     	;# 
   408     0018                     	;# 
   409     0019                     	;# 
   410     001A                     	;# 
   411     001B                     	;# 
   412     001B                     	;# 
   413     001C                     	;# 
   414     001D                     	;# 
   415     001E                     	;# 
   416     001F                     	;# 
   417     0081                     	;# 
   418     0085                     	;# 
   419     0086                     	;# 
   420     0087                     	;# 
   421     0088                     	;# 
   422     0089                     	;# 
   423     008C                     	;# 
   424     008D                     	;# 
   425     008E                     	;# 
   426     008F                     	;# 
   427     0090                     	;# 
   428     0091                     	;# 
   429     0092                     	;# 
   430     0093                     	;# 
   431     0093                     	;# 
   432     0093                     	;# 
   433     0094                     	;# 
   434     0095                     	;# 
   435     0096                     	;# 
   436     0097                     	;# 
   437     0098                     	;# 
   438     0099                     	;# 
   439     009A                     	;# 
   440     009B                     	;# 
   441     009C                     	;# 
   442     009D                     	;# 
   443     009E                     	;# 
   444     009F                     	;# 
   445     0105                     	;# 
   446     0107                     	;# 
   447     0108                     	;# 
   448     0109                     	;# 
   449     010C                     	;# 
   450     010C                     	;# 
   451     010D                     	;# 
   452     010E                     	;# 
   453     010F                     	;# 
   454     0185                     	;# 
   455     0187                     	;# 
   456     0188                     	;# 
   457     0189                     	;# 
   458     018C                     	;# 
   459     018D                     	;# 
   460                           
   461                           	psect	strings
   462     0003                     __pstrings:
   463     0003                     stringtab:
   464     0003                     __stringtab:
   465                           
   466                           ;	String table - string pointers are 1 byte each
   467     0003  1BFF               	btfsc	btemp+1,7
   468     0004  280D               	ljmp	stringcode
   469     0005  1383               	bcf	3,7
   470     0006  187F               	btfsc	btemp+1,0
   471     0007  1783               	bsf	3,7
   472     0008  0800               	movf	0,w
   473     0009  0A84               	incf	4,f
   474     000A  1903               	skipnz
   475     000B  0AFF               	incf	btemp+1,f
   476     000C  0008               	return
   477     000D                     stringcode:
   478     000D                     stringdir:
   479     000D  3000               	movlw	high stringdir
   480     000E  008A               	movwf	10
   481     000F  0804               	movf	4,w
   482     0010  0A84               	incf	4,f
   483     0011  0782               	addwf	2,f
   484     0012                     __stringbase:
   485     0012  3400               	retlw	0
   486     0013                     __end_of__stringtab:
   487     0013                     _message:
   488     0013  3432               	retlw	50
   489     0014  342E               	retlw	46
   490     0015  3445               	retlw	69
   491     0016  346E               	retlw	110
   492     0017  3476               	retlw	118
   493     0018  3469               	retlw	105
   494     0019  3461               	retlw	97
   495     001A  3472               	retlw	114
   496     001B  3420               	retlw	32
   497     001C  3441               	retlw	65
   498     001D  3473               	retlw	115
   499     001E  3463               	retlw	99
   500     001F  3469               	retlw	105
   501     0020  3469               	retlw	105
   502     0021  3400               	retlw	0
   503     0022                     __end_of_message:
   504     0022                     _dpowers:
   505     0022  3401               	retlw	1
   506     0023  3400               	retlw	0
   507     0024  340A               	retlw	10
   508     0025  3400               	retlw	0
   509     0026  3464               	retlw	100
   510     0027  3400               	retlw	0
   511     0028  34E8               	retlw	232
   512     0029  3403               	retlw	3
   513     002A  3410               	retlw	16
   514     002B  3427               	retlw	39
   515     002C                     __end_of_dpowers:
   516     0007                     _PORTCbits	set	7
   517     0008                     _PORTD	set	8
   518     0006                     _PORTB	set	6
   519     0005                     _PORTA	set	5
   520     0019                     _TXREG	set	25
   521     001A                     _RCREG	set	26
   522     0018                     _RCSTA	set	24
   523     0008                     _PORTDbits	set	8
   524     0013                     _SSPBUF	set	19
   525     0014                     _SSPCON	set	20
   526     00C4                     _CREN	set	196
   527     00C1                     _OERR	set	193
   528     0065                     _RCIF	set	101
   529     0043                     _RD3	set	67
   530     0047                     _RD7	set	71
   531     0046                     _RD6	set	70
   532     0045                     _RD5	set	69
   533     0044                     _RD4	set	68
   534     0063                     _SSPIF	set	99
   535     005E                     _PEIE	set	94
   536     005F                     _GIE	set	95
   537     008F                     _OSCCONbits	set	143
   538     0088                     _TRISD	set	136
   539     0086                     _TRISB	set	134
   540     0085                     _TRISA	set	133
   541     0098                     _TXSTA	set	152
   542     0099                     _SPBRG	set	153
   543     0091                     _SSPCON2bits	set	145
   544     0087                     _TRISCbits	set	135
   545     0094                     _SSPSTAT	set	148
   546     0093                     _SSPADD	set	147
   547     0091                     _SSPCON2	set	145
   548     043F                     _TRISC7	set	1087
   549     043E                     _TRISC6	set	1086
   550     043A                     _TRISC2	set	1082
   551     0439                     _TRISC1	set	1081
   552     04C1                     _TRMT	set	1217
   553     0463                     _SSPIE	set	1123
   554     043C                     _TRISC4	set	1084
   555     043B                     _TRISC3	set	1083
   556     0189                     _ANSELH	set	393
   557     0188                     _ANSEL	set	392
   558     002C                     STR_4:
   559     002C  3468               	retlw	104	;'h'
   560     002D  3465               	retlw	101	;'e'
   561     002E  3479               	retlw	121	;'y'
   562     002F  3400               	retlw	0
   563     0030                     STR_1:
   564     0030  3425               	retlw	37	;'%'
   565     0031  3475               	retlw	117	;'u'
   566     0032  3400               	retlw	0
   567     0030                     
   568                           	psect	cinit
   569     07EB                     start_initialization:	
   570                           ; #config settings
   571                           
   572     07EB                     __initialization:
   573                           
   574                           ; Clear objects allocated to BANK0
   575     07EB  1383               	bcf	3,7	;select IRP bank0
   576     07EC  3020               	movlw	low __pbssBANK0
   577     07ED  0084               	movwf	4
   578     07EE  3053               	movlw	low (__pbssBANK0+51)
   579     07EF  120A  118A  21B9  120A  118A  	fcall	clear_ram0
   580                           
   581                           ; Clear objects allocated to BANK1
   582     07F4  30A0               	movlw	low __pbssBANK1
   583     07F5  0084               	movwf	4
   584     07F6  30B4               	movlw	low (__pbssBANK1+20)
   585     07F7  120A  118A  21B9  120A  118A  	fcall	clear_ram0
   586     07FC                     end_of_initialization:	
   587                           ;End of C runtime variable initialization code
   588                           
   589     07FC                     __end_of__initialization:
   590     07FC  0183               	clrf	3
   591     07FD  120A  118A  2DDB   	ljmp	_main	;jump to C main() function
   592                           
   593                           	psect	bssBANK0
   594     0020                     __pbssBANK0:
   595     0020                     _Zval2:
   596     0020                     	ds	1
   597     0021                     _Zval:
   598     0021                     	ds	1
   599     0022                     _Yval2:
   600     0022                     	ds	1
   601     0023                     _Yval:
   602     0023                     	ds	1
   603     0024                     _Xval2:
   604     0024                     	ds	1
   605     0025                     _Xval:
   606     0025                     	ds	1
   607     0026                     _x2:
   608     0026                     	ds	1
   609     0027                     _z:
   610     0027                     	ds	1
   611     0028                     _y:
   612     0028                     	ds	1
   613     0029                     _x:
   614     0029                     	ds	1
   615     002A                     _i:
   616     002A                     	ds	1
   617     002B                     _s2:
   618     002B                     	ds	20
   619     003F                     _s:
   620     003F                     	ds	20
   621                           
   622                           	psect	bssBANK1
   623     00A0                     __pbssBANK1:
   624     00A0                     _s3:
   625     00A0                     	ds	20
   626                           
   627                           	psect	clrtext
   628     01B9                     clear_ram0:	
   629                           ;	Called with FSR containing the base address, and
   630                           ;	W with the last address+1
   631                           
   632     01B9  0064               	clrwdt	;clear the watchdog before getting into this loop
   633     01BA                     clrloop0:
   634     01BA  0180               	clrf	0	;clear RAM location pointed to by FSR
   635     01BB  0A84               	incf	4,f	;increment pointer
   636     01BC  0604               	xorwf	4,w	;XOR with final address
   637     01BD  1903               	btfsc	3,2	;have we reached the end yet?
   638     01BE  3400               	retlw	0	;all done for this memory range, return
   639     01BF  0604               	xorwf	4,w	;XOR again to restore value
   640     01C0  29BA               	goto	clrloop0	;do the next byte
   641                           
   642                           	psect	cstackCOMMON
   643     0070                     __pcstackCOMMON:
   644     0070                     ?_setup:
   645     0070                     ??_setup:	
   646                           ; 1 bytes @ 0x0
   647                           
   648     0070                     ?_I2C_Master_Wait:	
   649                           ; 1 bytes @ 0x0
   650                           
   651     0070                     ??_I2C_Master_Wait:	
   652                           ; 1 bytes @ 0x0
   653                           
   654     0070                     ?_I2C_Master_Start:	
   655                           ; 1 bytes @ 0x0
   656                           
   657     0070                     ??_I2C_Master_Start:	
   658                           ; 1 bytes @ 0x0
   659                           
   660     0070                     ?_I2C_Master_RepeatedStart:	
   661                           ; 1 bytes @ 0x0
   662                           
   663     0070                     ??_I2C_Master_RepeatedStart:	
   664                           ; 1 bytes @ 0x0
   665                           
   666     0070                     ?_I2C_Master_Stop:	
   667                           ; 1 bytes @ 0x0
   668                           
   669     0070                     ??_I2C_Master_Stop:	
   670                           ; 1 bytes @ 0x0
   671                           
   672     0070                     ?_I2C_Master_Write:	
   673                           ; 1 bytes @ 0x0
   674                           
   675     0070                     ?_Lcd_Port:	
   676                           ; 1 bytes @ 0x0
   677                           
   678     0070                     ??_Lcd_Port:	
   679                           ; 1 bytes @ 0x0
   680                           
   681     0070                     ?_Lcd_Cmd:	
   682                           ; 1 bytes @ 0x0
   683                           
   684     0070                     ?_Lcd_Clear:	
   685                           ; 1 bytes @ 0x0
   686                           
   687     0070                     ?_Lcd_Init:	
   688                           ; 1 bytes @ 0x0
   689                           
   690     0070                     ?_Lcd_Write_Char:	
   691                           ; 1 bytes @ 0x0
   692                           
   693     0070                     ?_main:	
   694                           ; 1 bytes @ 0x0
   695                           
   696     0070                     ?_I2C_Master_Read:	
   697                           ; 1 bytes @ 0x0
   698                           
   699     0070                     ?___awdiv:	
   700                           ; 2 bytes @ 0x0
   701                           
   702     0070                     ?___lwdiv:	
   703                           ; 2 bytes @ 0x0
   704                           
   705     0070                     ?___lldiv:	
   706                           ; 2 bytes @ 0x0
   707                           
   708     0070                     Lcd_Port@a:	
   709                           ; 4 bytes @ 0x0
   710                           
   711     0070                     I2C_Master_Write@d:	
   712                           ; 1 bytes @ 0x0
   713                           
   714     0070                     I2C_Master_Read@a:	
   715                           ; 2 bytes @ 0x0
   716                           
   717     0070                     ___awdiv@divisor:	
   718                           ; 2 bytes @ 0x0
   719                           
   720     0070                     ___lwdiv@divisor:	
   721                           ; 2 bytes @ 0x0
   722                           
   723     0070                     ___lldiv@divisor:	
   724                           ; 2 bytes @ 0x0
   725                           
   726                           
   727                           ; 4 bytes @ 0x0
   728     0070                     	ds	1
   729     0071                     ??_Lcd_Cmd:
   730     0071                     ??_Lcd_Write_Char:	
   731                           ; 1 bytes @ 0x1
   732                           
   733                           
   734                           ; 1 bytes @ 0x1
   735     0071                     	ds	1
   736     0072                     ??_I2C_Master_Write:
   737     0072                     ??_I2C_Master_Read:	
   738                           ; 1 bytes @ 0x2
   739                           
   740     0072                     Lcd_Write_Char@temp:	
   741                           ; 1 bytes @ 0x2
   742                           
   743     0072                     ___awdiv@dividend:	
   744                           ; 1 bytes @ 0x2
   745                           
   746     0072                     ___lwdiv@dividend:	
   747                           ; 2 bytes @ 0x2
   748                           
   749                           
   750                           ; 2 bytes @ 0x2
   751     0072                     	ds	1
   752     0073                     Lcd_Cmd@a:
   753     0073                     Lcd_Write_Char@y:	
   754                           ; 1 bytes @ 0x3
   755                           
   756                           
   757                           ; 1 bytes @ 0x3
   758     0073                     	ds	1
   759     0074                     ??_Lcd_Clear:
   760     0074                     ?_Lcd_Set_Cursor:	
   761                           ; 1 bytes @ 0x4
   762                           
   763     0074                     ??_Lcd_Init:	
   764                           ; 1 bytes @ 0x4
   765                           
   766     0074                     ??___awdiv:	
   767                           ; 1 bytes @ 0x4
   768                           
   769     0074                     ??___lwdiv:	
   770                           ; 1 bytes @ 0x4
   771                           
   772     0074                     Lcd_Set_Cursor@b:	
   773                           ; 1 bytes @ 0x4
   774                           
   775     0074                     Lcd_Write_Char@a:	
   776                           ; 1 bytes @ 0x4
   777                           
   778     0074                     ___awdiv@counter:	
   779                           ; 1 bytes @ 0x4
   780                           
   781     0074                     I2C_Master_Read@temp:	
   782                           ; 1 bytes @ 0x4
   783                           
   784     0074                     ___lwdiv@quotient:	
   785                           ; 2 bytes @ 0x4
   786                           
   787     0074                     ___lldiv@dividend:	
   788                           ; 2 bytes @ 0x4
   789                           
   790                           
   791                           ; 4 bytes @ 0x4
   792     0074                     	ds	1
   793     0075                     ??_Lcd_Set_Cursor:
   794     0075                     ?_Lcd_Write_String:	
   795                           ; 1 bytes @ 0x5
   796                           
   797     0075                     ___awdiv@sign:	
   798                           ; 1 bytes @ 0x5
   799                           
   800     0075                     Lcd_Write_String@a:	
   801                           ; 1 bytes @ 0x5
   802                           
   803                           
   804                           ; 2 bytes @ 0x5
   805     0075                     	ds	1
   806     0076                     Lcd_Set_Cursor@a:
   807     0076                     ___lwdiv@counter:	
   808                           ; 1 bytes @ 0x6
   809                           
   810     0076                     ___awdiv@quotient:	
   811                           ; 1 bytes @ 0x6
   812                           
   813                           
   814                           ; 2 bytes @ 0x6
   815     0076                     	ds	1
   816     0077                     ??_Lcd_Write_String:
   817     0077                     ?___lwmod:	
   818                           ; 1 bytes @ 0x7
   819                           
   820     0077                     Lcd_Set_Cursor@z:	
   821                           ; 2 bytes @ 0x7
   822                           
   823     0077                     ___lwmod@divisor:	
   824                           ; 1 bytes @ 0x7
   825                           
   826                           
   827                           ; 2 bytes @ 0x7
   828     0077                     	ds	1
   829     0078                     ??___lldiv:
   830     0078                     Lcd_Set_Cursor@y:	
   831                           ; 1 bytes @ 0x8
   832                           
   833                           
   834                           ; 1 bytes @ 0x8
   835     0078                     	ds	1
   836     0079                     Lcd_Set_Cursor@temp:
   837     0079                     ___lwmod@dividend:	
   838                           ; 1 bytes @ 0x9
   839                           
   840     0079                     ___lldiv@quotient:	
   841                           ; 2 bytes @ 0x9
   842                           
   843                           
   844                           ; 4 bytes @ 0x9
   845     0079                     	ds	1
   846     007A                     Lcd_Write_String@i:
   847                           
   848                           ; 2 bytes @ 0xA
   849     007A                     	ds	1
   850     007B                     ??___lwmod:
   851     007B                     ___lwmod@counter:	
   852                           ; 1 bytes @ 0xB
   853                           
   854                           
   855                           ; 1 bytes @ 0xB
   856     007B                     	ds	2
   857     007D                     ___lldiv@counter:
   858                           
   859                           ; 1 bytes @ 0xD
   860     007D                     	ds	1
   861                           
   862                           	psect	cstackBANK0
   863     0053                     __pcstackBANK0:
   864     0053                     ?_I2C_Init:
   865     0053                     ?_sprintf:	
   866                           ; 1 bytes @ 0x0
   867                           
   868     0053                     sprintf@f:	
   869                           ; 2 bytes @ 0x0
   870                           
   871     0053                     I2C_Init@i2c_clk_freq:	
   872                           ; 1 bytes @ 0x0
   873                           
   874                           
   875                           ; 4 bytes @ 0x0
   876     0053                     	ds	3
   877     0056                     ??_sprintf:
   878                           
   879                           ; 1 bytes @ 0x3
   880     0056                     	ds	1
   881     0057                     ??_I2C_Init:
   882                           
   883                           ; 1 bytes @ 0x4
   884     0057                     	ds	2
   885     0059                     sprintf@flag:
   886                           
   887                           ; 1 bytes @ 0x6
   888     0059                     	ds	1
   889     005A                     sprintf@ap:
   890                           
   891                           ; 1 bytes @ 0x7
   892     005A                     	ds	1
   893     005B                     sprintf@val:
   894                           
   895                           ; 2 bytes @ 0x8
   896     005B                     	ds	2
   897     005D                     sprintf@prec:
   898                           
   899                           ; 1 bytes @ 0xA
   900     005D                     	ds	1
   901     005E                     sprintf@sp:
   902                           
   903                           ; 1 bytes @ 0xB
   904     005E                     	ds	1
   905     005F                     sprintf@c:
   906                           
   907                           ; 1 bytes @ 0xC
   908     005F                     	ds	1
   909     0060                     ??_main:
   910                           
   911                           ; 1 bytes @ 0xD
   912     0060                     	ds	3
   913                           
   914                           	psect	maintext
   915     05DB                     __pmaintext:	
   916 ;;
   917 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   918 ;;
   919 ;; *************** function _main *****************
   920 ;; Defined at:
   921 ;;		line 75 in file "pruebaADXL345.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;		None
   924 ;; Auto vars:     Size  Location     Type
   925 ;;		None
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   930 ;; Tracked objects:
   931 ;;		On entry : B00/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   935 ;;      Params:         0       0       0       0       0
   936 ;;      Locals:         0       0       0       0       0
   937 ;;      Temps:          0       3       0       0       0
   938 ;;      Totals:         0       3       0       0       0
   939 ;;Total ram usage:        3 bytes
   940 ;; Hardware stack levels required when called: 3
   941 ;; This function calls:
   942 ;;		_I2C_Init
   943 ;;		_I2C_Master_Read
   944 ;;		_I2C_Master_RepeatedStart
   945 ;;		_I2C_Master_Start
   946 ;;		_I2C_Master_Stop
   947 ;;		_I2C_Master_Write
   948 ;;		_Lcd_Clear
   949 ;;		_Lcd_Init
   950 ;;		_Lcd_Set_Cursor
   951 ;;		_Lcd_Write_String
   952 ;;		___awdiv
   953 ;;		_setup
   954 ;;		_sprintf
   955 ;; This function is called by:
   956 ;;		Startup code after reset
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960     05DB                     _main:	
   961                           ;psect for function _main
   962                           
   963     05DB                     l1740:	
   964                           ;incstack = 0
   965                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   966                           
   967                           
   968                           ;pruebaADXL345.c: 76:     setup();
   969     05DB  120A  118A  221A  120A  118A  	fcall	_setup
   970                           
   971                           ;pruebaADXL345.c: 77:     Lcd_Init();
   972     05E0  120A  118A  23F0  120A  118A  	fcall	_Lcd_Init
   973     05E5                     l1742:
   974                           
   975                           ;pruebaADXL345.c: 78:     I2C_Init(100000);
   976     05E5  3000               	movlw	0
   977     05E6  1283               	bcf	3,5	;RP0=0, select bank0
   978     05E7  1303               	bcf	3,6	;RP1=0, select bank0
   979     05E8  00D6               	movwf	I2C_Init@i2c_clk_freq+3
   980     05E9  3001               	movlw	1
   981     05EA  00D5               	movwf	I2C_Init@i2c_clk_freq+2
   982     05EB  3086               	movlw	134
   983     05EC  00D4               	movwf	I2C_Init@i2c_clk_freq+1
   984     05ED  30A0               	movlw	160
   985     05EE  00D3               	movwf	I2C_Init@i2c_clk_freq
   986     05EF  120A  118A  2284  120A  118A  	fcall	_I2C_Init
   987     05F4                     l1744:
   988                           
   989                           ;pruebaADXL345.c: 79:      I2C_Master_Start();
   990     05F4  120A  118A  21CA  120A  118A  	fcall	_I2C_Master_Start
   991     05F9                     l1746:
   992                           
   993                           ;pruebaADXL345.c: 80:         I2C_Master_Write(56);
   994     05F9  3038               	movlw	56
   995     05FA  00F0               	movwf	I2C_Master_Write@d
   996     05FB  3000               	movlw	0
   997     05FC  00F1               	movwf	I2C_Master_Write@d+1
   998     05FD  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
   999     0602                     l1748:
  1000                           
  1001                           ;pruebaADXL345.c: 81:         I2C_Master_Write(0x9f);
  1002     0602  309F               	movlw	159
  1003     0603  00F0               	movwf	I2C_Master_Write@d
  1004     0604  3000               	movlw	0
  1005     0605  00F1               	movwf	I2C_Master_Write@d+1
  1006     0606  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1007     060B                     l1750:
  1008                           
  1009                           ;pruebaADXL345.c: 82:         I2C_Master_RepeatedStart();
  1010     060B  120A  118A  21C1  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1011     0610                     l1752:
  1012                           
  1013                           ;pruebaADXL345.c: 83:         I2C_Master_Write(49);
  1014     0610  3031               	movlw	49
  1015     0611  00F0               	movwf	I2C_Master_Write@d
  1016     0612  3000               	movlw	0
  1017     0613  00F1               	movwf	I2C_Master_Write@d+1
  1018     0614  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1019     0619                     l1754:
  1020                           
  1021                           ;pruebaADXL345.c: 84:         I2C_Master_Write(0x09);
  1022     0619  3009               	movlw	9
  1023     061A  00F0               	movwf	I2C_Master_Write@d
  1024     061B  3000               	movlw	0
  1025     061C  00F1               	movwf	I2C_Master_Write@d+1
  1026     061D  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1027     0622                     l1756:
  1028                           
  1029                           ;pruebaADXL345.c: 85:         I2C_Master_RepeatedStart();
  1030     0622  120A  118A  21C1  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1031     0627                     l1758:
  1032                           
  1033                           ;pruebaADXL345.c: 86:         I2C_Master_Write(44);
  1034     0627  302C               	movlw	44
  1035     0628  00F0               	movwf	I2C_Master_Write@d
  1036     0629  3000               	movlw	0
  1037     062A  00F1               	movwf	I2C_Master_Write@d+1
  1038     062B  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1039     0630                     l1760:
  1040                           
  1041                           ;pruebaADXL345.c: 87:         I2C_Master_Write(0x0d);
  1042     0630  300D               	movlw	13
  1043     0631  00F0               	movwf	I2C_Master_Write@d
  1044     0632  3000               	movlw	0
  1045     0633  00F1               	movwf	I2C_Master_Write@d+1
  1046     0634  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1047     0639                     l1762:
  1048                           
  1049                           ;pruebaADXL345.c: 88:         I2C_Master_RepeatedStart();
  1050     0639  120A  118A  21C1  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1051     063E                     l1764:
  1052                           
  1053                           ;pruebaADXL345.c: 89:         I2C_Master_Write(45);
  1054     063E  302D               	movlw	45
  1055     063F  00F0               	movwf	I2C_Master_Write@d
  1056     0640  3000               	movlw	0
  1057     0641  00F1               	movwf	I2C_Master_Write@d+1
  1058     0642  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1059     0647                     l1766:
  1060                           
  1061                           ;pruebaADXL345.c: 90:         I2C_Master_Write(0x08);
  1062     0647  3008               	movlw	8
  1063     0648  00F0               	movwf	I2C_Master_Write@d
  1064     0649  3000               	movlw	0
  1065     064A  00F1               	movwf	I2C_Master_Write@d+1
  1066     064B  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1067     0650                     l1768:
  1068                           
  1069                           ;pruebaADXL345.c: 92:         I2C_Master_Stop();
  1070     0650  120A  118A  21D3  120A  118A  	fcall	_I2C_Master_Stop
  1071     0655                     l1770:
  1072                           
  1073                           ;pruebaADXL345.c: 98:         I2C_Master_Start();
  1074     0655  120A  118A  21CA  120A  118A  	fcall	_I2C_Master_Start
  1075     065A                     l1772:
  1076                           
  1077                           ;pruebaADXL345.c: 99:          I2C_Master_Write(0xA6);
  1078     065A  30A6               	movlw	166
  1079     065B  00F0               	movwf	I2C_Master_Write@d
  1080     065C  3000               	movlw	0
  1081     065D  00F1               	movwf	I2C_Master_Write@d+1
  1082     065E  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1083     0663                     l1774:
  1084                           
  1085                           ;pruebaADXL345.c: 100:          I2C_Master_Write(50);
  1086     0663  3032               	movlw	50
  1087     0664  00F0               	movwf	I2C_Master_Write@d
  1088     0665  3000               	movlw	0
  1089     0666  00F1               	movwf	I2C_Master_Write@d+1
  1090     0667  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1091     066C                     l1776:
  1092                           
  1093                           ;pruebaADXL345.c: 102:         I2C_Master_RepeatedStart();
  1094     066C  120A  118A  21C1  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1095     0671                     l1778:
  1096                           
  1097                           ;pruebaADXL345.c: 103:         I2C_Master_Write(0xA7);
  1098     0671  30A7               	movlw	167
  1099     0672  00F0               	movwf	I2C_Master_Write@d
  1100     0673  3000               	movlw	0
  1101     0674  00F1               	movwf	I2C_Master_Write@d+1
  1102     0675  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1103     067A                     l1780:
  1104                           
  1105                           ;pruebaADXL345.c: 104:         I2C_Master_Write(0x32);
  1106     067A  3032               	movlw	50
  1107     067B  00F0               	movwf	I2C_Master_Write@d
  1108     067C  3000               	movlw	0
  1109     067D  00F1               	movwf	I2C_Master_Write@d+1
  1110     067E  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1111     0683                     l1782:
  1112                           
  1113                           ;pruebaADXL345.c: 105:         Xval = I2C_Master_Read(0);
  1114     0683  3000               	movlw	0
  1115     0684  00F0               	movwf	I2C_Master_Read@a
  1116     0685  00F1               	movwf	I2C_Master_Read@a+1
  1117     0686  120A  118A  2256  120A  118A  	fcall	_I2C_Master_Read
  1118     068B  0870               	movf	?_I2C_Master_Read,w
  1119     068C  1283               	bcf	3,5	;RP0=0, select bank0
  1120     068D  1303               	bcf	3,6	;RP1=0, select bank0
  1121     068E  00A5               	movwf	_Xval
  1122     068F                     l1784:
  1123                           
  1124                           ;pruebaADXL345.c: 106:         I2C_Master_RepeatedStart();
  1125     068F  120A  118A  21C1  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1126     0694                     l1786:
  1127                           
  1128                           ;pruebaADXL345.c: 107:         I2C_Master_Write(0xA7);
  1129     0694  30A7               	movlw	167
  1130     0695  00F0               	movwf	I2C_Master_Write@d
  1131     0696  3000               	movlw	0
  1132     0697  00F1               	movwf	I2C_Master_Write@d+1
  1133     0698  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1134     069D                     l1788:
  1135                           
  1136                           ;pruebaADXL345.c: 108:         I2C_Master_Write(0x33);
  1137     069D  3033               	movlw	51
  1138     069E  00F0               	movwf	I2C_Master_Write@d
  1139     069F  3000               	movlw	0
  1140     06A0  00F1               	movwf	I2C_Master_Write@d+1
  1141     06A1  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1142     06A6                     l1790:
  1143                           
  1144                           ;pruebaADXL345.c: 109:         Xval2 = I2C_Master_Read(0);
  1145     06A6  3000               	movlw	0
  1146     06A7  00F0               	movwf	I2C_Master_Read@a
  1147     06A8  00F1               	movwf	I2C_Master_Read@a+1
  1148     06A9  120A  118A  2256  120A  118A  	fcall	_I2C_Master_Read
  1149     06AE  0870               	movf	?_I2C_Master_Read,w
  1150     06AF  1283               	bcf	3,5	;RP0=0, select bank0
  1151     06B0  1303               	bcf	3,6	;RP1=0, select bank0
  1152     06B1  00A4               	movwf	_Xval2
  1153     06B2                     l1792:
  1154                           
  1155                           ;pruebaADXL345.c: 110:         I2C_Master_RepeatedStart();
  1156     06B2  120A  118A  21C1  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1157     06B7                     l1794:
  1158                           
  1159                           ;pruebaADXL345.c: 111:         I2C_Master_Write(0xA7);
  1160     06B7  30A7               	movlw	167
  1161     06B8  00F0               	movwf	I2C_Master_Write@d
  1162     06B9  3000               	movlw	0
  1163     06BA  00F1               	movwf	I2C_Master_Write@d+1
  1164     06BB  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1165     06C0                     l1796:
  1166                           
  1167                           ;pruebaADXL345.c: 112:         I2C_Master_Write(0x34);
  1168     06C0  3034               	movlw	52
  1169     06C1  00F0               	movwf	I2C_Master_Write@d
  1170     06C2  3000               	movlw	0
  1171     06C3  00F1               	movwf	I2C_Master_Write@d+1
  1172     06C4  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1173     06C9                     l1798:
  1174                           
  1175                           ;pruebaADXL345.c: 113:         Yval = I2C_Master_Read(0);
  1176     06C9  3000               	movlw	0
  1177     06CA  00F0               	movwf	I2C_Master_Read@a
  1178     06CB  00F1               	movwf	I2C_Master_Read@a+1
  1179     06CC  120A  118A  2256  120A  118A  	fcall	_I2C_Master_Read
  1180     06D1  0870               	movf	?_I2C_Master_Read,w
  1181     06D2  1283               	bcf	3,5	;RP0=0, select bank0
  1182     06D3  1303               	bcf	3,6	;RP1=0, select bank0
  1183     06D4  00A3               	movwf	_Yval
  1184     06D5                     l1800:
  1185                           
  1186                           ;pruebaADXL345.c: 114:         I2C_Master_RepeatedStart();
  1187     06D5  120A  118A  21C1  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1188     06DA                     l1802:
  1189                           
  1190                           ;pruebaADXL345.c: 115:         I2C_Master_Write(0xA7);
  1191     06DA  30A7               	movlw	167
  1192     06DB  00F0               	movwf	I2C_Master_Write@d
  1193     06DC  3000               	movlw	0
  1194     06DD  00F1               	movwf	I2C_Master_Write@d+1
  1195     06DE  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1196     06E3                     l1804:
  1197                           
  1198                           ;pruebaADXL345.c: 116:         I2C_Master_Write(0x35);
  1199     06E3  3035               	movlw	53
  1200     06E4  00F0               	movwf	I2C_Master_Write@d
  1201     06E5  3000               	movlw	0
  1202     06E6  00F1               	movwf	I2C_Master_Write@d+1
  1203     06E7  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1204     06EC                     l1806:
  1205                           
  1206                           ;pruebaADXL345.c: 117:         Yval2 = I2C_Master_Read(0);
  1207     06EC  3000               	movlw	0
  1208     06ED  00F0               	movwf	I2C_Master_Read@a
  1209     06EE  00F1               	movwf	I2C_Master_Read@a+1
  1210     06EF  120A  118A  2256  120A  118A  	fcall	_I2C_Master_Read
  1211     06F4  0870               	movf	?_I2C_Master_Read,w
  1212     06F5  1283               	bcf	3,5	;RP0=0, select bank0
  1213     06F6  1303               	bcf	3,6	;RP1=0, select bank0
  1214     06F7  00A2               	movwf	_Yval2
  1215     06F8                     l1808:
  1216                           
  1217                           ;pruebaADXL345.c: 118:         I2C_Master_RepeatedStart();
  1218     06F8  120A  118A  21C1  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1219     06FD                     l1810:
  1220                           
  1221                           ;pruebaADXL345.c: 119:         I2C_Master_Write(0xA7);
  1222     06FD  30A7               	movlw	167
  1223     06FE  00F0               	movwf	I2C_Master_Write@d
  1224     06FF  3000               	movlw	0
  1225     0700  00F1               	movwf	I2C_Master_Write@d+1
  1226     0701  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1227     0706                     l1812:
  1228                           
  1229                           ;pruebaADXL345.c: 120:         I2C_Master_Write(0x36);
  1230     0706  3036               	movlw	54
  1231     0707  00F0               	movwf	I2C_Master_Write@d
  1232     0708  3000               	movlw	0
  1233     0709  00F1               	movwf	I2C_Master_Write@d+1
  1234     070A  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1235     070F                     l1814:
  1236                           
  1237                           ;pruebaADXL345.c: 121:         Zval = I2C_Master_Read(0);
  1238     070F  3000               	movlw	0
  1239     0710  00F0               	movwf	I2C_Master_Read@a
  1240     0711  00F1               	movwf	I2C_Master_Read@a+1
  1241     0712  120A  118A  2256  120A  118A  	fcall	_I2C_Master_Read
  1242     0717  0870               	movf	?_I2C_Master_Read,w
  1243     0718  1283               	bcf	3,5	;RP0=0, select bank0
  1244     0719  1303               	bcf	3,6	;RP1=0, select bank0
  1245     071A  00A1               	movwf	_Zval
  1246     071B                     l1816:
  1247                           
  1248                           ;pruebaADXL345.c: 122:         I2C_Master_RepeatedStart();
  1249     071B  120A  118A  21C1  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1250     0720                     l1818:
  1251                           
  1252                           ;pruebaADXL345.c: 123:         I2C_Master_Write(0xA7);
  1253     0720  30A7               	movlw	167
  1254     0721  00F0               	movwf	I2C_Master_Write@d
  1255     0722  3000               	movlw	0
  1256     0723  00F1               	movwf	I2C_Master_Write@d+1
  1257     0724  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1258     0729                     l1820:
  1259                           
  1260                           ;pruebaADXL345.c: 124:         I2C_Master_Write(0x37);
  1261     0729  3037               	movlw	55
  1262     072A  00F0               	movwf	I2C_Master_Write@d
  1263     072B  3000               	movlw	0
  1264     072C  00F1               	movwf	I2C_Master_Write@d+1
  1265     072D  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Write
  1266     0732                     l1822:
  1267                           
  1268                           ;pruebaADXL345.c: 125:         Zval2 = I2C_Master_Read(0);
  1269     0732  3000               	movlw	0
  1270     0733  00F0               	movwf	I2C_Master_Read@a
  1271     0734  00F1               	movwf	I2C_Master_Read@a+1
  1272     0735  120A  118A  2256  120A  118A  	fcall	_I2C_Master_Read
  1273     073A  0870               	movf	?_I2C_Master_Read,w
  1274     073B  1283               	bcf	3,5	;RP0=0, select bank0
  1275     073C  1303               	bcf	3,6	;RP1=0, select bank0
  1276     073D  00A0               	movwf	_Zval2
  1277     073E                     l1824:
  1278                           
  1279                           ;pruebaADXL345.c: 126:         I2C_Master_Stop();
  1280     073E  120A  118A  21D3  120A  118A  	fcall	_I2C_Master_Stop
  1281     0743                     l1826:
  1282                           
  1283                           ;pruebaADXL345.c: 128:         _delay((unsigned long)((300)*(8000000/4000.0)));
  1284     0743  3004               	movlw	4
  1285     0744  1283               	bcf	3,5	;RP0=0, select bank0
  1286     0745  1303               	bcf	3,6	;RP1=0, select bank0
  1287     0746  00E2               	movwf	??_main+2
  1288     0747  300C               	movlw	12
  1289     0748  00E1               	movwf	??_main+1
  1290     0749  3033               	movlw	51
  1291     074A  00E0               	movwf	??_main
  1292     074B                     u1197:
  1293     074B  0BE0               	decfsz	??_main,f
  1294     074C  2F4B               	goto	u1197
  1295     074D  0BE1               	decfsz	??_main+1,f
  1296     074E  2F4B               	goto	u1197
  1297     074F  0BE2               	decfsz	??_main+2,f
  1298     0750  2F4B               	goto	u1197
  1299     0751                     l1828:
  1300                           
  1301                           ;pruebaADXL345.c: 129:          Lcd_Clear();
  1302     0751  120A  118A  21F3  120A  118A  	fcall	_Lcd_Clear
  1303     0756                     l1830:
  1304                           
  1305                           ;pruebaADXL345.c: 130:          x= (Xval2<<8)| (Xval & 0xFF);
  1306     0756  1283               	bcf	3,5	;RP0=0, select bank0
  1307     0757  1303               	bcf	3,6	;RP1=0, select bank0
  1308     0758  0825               	movf	_Xval,w
  1309     0759  00A9               	movwf	_x
  1310     075A                     l1832:
  1311                           
  1312                           ;pruebaADXL345.c: 131:          y= Yval|Yval2 <<8;
  1313     075A  0823               	movf	_Yval,w
  1314     075B  00A8               	movwf	_y
  1315     075C                     l1834:
  1316                           
  1317                           ;pruebaADXL345.c: 132:          z= Zval|Zval2 <<8;
  1318     075C  0821               	movf	_Zval,w
  1319     075D  00A7               	movwf	_z
  1320     075E                     l1836:
  1321                           
  1322                           ;pruebaADXL345.c: 133:          x2= x/256;
  1323     075E  3000               	movlw	0
  1324     075F  00F0               	movwf	___awdiv@divisor
  1325     0760  3001               	movlw	1
  1326     0761  00F1               	movwf	___awdiv@divisor+1
  1327     0762  0829               	movf	_x,w
  1328     0763  00E0               	movwf	??_main
  1329     0764  01E1               	clrf	??_main+1
  1330     0765  0860               	movf	??_main,w
  1331     0766  00F2               	movwf	___awdiv@dividend
  1332     0767  0861               	movf	??_main+1,w
  1333     0768  00F3               	movwf	___awdiv@dividend+1
  1334     0769  120A  118A  24B3  120A  118A  	fcall	___awdiv
  1335     076E  0870               	movf	?___awdiv,w
  1336     076F  1283               	bcf	3,5	;RP0=0, select bank0
  1337     0770  1303               	bcf	3,6	;RP1=0, select bank0
  1338     0771  00A6               	movwf	_x2
  1339     0772                     l1838:
  1340                           
  1341                           ;pruebaADXL345.c: 134:         sprintf(s, "%u", x2);
  1342     0772  301E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1343     0773  00D3               	movwf	sprintf@f
  1344     0774  0826               	movf	_x2,w
  1345     0775  00E0               	movwf	??_main
  1346     0776  01E1               	clrf	??_main+1
  1347     0777  0860               	movf	??_main,w
  1348     0778  00D4               	movwf	?_sprintf+1
  1349     0779  0861               	movf	??_main+1,w
  1350     077A  00D5               	movwf	?_sprintf+2
  1351     077B  303F               	movlw	(low (_s| 0))& (0+255)
  1352     077C  120A  118A  251A  120A  118A  	fcall	_sprintf
  1353     0781                     l1840:
  1354                           
  1355                           ;pruebaADXL345.c: 135:         sprintf(s2, "%u", y);
  1356     0781  301E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1357     0782  1283               	bcf	3,5	;RP0=0, select bank0
  1358     0783  1303               	bcf	3,6	;RP1=0, select bank0
  1359     0784  00D3               	movwf	sprintf@f
  1360     0785  0828               	movf	_y,w
  1361     0786  00E0               	movwf	??_main
  1362     0787  01E1               	clrf	??_main+1
  1363     0788  0860               	movf	??_main,w
  1364     0789  00D4               	movwf	?_sprintf+1
  1365     078A  0861               	movf	??_main+1,w
  1366     078B  00D5               	movwf	?_sprintf+2
  1367     078C  302B               	movlw	(low (_s2| 0))& (0+255)
  1368     078D  120A  118A  251A  120A  118A  	fcall	_sprintf
  1369     0792                     l1842:
  1370                           
  1371                           ;pruebaADXL345.c: 136:         sprintf(s3, "%u", z);
  1372     0792  301E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1373     0793  1283               	bcf	3,5	;RP0=0, select bank0
  1374     0794  1303               	bcf	3,6	;RP1=0, select bank0
  1375     0795  00D3               	movwf	sprintf@f
  1376     0796  0827               	movf	_z,w
  1377     0797  00E0               	movwf	??_main
  1378     0798  01E1               	clrf	??_main+1
  1379     0799  0860               	movf	??_main,w
  1380     079A  00D4               	movwf	?_sprintf+1
  1381     079B  0861               	movf	??_main+1,w
  1382     079C  00D5               	movwf	?_sprintf+2
  1383     079D  30A0               	movlw	(low (_s3| 0))& (0+255)
  1384     079E  120A  118A  251A  120A  118A  	fcall	_sprintf
  1385     07A3                     l1844:
  1386                           
  1387                           ;pruebaADXL345.c: 137:     Lcd_Set_Cursor(1,1);
  1388     07A3  01F4               	clrf	Lcd_Set_Cursor@b
  1389     07A4  0AF4               	incf	Lcd_Set_Cursor@b,f
  1390     07A5  3001               	movlw	1
  1391     07A6  120A  118A  23AA  120A  118A  	fcall	_Lcd_Set_Cursor
  1392                           
  1393                           ;pruebaADXL345.c: 138:     Lcd_Write_String(s);
  1394     07AB  303F               	movlw	(low (_s| 0))& (0+255)
  1395     07AC  00F5               	movwf	Lcd_Write_String@a
  1396     07AD  3000               	movlw	0
  1397     07AE  00F6               	movwf	Lcd_Write_String@a+1
  1398     07AF  120A  118A  2324  120A  118A  	fcall	_Lcd_Write_String
  1399     07B4                     l1846:
  1400                           
  1401                           ;pruebaADXL345.c: 139:     Lcd_Set_Cursor(1,5);
  1402     07B4  3005               	movlw	5
  1403     07B5  00F4               	movwf	Lcd_Set_Cursor@b
  1404     07B6  3001               	movlw	1
  1405     07B7  120A  118A  23AA  120A  118A  	fcall	_Lcd_Set_Cursor
  1406     07BC                     l1848:
  1407                           
  1408                           ;pruebaADXL345.c: 140:     Lcd_Write_String(s2);
  1409     07BC  302B               	movlw	(low (_s2| 0))& (0+255)
  1410     07BD  00F5               	movwf	Lcd_Write_String@a
  1411     07BE  3000               	movlw	0
  1412     07BF  00F6               	movwf	Lcd_Write_String@a+1
  1413     07C0  120A  118A  2324  120A  118A  	fcall	_Lcd_Write_String
  1414                           
  1415                           ;pruebaADXL345.c: 141:     Lcd_Set_Cursor(1,12);
  1416     07C5  300C               	movlw	12
  1417     07C6  00F4               	movwf	Lcd_Set_Cursor@b
  1418     07C7  3001               	movlw	1
  1419     07C8  120A  118A  23AA  120A  118A  	fcall	_Lcd_Set_Cursor
  1420     07CD                     l1850:
  1421                           
  1422                           ;pruebaADXL345.c: 142:     Lcd_Write_String(s3);
  1423     07CD  30A0               	movlw	(low (_s3| 0))& (0+255)
  1424     07CE  00F5               	movwf	Lcd_Write_String@a
  1425     07CF  3000               	movlw	0
  1426     07D0  00F6               	movwf	Lcd_Write_String@a+1
  1427     07D1  120A  118A  2324  120A  118A  	fcall	_Lcd_Write_String
  1428     07D6                     l1852:
  1429                           
  1430                           ;pruebaADXL345.c: 143:    Lcd_Set_Cursor(2,1);
  1431     07D6  01F4               	clrf	Lcd_Set_Cursor@b
  1432     07D7  0AF4               	incf	Lcd_Set_Cursor@b,f
  1433     07D8  3002               	movlw	2
  1434     07D9  120A  118A  23AA  120A  118A  	fcall	_Lcd_Set_Cursor
  1435                           
  1436                           ;pruebaADXL345.c: 144:     Lcd_Write_String("hey");
  1437     07DE  301A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1438     07DF  00F5               	movwf	Lcd_Write_String@a
  1439     07E0  3080               	movlw	128
  1440     07E1  00F6               	movwf	Lcd_Write_String@a+1
  1441     07E2  120A  118A  2324  120A  118A  	fcall	_Lcd_Write_String
  1442     07E7  2E55               	goto	l1770
  1443     07E8  120A  118A  2800   	ljmp	start
  1444     07EB                     __end_of_main:
  1445                           
  1446                           	psect	text1
  1447     051A                     __ptext1:	
  1448 ;; *************** function _sprintf *****************
  1449 ;; Defined at:
  1450 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  sp              1    wreg     PTR unsigned char 
  1453 ;;		 -> s3(20), s2(20), s(20), 
  1454 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1455 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1458 ;;		 -> s3(20), s2(20), s(20), 
  1459 ;;  tmpval          4    0        struct .
  1460 ;;  val             2    8[BANK0 ] unsigned int 
  1461 ;;  cp              2    0        PTR const unsigned char 
  1462 ;;  len             2    0        unsigned int 
  1463 ;;  c               1   12[BANK0 ] unsigned char 
  1464 ;;  prec            1   10[BANK0 ] char 
  1465 ;;  ap              1    7[BANK0 ] PTR void [1]
  1466 ;;		 -> ?_sprintf(2), 
  1467 ;;  flag            1    6[BANK0 ] unsigned char 
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  2    0[BANK0 ] int 
  1470 ;; Registers used:
  1471 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1477 ;;      Params:         0       3       0       0       0
  1478 ;;      Locals:         0       7       0       0       0
  1479 ;;      Temps:          0       3       0       0       0
  1480 ;;      Totals:         0      13       0       0       0
  1481 ;;Total ram usage:       13 bytes
  1482 ;; Hardware stack levels used: 1
  1483 ;; Hardware stack levels required when called: 1
  1484 ;; This function calls:
  1485 ;;		___lwdiv
  1486 ;;		___lwmod
  1487 ;; This function is called by:
  1488 ;;		_main
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492     051A                     _sprintf:	
  1493                           ;psect for function _sprintf
  1494                           
  1495                           
  1496                           ;incstack = 0
  1497                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1498                           ;sprintf@sp stored from wreg
  1499     051A  1283               	bcf	3,5	;RP0=0, select bank0
  1500     051B  1303               	bcf	3,6	;RP1=0, select bank0
  1501     051C  00DE               	movwf	sprintf@sp
  1502     051D                     l1610:
  1503                           
  1504                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1505     051D  3054               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1506     051E  00DA               	movwf	sprintf@ap
  1507                           
  1508                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1509     051F  2DC6               	goto	l1654
  1510     0520                     l1612:
  1511                           
  1512                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1513     0520  3025               	movlw	37
  1514     0521  065F               	xorwf	sprintf@c,w
  1515     0522  1903               	btfsc	3,2
  1516     0523  2D25               	goto	u981
  1517     0524  2D26               	goto	u980
  1518     0525                     u981:
  1519     0525  2D30               	goto	l1618
  1520     0526                     u980:
  1521     0526                     l1614:
  1522                           
  1523                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1524     0526  085E               	movf	sprintf@sp,w
  1525     0527  0084               	movwf	4
  1526     0528  085F               	movf	sprintf@c,w
  1527     0529  1383               	bcf	3,7	;select IRP bank0
  1528     052A  0080               	movwf	0
  1529     052B                     l1616:
  1530     052B  3001               	movlw	1
  1531     052C  00FF               	movwf	btemp+1
  1532     052D  087F               	movf	btemp+1,w
  1533     052E  07DE               	addwf	sprintf@sp,f
  1534                           
  1535                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  1536     052F  2DC6               	goto	l1654
  1537     0530                     l1618:
  1538                           
  1539                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1540     0530  01D9               	clrf	sprintf@flag
  1541                           
  1542                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1543     0531  2D37               	goto	l1624
  1544     0532                     l1620:
  1545                           
  1546                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1547     0532  30C0               	movlw	192
  1548     0533  00FF               	movwf	btemp+1
  1549     0534  087F               	movf	btemp+1,w
  1550     0535  04D9               	iorwf	sprintf@flag,f
  1551                           
  1552                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 845:    break;
  1553     0536  2D51               	goto	l1626
  1554     0537                     l1624:
  1555     0537  3001               	movlw	1
  1556     0538  07D3               	addwf	sprintf@f,f
  1557     0539  30FF               	movlw	-1
  1558     053A  0753               	addwf	sprintf@f,w
  1559     053B  0084               	movwf	4
  1560     053C  120A  118A  200D  120A  118A  	fcall	stringdir
  1561     0541  00DF               	movwf	sprintf@c
  1562     0542  00D6               	movwf	??_sprintf
  1563     0543  01D7               	clrf	??_sprintf+1
  1564                           
  1565                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1566                           ; Switch size 1, requested type "simple"
  1567                           ; Number of cases is 1, Range of values is 0 to 0
  1568                           ; switch strategies available:
  1569                           ; Name         Instructions Cycles
  1570                           ; simple_byte            4     3 (average)
  1571                           ; direct_byte           11     8 (fixed)
  1572                           ; jumptable            260     6 (fixed)
  1573                           ;	Chosen strategy is simple_byte
  1574     0544  0857               	movf	??_sprintf+1,w
  1575     0545  3A00               	xorlw	0	; case 0
  1576     0546  1903               	skipnz
  1577     0547  2D49               	goto	l1874
  1578     0548  2DC6               	goto	l1654
  1579     0549                     l1874:
  1580                           
  1581                           ; Switch size 1, requested type "simple"
  1582                           ; Number of cases is 2, Range of values is 0 to 117
  1583                           ; switch strategies available:
  1584                           ; Name         Instructions Cycles
  1585                           ; simple_byte            7     4 (average)
  1586                           ; jumptable            260     6 (fixed)
  1587                           ;	Chosen strategy is simple_byte
  1588     0549  0856               	movf	??_sprintf,w
  1589     054A  3A00               	xorlw	0	; case 0
  1590     054B  1903               	skipnz
  1591     054C  2DD6               	goto	l1656
  1592     054D  3A75               	xorlw	117	; case 117
  1593     054E  1903               	skipnz
  1594     054F  2D32               	goto	l1620
  1595     0550  2DC6               	goto	l1654
  1596     0551                     l1626:
  1597                           
  1598                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1599     0551  085A               	movf	sprintf@ap,w
  1600     0552  0084               	movwf	4
  1601     0553  1383               	bcf	3,7	;select IRP bank0
  1602     0554  0800               	movf	0,w
  1603     0555  00DB               	movwf	sprintf@val
  1604     0556  0A84               	incf	4,f
  1605     0557  0800               	movf	0,w
  1606     0558  00DC               	movwf	sprintf@val+1
  1607     0559                     l1628:
  1608     0559  3002               	movlw	2
  1609     055A  00FF               	movwf	btemp+1
  1610     055B  087F               	movf	btemp+1,w
  1611     055C  07DA               	addwf	sprintf@ap,f
  1612     055D                     l1630:
  1613                           
  1614                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1615     055D  01DF               	clrf	sprintf@c
  1616     055E  0ADF               	incf	sprintf@c,f
  1617     055F                     l1636:
  1618                           
  1619                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1620     055F  085F               	movf	sprintf@c,w
  1621     0560  00D6               	movwf	??_sprintf
  1622     0561  0756               	addwf	??_sprintf,w
  1623     0562  3E10               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1624     0563  0084               	movwf	4
  1625     0564  120A  118A  200D  120A  118A  	fcall	stringdir
  1626     0569  00D7               	movwf	??_sprintf+1
  1627     056A  120A  118A  200D  120A  118A  	fcall	stringdir
  1628     056F  00D8               	movwf	??_sprintf+2
  1629     0570  0858               	movf	??_sprintf+2,w
  1630     0571  025C               	subwf	sprintf@val+1,w
  1631     0572  1D03               	skipz
  1632     0573  2D76               	goto	u995
  1633     0574  0857               	movf	??_sprintf+1,w
  1634     0575  025B               	subwf	sprintf@val,w
  1635     0576                     u995:
  1636     0576  1803               	skipnc
  1637     0577  2D79               	goto	u991
  1638     0578  2D7A               	goto	u990
  1639     0579                     u991:
  1640     0579  2D7B               	goto	l1640
  1641     057A                     u990:
  1642     057A  2D85               	goto	l1644
  1643     057B                     l1640:
  1644     057B  3001               	movlw	1
  1645     057C  00FF               	movwf	btemp+1
  1646     057D  087F               	movf	btemp+1,w
  1647     057E  07DF               	addwf	sprintf@c,f
  1648     057F                     l1642:
  1649     057F  3005               	movlw	5
  1650     0580  065F               	xorwf	sprintf@c,w
  1651     0581  1D03               	btfss	3,2
  1652     0582  2D84               	goto	u1001
  1653     0583  2D85               	goto	u1000
  1654     0584                     u1001:
  1655     0584  2D5F               	goto	l1636
  1656     0585                     u1000:
  1657     0585                     l1644:
  1658                           
  1659                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1660     0585  085F               	movf	sprintf@c,w
  1661     0586  00DD               	movwf	sprintf@prec
  1662                           
  1663                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1664     0587  2DBD               	goto	l1652
  1665     0588                     l1646:
  1666                           
  1667                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1668     0588  300A               	movlw	10
  1669     0589  00F7               	movwf	___lwmod@divisor
  1670     058A  3000               	movlw	0
  1671     058B  00F8               	movwf	___lwmod@divisor+1
  1672     058C  085D               	movf	sprintf@prec,w
  1673     058D  00D6               	movwf	??_sprintf
  1674     058E  0756               	addwf	??_sprintf,w
  1675     058F  3E10               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1676     0590  0084               	movwf	4
  1677     0591  120A  118A  200D  120A  118A  	fcall	stringdir
  1678     0596  00F0               	movwf	___lwdiv@divisor
  1679     0597  120A  118A  200D  120A  118A  	fcall	stringdir
  1680     059C  00F1               	movwf	___lwdiv@divisor+1
  1681     059D  085C               	movf	sprintf@val+1,w
  1682     059E  00F3               	movwf	___lwdiv@dividend+1
  1683     059F  085B               	movf	sprintf@val,w
  1684     05A0  00F2               	movwf	___lwdiv@dividend
  1685     05A1  120A  118A  2366  120A  118A  	fcall	___lwdiv
  1686     05A6  0871               	movf	?___lwdiv+1,w
  1687     05A7  00FA               	movwf	___lwmod@dividend+1
  1688     05A8  0870               	movf	?___lwdiv,w
  1689     05A9  00F9               	movwf	___lwmod@dividend
  1690     05AA  120A  118A  22EA  120A  118A  	fcall	___lwmod
  1691     05AF  0877               	movf	?___lwmod,w
  1692     05B0  3E30               	addlw	48
  1693     05B1  1283               	bcf	3,5	;RP0=0, select bank0
  1694     05B2  1303               	bcf	3,6	;RP1=0, select bank0
  1695     05B3  00DF               	movwf	sprintf@c
  1696     05B4                     l1648:
  1697                           
  1698                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1699     05B4  085E               	movf	sprintf@sp,w
  1700     05B5  0084               	movwf	4
  1701     05B6  085F               	movf	sprintf@c,w
  1702     05B7  1383               	bcf	3,7	;select IRP bank0
  1703     05B8  0080               	movwf	0
  1704     05B9                     l1650:
  1705     05B9  3001               	movlw	1
  1706     05BA  00FF               	movwf	btemp+1
  1707     05BB  087F               	movf	btemp+1,w
  1708     05BC  07DE               	addwf	sprintf@sp,f
  1709     05BD                     l1652:
  1710                           
  1711                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1712     05BD  30FF               	movlw	255
  1713     05BE  00FF               	movwf	btemp+1
  1714     05BF  087F               	movf	btemp+1,w
  1715     05C0  07DD               	addwf	sprintf@prec,f
  1716     05C1  0A5D               	incf	sprintf@prec,w
  1717     05C2  1D03               	btfss	3,2
  1718     05C3  2DC5               	goto	u1011
  1719     05C4  2DC6               	goto	u1010
  1720     05C5                     u1011:
  1721     05C5  2D88               	goto	l1646
  1722     05C6                     u1010:
  1723     05C6                     l1654:
  1724                           
  1725                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1726     05C6  3001               	movlw	1
  1727     05C7  07D3               	addwf	sprintf@f,f
  1728     05C8  30FF               	movlw	-1
  1729     05C9  0753               	addwf	sprintf@f,w
  1730     05CA  0084               	movwf	4
  1731     05CB  120A  118A  200D  120A  118A  	fcall	stringdir
  1732     05D0  00DF               	movwf	sprintf@c
  1733     05D1  085F               	movf	sprintf@c,w
  1734     05D2  1D03               	btfss	3,2
  1735     05D3  2DD5               	goto	u1021
  1736     05D4  2DD6               	goto	u1020
  1737     05D5                     u1021:
  1738     05D5  2D20               	goto	l1612
  1739     05D6                     u1020:
  1740     05D6                     l1656:
  1741                           
  1742                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1743     05D6  085E               	movf	sprintf@sp,w
  1744     05D7  0084               	movwf	4
  1745     05D8  1383               	bcf	3,7	;select IRP bank0
  1746     05D9  0180               	clrf	0
  1747     05DA                     l370:
  1748     05DA  0008               	return
  1749     05DB                     __end_of_sprintf:
  1750                           
  1751                           	psect	text2
  1752     02EA                     __ptext2:	
  1753 ;; *************** function ___lwmod *****************
  1754 ;; Defined at:
  1755 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;  divisor         2    7[COMMON] unsigned int 
  1758 ;;  dividend        2    9[COMMON] unsigned int 
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;  counter         1   11[COMMON] unsigned char 
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  2    7[COMMON] unsigned int 
  1763 ;; Registers used:
  1764 ;;		wreg, status,2, status,0, btemp+1
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1770 ;;      Params:         4       0       0       0       0
  1771 ;;      Locals:         1       0       0       0       0
  1772 ;;      Temps:          0       0       0       0       0
  1773 ;;      Totals:         5       0       0       0       0
  1774 ;;Total ram usage:        5 bytes
  1775 ;; Hardware stack levels used: 1
  1776 ;; This function calls:
  1777 ;;		Nothing
  1778 ;; This function is called by:
  1779 ;;		_sprintf
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783     02EA                     ___lwmod:	
  1784                           ;psect for function ___lwmod
  1785                           
  1786     02EA                     l1492:	
  1787                           ;incstack = 0
  1788                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  1789                           
  1790     02EA  0877               	movf	___lwmod@divisor,w
  1791     02EB  0478               	iorwf	___lwmod@divisor+1,w
  1792     02EC  1903               	btfsc	3,2
  1793     02ED  2AEF               	goto	u831
  1794     02EE  2AF0               	goto	u830
  1795     02EF                     u831:
  1796     02EF  2B1F               	goto	l1510
  1797     02F0                     u830:
  1798     02F0                     l1494:
  1799     02F0  01FB               	clrf	___lwmod@counter
  1800     02F1  0AFB               	incf	___lwmod@counter,f
  1801     02F2  2AFE               	goto	l1500
  1802     02F3                     l1496:
  1803     02F3  3001               	movlw	1
  1804     02F4                     u845:
  1805     02F4  1003               	clrc
  1806     02F5  0DF7               	rlf	___lwmod@divisor,f
  1807     02F6  0DF8               	rlf	___lwmod@divisor+1,f
  1808     02F7  3EFF               	addlw	-1
  1809     02F8  1D03               	skipz
  1810     02F9  2AF4               	goto	u845
  1811     02FA                     l1498:
  1812     02FA  3001               	movlw	1
  1813     02FB  00FF               	movwf	btemp+1
  1814     02FC  087F               	movf	btemp+1,w
  1815     02FD  07FB               	addwf	___lwmod@counter,f
  1816     02FE                     l1500:
  1817     02FE  1FF8               	btfss	___lwmod@divisor+1,7
  1818     02FF  2B01               	goto	u851
  1819     0300  2B02               	goto	u850
  1820     0301                     u851:
  1821     0301  2AF3               	goto	l1496
  1822     0302                     u850:
  1823     0302                     l1502:
  1824     0302  0878               	movf	___lwmod@divisor+1,w
  1825     0303  027A               	subwf	___lwmod@dividend+1,w
  1826     0304  1D03               	skipz
  1827     0305  2B08               	goto	u865
  1828     0306  0877               	movf	___lwmod@divisor,w
  1829     0307  0279               	subwf	___lwmod@dividend,w
  1830     0308                     u865:
  1831     0308  1C03               	skipc
  1832     0309  2B0B               	goto	u861
  1833     030A  2B0C               	goto	u860
  1834     030B                     u861:
  1835     030B  2B12               	goto	l1506
  1836     030C                     u860:
  1837     030C                     l1504:
  1838     030C  0877               	movf	___lwmod@divisor,w
  1839     030D  02F9               	subwf	___lwmod@dividend,f
  1840     030E  0878               	movf	___lwmod@divisor+1,w
  1841     030F  1C03               	skipc
  1842     0310  03FA               	decf	___lwmod@dividend+1,f
  1843     0311  02FA               	subwf	___lwmod@dividend+1,f
  1844     0312                     l1506:
  1845     0312  3001               	movlw	1
  1846     0313                     u875:
  1847     0313  1003               	clrc
  1848     0314  0CF8               	rrf	___lwmod@divisor+1,f
  1849     0315  0CF7               	rrf	___lwmod@divisor,f
  1850     0316  3EFF               	addlw	-1
  1851     0317  1D03               	skipz
  1852     0318  2B13               	goto	u875
  1853     0319                     l1508:
  1854     0319  3001               	movlw	1
  1855     031A  02FB               	subwf	___lwmod@counter,f
  1856     031B  1D03               	btfss	3,2
  1857     031C  2B1E               	goto	u881
  1858     031D  2B1F               	goto	u880
  1859     031E                     u881:
  1860     031E  2B02               	goto	l1502
  1861     031F                     u880:
  1862     031F                     l1510:
  1863     031F  087A               	movf	___lwmod@dividend+1,w
  1864     0320  00F8               	movwf	?___lwmod+1
  1865     0321  0879               	movf	___lwmod@dividend,w
  1866     0322  00F7               	movwf	?___lwmod
  1867     0323                     l656:
  1868     0323  0008               	return
  1869     0324                     __end_of___lwmod:
  1870                           
  1871                           	psect	text3
  1872     0366                     __ptext3:	
  1873 ;; *************** function ___lwdiv *****************
  1874 ;; Defined at:
  1875 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;  divisor         2    0[COMMON] unsigned int 
  1878 ;;  dividend        2    2[COMMON] unsigned int 
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;  quotient        2    4[COMMON] unsigned int 
  1881 ;;  counter         1    6[COMMON] unsigned char 
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  2    0[COMMON] unsigned int 
  1884 ;; Registers used:
  1885 ;;		wreg, status,2, status,0, btemp+1
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1891 ;;      Params:         4       0       0       0       0
  1892 ;;      Locals:         3       0       0       0       0
  1893 ;;      Temps:          0       0       0       0       0
  1894 ;;      Totals:         7       0       0       0       0
  1895 ;;Total ram usage:        7 bytes
  1896 ;; Hardware stack levels used: 1
  1897 ;; This function calls:
  1898 ;;		Nothing
  1899 ;; This function is called by:
  1900 ;;		_sprintf
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904     0366                     ___lwdiv:	
  1905                           ;psect for function ___lwdiv
  1906                           
  1907     0366                     l1466:	
  1908                           ;incstack = 0
  1909                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1910                           
  1911     0366  01F4               	clrf	___lwdiv@quotient
  1912     0367  01F5               	clrf	___lwdiv@quotient+1
  1913     0368                     l1468:
  1914     0368  0870               	movf	___lwdiv@divisor,w
  1915     0369  0471               	iorwf	___lwdiv@divisor+1,w
  1916     036A  1903               	btfsc	3,2
  1917     036B  2B6D               	goto	u761
  1918     036C  2B6E               	goto	u760
  1919     036D                     u761:
  1920     036D  2BA5               	goto	l1488
  1921     036E                     u760:
  1922     036E                     l1470:
  1923     036E  01F6               	clrf	___lwdiv@counter
  1924     036F  0AF6               	incf	___lwdiv@counter,f
  1925     0370  2B7C               	goto	l1476
  1926     0371                     l1472:
  1927     0371  3001               	movlw	1
  1928     0372                     u775:
  1929     0372  1003               	clrc
  1930     0373  0DF0               	rlf	___lwdiv@divisor,f
  1931     0374  0DF1               	rlf	___lwdiv@divisor+1,f
  1932     0375  3EFF               	addlw	-1
  1933     0376  1D03               	skipz
  1934     0377  2B72               	goto	u775
  1935     0378                     l1474:
  1936     0378  3001               	movlw	1
  1937     0379  00FF               	movwf	btemp+1
  1938     037A  087F               	movf	btemp+1,w
  1939     037B  07F6               	addwf	___lwdiv@counter,f
  1940     037C                     l1476:
  1941     037C  1FF1               	btfss	___lwdiv@divisor+1,7
  1942     037D  2B7F               	goto	u781
  1943     037E  2B80               	goto	u780
  1944     037F                     u781:
  1945     037F  2B71               	goto	l1472
  1946     0380                     u780:
  1947     0380                     l1478:
  1948     0380  3001               	movlw	1
  1949     0381                     u795:
  1950     0381  1003               	clrc
  1951     0382  0DF4               	rlf	___lwdiv@quotient,f
  1952     0383  0DF5               	rlf	___lwdiv@quotient+1,f
  1953     0384  3EFF               	addlw	-1
  1954     0385  1D03               	skipz
  1955     0386  2B81               	goto	u795
  1956     0387  0871               	movf	___lwdiv@divisor+1,w
  1957     0388  0273               	subwf	___lwdiv@dividend+1,w
  1958     0389  1D03               	skipz
  1959     038A  2B8D               	goto	u805
  1960     038B  0870               	movf	___lwdiv@divisor,w
  1961     038C  0272               	subwf	___lwdiv@dividend,w
  1962     038D                     u805:
  1963     038D  1C03               	skipc
  1964     038E  2B90               	goto	u801
  1965     038F  2B91               	goto	u800
  1966     0390                     u801:
  1967     0390  2B98               	goto	l1484
  1968     0391                     u800:
  1969     0391                     l1480:
  1970     0391  0870               	movf	___lwdiv@divisor,w
  1971     0392  02F2               	subwf	___lwdiv@dividend,f
  1972     0393  0871               	movf	___lwdiv@divisor+1,w
  1973     0394  1C03               	skipc
  1974     0395  03F3               	decf	___lwdiv@dividend+1,f
  1975     0396  02F3               	subwf	___lwdiv@dividend+1,f
  1976     0397                     l1482:
  1977     0397  1474               	bsf	___lwdiv@quotient,0
  1978     0398                     l1484:
  1979     0398  3001               	movlw	1
  1980     0399                     u815:
  1981     0399  1003               	clrc
  1982     039A  0CF1               	rrf	___lwdiv@divisor+1,f
  1983     039B  0CF0               	rrf	___lwdiv@divisor,f
  1984     039C  3EFF               	addlw	-1
  1985     039D  1D03               	skipz
  1986     039E  2B99               	goto	u815
  1987     039F                     l1486:
  1988     039F  3001               	movlw	1
  1989     03A0  02F6               	subwf	___lwdiv@counter,f
  1990     03A1  1D03               	btfss	3,2
  1991     03A2  2BA4               	goto	u821
  1992     03A3  2BA5               	goto	u820
  1993     03A4                     u821:
  1994     03A4  2B80               	goto	l1478
  1995     03A5                     u820:
  1996     03A5                     l1488:
  1997     03A5  0875               	movf	___lwdiv@quotient+1,w
  1998     03A6  00F1               	movwf	?___lwdiv+1
  1999     03A7  0874               	movf	___lwdiv@quotient,w
  2000     03A8  00F0               	movwf	?___lwdiv
  2001     03A9                     l646:
  2002     03A9  0008               	return
  2003     03AA                     __end_of___lwdiv:
  2004                           
  2005                           	psect	text4
  2006     021A                     __ptext4:	
  2007 ;; *************** function _setup *****************
  2008 ;; Defined at:
  2009 ;;		line 152 in file "pruebaADXL345.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;		None
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;		None
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  1    wreg      void 
  2016 ;; Registers used:
  2017 ;;		wreg, status,2, status,0
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2023 ;;      Params:         0       0       0       0       0
  2024 ;;      Locals:         0       0       0       0       0
  2025 ;;      Temps:          0       0       0       0       0
  2026 ;;      Totals:         0       0       0       0       0
  2027 ;;Total ram usage:        0 bytes
  2028 ;; Hardware stack levels used: 1
  2029 ;; This function calls:
  2030 ;;		Nothing
  2031 ;; This function is called by:
  2032 ;;		_main
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036     021A                     _setup:	
  2037                           ;psect for function _setup
  2038                           
  2039     021A                     l1592:	
  2040                           ;incstack = 0
  2041                           ; Regs used in _setup: [wreg+status,2+status,0]
  2042                           
  2043                           
  2044                           ;pruebaADXL345.c: 153:     ANSEL = 0;
  2045     021A  1683               	bsf	3,5	;RP0=1, select bank3
  2046     021B  1703               	bsf	3,6	;RP1=1, select bank3
  2047     021C  0188               	clrf	8	;volatile
  2048                           
  2049                           ;pruebaADXL345.c: 154:     ANSELH = 0;
  2050     021D  0189               	clrf	9	;volatile
  2051     021E                     l1594:
  2052                           
  2053                           ;pruebaADXL345.c: 155:     TRISC1 = 0;
  2054     021E  1683               	bsf	3,5	;RP0=1, select bank1
  2055     021F  1303               	bcf	3,6	;RP1=0, select bank1
  2056     0220  1087               	bcf	7,1	;volatile
  2057     0221                     l1596:
  2058                           
  2059                           ;pruebaADXL345.c: 156:     TRISC2 = 0;
  2060     0221  1107               	bcf	7,2	;volatile
  2061     0222                     l1598:
  2062                           
  2063                           ;pruebaADXL345.c: 157:     TRISC6 = 0;
  2064     0222  1307               	bcf	7,6	;volatile
  2065     0223                     l1600:
  2066                           
  2067                           ;pruebaADXL345.c: 158:     TRISC7 = 0;
  2068     0223  1387               	bcf	7,7	;volatile
  2069                           
  2070                           ;pruebaADXL345.c: 159:     TRISA =0;
  2071     0224  0185               	clrf	5	;volatile
  2072                           
  2073                           ;pruebaADXL345.c: 160:     TRISB = 0;
  2074     0225  0186               	clrf	6	;volatile
  2075                           
  2076                           ;pruebaADXL345.c: 161:     TRISD = 0;
  2077     0226  0188               	clrf	8	;volatile
  2078                           
  2079                           ;pruebaADXL345.c: 162:     PORTA = 0;
  2080     0227  1283               	bcf	3,5	;RP0=0, select bank0
  2081     0228  1303               	bcf	3,6	;RP1=0, select bank0
  2082     0229  0185               	clrf	5	;volatile
  2083                           
  2084                           ;pruebaADXL345.c: 163:     PORTB = 0;
  2085     022A  0186               	clrf	6	;volatile
  2086                           
  2087                           ;pruebaADXL345.c: 164:     PORTD = 0;
  2088     022B  0188               	clrf	8	;volatile
  2089     022C                     l1602:
  2090                           
  2091                           ;pruebaADXL345.c: 165:     PORTCbits.RC1 = 1;
  2092     022C  1487               	bsf	7,1	;volatile
  2093     022D                     l1604:
  2094                           
  2095                           ;pruebaADXL345.c: 166:     PORTCbits.RC2 = 1;
  2096     022D  1507               	bsf	7,2	;volatile
  2097     022E                     l1606:
  2098                           
  2099                           ;pruebaADXL345.c: 169:     OSCCONbits.IRCF = 0b0111;
  2100     022E  3070               	movlw	112
  2101     022F  1683               	bsf	3,5	;RP0=1, select bank1
  2102     0230  1303               	bcf	3,6	;RP1=0, select bank1
  2103     0231  048F               	iorwf	15,f	;volatile
  2104     0232                     l1608:
  2105                           
  2106                           ;pruebaADXL345.c: 170:     OSCCONbits.SCS = 1;
  2107     0232  140F               	bsf	15,0	;volatile
  2108     0233                     l263:
  2109     0233  0008               	return
  2110     0234                     __end_of_setup:
  2111                           
  2112                           	psect	text5
  2113     04B3                     __ptext5:	
  2114 ;; *************** function ___awdiv *****************
  2115 ;; Defined at:
  2116 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;  divisor         2    0[COMMON] int 
  2119 ;;  dividend        2    2[COMMON] int 
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  quotient        2    6[COMMON] int 
  2122 ;;  sign            1    5[COMMON] unsigned char 
  2123 ;;  counter         1    4[COMMON] unsigned char 
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  2    0[COMMON] int 
  2126 ;; Registers used:
  2127 ;;		wreg, status,2, status,0, btemp+1
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2133 ;;      Params:         4       0       0       0       0
  2134 ;;      Locals:         4       0       0       0       0
  2135 ;;      Temps:          0       0       0       0       0
  2136 ;;      Totals:         8       0       0       0       0
  2137 ;;Total ram usage:        8 bytes
  2138 ;; Hardware stack levels used: 1
  2139 ;; This function calls:
  2140 ;;		Nothing
  2141 ;; This function is called by:
  2142 ;;		_main
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146     04B3                     ___awdiv:	
  2147                           ;psect for function ___awdiv
  2148                           
  2149     04B3                     l1664:	
  2150                           ;incstack = 0
  2151                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  2152                           
  2153     04B3  01F5               	clrf	___awdiv@sign
  2154     04B4                     l1666:
  2155     04B4  1FF1               	btfss	___awdiv@divisor+1,7
  2156     04B5  2CB7               	goto	u1031
  2157     04B6  2CB8               	goto	u1030
  2158     04B7                     u1031:
  2159     04B7  2CBF               	goto	l1672
  2160     04B8                     u1030:
  2161     04B8                     l1668:
  2162     04B8  09F0               	comf	___awdiv@divisor,f
  2163     04B9  09F1               	comf	___awdiv@divisor+1,f
  2164     04BA  0AF0               	incf	___awdiv@divisor,f
  2165     04BB  1903               	skipnz
  2166     04BC  0AF1               	incf	___awdiv@divisor+1,f
  2167     04BD                     l1670:
  2168     04BD  01F5               	clrf	___awdiv@sign
  2169     04BE  0AF5               	incf	___awdiv@sign,f
  2170     04BF                     l1672:
  2171     04BF  1FF3               	btfss	___awdiv@dividend+1,7
  2172     04C0  2CC2               	goto	u1041
  2173     04C1  2CC3               	goto	u1040
  2174     04C2                     u1041:
  2175     04C2  2CCC               	goto	l1678
  2176     04C3                     u1040:
  2177     04C3                     l1674:
  2178     04C3  09F2               	comf	___awdiv@dividend,f
  2179     04C4  09F3               	comf	___awdiv@dividend+1,f
  2180     04C5  0AF2               	incf	___awdiv@dividend,f
  2181     04C6  1903               	skipnz
  2182     04C7  0AF3               	incf	___awdiv@dividend+1,f
  2183     04C8                     l1676:
  2184     04C8  3001               	movlw	1
  2185     04C9  00FF               	movwf	btemp+1
  2186     04CA  087F               	movf	btemp+1,w
  2187     04CB  06F5               	xorwf	___awdiv@sign,f
  2188     04CC                     l1678:
  2189     04CC  01F6               	clrf	___awdiv@quotient
  2190     04CD  01F7               	clrf	___awdiv@quotient+1
  2191     04CE                     l1680:
  2192     04CE  0870               	movf	___awdiv@divisor,w
  2193     04CF  0471               	iorwf	___awdiv@divisor+1,w
  2194     04D0  1903               	btfsc	3,2
  2195     04D1  2CD3               	goto	u1051
  2196     04D2  2CD4               	goto	u1050
  2197     04D3                     u1051:
  2198     04D3  2D0B               	goto	l1700
  2199     04D4                     u1050:
  2200     04D4                     l1682:
  2201     04D4  01F4               	clrf	___awdiv@counter
  2202     04D5  0AF4               	incf	___awdiv@counter,f
  2203     04D6  2CE2               	goto	l1688
  2204     04D7                     l1684:
  2205     04D7  3001               	movlw	1
  2206     04D8                     u1065:
  2207     04D8  1003               	clrc
  2208     04D9  0DF0               	rlf	___awdiv@divisor,f
  2209     04DA  0DF1               	rlf	___awdiv@divisor+1,f
  2210     04DB  3EFF               	addlw	-1
  2211     04DC  1D03               	skipz
  2212     04DD  2CD8               	goto	u1065
  2213     04DE                     l1686:
  2214     04DE  3001               	movlw	1
  2215     04DF  00FF               	movwf	btemp+1
  2216     04E0  087F               	movf	btemp+1,w
  2217     04E1  07F4               	addwf	___awdiv@counter,f
  2218     04E2                     l1688:
  2219     04E2  1FF1               	btfss	___awdiv@divisor+1,7
  2220     04E3  2CE5               	goto	u1071
  2221     04E4  2CE6               	goto	u1070
  2222     04E5                     u1071:
  2223     04E5  2CD7               	goto	l1684
  2224     04E6                     u1070:
  2225     04E6                     l1690:
  2226     04E6  3001               	movlw	1
  2227     04E7                     u1085:
  2228     04E7  1003               	clrc
  2229     04E8  0DF6               	rlf	___awdiv@quotient,f
  2230     04E9  0DF7               	rlf	___awdiv@quotient+1,f
  2231     04EA  3EFF               	addlw	-1
  2232     04EB  1D03               	skipz
  2233     04EC  2CE7               	goto	u1085
  2234     04ED  0871               	movf	___awdiv@divisor+1,w
  2235     04EE  0273               	subwf	___awdiv@dividend+1,w
  2236     04EF  1D03               	skipz
  2237     04F0  2CF3               	goto	u1095
  2238     04F1  0870               	movf	___awdiv@divisor,w
  2239     04F2  0272               	subwf	___awdiv@dividend,w
  2240     04F3                     u1095:
  2241     04F3  1C03               	skipc
  2242     04F4  2CF6               	goto	u1091
  2243     04F5  2CF7               	goto	u1090
  2244     04F6                     u1091:
  2245     04F6  2CFE               	goto	l1696
  2246     04F7                     u1090:
  2247     04F7                     l1692:
  2248     04F7  0870               	movf	___awdiv@divisor,w
  2249     04F8  02F2               	subwf	___awdiv@dividend,f
  2250     04F9  0871               	movf	___awdiv@divisor+1,w
  2251     04FA  1C03               	skipc
  2252     04FB  03F3               	decf	___awdiv@dividend+1,f
  2253     04FC  02F3               	subwf	___awdiv@dividend+1,f
  2254     04FD                     l1694:
  2255     04FD  1476               	bsf	___awdiv@quotient,0
  2256     04FE                     l1696:
  2257     04FE  3001               	movlw	1
  2258     04FF                     u1105:
  2259     04FF  1003               	clrc
  2260     0500  0CF1               	rrf	___awdiv@divisor+1,f
  2261     0501  0CF0               	rrf	___awdiv@divisor,f
  2262     0502  3EFF               	addlw	-1
  2263     0503  1D03               	skipz
  2264     0504  2CFF               	goto	u1105
  2265     0505                     l1698:
  2266     0505  3001               	movlw	1
  2267     0506  02F4               	subwf	___awdiv@counter,f
  2268     0507  1D03               	btfss	3,2
  2269     0508  2D0A               	goto	u1111
  2270     0509  2D0B               	goto	u1110
  2271     050A                     u1111:
  2272     050A  2CE6               	goto	l1690
  2273     050B                     u1110:
  2274     050B                     l1700:
  2275     050B  0875               	movf	___awdiv@sign,w
  2276     050C  1903               	btfsc	3,2
  2277     050D  2D0F               	goto	u1121
  2278     050E  2D10               	goto	u1120
  2279     050F                     u1121:
  2280     050F  2D15               	goto	l1704
  2281     0510                     u1120:
  2282     0510                     l1702:
  2283     0510  09F6               	comf	___awdiv@quotient,f
  2284     0511  09F7               	comf	___awdiv@quotient+1,f
  2285     0512  0AF6               	incf	___awdiv@quotient,f
  2286     0513  1903               	skipnz
  2287     0514  0AF7               	incf	___awdiv@quotient+1,f
  2288     0515                     l1704:
  2289     0515  0877               	movf	___awdiv@quotient+1,w
  2290     0516  00F1               	movwf	?___awdiv+1
  2291     0517  0876               	movf	___awdiv@quotient,w
  2292     0518  00F0               	movwf	?___awdiv
  2293     0519                     l527:
  2294     0519  0008               	return
  2295     051A                     __end_of___awdiv:
  2296                           
  2297                           	psect	text6
  2298     0324                     __ptext6:	
  2299 ;; *************** function _Lcd_Write_String *****************
  2300 ;; Defined at:
  2301 ;;		line 98 in file "LCD.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;  a               2    5[COMMON] PTR unsigned char 
  2304 ;;		 -> STR_4(4), s3(20), s2(20), s(20), 
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;  i               2   10[COMMON] int 
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      void 
  2309 ;; Registers used:
  2310 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2316 ;;      Params:         2       0       0       0       0
  2317 ;;      Locals:         2       0       0       0       0
  2318 ;;      Temps:          3       0       0       0       0
  2319 ;;      Totals:         7       0       0       0       0
  2320 ;;Total ram usage:        7 bytes
  2321 ;; Hardware stack levels used: 1
  2322 ;; Hardware stack levels required when called: 2
  2323 ;; This function calls:
  2324 ;;		_Lcd_Write_Char
  2325 ;; This function is called by:
  2326 ;;		_main
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330     0324                     _Lcd_Write_String:	
  2331                           ;psect for function _Lcd_Write_String
  2332                           
  2333     0324                     l1578:	
  2334                           ;incstack = 0
  2335                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2336                           
  2337                           
  2338                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  2339     0324  01FA               	clrf	Lcd_Write_String@i
  2340     0325  01FB               	clrf	Lcd_Write_String@i+1
  2341     0326  2B49               	goto	l1584
  2342     0327                     l1580:
  2343                           
  2344                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  2345     0327  087A               	movf	Lcd_Write_String@i,w
  2346     0328  0775               	addwf	Lcd_Write_String@a,w
  2347     0329  00F8               	movwf	??_Lcd_Write_String+1
  2348     032A  0876               	movf	Lcd_Write_String@a+1,w
  2349     032B  00F7               	movwf	??_Lcd_Write_String
  2350     032C  1803               	skipnc
  2351     032D  0AF7               	incf	??_Lcd_Write_String,f
  2352     032E  1FFA               	btfss	Lcd_Write_String@i,7
  2353     032F  2B31               	goto	u940
  2354     0330  03F7               	decf	??_Lcd_Write_String,f
  2355     0331                     u940:
  2356     0331  0877               	movf	??_Lcd_Write_String,w
  2357     0332  00F9               	movwf	??_Lcd_Write_String+2
  2358     0333  0879               	movf	??_Lcd_Write_String+2,w
  2359     0334  1283               	bcf	3,5	;RP0=0, select bank0
  2360     0335  1303               	bcf	3,6	;RP1=0, select bank0
  2361     0336  00FF               	movwf	btemp+1
  2362     0337  0878               	movf	??_Lcd_Write_String+1,w
  2363     0338  0084               	movwf	4
  2364     0339  120A  118A  2003  120A  118A  	fcall	stringtab
  2365     033E  120A  118A  22B5  120A  118A  	fcall	_Lcd_Write_Char
  2366     0343                     l1582:
  2367     0343  3001               	movlw	1
  2368     0344  07FA               	addwf	Lcd_Write_String@i,f
  2369     0345  1803               	skipnc
  2370     0346  0AFB               	incf	Lcd_Write_String@i+1,f
  2371     0347  3000               	movlw	0
  2372     0348  07FB               	addwf	Lcd_Write_String@i+1,f
  2373     0349                     l1584:
  2374     0349  087A               	movf	Lcd_Write_String@i,w
  2375     034A  0775               	addwf	Lcd_Write_String@a,w
  2376     034B  00F8               	movwf	??_Lcd_Write_String+1
  2377     034C  0876               	movf	Lcd_Write_String@a+1,w
  2378     034D  00F7               	movwf	??_Lcd_Write_String
  2379     034E  1803               	skipnc
  2380     034F  0AF7               	incf	??_Lcd_Write_String,f
  2381     0350  1FFA               	btfss	Lcd_Write_String@i,7
  2382     0351  2B53               	goto	u950
  2383     0352  03F7               	decf	??_Lcd_Write_String,f
  2384     0353                     u950:
  2385     0353  0877               	movf	??_Lcd_Write_String,w
  2386     0354  00F9               	movwf	??_Lcd_Write_String+2
  2387     0355  0879               	movf	??_Lcd_Write_String+2,w
  2388     0356  1283               	bcf	3,5	;RP0=0, select bank0
  2389     0357  1303               	bcf	3,6	;RP1=0, select bank0
  2390     0358  00FF               	movwf	btemp+1
  2391     0359  0878               	movf	??_Lcd_Write_String+1,w
  2392     035A  0084               	movwf	4
  2393     035B  120A  118A  2003  120A  118A  	fcall	stringtab
  2394     0360  3A00               	xorlw	0
  2395     0361  1D03               	skipz
  2396     0362  2B64               	goto	u961
  2397     0363  2B65               	goto	u960
  2398     0364                     u961:
  2399     0364  2B27               	goto	l1580
  2400     0365                     u960:
  2401     0365                     l104:
  2402     0365  0008               	return
  2403     0366                     __end_of_Lcd_Write_String:
  2404                           
  2405                           	psect	text7
  2406     02B5                     __ptext7:	
  2407 ;; *************** function _Lcd_Write_Char *****************
  2408 ;; Defined at:
  2409 ;;		line 83 in file "LCD.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  a               1    wreg     unsigned char 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;  a               1    4[COMMON] unsigned char 
  2414 ;;  y               1    3[COMMON] unsigned char 
  2415 ;;  temp            1    2[COMMON] unsigned char 
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  1    wreg      void 
  2418 ;; Registers used:
  2419 ;;		wreg, status,2, status,0, pclath, cstack
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2425 ;;      Params:         0       0       0       0       0
  2426 ;;      Locals:         3       0       0       0       0
  2427 ;;      Temps:          1       0       0       0       0
  2428 ;;      Totals:         4       0       0       0       0
  2429 ;;Total ram usage:        4 bytes
  2430 ;; Hardware stack levels used: 1
  2431 ;; Hardware stack levels required when called: 1
  2432 ;; This function calls:
  2433 ;;		_Lcd_Port
  2434 ;; This function is called by:
  2435 ;;		_Lcd_Write_String
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439     02B5                     _Lcd_Write_Char:	
  2440                           ;psect for function _Lcd_Write_Char
  2441                           
  2442                           
  2443                           ;incstack = 0
  2444                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2445                           ;Lcd_Write_Char@a stored from wreg
  2446     02B5  00F4               	movwf	Lcd_Write_Char@a
  2447     02B6                     l1420:
  2448                           
  2449                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  2450     02B6  0874               	movf	Lcd_Write_Char@a,w
  2451     02B7  390F               	andlw	15
  2452     02B8  00F2               	movwf	Lcd_Write_Char@temp
  2453                           
  2454                           ;LCD.c: 86:     y = a & 0xF0;
  2455     02B9  0874               	movf	Lcd_Write_Char@a,w
  2456     02BA  39F0               	andlw	240
  2457     02BB  00F3               	movwf	Lcd_Write_Char@y
  2458     02BC                     l1422:
  2459                           
  2460                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  2461     02BC  1283               	bcf	3,5	;RP0=0, select bank0
  2462     02BD  1303               	bcf	3,6	;RP1=0, select bank0
  2463     02BE  1508               	bsf	8,2	;volatile
  2464     02BF                     l1424:
  2465                           
  2466                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  2467     02BF  0873               	movf	Lcd_Write_Char@y,w
  2468     02C0  00F1               	movwf	??_Lcd_Write_Char
  2469     02C1  3004               	movlw	4
  2470     02C2                     u685:
  2471     02C2  1003               	clrc
  2472     02C3  0CF1               	rrf	??_Lcd_Write_Char,f
  2473     02C4  3EFF               	addlw	-1
  2474     02C5  1D03               	skipz
  2475     02C6  2AC2               	goto	u685
  2476     02C7  0871               	movf	??_Lcd_Write_Char,w
  2477     02C8  120A  118A  2234  120A  118A  	fcall	_Lcd_Port
  2478     02CD                     l1426:
  2479                           
  2480                           ;LCD.c: 89:     RD3 = 1;
  2481     02CD  1283               	bcf	3,5	;RP0=0, select bank0
  2482     02CE  1303               	bcf	3,6	;RP1=0, select bank0
  2483     02CF  1588               	bsf	8,3	;volatile
  2484     02D0                     l1428:
  2485                           
  2486                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2487     02D0  301A               	movlw	26
  2488     02D1  00F1               	movwf	??_Lcd_Write_Char
  2489     02D2                     u1207:
  2490     02D2  0BF1               	decfsz	??_Lcd_Write_Char,f
  2491     02D3  2AD2               	goto	u1207
  2492     02D4  0000               	nop
  2493     02D5                     l1430:
  2494                           
  2495                           ;LCD.c: 91:     RD3 = 0;
  2496     02D5  1283               	bcf	3,5	;RP0=0, select bank0
  2497     02D6  1303               	bcf	3,6	;RP1=0, select bank0
  2498     02D7  1188               	bcf	8,3	;volatile
  2499     02D8                     l1432:
  2500                           
  2501                           ;LCD.c: 92:     Lcd_Port(temp);
  2502     02D8  0872               	movf	Lcd_Write_Char@temp,w
  2503     02D9  120A  118A  2234  120A  118A  	fcall	_Lcd_Port
  2504     02DE                     l1434:
  2505                           
  2506                           ;LCD.c: 93:     RD3 = 1;
  2507     02DE  1283               	bcf	3,5	;RP0=0, select bank0
  2508     02DF  1303               	bcf	3,6	;RP1=0, select bank0
  2509     02E0  1588               	bsf	8,3	;volatile
  2510     02E1                     l1436:
  2511                           
  2512                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2513     02E1  301A               	movlw	26
  2514     02E2  00F1               	movwf	??_Lcd_Write_Char
  2515     02E3                     u1217:
  2516     02E3  0BF1               	decfsz	??_Lcd_Write_Char,f
  2517     02E4  2AE3               	goto	u1217
  2518     02E5  0000               	nop
  2519     02E6                     l1438:
  2520                           
  2521                           ;LCD.c: 95:     RD3 = 0;
  2522     02E6  1283               	bcf	3,5	;RP0=0, select bank0
  2523     02E7  1303               	bcf	3,6	;RP1=0, select bank0
  2524     02E8  1188               	bcf	8,3	;volatile
  2525     02E9                     l98:
  2526     02E9  0008               	return
  2527     02EA                     __end_of_Lcd_Write_Char:
  2528                           
  2529                           	psect	text8
  2530     03AA                     __ptext8:	
  2531 ;; *************** function _Lcd_Set_Cursor *****************
  2532 ;; Defined at:
  2533 ;;		line 48 in file "LCD.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;  a               1    wreg     unsigned char 
  2536 ;;  b               1    4[COMMON] unsigned char 
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;  a               1    6[COMMON] unsigned char 
  2539 ;;  temp            1    9[COMMON] unsigned char 
  2540 ;;  y               1    8[COMMON] unsigned char 
  2541 ;;  z               1    7[COMMON] unsigned char 
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  1    wreg      void 
  2544 ;; Registers used:
  2545 ;;		wreg, status,2, status,0, pclath, cstack
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2551 ;;      Params:         1       0       0       0       0
  2552 ;;      Locals:         4       0       0       0       0
  2553 ;;      Temps:          1       0       0       0       0
  2554 ;;      Totals:         6       0       0       0       0
  2555 ;;Total ram usage:        6 bytes
  2556 ;; Hardware stack levels used: 1
  2557 ;; Hardware stack levels required when called: 2
  2558 ;; This function calls:
  2559 ;;		_Lcd_Cmd
  2560 ;; This function is called by:
  2561 ;;		_main
  2562 ;; This function uses a non-reentrant model
  2563 ;;
  2564                           
  2565     03AA                     _Lcd_Set_Cursor:	
  2566                           ;psect for function _Lcd_Set_Cursor
  2567                           
  2568                           
  2569                           ;incstack = 0
  2570                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2571                           ;Lcd_Set_Cursor@a stored from wreg
  2572     03AA  00F6               	movwf	Lcd_Set_Cursor@a
  2573     03AB                     l1548:
  2574                           
  2575                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2576     03AB  0376               	decf	Lcd_Set_Cursor@a,w
  2577     03AC  1D03               	btfss	3,2
  2578     03AD  2BAF               	goto	u901
  2579     03AE  2BB0               	goto	u900
  2580     03AF                     u901:
  2581     03AF  2BCD               	goto	l1558
  2582     03B0                     u900:
  2583     03B0                     l1550:
  2584                           
  2585                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2586     03B0  0874               	movf	Lcd_Set_Cursor@b,w
  2587     03B1  3E7F               	addlw	127
  2588     03B2  00F9               	movwf	Lcd_Set_Cursor@temp
  2589                           
  2590                           ;LCD.c: 52:         z = temp >> 4;
  2591     03B3  0879               	movf	Lcd_Set_Cursor@temp,w
  2592     03B4  00F5               	movwf	??_Lcd_Set_Cursor
  2593     03B5  3004               	movlw	4
  2594     03B6                     u915:
  2595     03B6  1003               	clrc
  2596     03B7  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2597     03B8  3EFF               	addlw	-1
  2598     03B9  1D03               	skipz
  2599     03BA  2BB6               	goto	u915
  2600     03BB  0875               	movf	??_Lcd_Set_Cursor,w
  2601     03BC  00F7               	movwf	Lcd_Set_Cursor@z
  2602     03BD                     l1552:
  2603                           
  2604                           ;LCD.c: 53:         y = temp & 0x0F;
  2605     03BD  0879               	movf	Lcd_Set_Cursor@temp,w
  2606     03BE  390F               	andlw	15
  2607     03BF  00F8               	movwf	Lcd_Set_Cursor@y
  2608     03C0                     l1554:
  2609                           
  2610                           ;LCD.c: 54:         Lcd_Cmd(z);
  2611     03C0  0877               	movf	Lcd_Set_Cursor@z,w
  2612     03C1  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2613     03C6                     l1556:
  2614                           
  2615                           ;LCD.c: 55:         Lcd_Cmd(y);
  2616     03C6  0878               	movf	Lcd_Set_Cursor@y,w
  2617     03C7  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2618                           
  2619                           ;LCD.c: 56:     } else if (a == 2) {
  2620     03CC  2BEF               	goto	l92
  2621     03CD                     l1558:
  2622     03CD  3002               	movlw	2
  2623     03CE  0676               	xorwf	Lcd_Set_Cursor@a,w
  2624     03CF  1D03               	btfss	3,2
  2625     03D0  2BD2               	goto	u921
  2626     03D1  2BD3               	goto	u920
  2627     03D2                     u921:
  2628     03D2  2BEF               	goto	l92
  2629     03D3                     u920:
  2630     03D3                     l1560:
  2631                           
  2632                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2633     03D3  0874               	movf	Lcd_Set_Cursor@b,w
  2634     03D4  3EBF               	addlw	191
  2635     03D5  00F9               	movwf	Lcd_Set_Cursor@temp
  2636                           
  2637                           ;LCD.c: 58:         z = temp >> 4;
  2638     03D6  0879               	movf	Lcd_Set_Cursor@temp,w
  2639     03D7  00F5               	movwf	??_Lcd_Set_Cursor
  2640     03D8  3004               	movlw	4
  2641     03D9                     u935:
  2642     03D9  1003               	clrc
  2643     03DA  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2644     03DB  3EFF               	addlw	-1
  2645     03DC  1D03               	skipz
  2646     03DD  2BD9               	goto	u935
  2647     03DE  0875               	movf	??_Lcd_Set_Cursor,w
  2648     03DF  00F7               	movwf	Lcd_Set_Cursor@z
  2649     03E0                     l1562:
  2650                           
  2651                           ;LCD.c: 59:         y = temp & 0x0F;
  2652     03E0  0879               	movf	Lcd_Set_Cursor@temp,w
  2653     03E1  390F               	andlw	15
  2654     03E2  00F8               	movwf	Lcd_Set_Cursor@y
  2655     03E3                     l1564:
  2656                           
  2657                           ;LCD.c: 60:         Lcd_Cmd(z);
  2658     03E3  0877               	movf	Lcd_Set_Cursor@z,w
  2659     03E4  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2660     03E9                     l1566:
  2661                           
  2662                           ;LCD.c: 61:         Lcd_Cmd(y);
  2663     03E9  0878               	movf	Lcd_Set_Cursor@y,w
  2664     03EA  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2665     03EF                     l92:
  2666     03EF  0008               	return
  2667     03F0                     __end_of_Lcd_Set_Cursor:
  2668                           
  2669                           	psect	text9
  2670     03F0                     __ptext9:	
  2671 ;; *************** function _Lcd_Init *****************
  2672 ;; Defined at:
  2673 ;;		line 65 in file "LCD.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;		None
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;		None
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  1    wreg      void 
  2680 ;; Registers used:
  2681 ;;		wreg, status,2, status,0, pclath, cstack
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2687 ;;      Params:         0       0       0       0       0
  2688 ;;      Locals:         0       0       0       0       0
  2689 ;;      Temps:          2       0       0       0       0
  2690 ;;      Totals:         2       0       0       0       0
  2691 ;;Total ram usage:        2 bytes
  2692 ;; Hardware stack levels used: 1
  2693 ;; Hardware stack levels required when called: 2
  2694 ;; This function calls:
  2695 ;;		_Lcd_Cmd
  2696 ;;		_Lcd_Port
  2697 ;; This function is called by:
  2698 ;;		_main
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702     03F0                     _Lcd_Init:	
  2703                           ;psect for function _Lcd_Init
  2704                           
  2705     03F0                     l1568:	
  2706                           ;incstack = 0
  2707                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2708                           
  2709                           
  2710                           ;LCD.c: 66:     Lcd_Port(0x00);
  2711     03F0  3000               	movlw	0
  2712     03F1  120A  118A  2234  120A  118A  	fcall	_Lcd_Port
  2713     03F6                     l1570:
  2714                           
  2715                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2716     03F6  3034               	movlw	52
  2717     03F7  00F5               	movwf	??_Lcd_Init+1
  2718     03F8  30F1               	movlw	241
  2719     03F9  00F4               	movwf	??_Lcd_Init
  2720     03FA                     u1227:
  2721     03FA  0BF4               	decfsz	??_Lcd_Init,f
  2722     03FB  2BFA               	goto	u1227
  2723     03FC  0BF5               	decfsz	??_Lcd_Init+1,f
  2724     03FD  2BFA               	goto	u1227
  2725     03FE  2BFF               	nop2
  2726     03FF                     l1572:
  2727                           
  2728                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2729     03FF  3003               	movlw	3
  2730     0400  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2731                           
  2732                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2733     0405  300D               	movlw	13
  2734     0406  00F5               	movwf	??_Lcd_Init+1
  2735     0407  30FB               	movlw	251
  2736     0408  00F4               	movwf	??_Lcd_Init
  2737     0409                     u1237:
  2738     0409  0BF4               	decfsz	??_Lcd_Init,f
  2739     040A  2C09               	goto	u1237
  2740     040B  0BF5               	decfsz	??_Lcd_Init+1,f
  2741     040C  2C09               	goto	u1237
  2742     040D  2C0E               	nop2
  2743     040E                     l1574:
  2744                           
  2745                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2746     040E  3003               	movlw	3
  2747     040F  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2748     0414                     l1576:
  2749                           
  2750                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2751     0414  301D               	movlw	29
  2752     0415  00F5               	movwf	??_Lcd_Init+1
  2753     0416  3091               	movlw	145
  2754     0417  00F4               	movwf	??_Lcd_Init
  2755     0418                     u1247:
  2756     0418  0BF4               	decfsz	??_Lcd_Init,f
  2757     0419  2C18               	goto	u1247
  2758     041A  0BF5               	decfsz	??_Lcd_Init+1,f
  2759     041B  2C18               	goto	u1247
  2760                           
  2761                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2762     041C  3003               	movlw	3
  2763     041D  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2764                           
  2765                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2766     0422  3002               	movlw	2
  2767     0423  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2768                           
  2769                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  2770     0428  3002               	movlw	2
  2771     0429  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2772                           
  2773                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  2774     042E  3008               	movlw	8
  2775     042F  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2776                           
  2777                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  2778     0434  3000               	movlw	0
  2779     0435  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2780                           
  2781                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  2782     043A  300C               	movlw	12
  2783     043B  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2784                           
  2785                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  2786     0440  3000               	movlw	0
  2787     0441  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2788                           
  2789                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  2790     0446  3006               	movlw	6
  2791     0447  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2792     044C                     l95:
  2793     044C  0008               	return
  2794     044D                     __end_of_Lcd_Init:
  2795                           
  2796                           	psect	text10
  2797     01F3                     __ptext10:	
  2798 ;; *************** function _Lcd_Clear *****************
  2799 ;; Defined at:
  2800 ;;		line 43 in file "LCD.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;		None
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;		None
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  1    wreg      void 
  2807 ;; Registers used:
  2808 ;;		wreg, status,2, status,0, pclath, cstack
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2814 ;;      Params:         0       0       0       0       0
  2815 ;;      Locals:         0       0       0       0       0
  2816 ;;      Temps:          0       0       0       0       0
  2817 ;;      Totals:         0       0       0       0       0
  2818 ;;Total ram usage:        0 bytes
  2819 ;; Hardware stack levels used: 1
  2820 ;; Hardware stack levels required when called: 2
  2821 ;; This function calls:
  2822 ;;		_Lcd_Cmd
  2823 ;; This function is called by:
  2824 ;;		_main
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828     01F3                     _Lcd_Clear:	
  2829                           ;psect for function _Lcd_Clear
  2830                           
  2831     01F3                     l1546:	
  2832                           ;incstack = 0
  2833                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2834                           
  2835                           
  2836                           ;LCD.c: 44:     Lcd_Cmd(0);
  2837     01F3  3000               	movlw	0
  2838     01F4  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2839                           
  2840                           ;LCD.c: 45:     Lcd_Cmd(1);
  2841     01F9  3001               	movlw	1
  2842     01FA  120A  118A  2200  120A  118A  	fcall	_Lcd_Cmd
  2843     01FF                     l86:
  2844     01FF  0008               	return
  2845     0200                     __end_of_Lcd_Clear:
  2846                           
  2847                           	psect	text11
  2848     0200                     __ptext11:	
  2849 ;; *************** function _Lcd_Cmd *****************
  2850 ;; Defined at:
  2851 ;;		line 35 in file "LCD.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;  a               1    wreg     unsigned char 
  2854 ;; Auto vars:     Size  Location     Type
  2855 ;;  a               1    3[COMMON] unsigned char 
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  1    wreg      void 
  2858 ;; Registers used:
  2859 ;;		wreg, status,2, status,0, pclath, cstack
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2865 ;;      Params:         0       0       0       0       0
  2866 ;;      Locals:         1       0       0       0       0
  2867 ;;      Temps:          2       0       0       0       0
  2868 ;;      Totals:         3       0       0       0       0
  2869 ;;Total ram usage:        3 bytes
  2870 ;; Hardware stack levels used: 1
  2871 ;; Hardware stack levels required when called: 1
  2872 ;; This function calls:
  2873 ;;		_Lcd_Port
  2874 ;; This function is called by:
  2875 ;;		_Lcd_Clear
  2876 ;;		_Lcd_Set_Cursor
  2877 ;;		_Lcd_Init
  2878 ;;		_Lcd_Shift_Right
  2879 ;;		_Lcd_Shift_Left
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883     0200                     _Lcd_Cmd:	
  2884                           ;psect for function _Lcd_Cmd
  2885                           
  2886                           
  2887                           ;incstack = 0
  2888                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2889                           ;Lcd_Cmd@a stored from wreg
  2890     0200  00F3               	movwf	Lcd_Cmd@a
  2891     0201                     l1410:
  2892                           
  2893                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  2894     0201  1283               	bcf	3,5	;RP0=0, select bank0
  2895     0202  1303               	bcf	3,6	;RP1=0, select bank0
  2896     0203  1108               	bcf	8,2	;volatile
  2897     0204                     l1412:
  2898                           
  2899                           ;LCD.c: 37:     Lcd_Port(a);
  2900     0204  0873               	movf	Lcd_Cmd@a,w
  2901     0205  120A  118A  2234  120A  118A  	fcall	_Lcd_Port
  2902     020A                     l1414:
  2903                           
  2904                           ;LCD.c: 38:     RD3 = 1;
  2905     020A  1283               	bcf	3,5	;RP0=0, select bank0
  2906     020B  1303               	bcf	3,6	;RP1=0, select bank0
  2907     020C  1588               	bsf	8,3	;volatile
  2908     020D                     l1416:
  2909                           
  2910                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2911     020D  300B               	movlw	11
  2912     020E  00F2               	movwf	??_Lcd_Cmd+1
  2913     020F  3062               	movlw	98
  2914     0210  00F1               	movwf	??_Lcd_Cmd
  2915     0211                     u1257:
  2916     0211  0BF1               	decfsz	??_Lcd_Cmd,f
  2917     0212  2A11               	goto	u1257
  2918     0213  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2919     0214  2A11               	goto	u1257
  2920     0215  0000               	nop
  2921     0216                     l1418:
  2922                           
  2923                           ;LCD.c: 40:     RD3 = 0;
  2924     0216  1283               	bcf	3,5	;RP0=0, select bank0
  2925     0217  1303               	bcf	3,6	;RP1=0, select bank0
  2926     0218  1188               	bcf	8,3	;volatile
  2927     0219                     l83:
  2928     0219  0008               	return
  2929     021A                     __end_of_Lcd_Cmd:
  2930                           
  2931                           	psect	text12
  2932     0234                     __ptext12:	
  2933 ;; *************** function _Lcd_Port *****************
  2934 ;; Defined at:
  2935 ;;		line 13 in file "LCD.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;  a               1    wreg     unsigned char 
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;  a               1    0[COMMON] unsigned char 
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  1    wreg      void 
  2942 ;; Registers used:
  2943 ;;		wreg
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2949 ;;      Params:         0       0       0       0       0
  2950 ;;      Locals:         1       0       0       0       0
  2951 ;;      Temps:          0       0       0       0       0
  2952 ;;      Totals:         1       0       0       0       0
  2953 ;;Total ram usage:        1 bytes
  2954 ;; Hardware stack levels used: 1
  2955 ;; This function calls:
  2956 ;;		Nothing
  2957 ;; This function is called by:
  2958 ;;		_Lcd_Cmd
  2959 ;;		_Lcd_Init
  2960 ;;		_Lcd_Write_Char
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964     0234                     _Lcd_Port:	
  2965                           ;psect for function _Lcd_Port
  2966                           
  2967                           
  2968                           ;incstack = 0
  2969                           ; Regs used in _Lcd_Port: [wreg]
  2970                           ;Lcd_Port@a stored from wreg
  2971     0234  00F0               	movwf	Lcd_Port@a
  2972     0235                     l1396:
  2973                           
  2974                           ;LCD.c: 14:     if (a & 1)
  2975     0235  1C70               	btfss	Lcd_Port@a,0
  2976     0236  2A38               	goto	u621
  2977     0237  2A39               	goto	u620
  2978     0238                     u621:
  2979     0238  2A3D               	goto	l72
  2980     0239                     u620:
  2981     0239                     l1398:
  2982                           
  2983                           ;LCD.c: 15:         RD4 = 1;
  2984     0239  1283               	bcf	3,5	;RP0=0, select bank0
  2985     023A  1303               	bcf	3,6	;RP1=0, select bank0
  2986     023B  1608               	bsf	8,4	;volatile
  2987     023C  2A40               	goto	l73
  2988     023D                     l72:	
  2989                           ;LCD.c: 16:     else
  2990                           
  2991                           
  2992                           ;LCD.c: 17:         RD4 = 0;
  2993     023D  1283               	bcf	3,5	;RP0=0, select bank0
  2994     023E  1303               	bcf	3,6	;RP1=0, select bank0
  2995     023F  1208               	bcf	8,4	;volatile
  2996     0240                     l73:
  2997                           
  2998                           ;LCD.c: 19:     if (a & 2)
  2999     0240  1CF0               	btfss	Lcd_Port@a,1
  3000     0241  2A43               	goto	u631
  3001     0242  2A44               	goto	u630
  3002     0243                     u631:
  3003     0243  2A46               	goto	l74
  3004     0244                     u630:
  3005     0244                     l1400:
  3006                           
  3007                           ;LCD.c: 20:         RD5 = 1;
  3008     0244  1688               	bsf	8,5	;volatile
  3009     0245  2A47               	goto	l75
  3010     0246                     l74:	
  3011                           ;LCD.c: 21:     else
  3012                           
  3013                           
  3014                           ;LCD.c: 22:         RD5 = 0;
  3015     0246  1288               	bcf	8,5	;volatile
  3016     0247                     l75:
  3017                           
  3018                           ;LCD.c: 24:     if (a & 4)
  3019     0247  1D70               	btfss	Lcd_Port@a,2
  3020     0248  2A4A               	goto	u641
  3021     0249  2A4B               	goto	u640
  3022     024A                     u641:
  3023     024A  2A4D               	goto	l76
  3024     024B                     u640:
  3025     024B                     l1402:
  3026                           
  3027                           ;LCD.c: 25:         RD6 = 1;
  3028     024B  1708               	bsf	8,6	;volatile
  3029     024C  2A4E               	goto	l77
  3030     024D                     l76:	
  3031                           ;LCD.c: 26:     else
  3032                           
  3033                           
  3034                           ;LCD.c: 27:         RD6 = 0;
  3035     024D  1308               	bcf	8,6	;volatile
  3036     024E                     l77:
  3037                           
  3038                           ;LCD.c: 29:     if (a & 8)
  3039     024E  1DF0               	btfss	Lcd_Port@a,3
  3040     024F  2A51               	goto	u651
  3041     0250  2A52               	goto	u650
  3042     0251                     u651:
  3043     0251  2A54               	goto	l78
  3044     0252                     u650:
  3045     0252                     l1404:
  3046                           
  3047                           ;LCD.c: 30:         RD7 = 1;
  3048     0252  1788               	bsf	8,7	;volatile
  3049     0253  2A55               	goto	l80
  3050     0254                     l78:	
  3051                           ;LCD.c: 31:     else
  3052                           
  3053                           
  3054                           ;LCD.c: 32:         RD7 = 0;
  3055     0254  1388               	bcf	8,7	;volatile
  3056     0255                     l80:
  3057     0255  0008               	return
  3058     0256                     __end_of_Lcd_Port:
  3059                           
  3060                           	psect	text13
  3061     01DC                     __ptext13:	
  3062 ;; *************** function _I2C_Master_Write *****************
  3063 ;; Defined at:
  3064 ;;		line 65 in file "I2C.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;  d               2    0[COMMON] unsigned int 
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;		None
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  1    wreg      void 
  3071 ;; Registers used:
  3072 ;;		wreg, status,2, status,0, pclath, cstack
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3078 ;;      Params:         2       0       0       0       0
  3079 ;;      Locals:         0       0       0       0       0
  3080 ;;      Temps:          0       0       0       0       0
  3081 ;;      Totals:         2       0       0       0       0
  3082 ;;Total ram usage:        2 bytes
  3083 ;; Hardware stack levels used: 1
  3084 ;; Hardware stack levels required when called: 1
  3085 ;; This function calls:
  3086 ;;		_I2C_Master_Wait
  3087 ;; This function is called by:
  3088 ;;		_main
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           
  3092     01DC                     _I2C_Master_Write:	
  3093                           ;psect for function _I2C_Master_Write
  3094                           
  3095     01DC                     l1526:	
  3096                           ;incstack = 0
  3097                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3098                           
  3099                           
  3100                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3101     01DC  120A  118A  21E6  120A  118A  	fcall	_I2C_Master_Wait
  3102     01E1                     l1528:
  3103                           
  3104                           ;I2C.c: 68:     SSPBUF = d;
  3105     01E1  0870               	movf	I2C_Master_Write@d,w
  3106     01E2  1283               	bcf	3,5	;RP0=0, select bank0
  3107     01E3  1303               	bcf	3,6	;RP1=0, select bank0
  3108     01E4  0093               	movwf	19	;volatile
  3109     01E5                     l47:
  3110     01E5  0008               	return
  3111     01E6                     __end_of_I2C_Master_Write:
  3112                           
  3113                           	psect	text14
  3114     01D3                     __ptext14:	
  3115 ;; *************** function _I2C_Master_Stop *****************
  3116 ;; Defined at:
  3117 ;;		line 55 in file "I2C.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;		None
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;		None
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  1    wreg      void 
  3124 ;; Registers used:
  3125 ;;		wreg, status,2, status,0, pclath, cstack
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3131 ;;      Params:         0       0       0       0       0
  3132 ;;      Locals:         0       0       0       0       0
  3133 ;;      Temps:          0       0       0       0       0
  3134 ;;      Totals:         0       0       0       0       0
  3135 ;;Total ram usage:        0 bytes
  3136 ;; Hardware stack levels used: 1
  3137 ;; Hardware stack levels required when called: 1
  3138 ;; This function calls:
  3139 ;;		_I2C_Master_Wait
  3140 ;; This function is called by:
  3141 ;;		_main
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145     01D3                     _I2C_Master_Stop:	
  3146                           ;psect for function _I2C_Master_Stop
  3147                           
  3148     01D3                     l1522:	
  3149                           ;incstack = 0
  3150                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3151                           
  3152                           
  3153                           ;I2C.c: 57:     I2C_Master_Wait();
  3154     01D3  120A  118A  21E6  120A  118A  	fcall	_I2C_Master_Wait
  3155     01D8                     l1524:
  3156                           
  3157                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3158     01D8  1683               	bsf	3,5	;RP0=1, select bank1
  3159     01D9  1303               	bcf	3,6	;RP1=0, select bank1
  3160     01DA  1511               	bsf	17,2	;volatile
  3161     01DB                     l44:
  3162     01DB  0008               	return
  3163     01DC                     __end_of_I2C_Master_Stop:
  3164                           
  3165                           	psect	text15
  3166     01CA                     __ptext15:	
  3167 ;; *************** function _I2C_Master_Start *****************
  3168 ;; Defined at:
  3169 ;;		line 39 in file "I2C.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;		None
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;		None
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      void 
  3176 ;; Registers used:
  3177 ;;		wreg, status,2, status,0, pclath, cstack
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3183 ;;      Params:         0       0       0       0       0
  3184 ;;      Locals:         0       0       0       0       0
  3185 ;;      Temps:          0       0       0       0       0
  3186 ;;      Totals:         0       0       0       0       0
  3187 ;;Total ram usage:        0 bytes
  3188 ;; Hardware stack levels used: 1
  3189 ;; Hardware stack levels required when called: 1
  3190 ;; This function calls:
  3191 ;;		_I2C_Master_Wait
  3192 ;; This function is called by:
  3193 ;;		_main
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197     01CA                     _I2C_Master_Start:	
  3198                           ;psect for function _I2C_Master_Start
  3199                           
  3200     01CA                     l1514:	
  3201                           ;incstack = 0
  3202                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3203                           
  3204                           
  3205                           ;I2C.c: 41:     I2C_Master_Wait();
  3206     01CA  120A  118A  21E6  120A  118A  	fcall	_I2C_Master_Wait
  3207     01CF                     l1516:
  3208                           
  3209                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3210     01CF  1683               	bsf	3,5	;RP0=1, select bank1
  3211     01D0  1303               	bcf	3,6	;RP1=0, select bank1
  3212     01D1  1411               	bsf	17,0	;volatile
  3213     01D2                     l38:
  3214     01D2  0008               	return
  3215     01D3                     __end_of_I2C_Master_Start:
  3216                           
  3217                           	psect	text16
  3218     01C1                     __ptext16:	
  3219 ;; *************** function _I2C_Master_RepeatedStart *****************
  3220 ;; Defined at:
  3221 ;;		line 47 in file "I2C.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;		None
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;		None
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  1    wreg      void 
  3228 ;; Registers used:
  3229 ;;		wreg, status,2, status,0, pclath, cstack
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3235 ;;      Params:         0       0       0       0       0
  3236 ;;      Locals:         0       0       0       0       0
  3237 ;;      Temps:          0       0       0       0       0
  3238 ;;      Totals:         0       0       0       0       0
  3239 ;;Total ram usage:        0 bytes
  3240 ;; Hardware stack levels used: 1
  3241 ;; Hardware stack levels required when called: 1
  3242 ;; This function calls:
  3243 ;;		_I2C_Master_Wait
  3244 ;; This function is called by:
  3245 ;;		_main
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249     01C1                     _I2C_Master_RepeatedStart:	
  3250                           ;psect for function _I2C_Master_RepeatedStart
  3251                           
  3252     01C1                     l1518:	
  3253                           ;incstack = 0
  3254                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3255                           
  3256                           
  3257                           ;I2C.c: 49:     I2C_Master_Wait();
  3258     01C1  120A  118A  21E6  120A  118A  	fcall	_I2C_Master_Wait
  3259     01C6                     l1520:
  3260                           
  3261                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  3262     01C6  1683               	bsf	3,5	;RP0=1, select bank1
  3263     01C7  1303               	bcf	3,6	;RP1=0, select bank1
  3264     01C8  1491               	bsf	17,1	;volatile
  3265     01C9                     l41:
  3266     01C9  0008               	return
  3267     01CA                     __end_of_I2C_Master_RepeatedStart:
  3268                           
  3269                           	psect	text17
  3270     0256                     __ptext17:	
  3271 ;; *************** function _I2C_Master_Read *****************
  3272 ;; Defined at:
  3273 ;;		line 74 in file "I2C.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;  a               2    0[COMMON] unsigned short 
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;  temp            2    4[COMMON] unsigned short 
  3278 ;; Return value:  Size  Location     Type
  3279 ;;                  2    0[COMMON] unsigned short 
  3280 ;; Registers used:
  3281 ;;		wreg, status,2, status,0, pclath, cstack
  3282 ;; Tracked objects:
  3283 ;;		On entry : 0/0
  3284 ;;		On exit  : 0/0
  3285 ;;		Unchanged: 0/0
  3286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3287 ;;      Params:         2       0       0       0       0
  3288 ;;      Locals:         2       0       0       0       0
  3289 ;;      Temps:          2       0       0       0       0
  3290 ;;      Totals:         6       0       0       0       0
  3291 ;;Total ram usage:        6 bytes
  3292 ;; Hardware stack levels used: 1
  3293 ;; Hardware stack levels required when called: 1
  3294 ;; This function calls:
  3295 ;;		_I2C_Master_Wait
  3296 ;; This function is called by:
  3297 ;;		_main
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301     0256                     _I2C_Master_Read:	
  3302                           ;psect for function _I2C_Master_Read
  3303                           
  3304     0256                     l1530:	
  3305                           ;incstack = 0
  3306                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3307                           
  3308                           
  3309                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3310     0256  120A  118A  21E6  120A  118A  	fcall	_I2C_Master_Wait
  3311     025B                     l1532:
  3312                           
  3313                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3314     025B  1683               	bsf	3,5	;RP0=1, select bank1
  3315     025C  1303               	bcf	3,6	;RP1=0, select bank1
  3316     025D  1591               	bsf	17,3	;volatile
  3317                           
  3318                           ;I2C.c: 79:     I2C_Master_Wait();
  3319     025E  120A  118A  21E6  120A  118A  	fcall	_I2C_Master_Wait
  3320     0263                     l1534:
  3321                           
  3322                           ;I2C.c: 80:     temp = SSPBUF;
  3323     0263  1283               	bcf	3,5	;RP0=0, select bank0
  3324     0264  1303               	bcf	3,6	;RP1=0, select bank0
  3325     0265  0813               	movf	19,w	;volatile
  3326     0266  00F2               	movwf	??_I2C_Master_Read
  3327     0267  01F3               	clrf	??_I2C_Master_Read+1
  3328     0268  0872               	movf	??_I2C_Master_Read,w
  3329     0269  00F4               	movwf	I2C_Master_Read@temp
  3330     026A  0873               	movf	??_I2C_Master_Read+1,w
  3331     026B  00F5               	movwf	I2C_Master_Read@temp+1
  3332     026C                     l1536:
  3333                           
  3334                           ;I2C.c: 81:     I2C_Master_Wait();
  3335     026C  120A  118A  21E6  120A  118A  	fcall	_I2C_Master_Wait
  3336     0271                     l1538:
  3337                           
  3338                           ;I2C.c: 82:     if(a == 1){
  3339     0271  0370               	decf	I2C_Master_Read@a,w
  3340     0272  0471               	iorwf	I2C_Master_Read@a+1,w
  3341     0273  1D03               	btfss	3,2
  3342     0274  2A76               	goto	u891
  3343     0275  2A77               	goto	u890
  3344     0276                     u891:
  3345     0276  2A7B               	goto	l50
  3346     0277                     u890:
  3347     0277                     l1540:
  3348                           
  3349                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3350     0277  1683               	bsf	3,5	;RP0=1, select bank1
  3351     0278  1303               	bcf	3,6	;RP1=0, select bank1
  3352     0279  1291               	bcf	17,5	;volatile
  3353                           
  3354                           ;I2C.c: 84:     }else{
  3355     027A  2A7E               	goto	l51
  3356     027B                     l50:
  3357                           
  3358                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3359     027B  1683               	bsf	3,5	;RP0=1, select bank1
  3360     027C  1303               	bcf	3,6	;RP1=0, select bank1
  3361     027D  1691               	bsf	17,5	;volatile
  3362     027E                     l51:	
  3363                           ;I2C.c: 86:     }
  3364                           
  3365                           
  3366                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3367     027E  1611               	bsf	17,4	;volatile
  3368     027F                     l1542:
  3369                           
  3370                           ;I2C.c: 88:     return temp;
  3371     027F  0875               	movf	I2C_Master_Read@temp+1,w
  3372     0280  00F1               	movwf	?_I2C_Master_Read+1
  3373     0281  0874               	movf	I2C_Master_Read@temp,w
  3374     0282  00F0               	movwf	?_I2C_Master_Read
  3375     0283                     l52:
  3376     0283  0008               	return
  3377     0284                     __end_of_I2C_Master_Read:
  3378                           
  3379                           	psect	text18
  3380     01E6                     __ptext18:	
  3381 ;; *************** function _I2C_Master_Wait *****************
  3382 ;; Defined at:
  3383 ;;		line 32 in file "I2C.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;		None
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;		None
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  1    wreg      void 
  3390 ;; Registers used:
  3391 ;;		wreg, status,2
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3397 ;;      Params:         0       0       0       0       0
  3398 ;;      Locals:         0       0       0       0       0
  3399 ;;      Temps:          0       0       0       0       0
  3400 ;;      Totals:         0       0       0       0       0
  3401 ;;Total ram usage:        0 bytes
  3402 ;; Hardware stack levels used: 1
  3403 ;; This function calls:
  3404 ;;		Nothing
  3405 ;; This function is called by:
  3406 ;;		_I2C_Master_Start
  3407 ;;		_I2C_Master_RepeatedStart
  3408 ;;		_I2C_Master_Stop
  3409 ;;		_I2C_Master_Write
  3410 ;;		_I2C_Master_Read
  3411 ;; This function uses a non-reentrant model
  3412 ;;
  3413                           
  3414     01E6                     _I2C_Master_Wait:	
  3415                           ;psect for function _I2C_Master_Wait
  3416                           
  3417     01E6                     l1406:	
  3418                           ;incstack = 0
  3419                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3420                           
  3421     01E6                     l32:	
  3422                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3423                           
  3424     01E6  1683               	bsf	3,5	;RP0=1, select bank1
  3425     01E7  1303               	bcf	3,6	;RP1=0, select bank1
  3426     01E8  1914               	btfsc	20,2	;volatile
  3427     01E9  29EB               	goto	u661
  3428     01EA  29EC               	goto	u660
  3429     01EB                     u661:
  3430     01EB  29E6               	goto	l32
  3431     01EC                     u660:
  3432     01EC                     l1408:
  3433     01EC  0811               	movf	17,w	;volatile
  3434     01ED  391F               	andlw	31
  3435     01EE  1D03               	btfss	3,2
  3436     01EF  29F1               	goto	u671
  3437     01F0  29F2               	goto	u670
  3438     01F1                     u671:
  3439     01F1  29E6               	goto	l32
  3440     01F2                     u670:
  3441     01F2                     l35:
  3442     01F2  0008               	return
  3443     01F3                     __end_of_I2C_Master_Wait:
  3444                           
  3445                           	psect	text19
  3446     0284                     __ptext19:	
  3447 ;; *************** function _I2C_Init *****************
  3448 ;; Defined at:
  3449 ;;		line 62 in file "pruebaADXL345.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  i2c_clk_freq    4    0[BANK0 ] unsigned long 
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;		None
  3454 ;; Return value:  Size  Location     Type
  3455 ;;                  1    wreg      void 
  3456 ;; Registers used:
  3457 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3463 ;;      Params:         0       4       0       0       0
  3464 ;;      Locals:         0       0       0       0       0
  3465 ;;      Temps:          0       4       0       0       0
  3466 ;;      Totals:         0       8       0       0       0
  3467 ;;Total ram usage:        8 bytes
  3468 ;; Hardware stack levels used: 1
  3469 ;; Hardware stack levels required when called: 1
  3470 ;; This function calls:
  3471 ;;		___lldiv
  3472 ;; This function is called by:
  3473 ;;		_main
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477     0284                     _I2C_Init:	
  3478                           ;psect for function _I2C_Init
  3479                           
  3480     0284                     l1586:	
  3481                           ;incstack = 0
  3482                           ; Regs used in _I2C_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3483                           
  3484                           
  3485                           ;pruebaADXL345.c: 62: void I2C_Init(uint32_t i2c_clk_freq);pruebaADXL345.c: 64: {;prueba
      +                          ADXL345.c: 65:   SSPCON = 0x28;
  3486     0284  3028               	movlw	40
  3487     0285  1283               	bcf	3,5	;RP0=0, select bank0
  3488     0286  1303               	bcf	3,6	;RP1=0, select bank0
  3489     0287  0094               	movwf	20	;volatile
  3490     0288                     l1588:
  3491                           
  3492                           ;pruebaADXL345.c: 66:   SSPADD = (8000000/(4 * i2c_clk_freq)) - 1;
  3493     0288  0853               	movf	I2C_Init@i2c_clk_freq,w
  3494     0289  00D7               	movwf	??_I2C_Init
  3495     028A  0854               	movf	I2C_Init@i2c_clk_freq+1,w
  3496     028B  00D8               	movwf	??_I2C_Init+1
  3497     028C  0855               	movf	I2C_Init@i2c_clk_freq+2,w
  3498     028D  00D9               	movwf	??_I2C_Init+2
  3499     028E  0856               	movf	I2C_Init@i2c_clk_freq+3,w
  3500     028F  00DA               	movwf	??_I2C_Init+3
  3501     0290  3002               	movlw	2
  3502     0291                     u975:
  3503     0291  1003               	clrc
  3504     0292  0DD7               	rlf	??_I2C_Init,f
  3505     0293  0DD8               	rlf	??_I2C_Init+1,f
  3506     0294  0DD9               	rlf	??_I2C_Init+2,f
  3507     0295  0DDA               	rlf	??_I2C_Init+3,f
  3508     0296                     u970:
  3509     0296  3EFF               	addlw	-1
  3510     0297  1D03               	skipz
  3511     0298  2A91               	goto	u975
  3512     0299  085A               	movf	??_I2C_Init+3,w
  3513     029A  00F3               	movwf	___lldiv@divisor+3
  3514     029B  0859               	movf	??_I2C_Init+2,w
  3515     029C  00F2               	movwf	___lldiv@divisor+2
  3516     029D  0858               	movf	??_I2C_Init+1,w
  3517     029E  00F1               	movwf	___lldiv@divisor+1
  3518     029F  0857               	movf	??_I2C_Init,w
  3519     02A0  00F0               	movwf	___lldiv@divisor
  3520     02A1  3000               	movlw	0
  3521     02A2  00F7               	movwf	___lldiv@dividend+3
  3522     02A3  307A               	movlw	122
  3523     02A4  00F6               	movwf	___lldiv@dividend+2
  3524     02A5  3012               	movlw	18
  3525     02A6  00F5               	movwf	___lldiv@dividend+1
  3526     02A7  3000               	movlw	0
  3527     02A8  00F4               	movwf	___lldiv@dividend
  3528     02A9  120A  118A  244D  120A  118A  	fcall	___lldiv
  3529     02AE  0870               	movf	?___lldiv,w
  3530     02AF  3EFF               	addlw	255
  3531     02B0  1683               	bsf	3,5	;RP0=1, select bank1
  3532     02B1  1303               	bcf	3,6	;RP1=0, select bank1
  3533     02B2  0093               	movwf	19	;volatile
  3534     02B3                     l1590:
  3535                           
  3536                           ;pruebaADXL345.c: 67:   SSPSTAT = 0;
  3537     02B3  0194               	clrf	20	;volatile
  3538     02B4                     l252:
  3539     02B4  0008               	return
  3540     02B5                     __end_of_I2C_Init:
  3541                           
  3542                           	psect	text20
  3543     044D                     __ptext20:	
  3544 ;; *************** function ___lldiv *****************
  3545 ;; Defined at:
  3546 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;  divisor         4    0[COMMON] unsigned long 
  3549 ;;  dividend        4    4[COMMON] unsigned long 
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;  quotient        4    9[COMMON] unsigned long 
  3552 ;;  counter         1   13[COMMON] unsigned char 
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  4    0[COMMON] unsigned long 
  3555 ;; Registers used:
  3556 ;;		wreg, status,2, status,0, btemp+1
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3562 ;;      Params:         8       0       0       0       0
  3563 ;;      Locals:         5       0       0       0       0
  3564 ;;      Temps:          1       0       0       0       0
  3565 ;;      Totals:        14       0       0       0       0
  3566 ;;Total ram usage:       14 bytes
  3567 ;; Hardware stack levels used: 1
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		_I2C_Init
  3572 ;;		_I2C_Master_Init
  3573 ;;		_UART_Init
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577     044D                     ___lldiv:	
  3578                           ;psect for function ___lldiv
  3579                           
  3580     044D                     l1440:	
  3581                           ;incstack = 0
  3582                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  3583                           
  3584     044D  3000               	movlw	0
  3585     044E  00FC               	movwf	___lldiv@quotient+3
  3586     044F  3000               	movlw	0
  3587     0450  00FB               	movwf	___lldiv@quotient+2
  3588     0451  3000               	movlw	0
  3589     0452  00FA               	movwf	___lldiv@quotient+1
  3590     0453  3000               	movlw	0
  3591     0454  00F9               	movwf	___lldiv@quotient
  3592     0455  0873               	movf	___lldiv@divisor+3,w
  3593     0456  0472               	iorwf	___lldiv@divisor+2,w
  3594     0457  0471               	iorwf	___lldiv@divisor+1,w
  3595     0458  0470               	iorwf	___lldiv@divisor,w
  3596     0459  1903               	skipnz
  3597     045A  2C5C               	goto	u691
  3598     045B  2C5D               	goto	u690
  3599     045C                     u691:
  3600     045C  2CAA               	goto	l1462
  3601     045D                     u690:
  3602     045D                     l1442:
  3603     045D  01FD               	clrf	___lldiv@counter
  3604     045E  0AFD               	incf	___lldiv@counter,f
  3605     045F  2C6D               	goto	l1448
  3606     0460                     l1444:
  3607     0460  3001               	movlw	1
  3608     0461  00F8               	movwf	??___lldiv
  3609     0462                     u705:
  3610     0462  1003               	clrc
  3611     0463  0DF0               	rlf	___lldiv@divisor,f
  3612     0464  0DF1               	rlf	___lldiv@divisor+1,f
  3613     0465  0DF2               	rlf	___lldiv@divisor+2,f
  3614     0466  0DF3               	rlf	___lldiv@divisor+3,f
  3615     0467  0BF8               	decfsz	??___lldiv,f
  3616     0468  2C62               	goto	u705
  3617     0469                     l1446:
  3618     0469  3001               	movlw	1
  3619     046A  00FF               	movwf	btemp+1
  3620     046B  087F               	movf	btemp+1,w
  3621     046C  07FD               	addwf	___lldiv@counter,f
  3622     046D                     l1448:
  3623     046D  1FF3               	btfss	___lldiv@divisor+3,7
  3624     046E  2C70               	goto	u711
  3625     046F  2C71               	goto	u710
  3626     0470                     u711:
  3627     0470  2C60               	goto	l1444
  3628     0471                     u710:
  3629     0471                     l1450:
  3630     0471  3001               	movlw	1
  3631     0472  00F8               	movwf	??___lldiv
  3632     0473                     u725:
  3633     0473  1003               	clrc
  3634     0474  0DF9               	rlf	___lldiv@quotient,f
  3635     0475  0DFA               	rlf	___lldiv@quotient+1,f
  3636     0476  0DFB               	rlf	___lldiv@quotient+2,f
  3637     0477  0DFC               	rlf	___lldiv@quotient+3,f
  3638     0478  0BF8               	decfsz	??___lldiv,f
  3639     0479  2C73               	goto	u725
  3640     047A                     l1452:
  3641     047A  0873               	movf	___lldiv@divisor+3,w
  3642     047B  0277               	subwf	___lldiv@dividend+3,w
  3643     047C  1D03               	skipz
  3644     047D  2C88               	goto	u735
  3645     047E  0872               	movf	___lldiv@divisor+2,w
  3646     047F  0276               	subwf	___lldiv@dividend+2,w
  3647     0480  1D03               	skipz
  3648     0481  2C88               	goto	u735
  3649     0482  0871               	movf	___lldiv@divisor+1,w
  3650     0483  0275               	subwf	___lldiv@dividend+1,w
  3651     0484  1D03               	skipz
  3652     0485  2C88               	goto	u735
  3653     0486  0870               	movf	___lldiv@divisor,w
  3654     0487  0274               	subwf	___lldiv@dividend,w
  3655     0488                     u735:
  3656     0488  1C03               	skipc
  3657     0489  2C8B               	goto	u731
  3658     048A  2C8C               	goto	u730
  3659     048B                     u731:
  3660     048B  2C9B               	goto	l1458
  3661     048C                     u730:
  3662     048C                     l1454:
  3663     048C  0870               	movf	___lldiv@divisor,w
  3664     048D  02F4               	subwf	___lldiv@dividend,f
  3665     048E  0871               	movf	___lldiv@divisor+1,w
  3666     048F  1C03               	skipc
  3667     0490  0F71               	incfsz	___lldiv@divisor+1,w
  3668     0491  02F5               	subwf	___lldiv@dividend+1,f
  3669     0492  0872               	movf	___lldiv@divisor+2,w
  3670     0493  1C03               	skipc
  3671     0494  0F72               	incfsz	___lldiv@divisor+2,w
  3672     0495  02F6               	subwf	___lldiv@dividend+2,f
  3673     0496  0873               	movf	___lldiv@divisor+3,w
  3674     0497  1C03               	skipc
  3675     0498  0F73               	incfsz	___lldiv@divisor+3,w
  3676     0499  02F7               	subwf	___lldiv@dividend+3,f
  3677     049A                     l1456:
  3678     049A  1479               	bsf	___lldiv@quotient,0
  3679     049B                     l1458:
  3680     049B  3001               	movlw	1
  3681     049C                     u745:
  3682     049C  1003               	clrc
  3683     049D  0CF3               	rrf	___lldiv@divisor+3,f
  3684     049E  0CF2               	rrf	___lldiv@divisor+2,f
  3685     049F  0CF1               	rrf	___lldiv@divisor+1,f
  3686     04A0  0CF0               	rrf	___lldiv@divisor,f
  3687     04A1  3EFF               	addlw	-1
  3688     04A2  1D03               	skipz
  3689     04A3  2C9C               	goto	u745
  3690     04A4                     l1460:
  3691     04A4  3001               	movlw	1
  3692     04A5  02FD               	subwf	___lldiv@counter,f
  3693     04A6  1D03               	btfss	3,2
  3694     04A7  2CA9               	goto	u751
  3695     04A8  2CAA               	goto	u750
  3696     04A9                     u751:
  3697     04A9  2C71               	goto	l1450
  3698     04AA                     u750:
  3699     04AA                     l1462:
  3700     04AA  087C               	movf	___lldiv@quotient+3,w
  3701     04AB  00F3               	movwf	?___lldiv+3
  3702     04AC  087B               	movf	___lldiv@quotient+2,w
  3703     04AD  00F2               	movwf	?___lldiv+2
  3704     04AE  087A               	movf	___lldiv@quotient+1,w
  3705     04AF  00F1               	movwf	?___lldiv+1
  3706     04B0  0879               	movf	___lldiv@quotient,w
  3707     04B1  00F0               	movwf	?___lldiv
  3708     04B2                     l410:
  3709     04B2  0008               	return
  3710     04B3                     __end_of___lldiv:
  3711     007E                     btemp	set	126	;btemp
  3712     007E                     wtemp0	set	126
  3713                           
  3714                           	psect	idloc
  3715                           
  3716                           ;Config register IDLOC0 @ 0x2000
  3717                           ;	unspecified, using default values
  3718     2000                     	org	8192
  3719     2000  3FFF               	dw	16383
  3720                           
  3721                           ;Config register IDLOC1 @ 0x2001
  3722                           ;	unspecified, using default values
  3723     2001                     	org	8193
  3724     2001  3FFF               	dw	16383
  3725                           
  3726                           ;Config register IDLOC2 @ 0x2002
  3727                           ;	unspecified, using default values
  3728     2002                     	org	8194
  3729     2002  3FFF               	dw	16383
  3730                           
  3731                           ;Config register IDLOC3 @ 0x2003
  3732                           ;	unspecified, using default values
  3733     2003                     	org	8195
  3734     2003  3FFF               	dw	16383
  3735                           
  3736                           	psect	config
  3737                           
  3738                           ;Config register CONFIG1 @ 0x2007
  3739                           ;	Oscillator Selection bits
  3740                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  3741                           ;	Watchdog Timer Enable bit
  3742                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3743                           ;	Power-up Timer Enable bit
  3744                           ;	PWRTE = OFF, PWRT disabled
  3745                           ;	RE3/MCLR pin function select bit
  3746                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3747                           ;	Code Protection bit
  3748                           ;	CP = OFF, Program memory code protection is disabled
  3749                           ;	Data Code Protection bit
  3750                           ;	CPD = OFF, Data memory code protection is disabled
  3751                           ;	Brown Out Reset Selection bits
  3752                           ;	BOREN = OFF, BOR disabled
  3753                           ;	Internal External Switchover bit
  3754                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3755                           ;	Fail-Safe Clock Monitor Enabled bit
  3756                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3757                           ;	Low Voltage Programming Enable bit
  3758                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3759                           ;	In-Circuit Debugger Mode bit
  3760                           ;	DEBUG = 0x1, unprogrammed default
  3761     2007                     	org	8199
  3762     2007  20D5               	dw	8405
  3763                           
  3764                           ;Config register CONFIG2 @ 0x2008
  3765                           ;	Brown-out Reset Selection bit
  3766                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3767                           ;	Flash Program Memory Self Write Enable bits
  3768                           ;	WRT = OFF, Write protection off
  3769     2008                     	org	8200
  3770     2008  3FFF               	dw	16383

Data Sizes:
    Strings     7
    Constant    25
    Data        0
    BSS         71
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     16      67
    BANK1            80      0      20
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> s3(BANK1[20]), s2(BANK0[20]), s(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_4(CODE[4]), s3(BANK1[20]), s2(BANK0[20]), s(BANK0[20]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6418
                                             13 BANK0      3     3      0
                           _I2C_Init
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1339
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     572
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     684
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    1694
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     501
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             8     4      4     868
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     770
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___awdiv
   _setup
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      65       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      43       5       83.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      14       7       25.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      65      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Aug 24 22:10:05 2023

                               _i 002A                                 _s 003F                                 _x 0029  
                               _y 0028                                 _z 0027                                 pc 0002  
                              l32 01E6                                l41 01C9                                l50 027B  
                              l35 01F2                                l51 027E                                l52 0283  
                              l44 01DB                                l38 01D2                                l47 01E5  
                              l80 0255                                l72 023D                                l73 0240  
                              l74 0246                                l75 0247                                l83 0219  
                              l76 024D                                l92 03EF                                l77 024E  
                              l78 0254                                l86 01FF                                l95 044C  
                              l98 02E9                      ___awdiv@sign 0075                                _s2 002B  
                              _s3 00A0                                _x2 0026                                fsr 0004  
                             l104 0365                               l410 04B2                               l252 02B4  
                             l263 0233                               l370 05DA                               l527 0519  
                             l646 03A9                               l656 0323                               _GIE 005F  
                             _RD3 0043                               _RD4 0044                               _RD5 0045  
                             _RD6 0046                               _RD7 0047                               u620 0239  
                             u621 0238                               u710 0471                               u630 0244  
                             u711 0470                               u631 0243                               u640 024B  
                             u800 0391                               u705 0462                               u641 024A  
                             u801 0390                               u730 048C                               u650 0252  
                             u731 048B                               u651 0251                               u660 01EC  
                             u900 03B0                               u820 03A5                               u725 0473  
                             u661 01EB                               u901 03AF                               u821 03A4  
                             u805 038D                               u750 04AA                               u670 01F2  
                             u830 02F0                               u751 04A9                               u735 0488  
                             u671 01F1                               u815 0399                               u831 02EF  
                             u920 03D3                               u760 036E                               u745 049C  
                             u921 03D2                               u761 036D                               u690 045D  
                             u850 0302                               u691 045C                               u915 03B6  
                             u851 0301                               u940 0331                               u780 0380  
                             u860 030C                               u685 02C2                               u781 037F  
                             u861 030B                               u845 02F4                               u950 0353  
                             u935 03D9                               u775 0372                               u960 0365  
                             u880 031F                               u961 0364                               u881 031E  
                             u865 0308                               u970 0296                               u890 0277  
                             u891 0276                               u795 0381                               u875 0313  
                             u980 0526                               u981 0525                               u990 057A  
                             u975 0291                               u991 0579                               u995 0576  
                             fsr0 0004                               indf 0000                              l1400 0244  
                            l1402 024B                              l1410 0201                              l1404 0252  
                            l1412 0204                              l1420 02B6                              l1500 02FE  
                            l1406 01E6                              l1414 020A                              l1430 02D5  
                            l1422 02BC                              l1502 0302                              l1510 031F  
                            l1440 044D                              l1408 01EC                              l1520 01C6  
                            l1416 020D                              l1432 02D8                              l1424 02BF  
                            l1600 0223                              l1504 030C                              l1450 0471  
                            l1442 045D                              l1530 0256                              l1514 01CA  
                            l1522 01D3                              l1418 0216                              l1434 02DE  
                            l1426 02CD                              l1602 022C                              l1506 0312  
                            l1610 051D                              l1460 04A4                              l1452 047A  
                            l1444 0460                              l1540 0277                              l1532 025B  
                            l1516 01CF                              l1524 01D8                              l1436 02E1  
                            l1428 02D0                              l1700 050B                              l1604 022D  
                            l1508 0319                              l1620 0532                              l1612 0520  
                            l1454 048C                              l1446 0469                              l1462 04AA  
                            l1542 027F                              l1534 0263                              l1518 01C1  
                            l1526 01DC                              l1550 03B0                              l1438 02E6  
                            l1702 0510                              l1606 022E                              l1470 036E  
                            l1630 055D                              l1614 0526                              l1456 049A  
                            l1448 046D                              l1536 026C                              l1528 01E1  
                            l1560 03D3                              l1552 03BD                              l1704 0515  
                            l1608 0232                              l1480 0391                              l1472 0371  
                            l1640 057B                              l1624 0537                              l1616 052B  
                            l1800 06D5                              l1458 049B                              l1538 0271  
                            l1546 01F3                              l1570 03F6                              l1562 03E0  
                            l1554 03C0                              l1482 0397                              l1474 0378  
                            l1466 0366                              l1650 05B9                              l1642 057F  
                            l1626 0551                              l1618 0530                              l1810 06FD  
                            l1802 06DA                              l1396 0235                              l1572 03FF  
                            l1564 03E3                              l1556 03C6                              l1548 03AB  
                            l1580 0327                              l1484 0398                              l1476 037C  
                            l1468 0368                              l1492 02EA                              l1652 05BD  
                            l1644 0585                              l1636 055F                              l1628 0559  
                            l1820 0729                              l1812 0706                              l1804 06E3  
                            l1740 05DB                              l1590 02B3                              l1398 0239  
                            l1574 040E                              l1566 03E9                              l1558 03CD  
                            l1582 0343                              l1670 04BD                              l1486 039F  
                            l1478 0380                              l1494 02F0                              l1646 0588  
                            l1654 05C6                              l1830 0756                              l1822 0732  
                            l1814 070F                              l1806 06EC                              l1750 060B  
                            l1742 05E5                              l1576 0414                              l1568 03F0  
                            l1584 0349                              l1680 04CE                              l1672 04BF  
                            l1664 04B3                              l1592 021A                              l1488 03A5  
                            l1496 02F3                              l1648 05B4                              l1656 05D6  
                            l1840 0781                              l1832 075A                              l1824 073E  
                            l1816 071B                              l1808 06F8                              l1760 0630  
                            l1752 0610                              l1744 05F4                              l1586 0284  
                            l1578 0324                              l1690 04E6                              l1682 04D4  
                            l1674 04C3                              l1666 04B4                              l1594 021E  
                            l1498 02FA                              l1850 07CD                              l1842 0792  
                            l1834 075C                              l1826 0743                              l1818 0720  
                            l1770 0655                              l1762 0639                              l1754 0619  
                            l1746 05F9                              l1588 0288                              l1692 04F7  
                            l1684 04D7                              l1676 04C8                              l1668 04B8  
                            l1596 0221                              l1852 07D6                              l1844 07A3  
                            l1836 075E                              l1828 0751                              l1780 067A  
                            l1772 065A                              l1764 063E                              l1756 0622  
                            l1748 0602                              l1694 04FD                              l1686 04DE  
                            l1678 04CC                              l1598 0222                              l1846 07B4  
                            l1838 0772                              l1790 06A6                              l1782 0683  
                            l1774 0663                              l1766 0647                              l1758 0627  
                            l1696 04FE                              l1688 04E2                              l1848 07BC  
                            l1792 06B2                              l1784 068F                              l1776 066C  
                            l1768 0650                              l1698 0505                              l1874 0549  
                            l1794 06B7                              l1786 0694                              l1778 0671  
                            l1796 06C0                              l1788 069D                              l1798 06C9  
                            STR_1 0030                              STR_2 0030                              STR_3 0030  
                            STR_4 002C                              u1000 0585                              _CREN 00C4  
                            u1001 0584                              u1010 05C6                              u1011 05C5  
                            u1020 05D6                              u1021 05D5                              u1110 050B  
                            u1030 04B8                              u1111 050A                              u1031 04B7  
                            u1120 0510                              u1040 04C3                              u1121 050F  
                            u1105 04FF                              u1041 04C2                              u1050 04D4  
                            u1051 04D3                              u1070 04E6                              u1207 02D2  
                            u1071 04E5                              u1217 02E3                              u1065 04D8  
                            u1090 04F7                              u1227 03FA                              u1091 04F6  
                            u1237 0409                              u1085 04E7                              u1247 0418  
                            u1095 04F3                              u1257 0211                              u1197 074B  
                            _PEIE 005E                              _RCIF 0065                              _OERR 00C1  
                            _TRMT 04C1                              _Xval 0025                              _Yval 0023  
                            _Zval 0021                 ?_Lcd_Write_String 0075  __end_of_I2C_Master_RepeatedStart 01CA  
                            _main 05DB                  __end_of_I2C_Init 02B5                              btemp 007E  
                            start 0000                ??_Lcd_Write_String 0077                   __end_of_Lcd_Cmd 021A  
                ?_I2C_Master_Read 0070                  ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070  
                           ?_main 0070                   __end_of___awdiv 051A                             _ANSEL 0188  
                 __end_of___lldiv 04B3                   ___awdiv@divisor 0070                   __end_of___lwdiv 03AA  
                 __end_of___lwmod 0324                   ___awdiv@counter 0074                             _RCREG 001A  
                           _RCSTA 0018                             _SPBRG 0099                             _PORTA 0005  
                           _PORTB 0006                             _PORTD 0008                             _TRISA 0085  
                           _TRISB 0086                             _TRISD 0088                             _SSPIE 0463  
                           _SSPIF 0063                             _TXREG 0019                             _TXSTA 0098  
                           _Xval2 0024                             _Yval2 0022                             _Zval2 0020  
                 __end_of_dpowers 002C                   __end_of_message 0022                             _setup 021A  
                           pclath 000A                             status 0003                             wtemp0 007E  
                 __end_of_sprintf 05DB              I2C_Init@i2c_clk_freq 0053                  __end_of_Lcd_Init 044D  
                __end_of_Lcd_Port 0256                   __initialization 07EB                      __end_of_main 07EB  
                          ??_main 0060                 ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0070  
              ??_I2C_Master_Start 0070                ??_I2C_Master_Write 0072                  ___awdiv@dividend 0072  
                          ?_setup 0070                            _ANSELH 0189                         ??_Lcd_Cmd 0071  
                          _SSPADD 0093                            _TRISC1 0439                            _TRISC2 043A  
                          _TRISC3 043B                            _TRISC4 043C                            _TRISC6 043E  
                          _TRISC7 043F                            _SSPCON 0014                            _SSPBUF 0013  
        _I2C_Master_RepeatedStart 01C1                         ??___awdiv 0074                         ??___lldiv 0078  
                       ??___lwdiv 0074                         ??___lwmod 007B                  ___awdiv@quotient 0076  
                       ?_I2C_Init 0053                         ??_sprintf 0056                   Lcd_Set_Cursor@a 0076  
                 Lcd_Set_Cursor@b 0074                   Lcd_Set_Cursor@y 0078                   Lcd_Set_Cursor@z 0077  
         __end_of__initialization 07FC                 __end_of_Lcd_Clear 0200                    __pcstackCOMMON 0070  
                   __end_of_setup 0234                    _Lcd_Set_Cursor 03AA                        ??_I2C_Init 0057  
                       ?_Lcd_Init 0070                         ?_Lcd_Port 0070                           ??_setup 0070  
                      __pbssBANK0 0020                        __pbssBANK1 00A0                        __pmaintext 05DB  
          __end_of_Lcd_Set_Cursor 03F0                        ??_Lcd_Init 0074                        ??_Lcd_Port 0070  
                         _SSPCON2 0091                           _SSPSTAT 0094                        __stringtab 0003  
                  _Lcd_Write_Char 02B5                           _Lcd_Cmd 0200                           ___awdiv 04B3  
                         ___lldiv 044D                           ___lwdiv 0366                           ___lwmod 02EA  
                 ?_Lcd_Set_Cursor 0074                           __ptext1 051A                           __ptext2 02EA  
                         __ptext3 0366                           __ptext4 021A                           __ptext5 04B3  
                         __ptext6 0324                           __ptext7 02B5                           __ptext8 03AA  
                         __ptext9 03F0                           _dpowers 0022                           _message 0013  
                         _sprintf 051A                           clrloop0 01BA            __end_of_Lcd_Write_Char 02EA  
            end_of_initialization 07FC        ??_I2C_Master_RepeatedStart 0070                   ___lldiv@divisor 0070  
                 ___lldiv@counter 007D                  I2C_Master_Read@a 0070                         Lcd_Port@a 0070  
                       _PORTCbits 0007                         _PORTDbits 0008                         _TRISCbits 0087  
                 ?_Lcd_Write_Char 0070                 Lcd_Write_String@a 0075                 Lcd_Write_String@i 007A  
                       _Lcd_Clear 01F3                  _Lcd_Write_String 0324               start_initialization 07EB  
               ??_I2C_Master_Read 0072                 ??_I2C_Master_Wait 0070                 ??_I2C_Master_Stop 0070  
                      ?_Lcd_Clear 0070                   Lcd_Write_Char@a 0074                   Lcd_Write_Char@y 0073  
                       ___latbits 0002                     __pcstackBANK0 0053                          ?_Lcd_Cmd 0070  
                     sprintf@flag 0059                       sprintf@prec 005D                  _I2C_Master_Start 01CA  
                _I2C_Master_Write 01DC                  ___lwdiv@dividend 0072                  ??_Lcd_Set_Cursor 0075  
                        ?___awdiv 0070                          ?___lldiv 0070                          ?___lwdiv 0070  
                        ?___lwmod 0077                         __pstrings 0003                          _I2C_Init 0284  
                ___lwdiv@quotient 0074                          ?_sprintf 0053                         clear_ram0 01B9  
                        Lcd_Cmd@a 0073                       ??_Lcd_Clear 0074                       __stringbase 0012  
                ??_Lcd_Write_Char 0071                          _Lcd_Init 03F0                          _Lcd_Port 0234  
             I2C_Master_Read@temp 0074          __end_of_Lcd_Write_String 0366         ?_I2C_Master_RepeatedStart 0070  
              __end_of__stringtab 0013                        sprintf@val 005B                   _I2C_Master_Read 0256  
                 _I2C_Master_Wait 01E6                   _I2C_Master_Stop 01D3                   ___lwdiv@divisor 0070  
                 ___lwdiv@counter 0076                          __ptext10 01F3                          __ptext11 0200  
                        __ptext20 044D                          __ptext12 0234                          __ptext13 01DC  
                        __ptext14 01D3                          __ptext15 01CA                          __ptext16 01C1  
                        __ptext17 0256                          __ptext18 01E6                          __ptext19 0284  
        __end_of_I2C_Master_Start 01D3          __end_of_I2C_Master_Write 01E6                Lcd_Write_Char@temp 0072  
                       sprintf@ap 005A                         sprintf@sp 005E                  ___lwmod@dividend 0079  
                ___lldiv@dividend 0074                         stringcode 000D                        _OSCCONbits 008F  
         __end_of_I2C_Master_Read 0284           __end_of_I2C_Master_Wait 01F3           __end_of_I2C_Master_Stop 01DC  
              Lcd_Set_Cursor@temp 0079                          sprintf@c 005F                          sprintf@f 0053  
                ___lldiv@quotient 0079                 I2C_Master_Write@d 0070                   ___lwmod@divisor 0077  
                 ___lwmod@counter 007B                          stringdir 000D                          stringtab 0003  
                     _SSPCON2bits 0091  
