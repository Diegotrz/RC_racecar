

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Aug 24 18:31:07 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31     0000                     
    32                           ; Generated 09/02/2023 GMT
    33                           ; 
    34                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66     0000                     	;# 
    67     0001                     	;# 
    68     0002                     	;# 
    69     0003                     	;# 
    70     0004                     	;# 
    71     0005                     	;# 
    72     0006                     	;# 
    73     0007                     	;# 
    74     0008                     	;# 
    75     0009                     	;# 
    76     000A                     	;# 
    77     000B                     	;# 
    78     000C                     	;# 
    79     000D                     	;# 
    80     000E                     	;# 
    81     000E                     	;# 
    82     000F                     	;# 
    83     0010                     	;# 
    84     0011                     	;# 
    85     0012                     	;# 
    86     0013                     	;# 
    87     0014                     	;# 
    88     0015                     	;# 
    89     0015                     	;# 
    90     0016                     	;# 
    91     0017                     	;# 
    92     0018                     	;# 
    93     0019                     	;# 
    94     001A                     	;# 
    95     001B                     	;# 
    96     001B                     	;# 
    97     001C                     	;# 
    98     001D                     	;# 
    99     001E                     	;# 
   100     001F                     	;# 
   101     0081                     	;# 
   102     0085                     	;# 
   103     0086                     	;# 
   104     0087                     	;# 
   105     0088                     	;# 
   106     0089                     	;# 
   107     008C                     	;# 
   108     008D                     	;# 
   109     008E                     	;# 
   110     008F                     	;# 
   111     0090                     	;# 
   112     0091                     	;# 
   113     0092                     	;# 
   114     0093                     	;# 
   115     0093                     	;# 
   116     0093                     	;# 
   117     0094                     	;# 
   118     0095                     	;# 
   119     0096                     	;# 
   120     0097                     	;# 
   121     0098                     	;# 
   122     0099                     	;# 
   123     009A                     	;# 
   124     009B                     	;# 
   125     009C                     	;# 
   126     009D                     	;# 
   127     009E                     	;# 
   128     009F                     	;# 
   129     0105                     	;# 
   130     0107                     	;# 
   131     0108                     	;# 
   132     0109                     	;# 
   133     010C                     	;# 
   134     010C                     	;# 
   135     010D                     	;# 
   136     010E                     	;# 
   137     010F                     	;# 
   138     0185                     	;# 
   139     0187                     	;# 
   140     0188                     	;# 
   141     0189                     	;# 
   142     018C                     	;# 
   143     018D                     	;# 
   144     0000                     	;# 
   145     0001                     	;# 
   146     0002                     	;# 
   147     0003                     	;# 
   148     0004                     	;# 
   149     0005                     	;# 
   150     0006                     	;# 
   151     0007                     	;# 
   152     0008                     	;# 
   153     0009                     	;# 
   154     000A                     	;# 
   155     000B                     	;# 
   156     000C                     	;# 
   157     000D                     	;# 
   158     000E                     	;# 
   159     000E                     	;# 
   160     000F                     	;# 
   161     0010                     	;# 
   162     0011                     	;# 
   163     0012                     	;# 
   164     0013                     	;# 
   165     0014                     	;# 
   166     0015                     	;# 
   167     0015                     	;# 
   168     0016                     	;# 
   169     0017                     	;# 
   170     0018                     	;# 
   171     0019                     	;# 
   172     001A                     	;# 
   173     001B                     	;# 
   174     001B                     	;# 
   175     001C                     	;# 
   176     001D                     	;# 
   177     001E                     	;# 
   178     001F                     	;# 
   179     0081                     	;# 
   180     0085                     	;# 
   181     0086                     	;# 
   182     0087                     	;# 
   183     0088                     	;# 
   184     0089                     	;# 
   185     008C                     	;# 
   186     008D                     	;# 
   187     008E                     	;# 
   188     008F                     	;# 
   189     0090                     	;# 
   190     0091                     	;# 
   191     0092                     	;# 
   192     0093                     	;# 
   193     0093                     	;# 
   194     0093                     	;# 
   195     0094                     	;# 
   196     0095                     	;# 
   197     0096                     	;# 
   198     0097                     	;# 
   199     0098                     	;# 
   200     0099                     	;# 
   201     009A                     	;# 
   202     009B                     	;# 
   203     009C                     	;# 
   204     009D                     	;# 
   205     009E                     	;# 
   206     009F                     	;# 
   207     0105                     	;# 
   208     0107                     	;# 
   209     0108                     	;# 
   210     0109                     	;# 
   211     010C                     	;# 
   212     010C                     	;# 
   213     010D                     	;# 
   214     010E                     	;# 
   215     010F                     	;# 
   216     0185                     	;# 
   217     0187                     	;# 
   218     0188                     	;# 
   219     0189                     	;# 
   220     018C                     	;# 
   221     018D                     	;# 
   222     0000                     	;# 
   223     0001                     	;# 
   224     0002                     	;# 
   225     0003                     	;# 
   226     0004                     	;# 
   227     0005                     	;# 
   228     0006                     	;# 
   229     0007                     	;# 
   230     0008                     	;# 
   231     0009                     	;# 
   232     000A                     	;# 
   233     000B                     	;# 
   234     000C                     	;# 
   235     000D                     	;# 
   236     000E                     	;# 
   237     000E                     	;# 
   238     000F                     	;# 
   239     0010                     	;# 
   240     0011                     	;# 
   241     0012                     	;# 
   242     0013                     	;# 
   243     0014                     	;# 
   244     0015                     	;# 
   245     0015                     	;# 
   246     0016                     	;# 
   247     0017                     	;# 
   248     0018                     	;# 
   249     0019                     	;# 
   250     001A                     	;# 
   251     001B                     	;# 
   252     001B                     	;# 
   253     001C                     	;# 
   254     001D                     	;# 
   255     001E                     	;# 
   256     001F                     	;# 
   257     0081                     	;# 
   258     0085                     	;# 
   259     0086                     	;# 
   260     0087                     	;# 
   261     0088                     	;# 
   262     0089                     	;# 
   263     008C                     	;# 
   264     008D                     	;# 
   265     008E                     	;# 
   266     008F                     	;# 
   267     0090                     	;# 
   268     0091                     	;# 
   269     0092                     	;# 
   270     0093                     	;# 
   271     0093                     	;# 
   272     0093                     	;# 
   273     0094                     	;# 
   274     0095                     	;# 
   275     0096                     	;# 
   276     0097                     	;# 
   277     0098                     	;# 
   278     0099                     	;# 
   279     009A                     	;# 
   280     009B                     	;# 
   281     009C                     	;# 
   282     009D                     	;# 
   283     009E                     	;# 
   284     009F                     	;# 
   285     0105                     	;# 
   286     0107                     	;# 
   287     0108                     	;# 
   288     0109                     	;# 
   289     010C                     	;# 
   290     010C                     	;# 
   291     010D                     	;# 
   292     010E                     	;# 
   293     010F                     	;# 
   294     0185                     	;# 
   295     0187                     	;# 
   296     0188                     	;# 
   297     0189                     	;# 
   298     018C                     	;# 
   299     018D                     	;# 
   300     0000                     	;# 
   301     0001                     	;# 
   302     0002                     	;# 
   303     0003                     	;# 
   304     0004                     	;# 
   305     0005                     	;# 
   306     0006                     	;# 
   307     0007                     	;# 
   308     0008                     	;# 
   309     0009                     	;# 
   310     000A                     	;# 
   311     000B                     	;# 
   312     000C                     	;# 
   313     000D                     	;# 
   314     000E                     	;# 
   315     000E                     	;# 
   316     000F                     	;# 
   317     0010                     	;# 
   318     0011                     	;# 
   319     0012                     	;# 
   320     0013                     	;# 
   321     0014                     	;# 
   322     0015                     	;# 
   323     0015                     	;# 
   324     0016                     	;# 
   325     0017                     	;# 
   326     0018                     	;# 
   327     0019                     	;# 
   328     001A                     	;# 
   329     001B                     	;# 
   330     001B                     	;# 
   331     001C                     	;# 
   332     001D                     	;# 
   333     001E                     	;# 
   334     001F                     	;# 
   335     0081                     	;# 
   336     0085                     	;# 
   337     0086                     	;# 
   338     0087                     	;# 
   339     0088                     	;# 
   340     0089                     	;# 
   341     008C                     	;# 
   342     008D                     	;# 
   343     008E                     	;# 
   344     008F                     	;# 
   345     0090                     	;# 
   346     0091                     	;# 
   347     0092                     	;# 
   348     0093                     	;# 
   349     0093                     	;# 
   350     0093                     	;# 
   351     0094                     	;# 
   352     0095                     	;# 
   353     0096                     	;# 
   354     0097                     	;# 
   355     0098                     	;# 
   356     0099                     	;# 
   357     009A                     	;# 
   358     009B                     	;# 
   359     009C                     	;# 
   360     009D                     	;# 
   361     009E                     	;# 
   362     009F                     	;# 
   363     0105                     	;# 
   364     0107                     	;# 
   365     0108                     	;# 
   366     0109                     	;# 
   367     010C                     	;# 
   368     010C                     	;# 
   369     010D                     	;# 
   370     010E                     	;# 
   371     010F                     	;# 
   372     0185                     	;# 
   373     0187                     	;# 
   374     0188                     	;# 
   375     0189                     	;# 
   376     018C                     	;# 
   377     018D                     	;# 
   378     0000                     	;# 
   379     0001                     	;# 
   380     0002                     	;# 
   381     0003                     	;# 
   382     0004                     	;# 
   383     0005                     	;# 
   384     0006                     	;# 
   385     0007                     	;# 
   386     0008                     	;# 
   387     0009                     	;# 
   388     000A                     	;# 
   389     000B                     	;# 
   390     000C                     	;# 
   391     000D                     	;# 
   392     000E                     	;# 
   393     000E                     	;# 
   394     000F                     	;# 
   395     0010                     	;# 
   396     0011                     	;# 
   397     0012                     	;# 
   398     0013                     	;# 
   399     0014                     	;# 
   400     0015                     	;# 
   401     0015                     	;# 
   402     0016                     	;# 
   403     0017                     	;# 
   404     0018                     	;# 
   405     0019                     	;# 
   406     001A                     	;# 
   407     001B                     	;# 
   408     001B                     	;# 
   409     001C                     	;# 
   410     001D                     	;# 
   411     001E                     	;# 
   412     001F                     	;# 
   413     0081                     	;# 
   414     0085                     	;# 
   415     0086                     	;# 
   416     0087                     	;# 
   417     0088                     	;# 
   418     0089                     	;# 
   419     008C                     	;# 
   420     008D                     	;# 
   421     008E                     	;# 
   422     008F                     	;# 
   423     0090                     	;# 
   424     0091                     	;# 
   425     0092                     	;# 
   426     0093                     	;# 
   427     0093                     	;# 
   428     0093                     	;# 
   429     0094                     	;# 
   430     0095                     	;# 
   431     0096                     	;# 
   432     0097                     	;# 
   433     0098                     	;# 
   434     0099                     	;# 
   435     009A                     	;# 
   436     009B                     	;# 
   437     009C                     	;# 
   438     009D                     	;# 
   439     009E                     	;# 
   440     009F                     	;# 
   441     0105                     	;# 
   442     0107                     	;# 
   443     0108                     	;# 
   444     0109                     	;# 
   445     010C                     	;# 
   446     010C                     	;# 
   447     010D                     	;# 
   448     010E                     	;# 
   449     010F                     	;# 
   450     0185                     	;# 
   451     0187                     	;# 
   452     0188                     	;# 
   453     0189                     	;# 
   454     018C                     	;# 
   455     018D                     	;# 
   456                           
   457                           	psect	idataBANK0
   458     0374                     __pidataBANK0:
   459                           
   460                           ;initializer for _z
   461     0374  3402               	retlw	2
   462                           
   463                           	psect	strings
   464     0003                     __pstrings:
   465     0003                     stringtab:
   466     0003                     __stringtab:
   467     0003                     stringcode:	
   468                           ;	String table - string pointers are 1 byte each
   469                           
   470     0003                     stringdir:
   471     0003  3000               	movlw	high stringdir
   472     0004  008A               	movwf	10
   473     0005  0804               	movf	4,w
   474     0006  0A84               	incf	4,f
   475     0007  0782               	addwf	2,f
   476     0008                     __stringbase:
   477     0008  3400               	retlw	0
   478     0009                     __end_of__stringtab:
   479     0009                     _message:
   480     0009  3432               	retlw	50
   481     000A  342E               	retlw	46
   482     000B  3445               	retlw	69
   483     000C  346E               	retlw	110
   484     000D  3476               	retlw	118
   485     000E  3469               	retlw	105
   486     000F  3461               	retlw	97
   487     0010  3472               	retlw	114
   488     0011  3420               	retlw	32
   489     0012  3441               	retlw	65
   490     0013  3473               	retlw	115
   491     0014  3463               	retlw	99
   492     0015  3469               	retlw	105
   493     0016  3469               	retlw	105
   494     0017  3400               	retlw	0
   495     0018                     __end_of_message:
   496     0008                     _PORTD	set	8
   497     0006                     _PORTB	set	6
   498     0019                     _TXREG	set	25
   499     001A                     _RCREG	set	26
   500     0018                     _RCSTA	set	24
   501     0008                     _PORTDbits	set	8
   502     0013                     _SSPBUF	set	19
   503     0014                     _SSPCON	set	20
   504     00C4                     _CREN	set	196
   505     00C1                     _OERR	set	193
   506     0065                     _RCIF	set	101
   507     0043                     _RD3	set	67
   508     0047                     _RD7	set	71
   509     0046                     _RD6	set	70
   510     0045                     _RD5	set	69
   511     0044                     _RD4	set	68
   512     0063                     _SSPIF	set	99
   513     005E                     _PEIE	set	94
   514     005F                     _GIE	set	95
   515     0088                     _TRISD	set	136
   516     0086                     _TRISB	set	134
   517     0098                     _TXSTA	set	152
   518     0099                     _SPBRG	set	153
   519     0091                     _SSPCON2bits	set	145
   520     0087                     _TRISCbits	set	135
   521     0094                     _SSPSTAT	set	148
   522     0093                     _SSPADD	set	147
   523     0091                     _SSPCON2	set	145
   524     04C1                     _TRMT	set	1217
   525     0463                     _SSPIE	set	1123
   526     043C                     _TRISC4	set	1084
   527     043B                     _TRISC3	set	1083
   528     0189                     _ANSELH	set	393
   529     0188                     _ANSEL	set	392
   530                           
   531                           	psect	cinit
   532     07EE                     start_initialization:	
   533                           ; #config settings
   534                           
   535     07EE                     __initialization:
   536                           
   537                           ; Initialize objects allocated to BANK0
   538     07EE  120A  118A  2374  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   539     07F3  00B2               	movwf	__pdataBANK0& (0+127)
   540                           
   541                           ; Clear objects allocated to BANK0
   542     07F4  01AA               	clrf	__pbssBANK0& (0+127)
   543     07F5  01AB               	clrf	(__pbssBANK0+1)& (0+127)
   544     07F6  01AC               	clrf	(__pbssBANK0+2)& (0+127)
   545     07F7  01AD               	clrf	(__pbssBANK0+3)& (0+127)
   546     07F8  01AE               	clrf	(__pbssBANK0+4)& (0+127)
   547     07F9  01AF               	clrf	(__pbssBANK0+5)& (0+127)
   548     07FA  01B0               	clrf	(__pbssBANK0+6)& (0+127)
   549     07FB  01B1               	clrf	(__pbssBANK0+7)& (0+127)
   550     07FC                     end_of_initialization:	
   551                           ;End of C runtime variable initialization code
   552                           
   553     07FC                     __end_of__initialization:
   554     07FC  0183               	clrf	3
   555     07FD  120A  118A  2E79   	ljmp	_main	;jump to C main() function
   556                           
   557                           	psect	bssBANK0
   558     002A                     __pbssBANK0:
   559     002A                     _mot:
   560     002A                     	ds	1
   561     002B                     _y:
   562     002B                     	ds	1
   563     002C                     _x:
   564     002C                     	ds	1
   565     002D                     _dato:
   566     002D                     	ds	1
   567     002E                     _datos2:
   568     002E                     	ds	2
   569     0030                     _datos:
   570     0030                     	ds	2
   571                           
   572                           	psect	dataBANK0
   573     0032                     __pdataBANK0:
   574     0032                     _z:
   575     0032                     	ds	1
   576                           
   577                           	psect	cstackCOMMON
   578     0070                     __pcstackCOMMON:
   579     0070                     ?_setup:
   580     0070                     ?_I2C_Master_Wait:	
   581                           ; 1 bytes @ 0x0
   582                           
   583     0070                     ??_I2C_Master_Wait:	
   584                           ; 1 bytes @ 0x0
   585                           
   586     0070                     ?_I2C_Master_Start:	
   587                           ; 1 bytes @ 0x0
   588                           
   589     0070                     ??_I2C_Master_Start:	
   590                           ; 1 bytes @ 0x0
   591                           
   592     0070                     ?_I2C_Master_Stop:	
   593                           ; 1 bytes @ 0x0
   594                           
   595     0070                     ??_I2C_Master_Stop:	
   596                           ; 1 bytes @ 0x0
   597                           
   598     0070                     ?_I2C_Master_Write:	
   599                           ; 1 bytes @ 0x0
   600                           
   601     0070                     ?_Lcd_Port:	
   602                           ; 1 bytes @ 0x0
   603                           
   604     0070                     ??_Lcd_Port:	
   605                           ; 1 bytes @ 0x0
   606                           
   607     0070                     ?_Lcd_Cmd:	
   608                           ; 1 bytes @ 0x0
   609                           
   610     0070                     ?_Lcd_Init:	
   611                           ; 1 bytes @ 0x0
   612                           
   613     0070                     ?_Lcd_Write_Char:	
   614                           ; 1 bytes @ 0x0
   615                           
   616     0070                     ?_Lcd_Write_String:	
   617                           ; 1 bytes @ 0x0
   618                           
   619     0070                     ?_main:	
   620                           ; 1 bytes @ 0x0
   621                           
   622     0070                     ?_I2C_Master_Read:	
   623                           ; 1 bytes @ 0x0
   624                           
   625     0070                     ?___awdiv:	
   626                           ; 2 bytes @ 0x0
   627                           
   628     0070                     ?___lldiv:	
   629                           ; 2 bytes @ 0x0
   630                           
   631     0070                     Lcd_Port@a:	
   632                           ; 4 bytes @ 0x0
   633                           
   634     0070                     I2C_Master_Write@d:	
   635                           ; 1 bytes @ 0x0
   636                           
   637     0070                     I2C_Master_Read@a:	
   638                           ; 2 bytes @ 0x0
   639                           
   640     0070                     ___awdiv@divisor:	
   641                           ; 2 bytes @ 0x0
   642                           
   643     0070                     ___lldiv@divisor:	
   644                           ; 2 bytes @ 0x0
   645                           
   646                           
   647                           ; 4 bytes @ 0x0
   648     0070                     	ds	1
   649     0071                     ??_Lcd_Cmd:
   650     0071                     ??_Lcd_Write_Char:	
   651                           ; 1 bytes @ 0x1
   652                           
   653                           
   654                           ; 1 bytes @ 0x1
   655     0071                     	ds	1
   656     0072                     ??_I2C_Master_Write:
   657     0072                     ??_I2C_Master_Read:	
   658                           ; 1 bytes @ 0x2
   659                           
   660     0072                     Lcd_Write_Char@temp:	
   661                           ; 1 bytes @ 0x2
   662                           
   663     0072                     ___awdiv@dividend:	
   664                           ; 1 bytes @ 0x2
   665                           
   666                           
   667                           ; 2 bytes @ 0x2
   668     0072                     	ds	1
   669     0073                     Lcd_Cmd@a:
   670     0073                     Lcd_Write_Char@y:	
   671                           ; 1 bytes @ 0x3
   672                           
   673                           
   674                           ; 1 bytes @ 0x3
   675     0073                     	ds	1
   676     0074                     ?_Lcd_Set_Cursor:
   677     0074                     ??_Lcd_Init:	
   678                           ; 1 bytes @ 0x4
   679                           
   680     0074                     ??___awdiv:	
   681                           ; 1 bytes @ 0x4
   682                           
   683     0074                     Lcd_Set_Cursor@b:	
   684                           ; 1 bytes @ 0x4
   685                           
   686     0074                     Lcd_Write_Char@a:	
   687                           ; 1 bytes @ 0x4
   688                           
   689     0074                     ___awdiv@counter:	
   690                           ; 1 bytes @ 0x4
   691                           
   692     0074                     I2C_Master_Read@temp:	
   693                           ; 1 bytes @ 0x4
   694                           
   695     0074                     ___lldiv@dividend:	
   696                           ; 2 bytes @ 0x4
   697                           
   698                           
   699                           ; 4 bytes @ 0x4
   700     0074                     	ds	1
   701     0075                     ??_Lcd_Set_Cursor:
   702     0075                     ??_Lcd_Write_String:	
   703                           ; 1 bytes @ 0x5
   704                           
   705     0075                     ___awdiv@sign:	
   706                           ; 1 bytes @ 0x5
   707                           
   708                           
   709                           ; 1 bytes @ 0x5
   710     0075                     	ds	1
   711     0076                     Lcd_Set_Cursor@a:
   712     0076                     Lcd_Write_String@i:	
   713                           ; 1 bytes @ 0x6
   714                           
   715     0076                     ___awdiv@quotient:	
   716                           ; 2 bytes @ 0x6
   717                           
   718                           
   719                           ; 2 bytes @ 0x6
   720     0076                     	ds	1
   721     0077                     Lcd_Set_Cursor@z:
   722                           
   723                           ; 1 bytes @ 0x7
   724     0077                     	ds	1
   725     0078                     ??___lldiv:
   726     0078                     ?___awmod:	
   727                           ; 1 bytes @ 0x8
   728                           
   729     0078                     Lcd_Set_Cursor@y:	
   730                           ; 2 bytes @ 0x8
   731                           
   732     0078                     Lcd_Write_String@a:	
   733                           ; 1 bytes @ 0x8
   734                           
   735     0078                     ___awmod@divisor:	
   736                           ; 1 bytes @ 0x8
   737                           
   738                           
   739                           ; 2 bytes @ 0x8
   740     0078                     	ds	1
   741     0079                     Lcd_Set_Cursor@temp:
   742     0079                     ___lldiv@quotient:	
   743                           ; 1 bytes @ 0x9
   744                           
   745                           
   746                           ; 4 bytes @ 0x9
   747     0079                     	ds	1
   748     007A                     ___awmod@dividend:
   749                           
   750                           ; 2 bytes @ 0xA
   751     007A                     	ds	2
   752     007C                     ??___awmod:
   753     007C                     ___awmod@counter:	
   754                           ; 1 bytes @ 0xC
   755                           
   756                           
   757                           ; 1 bytes @ 0xC
   758     007C                     	ds	1
   759     007D                     ___lldiv@counter:
   760     007D                     ___awmod@sign:	
   761                           ; 1 bytes @ 0xD
   762                           
   763                           
   764                           ; 1 bytes @ 0xD
   765     007D                     	ds	1
   766     007E                     ??_setup:
   767                           
   768                           	psect	cstackBANK0
   769     0020                     __pcstackBANK0:	
   770                           ; 1 bytes @ 0xE
   771                           
   772     0020                     ?_I2C_Master_Init:
   773     0020                     I2C_Master_Init@c:	
   774                           ; 1 bytes @ 0x0
   775                           
   776                           
   777                           ; 4 bytes @ 0x0
   778     0020                     	ds	4
   779     0024                     ??_I2C_Master_Init:
   780                           
   781                           ; 1 bytes @ 0x4
   782     0024                     	ds	4
   783     0028                     ??_main:
   784                           
   785                           ; 1 bytes @ 0x8
   786     0028                     	ds	2
   787                           
   788                           	psect	maintext
   789     0679                     __pmaintext:	
   790 ;;
   791 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   792 ;;
   793 ;; *************** function _main *****************
   794 ;; Defined at:
   795 ;;		line 56 in file "pruebaI2C.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;		None
   798 ;; Auto vars:     Size  Location     Type
   799 ;;		None
   800 ;; Return value:  Size  Location     Type
   801 ;;                  1    wreg      void 
   802 ;; Registers used:
   803 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   804 ;; Tracked objects:
   805 ;;		On entry : B00/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   809 ;;      Params:         0       0       0       0       0
   810 ;;      Locals:         0       0       0       0       0
   811 ;;      Temps:          0       2       0       0       0
   812 ;;      Totals:         0       2       0       0       0
   813 ;;Total ram usage:        2 bytes
   814 ;; Hardware stack levels required when called: 3
   815 ;; This function calls:
   816 ;;		_I2C_Master_Init
   817 ;;		_I2C_Master_Read
   818 ;;		_I2C_Master_Start
   819 ;;		_I2C_Master_Stop
   820 ;;		_I2C_Master_Write
   821 ;;		_Lcd_Init
   822 ;;		_Lcd_Set_Cursor
   823 ;;		_Lcd_Write_String
   824 ;;		___awdiv
   825 ;;		___awmod
   826 ;;		_setup
   827 ;; This function is called by:
   828 ;;		Startup code after reset
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832     0679                     _main:	
   833                           ;psect for function _main
   834                           
   835     0679                     l1422:	
   836                           ;incstack = 0
   837                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   838                           
   839                           
   840                           ;pruebaI2C.c: 57:     setup();
   841     0679  120A  118A  23B8  120A  118A  	fcall	_setup
   842     067E                     l1424:
   843                           
   844                           ;pruebaI2C.c: 58:    Lcd_Init();
   845     067E  120A  118A  254F  120A  118A  	fcall	_Lcd_Init
   846     0683                     l1426:
   847                           
   848                           ;pruebaI2C.c: 59:     I2C_Master_Init(100000);
   849     0683  3000               	movlw	0
   850     0684  1283               	bcf	3,5	;RP0=0, select bank0
   851     0685  1303               	bcf	3,6	;RP1=0, select bank0
   852     0686  00A3               	movwf	I2C_Master_Init@c+3
   853     0687  3001               	movlw	1
   854     0688  00A2               	movwf	I2C_Master_Init@c+2
   855     0689  3086               	movlw	134
   856     068A  00A1               	movwf	I2C_Master_Init@c+1
   857     068B  30A0               	movlw	160
   858     068C  00A0               	movwf	I2C_Master_Init@c
   859     068D  120A  118A  2478  120A  118A  	fcall	_I2C_Master_Init
   860     0692                     l214:	
   861                           ;pruebaI2C.c: 62:     while(1){
   862                           
   863                           
   864                           ;pruebaI2C.c: 84:         I2C_Master_Start();
   865     0692  120A  118A  2375  120A  118A  	fcall	_I2C_Master_Start
   866                           
   867                           ;pruebaI2C.c: 85:         I2C_Master_Write(0x24);
   868     0697  3024               	movlw	36
   869     0698  00F0               	movwf	I2C_Master_Write@d
   870     0699  3000               	movlw	0
   871     069A  00F1               	movwf	I2C_Master_Write@d+1
   872     069B  120A  118A  2387  120A  118A  	fcall	_I2C_Master_Write
   873                           
   874                           ;pruebaI2C.c: 86:         I2C_Master_Write('r');
   875     06A0  3072               	movlw	114
   876     06A1  00F0               	movwf	I2C_Master_Write@d
   877     06A2  3000               	movlw	0
   878     06A3  00F1               	movwf	I2C_Master_Write@d+1
   879     06A4  120A  118A  2387  120A  118A  	fcall	_I2C_Master_Write
   880                           
   881                           ;pruebaI2C.c: 87:         I2C_Master_Stop();
   882     06A9  120A  118A  237E  120A  118A  	fcall	_I2C_Master_Stop
   883     06AE                     l1428:
   884                           
   885                           ;pruebaI2C.c: 88:        _delay((unsigned long)((800)*(8000000/4000000.0)));
   886     06AE  30E4               	movlw	228
   887     06AF  1283               	bcf	3,5	;RP0=0, select bank0
   888     06B0  1303               	bcf	3,6	;RP1=0, select bank0
   889     06B1  00A8               	movwf	??_main
   890     06B2                     u957:
   891     06B2  2EB3               	nop2
   892     06B3  2EB4               	nop2
   893     06B4  0BA8               	decfsz	??_main,f
   894     06B5  2EB2               	goto	u957
   895     06B6  0000               	nop
   896     06B7                     l1430:
   897                           
   898                           ;pruebaI2C.c: 89:         I2C_Master_Start();
   899     06B7  120A  118A  2375  120A  118A  	fcall	_I2C_Master_Start
   900     06BC                     l1432:
   901                           
   902                           ;pruebaI2C.c: 90:         I2C_Master_Write(0x25);
   903     06BC  3025               	movlw	37
   904     06BD  00F0               	movwf	I2C_Master_Write@d
   905     06BE  3000               	movlw	0
   906     06BF  00F1               	movwf	I2C_Master_Write@d+1
   907     06C0  120A  118A  2387  120A  118A  	fcall	_I2C_Master_Write
   908     06C5                     l1434:
   909                           
   910                           ;pruebaI2C.c: 91:         x = I2C_Master_Read(0);
   911     06C5  3000               	movlw	0
   912     06C6  00F0               	movwf	I2C_Master_Read@a
   913     06C7  00F1               	movwf	I2C_Master_Read@a+1
   914     06C8  120A  118A  2415  120A  118A  	fcall	_I2C_Master_Read
   915     06CD  0870               	movf	?_I2C_Master_Read,w
   916     06CE  1283               	bcf	3,5	;RP0=0, select bank0
   917     06CF  1303               	bcf	3,6	;RP1=0, select bank0
   918     06D0  00AC               	movwf	_x
   919     06D1                     l1436:
   920                           
   921                           ;pruebaI2C.c: 92:         I2C_Master_Stop();
   922     06D1  120A  118A  237E  120A  118A  	fcall	_I2C_Master_Stop
   923     06D6                     l1438:
   924                           
   925                           ;pruebaI2C.c: 93:         _delay((unsigned long)((800)*(8000000/4000000.0)));
   926     06D6  30E4               	movlw	228
   927     06D7  1283               	bcf	3,5	;RP0=0, select bank0
   928     06D8  1303               	bcf	3,6	;RP1=0, select bank0
   929     06D9  00A8               	movwf	??_main
   930     06DA                     u967:
   931     06DA  2EDB               	nop2
   932     06DB  2EDC               	nop2
   933     06DC  0BA8               	decfsz	??_main,f
   934     06DD  2EDA               	goto	u967
   935     06DE  0000               	nop
   936                           
   937                           ;pruebaI2C.c: 95:          I2C_Master_Start();
   938     06DF  120A  118A  2375  120A  118A  	fcall	_I2C_Master_Start
   939                           
   940                           ;pruebaI2C.c: 96:         I2C_Master_Write(0x24);
   941     06E4  3024               	movlw	36
   942     06E5  00F0               	movwf	I2C_Master_Write@d
   943     06E6  3000               	movlw	0
   944     06E7  00F1               	movwf	I2C_Master_Write@d+1
   945     06E8  120A  118A  2387  120A  118A  	fcall	_I2C_Master_Write
   946                           
   947                           ;pruebaI2C.c: 97:         I2C_Master_Write('l');
   948     06ED  306C               	movlw	108
   949     06EE  00F0               	movwf	I2C_Master_Write@d
   950     06EF  3000               	movlw	0
   951     06F0  00F1               	movwf	I2C_Master_Write@d+1
   952     06F1  120A  118A  2387  120A  118A  	fcall	_I2C_Master_Write
   953                           
   954                           ;pruebaI2C.c: 98:         I2C_Master_Stop();
   955     06F6  120A  118A  237E  120A  118A  	fcall	_I2C_Master_Stop
   956     06FB                     l1440:
   957                           
   958                           ;pruebaI2C.c: 99:         _delay((unsigned long)((800)*(8000000/4000000.0)));
   959     06FB  30E4               	movlw	228
   960     06FC  1283               	bcf	3,5	;RP0=0, select bank0
   961     06FD  1303               	bcf	3,6	;RP1=0, select bank0
   962     06FE  00A8               	movwf	??_main
   963     06FF                     u977:
   964     06FF  2F00               	nop2
   965     0700  2F01               	nop2
   966     0701  0BA8               	decfsz	??_main,f
   967     0702  2EFF               	goto	u977
   968     0703  0000               	nop
   969     0704                     l1442:
   970                           
   971                           ;pruebaI2C.c: 100:         I2C_Master_Start();
   972     0704  120A  118A  2375  120A  118A  	fcall	_I2C_Master_Start
   973     0709                     l1444:
   974                           
   975                           ;pruebaI2C.c: 101:         I2C_Master_Write(0x25);
   976     0709  3025               	movlw	37
   977     070A  00F0               	movwf	I2C_Master_Write@d
   978     070B  3000               	movlw	0
   979     070C  00F1               	movwf	I2C_Master_Write@d+1
   980     070D  120A  118A  2387  120A  118A  	fcall	_I2C_Master_Write
   981     0712                     l1446:
   982                           
   983                           ;pruebaI2C.c: 102:         y = I2C_Master_Read(0);
   984     0712  3000               	movlw	0
   985     0713  00F0               	movwf	I2C_Master_Read@a
   986     0714  00F1               	movwf	I2C_Master_Read@a+1
   987     0715  120A  118A  2415  120A  118A  	fcall	_I2C_Master_Read
   988     071A  0870               	movf	?_I2C_Master_Read,w
   989     071B  1283               	bcf	3,5	;RP0=0, select bank0
   990     071C  1303               	bcf	3,6	;RP1=0, select bank0
   991     071D  00AB               	movwf	_y
   992     071E                     l1448:
   993                           
   994                           ;pruebaI2C.c: 103:         I2C_Master_Stop();
   995     071E  120A  118A  237E  120A  118A  	fcall	_I2C_Master_Stop
   996     0723                     l1450:
   997                           
   998                           ;pruebaI2C.c: 104:         _delay((unsigned long)((800)*(8000000/4000000.0)));
   999     0723  30E4               	movlw	228
  1000     0724  1283               	bcf	3,5	;RP0=0, select bank0
  1001     0725  1303               	bcf	3,6	;RP1=0, select bank0
  1002     0726  00A8               	movwf	??_main
  1003     0727                     u987:
  1004     0727  2F28               	nop2
  1005     0728  2F29               	nop2
  1006     0729  0BA8               	decfsz	??_main,f
  1007     072A  2F27               	goto	u987
  1008     072B  0000               	nop
  1009     072C                     l1452:
  1010                           
  1011                           ;pruebaI2C.c: 109:         datos[0]= (x/100) + '0';
  1012     072C  3064               	movlw	100
  1013     072D  00F0               	movwf	___awdiv@divisor
  1014     072E  3000               	movlw	0
  1015     072F  00F1               	movwf	___awdiv@divisor+1
  1016     0730  1283               	bcf	3,5	;RP0=0, select bank0
  1017     0731  1303               	bcf	3,6	;RP1=0, select bank0
  1018     0732  082C               	movf	_x,w
  1019     0733  00A8               	movwf	??_main
  1020     0734  01A9               	clrf	??_main+1
  1021     0735  0828               	movf	??_main,w
  1022     0736  00F2               	movwf	___awdiv@dividend
  1023     0737  0829               	movf	??_main+1,w
  1024     0738  00F3               	movwf	___awdiv@dividend+1
  1025     0739  120A  118A  2612  120A  118A  	fcall	___awdiv
  1026     073E  0870               	movf	?___awdiv,w
  1027     073F  3E30               	addlw	48
  1028     0740  1283               	bcf	3,5	;RP0=0, select bank0
  1029     0741  1303               	bcf	3,6	;RP1=0, select bank0
  1030     0742  00B0               	movwf	_datos
  1031     0743                     l1454:
  1032                           
  1033                           ;pruebaI2C.c: 110:       datos[1]= (x/10) % 10 + '0';
  1034     0743  300A               	movlw	10
  1035     0744  00F8               	movwf	___awmod@divisor
  1036     0745  3000               	movlw	0
  1037     0746  00F9               	movwf	___awmod@divisor+1
  1038     0747  300A               	movlw	10
  1039     0748  00F0               	movwf	___awdiv@divisor
  1040     0749  3000               	movlw	0
  1041     074A  00F1               	movwf	___awdiv@divisor+1
  1042     074B  082C               	movf	_x,w
  1043     074C  00A8               	movwf	??_main
  1044     074D  01A9               	clrf	??_main+1
  1045     074E  0828               	movf	??_main,w
  1046     074F  00F2               	movwf	___awdiv@dividend
  1047     0750  0829               	movf	??_main+1,w
  1048     0751  00F3               	movwf	___awdiv@dividend+1
  1049     0752  120A  118A  2612  120A  118A  	fcall	___awdiv
  1050     0757  0871               	movf	?___awdiv+1,w
  1051     0758  00FB               	movwf	___awmod@dividend+1
  1052     0759  0870               	movf	?___awdiv,w
  1053     075A  00FA               	movwf	___awmod@dividend
  1054     075B  120A  118A  24F6  120A  118A  	fcall	___awmod
  1055     0760  0878               	movf	?___awmod,w
  1056     0761  3E30               	addlw	48
  1057     0762  1283               	bcf	3,5	;RP0=0, select bank0
  1058     0763  1303               	bcf	3,6	;RP1=0, select bank0
  1059     0764  00B1               	movwf	_datos+1
  1060     0765                     l1456:
  1061                           
  1062                           ;pruebaI2C.c: 111:       datos[2]= (x%10) + '0';
  1063     0765  300A               	movlw	10
  1064     0766  00F8               	movwf	___awmod@divisor
  1065     0767  3000               	movlw	0
  1066     0768  00F9               	movwf	___awmod@divisor+1
  1067     0769  082C               	movf	_x,w
  1068     076A  00A8               	movwf	??_main
  1069     076B  01A9               	clrf	??_main+1
  1070     076C  0828               	movf	??_main,w
  1071     076D  00FA               	movwf	___awmod@dividend
  1072     076E  0829               	movf	??_main+1,w
  1073     076F  00FB               	movwf	___awmod@dividend+1
  1074     0770  120A  118A  24F6  120A  118A  	fcall	___awmod
  1075     0775  0878               	movf	?___awmod,w
  1076     0776  3E30               	addlw	48
  1077     0777  1283               	bcf	3,5	;RP0=0, select bank0
  1078     0778  1303               	bcf	3,6	;RP1=0, select bank0
  1079     0779  00B2               	movwf	_datos+2
  1080     077A                     l1458:
  1081                           
  1082                           ;pruebaI2C.c: 113:      datos2[0]= (y/100) + '0';
  1083     077A  3064               	movlw	100
  1084     077B  00F0               	movwf	___awdiv@divisor
  1085     077C  3000               	movlw	0
  1086     077D  00F1               	movwf	___awdiv@divisor+1
  1087     077E  082B               	movf	_y,w
  1088     077F  00A8               	movwf	??_main
  1089     0780  01A9               	clrf	??_main+1
  1090     0781  0828               	movf	??_main,w
  1091     0782  00F2               	movwf	___awdiv@dividend
  1092     0783  0829               	movf	??_main+1,w
  1093     0784  00F3               	movwf	___awdiv@dividend+1
  1094     0785  120A  118A  2612  120A  118A  	fcall	___awdiv
  1095     078A  0870               	movf	?___awdiv,w
  1096     078B  3E30               	addlw	48
  1097     078C  1283               	bcf	3,5	;RP0=0, select bank0
  1098     078D  1303               	bcf	3,6	;RP1=0, select bank0
  1099     078E  00AE               	movwf	_datos2
  1100     078F                     l1460:
  1101                           
  1102                           ;pruebaI2C.c: 114:       datos2[1]= (y/10) % 10 + '0';
  1103     078F  300A               	movlw	10
  1104     0790  00F8               	movwf	___awmod@divisor
  1105     0791  3000               	movlw	0
  1106     0792  00F9               	movwf	___awmod@divisor+1
  1107     0793  300A               	movlw	10
  1108     0794  00F0               	movwf	___awdiv@divisor
  1109     0795  3000               	movlw	0
  1110     0796  00F1               	movwf	___awdiv@divisor+1
  1111     0797  082B               	movf	_y,w
  1112     0798  00A8               	movwf	??_main
  1113     0799  01A9               	clrf	??_main+1
  1114     079A  0828               	movf	??_main,w
  1115     079B  00F2               	movwf	___awdiv@dividend
  1116     079C  0829               	movf	??_main+1,w
  1117     079D  00F3               	movwf	___awdiv@dividend+1
  1118     079E  120A  118A  2612  120A  118A  	fcall	___awdiv
  1119     07A3  0871               	movf	?___awdiv+1,w
  1120     07A4  00FB               	movwf	___awmod@dividend+1
  1121     07A5  0870               	movf	?___awdiv,w
  1122     07A6  00FA               	movwf	___awmod@dividend
  1123     07A7  120A  118A  24F6  120A  118A  	fcall	___awmod
  1124     07AC  0878               	movf	?___awmod,w
  1125     07AD  3E30               	addlw	48
  1126     07AE  1283               	bcf	3,5	;RP0=0, select bank0
  1127     07AF  1303               	bcf	3,6	;RP1=0, select bank0
  1128     07B0  00AF               	movwf	_datos2+1
  1129     07B1                     l1462:
  1130                           
  1131                           ;pruebaI2C.c: 115:      datos2[2]= (y%10) + '0';
  1132     07B1  300A               	movlw	10
  1133     07B2  00F8               	movwf	___awmod@divisor
  1134     07B3  3000               	movlw	0
  1135     07B4  00F9               	movwf	___awmod@divisor+1
  1136     07B5  082B               	movf	_y,w
  1137     07B6  00A8               	movwf	??_main
  1138     07B7  01A9               	clrf	??_main+1
  1139     07B8  0828               	movf	??_main,w
  1140     07B9  00FA               	movwf	___awmod@dividend
  1141     07BA  0829               	movf	??_main+1,w
  1142     07BB  00FB               	movwf	___awmod@dividend+1
  1143     07BC  120A  118A  24F6  120A  118A  	fcall	___awmod
  1144     07C1  0878               	movf	?___awmod,w
  1145     07C2  3E30               	addlw	48
  1146     07C3  1283               	bcf	3,5	;RP0=0, select bank0
  1147     07C4  1303               	bcf	3,6	;RP1=0, select bank0
  1148     07C5  00B0               	movwf	_datos2+2
  1149     07C6                     l1464:
  1150                           
  1151                           ;pruebaI2C.c: 116:          _delay((unsigned long)((400)*(8000000/4000000.0)));
  1152     07C6  309F               	movlw	159
  1153     07C7  1283               	bcf	3,5	;RP0=0, select bank0
  1154     07C8  1303               	bcf	3,6	;RP1=0, select bank0
  1155     07C9  00A8               	movwf	??_main
  1156     07CA                     u997:
  1157     07CA  2FCB               	nop2
  1158     07CB  0BA8               	decfsz	??_main,f
  1159     07CC  2FCA               	goto	u997
  1160     07CD  2FCE               	nop2
  1161     07CE                     l1466:
  1162                           
  1163                           ;pruebaI2C.c: 121:     Lcd_Set_Cursor(1,1);
  1164     07CE  01F4               	clrf	Lcd_Set_Cursor@b
  1165     07CF  0AF4               	incf	Lcd_Set_Cursor@b,f
  1166     07D0  3001               	movlw	1
  1167     07D1  120A  118A  24B0  120A  118A  	fcall	_Lcd_Set_Cursor
  1168     07D6                     l1468:
  1169                           
  1170                           ;pruebaI2C.c: 122:     Lcd_Write_String(datos);
  1171     07D6  3030               	movlw	(low (_datos| 0))& (0+255)
  1172     07D7  120A  118A  23D2  120A  118A  	fcall	_Lcd_Write_String
  1173     07DC                     l1470:
  1174                           
  1175                           ;pruebaI2C.c: 123:     Lcd_Set_Cursor(2,6);
  1176     07DC  3006               	movlw	6
  1177     07DD  00F4               	movwf	Lcd_Set_Cursor@b
  1178     07DE  3002               	movlw	2
  1179     07DF  120A  118A  24B0  120A  118A  	fcall	_Lcd_Set_Cursor
  1180     07E4                     l1472:
  1181                           
  1182                           ;pruebaI2C.c: 124:     Lcd_Write_String(datos2);
  1183     07E4  302E               	movlw	(low (_datos2| 0))& (0+255)
  1184     07E5  120A  118A  23D2  120A  118A  	fcall	_Lcd_Write_String
  1185     07EA  2E92               	goto	l214
  1186     07EB  120A  118A  2800   	ljmp	start
  1187     07EE                     __end_of_main:
  1188                           
  1189                           	psect	text1
  1190     03B8                     __ptext1:	
  1191 ;; *************** function _setup *****************
  1192 ;; Defined at:
  1193 ;;		line 131 in file "pruebaI2C.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;		None
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;		None
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  1    wreg      void 
  1200 ;; Registers used:
  1201 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1207 ;;      Params:         0       0       0       0       0
  1208 ;;      Locals:         0       0       0       0       0
  1209 ;;      Temps:          0       0       0       0       0
  1210 ;;      Totals:         0       0       0       0       0
  1211 ;;Total ram usage:        0 bytes
  1212 ;; Hardware stack levels used: 1
  1213 ;; Hardware stack levels required when called: 2
  1214 ;; This function calls:
  1215 ;;		_I2C_Master_Init
  1216 ;; This function is called by:
  1217 ;;		_main
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221     03B8                     _setup:	
  1222                           ;psect for function _setup
  1223                           
  1224     03B8                     l1310:	
  1225                           ;incstack = 0
  1226                           ; Regs used in _setup: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1227                           
  1228                           
  1229                           ;pruebaI2C.c: 132:     ANSEL = 0;
  1230     03B8  1683               	bsf	3,5	;RP0=1, select bank3
  1231     03B9  1703               	bsf	3,6	;RP1=1, select bank3
  1232     03BA  0188               	clrf	8	;volatile
  1233                           
  1234                           ;pruebaI2C.c: 133:     ANSELH = 0;
  1235     03BB  0189               	clrf	9	;volatile
  1236                           
  1237                           ;pruebaI2C.c: 134:     TRISB = 0;
  1238     03BC  1683               	bsf	3,5	;RP0=1, select bank1
  1239     03BD  1303               	bcf	3,6	;RP1=0, select bank1
  1240     03BE  0186               	clrf	6	;volatile
  1241                           
  1242                           ;pruebaI2C.c: 135:     TRISD = 0;
  1243     03BF  0188               	clrf	8	;volatile
  1244                           
  1245                           ;pruebaI2C.c: 136:     PORTB = 0;
  1246     03C0  1283               	bcf	3,5	;RP0=0, select bank0
  1247     03C1  1303               	bcf	3,6	;RP1=0, select bank0
  1248     03C2  0186               	clrf	6	;volatile
  1249                           
  1250                           ;pruebaI2C.c: 137:     PORTD = 0;
  1251     03C3  0188               	clrf	8	;volatile
  1252     03C4                     l1312:
  1253                           
  1254                           ;pruebaI2C.c: 138:     I2C_Master_Init(100000);
  1255     03C4  3000               	movlw	0
  1256     03C5  00A3               	movwf	I2C_Master_Init@c+3
  1257     03C6  3001               	movlw	1
  1258     03C7  00A2               	movwf	I2C_Master_Init@c+2
  1259     03C8  3086               	movlw	134
  1260     03C9  00A1               	movwf	I2C_Master_Init@c+1
  1261     03CA  30A0               	movlw	160
  1262     03CB  00A0               	movwf	I2C_Master_Init@c
  1263     03CC  120A  118A  2478  120A  118A  	fcall	_I2C_Master_Init
  1264     03D1                     l220:
  1265     03D1  0008               	return
  1266     03D2                     __end_of_setup:
  1267                           
  1268                           	psect	text2
  1269     0478                     __ptext2:	
  1270 ;; *************** function _I2C_Master_Init *****************
  1271 ;; Defined at:
  1272 ;;		line 16 in file "I2C.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;  c               4    0[BANK0 ] const unsigned long 
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;		None
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  1    wreg      void 
  1279 ;; Registers used:
  1280 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1286 ;;      Params:         0       4       0       0       0
  1287 ;;      Locals:         0       0       0       0       0
  1288 ;;      Temps:          0       4       0       0       0
  1289 ;;      Totals:         0       8       0       0       0
  1290 ;;Total ram usage:        8 bytes
  1291 ;; Hardware stack levels used: 1
  1292 ;; Hardware stack levels required when called: 1
  1293 ;; This function calls:
  1294 ;;		___lldiv
  1295 ;; This function is called by:
  1296 ;;		_main
  1297 ;;		_setup
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301     0478                     _I2C_Master_Init:	
  1302                           ;psect for function _I2C_Master_Init
  1303                           
  1304     0478                     l1198:	
  1305                           ;incstack = 0
  1306                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1307                           
  1308                           
  1309                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1310     0478  3028               	movlw	40
  1311     0479  1283               	bcf	3,5	;RP0=0, select bank0
  1312     047A  1303               	bcf	3,6	;RP1=0, select bank0
  1313     047B  0094               	movwf	20	;volatile
  1314     047C                     l1200:
  1315                           
  1316                           ;I2C.c: 19:     SSPCON2 = 0;
  1317     047C  1683               	bsf	3,5	;RP0=1, select bank1
  1318     047D  1303               	bcf	3,6	;RP1=0, select bank1
  1319     047E  0191               	clrf	17	;volatile
  1320     047F                     l1202:
  1321                           
  1322                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1323     047F  1283               	bcf	3,5	;RP0=0, select bank0
  1324     0480  1303               	bcf	3,6	;RP1=0, select bank0
  1325     0481  0820               	movf	I2C_Master_Init@c,w
  1326     0482  00A4               	movwf	??_I2C_Master_Init
  1327     0483  0821               	movf	I2C_Master_Init@c+1,w
  1328     0484  00A5               	movwf	??_I2C_Master_Init+1
  1329     0485  0822               	movf	I2C_Master_Init@c+2,w
  1330     0486  00A6               	movwf	??_I2C_Master_Init+2
  1331     0487  0823               	movf	I2C_Master_Init@c+3,w
  1332     0488  00A7               	movwf	??_I2C_Master_Init+3
  1333     0489  3002               	movlw	2
  1334     048A                     u615:
  1335     048A  1003               	clrc
  1336     048B  0DA4               	rlf	??_I2C_Master_Init,f
  1337     048C  0DA5               	rlf	??_I2C_Master_Init+1,f
  1338     048D  0DA6               	rlf	??_I2C_Master_Init+2,f
  1339     048E  0DA7               	rlf	??_I2C_Master_Init+3,f
  1340     048F                     u610:
  1341     048F  3EFF               	addlw	-1
  1342     0490  1D03               	skipz
  1343     0491  2C8A               	goto	u615
  1344     0492  0827               	movf	??_I2C_Master_Init+3,w
  1345     0493  00F3               	movwf	___lldiv@divisor+3
  1346     0494  0826               	movf	??_I2C_Master_Init+2,w
  1347     0495  00F2               	movwf	___lldiv@divisor+2
  1348     0496  0825               	movf	??_I2C_Master_Init+1,w
  1349     0497  00F1               	movwf	___lldiv@divisor+1
  1350     0498  0824               	movf	??_I2C_Master_Init,w
  1351     0499  00F0               	movwf	___lldiv@divisor
  1352     049A  3000               	movlw	0
  1353     049B  00F7               	movwf	___lldiv@dividend+3
  1354     049C  307A               	movlw	122
  1355     049D  00F6               	movwf	___lldiv@dividend+2
  1356     049E  3012               	movlw	18
  1357     049F  00F5               	movwf	___lldiv@dividend+1
  1358     04A0  3000               	movlw	0
  1359     04A1  00F4               	movwf	___lldiv@dividend
  1360     04A2  120A  118A  25AC  120A  118A  	fcall	___lldiv
  1361     04A7  0870               	movf	?___lldiv,w
  1362     04A8  3EFF               	addlw	255
  1363     04A9  1683               	bsf	3,5	;RP0=1, select bank1
  1364     04AA  1303               	bcf	3,6	;RP1=0, select bank1
  1365     04AB  0093               	movwf	19	;volatile
  1366     04AC                     l1204:
  1367                           
  1368                           ;I2C.c: 21:     SSPSTAT = 0;
  1369     04AC  0194               	clrf	20	;volatile
  1370     04AD                     l1206:
  1371                           
  1372                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1373     04AD  1587               	bsf	7,3	;volatile
  1374     04AE                     l1208:
  1375                           
  1376                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1377     04AE  1607               	bsf	7,4	;volatile
  1378     04AF                     l29:
  1379     04AF  0008               	return
  1380     04B0                     __end_of_I2C_Master_Init:
  1381                           
  1382                           	psect	text3
  1383     05AC                     __ptext3:	
  1384 ;; *************** function ___lldiv *****************
  1385 ;; Defined at:
  1386 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;  divisor         4    0[COMMON] unsigned long 
  1389 ;;  dividend        4    4[COMMON] unsigned long 
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;  quotient        4    9[COMMON] unsigned long 
  1392 ;;  counter         1   13[COMMON] unsigned char 
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  4    0[COMMON] unsigned long 
  1395 ;; Registers used:
  1396 ;;		wreg, status,2, status,0, btemp+1
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1402 ;;      Params:         8       0       0       0       0
  1403 ;;      Locals:         5       0       0       0       0
  1404 ;;      Temps:          1       0       0       0       0
  1405 ;;      Totals:        14       0       0       0       0
  1406 ;;Total ram usage:       14 bytes
  1407 ;; Hardware stack levels used: 1
  1408 ;; This function calls:
  1409 ;;		Nothing
  1410 ;; This function is called by:
  1411 ;;		_I2C_Master_Init
  1412 ;;		_UART_Init
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416     05AC                     ___lldiv:	
  1417                           ;psect for function ___lldiv
  1418                           
  1419     05AC                     l1172:	
  1420                           ;incstack = 0
  1421                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1422                           
  1423     05AC  3000               	movlw	0
  1424     05AD  00FC               	movwf	___lldiv@quotient+3
  1425     05AE  3000               	movlw	0
  1426     05AF  00FB               	movwf	___lldiv@quotient+2
  1427     05B0  3000               	movlw	0
  1428     05B1  00FA               	movwf	___lldiv@quotient+1
  1429     05B2  3000               	movlw	0
  1430     05B3  00F9               	movwf	___lldiv@quotient
  1431     05B4  0873               	movf	___lldiv@divisor+3,w
  1432     05B5  0472               	iorwf	___lldiv@divisor+2,w
  1433     05B6  0471               	iorwf	___lldiv@divisor+1,w
  1434     05B7  0470               	iorwf	___lldiv@divisor,w
  1435     05B8  1903               	skipnz
  1436     05B9  2DBB               	goto	u541
  1437     05BA  2DBC               	goto	u540
  1438     05BB                     u541:
  1439     05BB  2E09               	goto	l1194
  1440     05BC                     u540:
  1441     05BC                     l1174:
  1442     05BC  01FD               	clrf	___lldiv@counter
  1443     05BD  0AFD               	incf	___lldiv@counter,f
  1444     05BE  2DCC               	goto	l1180
  1445     05BF                     l1176:
  1446     05BF  3001               	movlw	1
  1447     05C0  00F8               	movwf	??___lldiv
  1448     05C1                     u555:
  1449     05C1  1003               	clrc
  1450     05C2  0DF0               	rlf	___lldiv@divisor,f
  1451     05C3  0DF1               	rlf	___lldiv@divisor+1,f
  1452     05C4  0DF2               	rlf	___lldiv@divisor+2,f
  1453     05C5  0DF3               	rlf	___lldiv@divisor+3,f
  1454     05C6  0BF8               	decfsz	??___lldiv,f
  1455     05C7  2DC1               	goto	u555
  1456     05C8                     l1178:
  1457     05C8  3001               	movlw	1
  1458     05C9  00FF               	movwf	btemp+1
  1459     05CA  087F               	movf	btemp+1,w
  1460     05CB  07FD               	addwf	___lldiv@counter,f
  1461     05CC                     l1180:
  1462     05CC  1FF3               	btfss	___lldiv@divisor+3,7
  1463     05CD  2DCF               	goto	u561
  1464     05CE  2DD0               	goto	u560
  1465     05CF                     u561:
  1466     05CF  2DBF               	goto	l1176
  1467     05D0                     u560:
  1468     05D0                     l1182:
  1469     05D0  3001               	movlw	1
  1470     05D1  00F8               	movwf	??___lldiv
  1471     05D2                     u575:
  1472     05D2  1003               	clrc
  1473     05D3  0DF9               	rlf	___lldiv@quotient,f
  1474     05D4  0DFA               	rlf	___lldiv@quotient+1,f
  1475     05D5  0DFB               	rlf	___lldiv@quotient+2,f
  1476     05D6  0DFC               	rlf	___lldiv@quotient+3,f
  1477     05D7  0BF8               	decfsz	??___lldiv,f
  1478     05D8  2DD2               	goto	u575
  1479     05D9                     l1184:
  1480     05D9  0873               	movf	___lldiv@divisor+3,w
  1481     05DA  0277               	subwf	___lldiv@dividend+3,w
  1482     05DB  1D03               	skipz
  1483     05DC  2DE7               	goto	u585
  1484     05DD  0872               	movf	___lldiv@divisor+2,w
  1485     05DE  0276               	subwf	___lldiv@dividend+2,w
  1486     05DF  1D03               	skipz
  1487     05E0  2DE7               	goto	u585
  1488     05E1  0871               	movf	___lldiv@divisor+1,w
  1489     05E2  0275               	subwf	___lldiv@dividend+1,w
  1490     05E3  1D03               	skipz
  1491     05E4  2DE7               	goto	u585
  1492     05E5  0870               	movf	___lldiv@divisor,w
  1493     05E6  0274               	subwf	___lldiv@dividend,w
  1494     05E7                     u585:
  1495     05E7  1C03               	skipc
  1496     05E8  2DEA               	goto	u581
  1497     05E9  2DEB               	goto	u580
  1498     05EA                     u581:
  1499     05EA  2DFA               	goto	l1190
  1500     05EB                     u580:
  1501     05EB                     l1186:
  1502     05EB  0870               	movf	___lldiv@divisor,w
  1503     05EC  02F4               	subwf	___lldiv@dividend,f
  1504     05ED  0871               	movf	___lldiv@divisor+1,w
  1505     05EE  1C03               	skipc
  1506     05EF  0F71               	incfsz	___lldiv@divisor+1,w
  1507     05F0  02F5               	subwf	___lldiv@dividend+1,f
  1508     05F1  0872               	movf	___lldiv@divisor+2,w
  1509     05F2  1C03               	skipc
  1510     05F3  0F72               	incfsz	___lldiv@divisor+2,w
  1511     05F4  02F6               	subwf	___lldiv@dividend+2,f
  1512     05F5  0873               	movf	___lldiv@divisor+3,w
  1513     05F6  1C03               	skipc
  1514     05F7  0F73               	incfsz	___lldiv@divisor+3,w
  1515     05F8  02F7               	subwf	___lldiv@dividend+3,f
  1516     05F9                     l1188:
  1517     05F9  1479               	bsf	___lldiv@quotient,0
  1518     05FA                     l1190:
  1519     05FA  3001               	movlw	1
  1520     05FB                     u595:
  1521     05FB  1003               	clrc
  1522     05FC  0CF3               	rrf	___lldiv@divisor+3,f
  1523     05FD  0CF2               	rrf	___lldiv@divisor+2,f
  1524     05FE  0CF1               	rrf	___lldiv@divisor+1,f
  1525     05FF  0CF0               	rrf	___lldiv@divisor,f
  1526     0600  3EFF               	addlw	-1
  1527     0601  1D03               	skipz
  1528     0602  2DFB               	goto	u595
  1529     0603                     l1192:
  1530     0603  3001               	movlw	1
  1531     0604  02FD               	subwf	___lldiv@counter,f
  1532     0605  1D03               	btfss	3,2
  1533     0606  2E08               	goto	u601
  1534     0607  2E09               	goto	u600
  1535     0608                     u601:
  1536     0608  2DD0               	goto	l1182
  1537     0609                     u600:
  1538     0609                     l1194:
  1539     0609  087C               	movf	___lldiv@quotient+3,w
  1540     060A  00F3               	movwf	?___lldiv+3
  1541     060B  087B               	movf	___lldiv@quotient+2,w
  1542     060C  00F2               	movwf	?___lldiv+2
  1543     060D  087A               	movf	___lldiv@quotient+1,w
  1544     060E  00F1               	movwf	?___lldiv+1
  1545     060F  0879               	movf	___lldiv@quotient,w
  1546     0610  00F0               	movwf	?___lldiv
  1547     0611                     l342:
  1548     0611  0008               	return
  1549     0612                     __end_of___lldiv:
  1550                           
  1551                           	psect	text4
  1552     04F6                     __ptext4:	
  1553 ;; *************** function ___awmod *****************
  1554 ;; Defined at:
  1555 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;  divisor         2    8[COMMON] int 
  1558 ;;  dividend        2   10[COMMON] int 
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;  sign            1   13[COMMON] unsigned char 
  1561 ;;  counter         1   12[COMMON] unsigned char 
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  2    8[COMMON] int 
  1564 ;; Registers used:
  1565 ;;		wreg, status,2, status,0, btemp+1
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1571 ;;      Params:         4       0       0       0       0
  1572 ;;      Locals:         2       0       0       0       0
  1573 ;;      Temps:          0       0       0       0       0
  1574 ;;      Totals:         6       0       0       0       0
  1575 ;;Total ram usage:        6 bytes
  1576 ;; Hardware stack levels used: 1
  1577 ;; This function calls:
  1578 ;;		Nothing
  1579 ;; This function is called by:
  1580 ;;		_main
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584     04F6                     ___awmod:	
  1585                           ;psect for function ___awmod
  1586                           
  1587     04F6                     l1358:	
  1588                           ;incstack = 0
  1589                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1590                           
  1591     04F6  01FD               	clrf	___awmod@sign
  1592     04F7                     l1360:
  1593     04F7  1FFB               	btfss	___awmod@dividend+1,7
  1594     04F8  2CFA               	goto	u811
  1595     04F9  2CFB               	goto	u810
  1596     04FA                     u811:
  1597     04FA  2D02               	goto	l1366
  1598     04FB                     u810:
  1599     04FB                     l1362:
  1600     04FB  09FA               	comf	___awmod@dividend,f
  1601     04FC  09FB               	comf	___awmod@dividend+1,f
  1602     04FD  0AFA               	incf	___awmod@dividend,f
  1603     04FE  1903               	skipnz
  1604     04FF  0AFB               	incf	___awmod@dividend+1,f
  1605     0500                     l1364:
  1606     0500  01FD               	clrf	___awmod@sign
  1607     0501  0AFD               	incf	___awmod@sign,f
  1608     0502                     l1366:
  1609     0502  1FF9               	btfss	___awmod@divisor+1,7
  1610     0503  2D05               	goto	u821
  1611     0504  2D06               	goto	u820
  1612     0505                     u821:
  1613     0505  2D0B               	goto	l1370
  1614     0506                     u820:
  1615     0506                     l1368:
  1616     0506  09F8               	comf	___awmod@divisor,f
  1617     0507  09F9               	comf	___awmod@divisor+1,f
  1618     0508  0AF8               	incf	___awmod@divisor,f
  1619     0509  1903               	skipnz
  1620     050A  0AF9               	incf	___awmod@divisor+1,f
  1621     050B                     l1370:
  1622     050B  0878               	movf	___awmod@divisor,w
  1623     050C  0479               	iorwf	___awmod@divisor+1,w
  1624     050D  1903               	btfsc	3,2
  1625     050E  2D10               	goto	u831
  1626     050F  2D11               	goto	u830
  1627     0510                     u831:
  1628     0510  2D40               	goto	l1388
  1629     0511                     u830:
  1630     0511                     l1372:
  1631     0511  01FC               	clrf	___awmod@counter
  1632     0512  0AFC               	incf	___awmod@counter,f
  1633     0513  2D1F               	goto	l1378
  1634     0514                     l1374:
  1635     0514  3001               	movlw	1
  1636     0515                     u845:
  1637     0515  1003               	clrc
  1638     0516  0DF8               	rlf	___awmod@divisor,f
  1639     0517  0DF9               	rlf	___awmod@divisor+1,f
  1640     0518  3EFF               	addlw	-1
  1641     0519  1D03               	skipz
  1642     051A  2D15               	goto	u845
  1643     051B                     l1376:
  1644     051B  3001               	movlw	1
  1645     051C  00FF               	movwf	btemp+1
  1646     051D  087F               	movf	btemp+1,w
  1647     051E  07FC               	addwf	___awmod@counter,f
  1648     051F                     l1378:
  1649     051F  1FF9               	btfss	___awmod@divisor+1,7
  1650     0520  2D22               	goto	u851
  1651     0521  2D23               	goto	u850
  1652     0522                     u851:
  1653     0522  2D14               	goto	l1374
  1654     0523                     u850:
  1655     0523                     l1380:
  1656     0523  0879               	movf	___awmod@divisor+1,w
  1657     0524  027B               	subwf	___awmod@dividend+1,w
  1658     0525  1D03               	skipz
  1659     0526  2D29               	goto	u865
  1660     0527  0878               	movf	___awmod@divisor,w
  1661     0528  027A               	subwf	___awmod@dividend,w
  1662     0529                     u865:
  1663     0529  1C03               	skipc
  1664     052A  2D2C               	goto	u861
  1665     052B  2D2D               	goto	u860
  1666     052C                     u861:
  1667     052C  2D33               	goto	l1384
  1668     052D                     u860:
  1669     052D                     l1382:
  1670     052D  0878               	movf	___awmod@divisor,w
  1671     052E  02FA               	subwf	___awmod@dividend,f
  1672     052F  0879               	movf	___awmod@divisor+1,w
  1673     0530  1C03               	skipc
  1674     0531  03FB               	decf	___awmod@dividend+1,f
  1675     0532  02FB               	subwf	___awmod@dividend+1,f
  1676     0533                     l1384:
  1677     0533  3001               	movlw	1
  1678     0534                     u875:
  1679     0534  1003               	clrc
  1680     0535  0CF9               	rrf	___awmod@divisor+1,f
  1681     0536  0CF8               	rrf	___awmod@divisor,f
  1682     0537  3EFF               	addlw	-1
  1683     0538  1D03               	skipz
  1684     0539  2D34               	goto	u875
  1685     053A                     l1386:
  1686     053A  3001               	movlw	1
  1687     053B  02FC               	subwf	___awmod@counter,f
  1688     053C  1D03               	btfss	3,2
  1689     053D  2D3F               	goto	u881
  1690     053E  2D40               	goto	u880
  1691     053F                     u881:
  1692     053F  2D23               	goto	l1380
  1693     0540                     u880:
  1694     0540                     l1388:
  1695     0540  087D               	movf	___awmod@sign,w
  1696     0541  1903               	btfsc	3,2
  1697     0542  2D44               	goto	u891
  1698     0543  2D45               	goto	u890
  1699     0544                     u891:
  1700     0544  2D4A               	goto	l1392
  1701     0545                     u890:
  1702     0545                     l1390:
  1703     0545  09FA               	comf	___awmod@dividend,f
  1704     0546  09FB               	comf	___awmod@dividend+1,f
  1705     0547  0AFA               	incf	___awmod@dividend,f
  1706     0548  1903               	skipnz
  1707     0549  0AFB               	incf	___awmod@dividend+1,f
  1708     054A                     l1392:
  1709     054A  087B               	movf	___awmod@dividend+1,w
  1710     054B  00F9               	movwf	?___awmod+1
  1711     054C  087A               	movf	___awmod@dividend,w
  1712     054D  00F8               	movwf	?___awmod
  1713     054E                     l472:
  1714     054E  0008               	return
  1715     054F                     __end_of___awmod:
  1716                           
  1717                           	psect	text5
  1718     0612                     __ptext5:	
  1719 ;; *************** function ___awdiv *****************
  1720 ;; Defined at:
  1721 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;  divisor         2    0[COMMON] int 
  1724 ;;  dividend        2    2[COMMON] int 
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;  quotient        2    6[COMMON] int 
  1727 ;;  sign            1    5[COMMON] unsigned char 
  1728 ;;  counter         1    4[COMMON] unsigned char 
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  2    0[COMMON] int 
  1731 ;; Registers used:
  1732 ;;		wreg, status,2, status,0, btemp+1
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1738 ;;      Params:         4       0       0       0       0
  1739 ;;      Locals:         4       0       0       0       0
  1740 ;;      Temps:          0       0       0       0       0
  1741 ;;      Totals:         8       0       0       0       0
  1742 ;;Total ram usage:        8 bytes
  1743 ;; Hardware stack levels used: 1
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751     0612                     ___awdiv:	
  1752                           ;psect for function ___awdiv
  1753                           
  1754     0612                     l1314:	
  1755                           ;incstack = 0
  1756                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  1757                           
  1758     0612  01F5               	clrf	___awdiv@sign
  1759     0613                     l1316:
  1760     0613  1FF1               	btfss	___awdiv@divisor+1,7
  1761     0614  2E16               	goto	u711
  1762     0615  2E17               	goto	u710
  1763     0616                     u711:
  1764     0616  2E1E               	goto	l1322
  1765     0617                     u710:
  1766     0617                     l1318:
  1767     0617  09F0               	comf	___awdiv@divisor,f
  1768     0618  09F1               	comf	___awdiv@divisor+1,f
  1769     0619  0AF0               	incf	___awdiv@divisor,f
  1770     061A  1903               	skipnz
  1771     061B  0AF1               	incf	___awdiv@divisor+1,f
  1772     061C                     l1320:
  1773     061C  01F5               	clrf	___awdiv@sign
  1774     061D  0AF5               	incf	___awdiv@sign,f
  1775     061E                     l1322:
  1776     061E  1FF3               	btfss	___awdiv@dividend+1,7
  1777     061F  2E21               	goto	u721
  1778     0620  2E22               	goto	u720
  1779     0621                     u721:
  1780     0621  2E2B               	goto	l1328
  1781     0622                     u720:
  1782     0622                     l1324:
  1783     0622  09F2               	comf	___awdiv@dividend,f
  1784     0623  09F3               	comf	___awdiv@dividend+1,f
  1785     0624  0AF2               	incf	___awdiv@dividend,f
  1786     0625  1903               	skipnz
  1787     0626  0AF3               	incf	___awdiv@dividend+1,f
  1788     0627                     l1326:
  1789     0627  3001               	movlw	1
  1790     0628  00FF               	movwf	btemp+1
  1791     0629  087F               	movf	btemp+1,w
  1792     062A  06F5               	xorwf	___awdiv@sign,f
  1793     062B                     l1328:
  1794     062B  01F6               	clrf	___awdiv@quotient
  1795     062C  01F7               	clrf	___awdiv@quotient+1
  1796     062D                     l1330:
  1797     062D  0870               	movf	___awdiv@divisor,w
  1798     062E  0471               	iorwf	___awdiv@divisor+1,w
  1799     062F  1903               	btfsc	3,2
  1800     0630  2E32               	goto	u731
  1801     0631  2E33               	goto	u730
  1802     0632                     u731:
  1803     0632  2E6A               	goto	l1350
  1804     0633                     u730:
  1805     0633                     l1332:
  1806     0633  01F4               	clrf	___awdiv@counter
  1807     0634  0AF4               	incf	___awdiv@counter,f
  1808     0635  2E41               	goto	l1338
  1809     0636                     l1334:
  1810     0636  3001               	movlw	1
  1811     0637                     u745:
  1812     0637  1003               	clrc
  1813     0638  0DF0               	rlf	___awdiv@divisor,f
  1814     0639  0DF1               	rlf	___awdiv@divisor+1,f
  1815     063A  3EFF               	addlw	-1
  1816     063B  1D03               	skipz
  1817     063C  2E37               	goto	u745
  1818     063D                     l1336:
  1819     063D  3001               	movlw	1
  1820     063E  00FF               	movwf	btemp+1
  1821     063F  087F               	movf	btemp+1,w
  1822     0640  07F4               	addwf	___awdiv@counter,f
  1823     0641                     l1338:
  1824     0641  1FF1               	btfss	___awdiv@divisor+1,7
  1825     0642  2E44               	goto	u751
  1826     0643  2E45               	goto	u750
  1827     0644                     u751:
  1828     0644  2E36               	goto	l1334
  1829     0645                     u750:
  1830     0645                     l1340:
  1831     0645  3001               	movlw	1
  1832     0646                     u765:
  1833     0646  1003               	clrc
  1834     0647  0DF6               	rlf	___awdiv@quotient,f
  1835     0648  0DF7               	rlf	___awdiv@quotient+1,f
  1836     0649  3EFF               	addlw	-1
  1837     064A  1D03               	skipz
  1838     064B  2E46               	goto	u765
  1839     064C  0871               	movf	___awdiv@divisor+1,w
  1840     064D  0273               	subwf	___awdiv@dividend+1,w
  1841     064E  1D03               	skipz
  1842     064F  2E52               	goto	u775
  1843     0650  0870               	movf	___awdiv@divisor,w
  1844     0651  0272               	subwf	___awdiv@dividend,w
  1845     0652                     u775:
  1846     0652  1C03               	skipc
  1847     0653  2E55               	goto	u771
  1848     0654  2E56               	goto	u770
  1849     0655                     u771:
  1850     0655  2E5D               	goto	l1346
  1851     0656                     u770:
  1852     0656                     l1342:
  1853     0656  0870               	movf	___awdiv@divisor,w
  1854     0657  02F2               	subwf	___awdiv@dividend,f
  1855     0658  0871               	movf	___awdiv@divisor+1,w
  1856     0659  1C03               	skipc
  1857     065A  03F3               	decf	___awdiv@dividend+1,f
  1858     065B  02F3               	subwf	___awdiv@dividend+1,f
  1859     065C                     l1344:
  1860     065C  1476               	bsf	___awdiv@quotient,0
  1861     065D                     l1346:
  1862     065D  3001               	movlw	1
  1863     065E                     u785:
  1864     065E  1003               	clrc
  1865     065F  0CF1               	rrf	___awdiv@divisor+1,f
  1866     0660  0CF0               	rrf	___awdiv@divisor,f
  1867     0661  3EFF               	addlw	-1
  1868     0662  1D03               	skipz
  1869     0663  2E5E               	goto	u785
  1870     0664                     l1348:
  1871     0664  3001               	movlw	1
  1872     0665  02F4               	subwf	___awdiv@counter,f
  1873     0666  1D03               	btfss	3,2
  1874     0667  2E69               	goto	u791
  1875     0668  2E6A               	goto	u790
  1876     0669                     u791:
  1877     0669  2E45               	goto	l1340
  1878     066A                     u790:
  1879     066A                     l1350:
  1880     066A  0875               	movf	___awdiv@sign,w
  1881     066B  1903               	btfsc	3,2
  1882     066C  2E6E               	goto	u801
  1883     066D  2E6F               	goto	u800
  1884     066E                     u801:
  1885     066E  2E74               	goto	l1354
  1886     066F                     u800:
  1887     066F                     l1352:
  1888     066F  09F6               	comf	___awdiv@quotient,f
  1889     0670  09F7               	comf	___awdiv@quotient+1,f
  1890     0671  0AF6               	incf	___awdiv@quotient,f
  1891     0672  1903               	skipnz
  1892     0673  0AF7               	incf	___awdiv@quotient+1,f
  1893     0674                     l1354:
  1894     0674  0877               	movf	___awdiv@quotient+1,w
  1895     0675  00F1               	movwf	?___awdiv+1
  1896     0676  0876               	movf	___awdiv@quotient,w
  1897     0677  00F0               	movwf	?___awdiv
  1898     0678                     l459:
  1899     0678  0008               	return
  1900     0679                     __end_of___awdiv:
  1901                           
  1902                           	psect	text6
  1903     03D2                     __ptext6:	
  1904 ;; *************** function _Lcd_Write_String *****************
  1905 ;; Defined at:
  1906 ;;		line 98 in file "LCD.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  a               1    wreg     PTR unsigned char 
  1909 ;;		 -> datos2(2), datos(2), 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  a               1    8[COMMON] PTR unsigned char 
  1912 ;;		 -> datos2(2), datos(2), 
  1913 ;;  i               2    6[COMMON] int 
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  1    wreg      void 
  1916 ;; Registers used:
  1917 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1923 ;;      Params:         0       0       0       0       0
  1924 ;;      Locals:         3       0       0       0       0
  1925 ;;      Temps:          1       0       0       0       0
  1926 ;;      Totals:         4       0       0       0       0
  1927 ;;Total ram usage:        4 bytes
  1928 ;; Hardware stack levels used: 1
  1929 ;; Hardware stack levels required when called: 2
  1930 ;; This function calls:
  1931 ;;		_Lcd_Write_Char
  1932 ;; This function is called by:
  1933 ;;		_main
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937     03D2                     _Lcd_Write_String:	
  1938                           ;psect for function _Lcd_Write_String
  1939                           
  1940                           
  1941                           ;incstack = 0
  1942                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1943                           ;Lcd_Write_String@a stored from wreg
  1944     03D2  00F8               	movwf	Lcd_Write_String@a
  1945     03D3                     l1302:
  1946                           
  1947                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  1948     03D3  01F6               	clrf	Lcd_Write_String@i
  1949     03D4  01F7               	clrf	Lcd_Write_String@i+1
  1950     03D5  2BE7               	goto	l1308
  1951     03D6                     l1304:
  1952                           
  1953                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  1954     03D6  0876               	movf	Lcd_Write_String@i,w
  1955     03D7  0778               	addwf	Lcd_Write_String@a,w
  1956     03D8  00F5               	movwf	??_Lcd_Write_String
  1957     03D9  0875               	movf	??_Lcd_Write_String,w
  1958     03DA  0084               	movwf	4
  1959     03DB  0800               	movf	0,w
  1960     03DC  120A  118A  2443  120A  118A  	fcall	_Lcd_Write_Char
  1961     03E1                     l1306:
  1962     03E1  3001               	movlw	1
  1963     03E2  07F6               	addwf	Lcd_Write_String@i,f
  1964     03E3  1803               	skipnc
  1965     03E4  0AF7               	incf	Lcd_Write_String@i+1,f
  1966     03E5  3000               	movlw	0
  1967     03E6  07F7               	addwf	Lcd_Write_String@i+1,f
  1968     03E7                     l1308:
  1969     03E7  0876               	movf	Lcd_Write_String@i,w
  1970     03E8  0778               	addwf	Lcd_Write_String@a,w
  1971     03E9  00F5               	movwf	??_Lcd_Write_String
  1972     03EA  0875               	movf	??_Lcd_Write_String,w
  1973     03EB  0084               	movwf	4
  1974     03EC  1383               	bcf	3,7	;select IRP bank0
  1975     03ED  0800               	movf	0,w
  1976     03EE  1D03               	btfss	3,2
  1977     03EF  2BF1               	goto	u701
  1978     03F0  2BF2               	goto	u700
  1979     03F1                     u701:
  1980     03F1  2BD6               	goto	l1304
  1981     03F2                     u700:
  1982     03F2                     l104:
  1983     03F2  0008               	return
  1984     03F3                     __end_of_Lcd_Write_String:
  1985                           
  1986                           	psect	text7
  1987     0443                     __ptext7:	
  1988 ;; *************** function _Lcd_Write_Char *****************
  1989 ;; Defined at:
  1990 ;;		line 83 in file "LCD.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;  a               1    wreg     unsigned char 
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;  a               1    4[COMMON] unsigned char 
  1995 ;;  y               1    3[COMMON] unsigned char 
  1996 ;;  temp            1    2[COMMON] unsigned char 
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  1    wreg      void 
  1999 ;; Registers used:
  2000 ;;		wreg, status,2, status,0, pclath, cstack
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2006 ;;      Params:         0       0       0       0       0
  2007 ;;      Locals:         3       0       0       0       0
  2008 ;;      Temps:          1       0       0       0       0
  2009 ;;      Totals:         4       0       0       0       0
  2010 ;;Total ram usage:        4 bytes
  2011 ;; Hardware stack levels used: 1
  2012 ;; Hardware stack levels required when called: 1
  2013 ;; This function calls:
  2014 ;;		_Lcd_Port
  2015 ;; This function is called by:
  2016 ;;		_Lcd_Write_String
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020     0443                     _Lcd_Write_Char:	
  2021                           ;psect for function _Lcd_Write_Char
  2022                           
  2023                           
  2024                           ;incstack = 0
  2025                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2026                           ;Lcd_Write_Char@a stored from wreg
  2027     0443  00F4               	movwf	Lcd_Write_Char@a
  2028     0444                     l1224:
  2029                           
  2030                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  2031     0444  0874               	movf	Lcd_Write_Char@a,w
  2032     0445  390F               	andlw	15
  2033     0446  00F2               	movwf	Lcd_Write_Char@temp
  2034                           
  2035                           ;LCD.c: 86:     y = a & 0xF0;
  2036     0447  0874               	movf	Lcd_Write_Char@a,w
  2037     0448  39F0               	andlw	240
  2038     0449  00F3               	movwf	Lcd_Write_Char@y
  2039     044A                     l1226:
  2040                           
  2041                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  2042     044A  1283               	bcf	3,5	;RP0=0, select bank0
  2043     044B  1303               	bcf	3,6	;RP1=0, select bank0
  2044     044C  1508               	bsf	8,2	;volatile
  2045     044D                     l1228:
  2046                           
  2047                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  2048     044D  0873               	movf	Lcd_Write_Char@y,w
  2049     044E  00F1               	movwf	??_Lcd_Write_Char
  2050     044F  3004               	movlw	4
  2051     0450                     u645:
  2052     0450  1003               	clrc
  2053     0451  0CF1               	rrf	??_Lcd_Write_Char,f
  2054     0452  3EFF               	addlw	-1
  2055     0453  1D03               	skipz
  2056     0454  2C50               	goto	u645
  2057     0455  0871               	movf	??_Lcd_Write_Char,w
  2058     0456  120A  118A  23F3  120A  118A  	fcall	_Lcd_Port
  2059     045B                     l1230:
  2060                           
  2061                           ;LCD.c: 89:     RD3 = 1;
  2062     045B  1283               	bcf	3,5	;RP0=0, select bank0
  2063     045C  1303               	bcf	3,6	;RP1=0, select bank0
  2064     045D  1588               	bsf	8,3	;volatile
  2065     045E                     l1232:
  2066                           
  2067                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2068     045E  301A               	movlw	26
  2069     045F  00F1               	movwf	??_Lcd_Write_Char
  2070     0460                     u1007:
  2071     0460  0BF1               	decfsz	??_Lcd_Write_Char,f
  2072     0461  2C60               	goto	u1007
  2073     0462  0000               	nop
  2074     0463                     l1234:
  2075                           
  2076                           ;LCD.c: 91:     RD3 = 0;
  2077     0463  1283               	bcf	3,5	;RP0=0, select bank0
  2078     0464  1303               	bcf	3,6	;RP1=0, select bank0
  2079     0465  1188               	bcf	8,3	;volatile
  2080     0466                     l1236:
  2081                           
  2082                           ;LCD.c: 92:     Lcd_Port(temp);
  2083     0466  0872               	movf	Lcd_Write_Char@temp,w
  2084     0467  120A  118A  23F3  120A  118A  	fcall	_Lcd_Port
  2085     046C                     l1238:
  2086                           
  2087                           ;LCD.c: 93:     RD3 = 1;
  2088     046C  1283               	bcf	3,5	;RP0=0, select bank0
  2089     046D  1303               	bcf	3,6	;RP1=0, select bank0
  2090     046E  1588               	bsf	8,3	;volatile
  2091     046F                     l1240:
  2092                           
  2093                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2094     046F  301A               	movlw	26
  2095     0470  00F1               	movwf	??_Lcd_Write_Char
  2096     0471                     u1017:
  2097     0471  0BF1               	decfsz	??_Lcd_Write_Char,f
  2098     0472  2C71               	goto	u1017
  2099     0473  0000               	nop
  2100     0474                     l1242:
  2101                           
  2102                           ;LCD.c: 95:     RD3 = 0;
  2103     0474  1283               	bcf	3,5	;RP0=0, select bank0
  2104     0475  1303               	bcf	3,6	;RP1=0, select bank0
  2105     0476  1188               	bcf	8,3	;volatile
  2106     0477                     l98:
  2107     0477  0008               	return
  2108     0478                     __end_of_Lcd_Write_Char:
  2109                           
  2110                           	psect	text8
  2111     04B0                     __ptext8:	
  2112 ;; *************** function _Lcd_Set_Cursor *****************
  2113 ;; Defined at:
  2114 ;;		line 48 in file "LCD.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  a               1    wreg     unsigned char 
  2117 ;;  b               1    4[COMMON] unsigned char 
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;  a               1    6[COMMON] unsigned char 
  2120 ;;  temp            1    9[COMMON] unsigned char 
  2121 ;;  y               1    8[COMMON] unsigned char 
  2122 ;;  z               1    7[COMMON] unsigned char 
  2123 ;; Return value:  Size  Location     Type
  2124 ;;                  1    wreg      void 
  2125 ;; Registers used:
  2126 ;;		wreg, status,2, status,0, pclath, cstack
  2127 ;; Tracked objects:
  2128 ;;		On entry : 0/0
  2129 ;;		On exit  : 0/0
  2130 ;;		Unchanged: 0/0
  2131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2132 ;;      Params:         1       0       0       0       0
  2133 ;;      Locals:         4       0       0       0       0
  2134 ;;      Temps:          1       0       0       0       0
  2135 ;;      Totals:         6       0       0       0       0
  2136 ;;Total ram usage:        6 bytes
  2137 ;; Hardware stack levels used: 1
  2138 ;; Hardware stack levels required when called: 2
  2139 ;; This function calls:
  2140 ;;		_Lcd_Cmd
  2141 ;; This function is called by:
  2142 ;;		_main
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146     04B0                     _Lcd_Set_Cursor:	
  2147                           ;psect for function _Lcd_Set_Cursor
  2148                           
  2149                           
  2150                           ;incstack = 0
  2151                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2152                           ;Lcd_Set_Cursor@a stored from wreg
  2153     04B0  00F6               	movwf	Lcd_Set_Cursor@a
  2154     04B1                     l1272:
  2155                           
  2156                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2157     04B1  0376               	decf	Lcd_Set_Cursor@a,w
  2158     04B2  1D03               	btfss	3,2
  2159     04B3  2CB5               	goto	u661
  2160     04B4  2CB6               	goto	u660
  2161     04B5                     u661:
  2162     04B5  2CD3               	goto	l1282
  2163     04B6                     u660:
  2164     04B6                     l1274:
  2165                           
  2166                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2167     04B6  0874               	movf	Lcd_Set_Cursor@b,w
  2168     04B7  3E7F               	addlw	127
  2169     04B8  00F9               	movwf	Lcd_Set_Cursor@temp
  2170                           
  2171                           ;LCD.c: 52:         z = temp >> 4;
  2172     04B9  0879               	movf	Lcd_Set_Cursor@temp,w
  2173     04BA  00F5               	movwf	??_Lcd_Set_Cursor
  2174     04BB  3004               	movlw	4
  2175     04BC                     u675:
  2176     04BC  1003               	clrc
  2177     04BD  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2178     04BE  3EFF               	addlw	-1
  2179     04BF  1D03               	skipz
  2180     04C0  2CBC               	goto	u675
  2181     04C1  0875               	movf	??_Lcd_Set_Cursor,w
  2182     04C2  00F7               	movwf	Lcd_Set_Cursor@z
  2183     04C3                     l1276:
  2184                           
  2185                           ;LCD.c: 53:         y = temp & 0x0F;
  2186     04C3  0879               	movf	Lcd_Set_Cursor@temp,w
  2187     04C4  390F               	andlw	15
  2188     04C5  00F8               	movwf	Lcd_Set_Cursor@y
  2189     04C6                     l1278:
  2190                           
  2191                           ;LCD.c: 54:         Lcd_Cmd(z);
  2192     04C6  0877               	movf	Lcd_Set_Cursor@z,w
  2193     04C7  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2194     04CC                     l1280:
  2195                           
  2196                           ;LCD.c: 55:         Lcd_Cmd(y);
  2197     04CC  0878               	movf	Lcd_Set_Cursor@y,w
  2198     04CD  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2199                           
  2200                           ;LCD.c: 56:     } else if (a == 2) {
  2201     04D2  2CF5               	goto	l92
  2202     04D3                     l1282:
  2203     04D3  3002               	movlw	2
  2204     04D4  0676               	xorwf	Lcd_Set_Cursor@a,w
  2205     04D5  1D03               	btfss	3,2
  2206     04D6  2CD8               	goto	u681
  2207     04D7  2CD9               	goto	u680
  2208     04D8                     u681:
  2209     04D8  2CF5               	goto	l92
  2210     04D9                     u680:
  2211     04D9                     l1284:
  2212                           
  2213                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2214     04D9  0874               	movf	Lcd_Set_Cursor@b,w
  2215     04DA  3EBF               	addlw	191
  2216     04DB  00F9               	movwf	Lcd_Set_Cursor@temp
  2217                           
  2218                           ;LCD.c: 58:         z = temp >> 4;
  2219     04DC  0879               	movf	Lcd_Set_Cursor@temp,w
  2220     04DD  00F5               	movwf	??_Lcd_Set_Cursor
  2221     04DE  3004               	movlw	4
  2222     04DF                     u695:
  2223     04DF  1003               	clrc
  2224     04E0  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2225     04E1  3EFF               	addlw	-1
  2226     04E2  1D03               	skipz
  2227     04E3  2CDF               	goto	u695
  2228     04E4  0875               	movf	??_Lcd_Set_Cursor,w
  2229     04E5  00F7               	movwf	Lcd_Set_Cursor@z
  2230     04E6                     l1286:
  2231                           
  2232                           ;LCD.c: 59:         y = temp & 0x0F;
  2233     04E6  0879               	movf	Lcd_Set_Cursor@temp,w
  2234     04E7  390F               	andlw	15
  2235     04E8  00F8               	movwf	Lcd_Set_Cursor@y
  2236     04E9                     l1288:
  2237                           
  2238                           ;LCD.c: 60:         Lcd_Cmd(z);
  2239     04E9  0877               	movf	Lcd_Set_Cursor@z,w
  2240     04EA  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2241     04EF                     l1290:
  2242                           
  2243                           ;LCD.c: 61:         Lcd_Cmd(y);
  2244     04EF  0878               	movf	Lcd_Set_Cursor@y,w
  2245     04F0  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2246     04F5                     l92:
  2247     04F5  0008               	return
  2248     04F6                     __end_of_Lcd_Set_Cursor:
  2249                           
  2250                           	psect	text9
  2251     054F                     __ptext9:	
  2252 ;; *************** function _Lcd_Init *****************
  2253 ;; Defined at:
  2254 ;;		line 65 in file "LCD.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;		None
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;		None
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  1    wreg      void 
  2261 ;; Registers used:
  2262 ;;		wreg, status,2, status,0, pclath, cstack
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2268 ;;      Params:         0       0       0       0       0
  2269 ;;      Locals:         0       0       0       0       0
  2270 ;;      Temps:          2       0       0       0       0
  2271 ;;      Totals:         2       0       0       0       0
  2272 ;;Total ram usage:        2 bytes
  2273 ;; Hardware stack levels used: 1
  2274 ;; Hardware stack levels required when called: 2
  2275 ;; This function calls:
  2276 ;;		_Lcd_Cmd
  2277 ;;		_Lcd_Port
  2278 ;; This function is called by:
  2279 ;;		_main
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283     054F                     _Lcd_Init:	
  2284                           ;psect for function _Lcd_Init
  2285                           
  2286     054F                     l1292:	
  2287                           ;incstack = 0
  2288                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2289                           
  2290                           
  2291                           ;LCD.c: 66:     Lcd_Port(0x00);
  2292     054F  3000               	movlw	0
  2293     0550  120A  118A  23F3  120A  118A  	fcall	_Lcd_Port
  2294     0555                     l1294:
  2295                           
  2296                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2297     0555  3034               	movlw	52
  2298     0556  00F5               	movwf	??_Lcd_Init+1
  2299     0557  30F1               	movlw	241
  2300     0558  00F4               	movwf	??_Lcd_Init
  2301     0559                     u1027:
  2302     0559  0BF4               	decfsz	??_Lcd_Init,f
  2303     055A  2D59               	goto	u1027
  2304     055B  0BF5               	decfsz	??_Lcd_Init+1,f
  2305     055C  2D59               	goto	u1027
  2306     055D  2D5E               	nop2
  2307     055E                     l1296:
  2308                           
  2309                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2310     055E  3003               	movlw	3
  2311     055F  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2312                           
  2313                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2314     0564  300D               	movlw	13
  2315     0565  00F5               	movwf	??_Lcd_Init+1
  2316     0566  30FB               	movlw	251
  2317     0567  00F4               	movwf	??_Lcd_Init
  2318     0568                     u1037:
  2319     0568  0BF4               	decfsz	??_Lcd_Init,f
  2320     0569  2D68               	goto	u1037
  2321     056A  0BF5               	decfsz	??_Lcd_Init+1,f
  2322     056B  2D68               	goto	u1037
  2323     056C  2D6D               	nop2
  2324     056D                     l1298:
  2325                           
  2326                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2327     056D  3003               	movlw	3
  2328     056E  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2329     0573                     l1300:
  2330                           
  2331                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2332     0573  301D               	movlw	29
  2333     0574  00F5               	movwf	??_Lcd_Init+1
  2334     0575  3091               	movlw	145
  2335     0576  00F4               	movwf	??_Lcd_Init
  2336     0577                     u1047:
  2337     0577  0BF4               	decfsz	??_Lcd_Init,f
  2338     0578  2D77               	goto	u1047
  2339     0579  0BF5               	decfsz	??_Lcd_Init+1,f
  2340     057A  2D77               	goto	u1047
  2341                           
  2342                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2343     057B  3003               	movlw	3
  2344     057C  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2345                           
  2346                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2347     0581  3002               	movlw	2
  2348     0582  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2349                           
  2350                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  2351     0587  3002               	movlw	2
  2352     0588  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2353                           
  2354                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  2355     058D  3008               	movlw	8
  2356     058E  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2357                           
  2358                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  2359     0593  3000               	movlw	0
  2360     0594  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2361                           
  2362                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  2363     0599  300C               	movlw	12
  2364     059A  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2365                           
  2366                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  2367     059F  3000               	movlw	0
  2368     05A0  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2369                           
  2370                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  2371     05A5  3006               	movlw	6
  2372     05A6  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2373     05AB                     l95:
  2374     05AB  0008               	return
  2375     05AC                     __end_of_Lcd_Init:
  2376                           
  2377                           	psect	text10
  2378     039E                     __ptext10:	
  2379 ;; *************** function _Lcd_Cmd *****************
  2380 ;; Defined at:
  2381 ;;		line 35 in file "LCD.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  a               1    wreg     unsigned char 
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;  a               1    3[COMMON] unsigned char 
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  1    wreg      void 
  2388 ;; Registers used:
  2389 ;;		wreg, status,2, status,0, pclath, cstack
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2395 ;;      Params:         0       0       0       0       0
  2396 ;;      Locals:         1       0       0       0       0
  2397 ;;      Temps:          2       0       0       0       0
  2398 ;;      Totals:         3       0       0       0       0
  2399 ;;Total ram usage:        3 bytes
  2400 ;; Hardware stack levels used: 1
  2401 ;; Hardware stack levels required when called: 1
  2402 ;; This function calls:
  2403 ;;		_Lcd_Port
  2404 ;; This function is called by:
  2405 ;;		_Lcd_Set_Cursor
  2406 ;;		_Lcd_Init
  2407 ;;		_Lcd_Clear
  2408 ;;		_Lcd_Shift_Right
  2409 ;;		_Lcd_Shift_Left
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413     039E                     _Lcd_Cmd:	
  2414                           ;psect for function _Lcd_Cmd
  2415                           
  2416                           
  2417                           ;incstack = 0
  2418                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2419                           ;Lcd_Cmd@a stored from wreg
  2420     039E  00F3               	movwf	Lcd_Cmd@a
  2421     039F                     l1214:
  2422                           
  2423                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  2424     039F  1283               	bcf	3,5	;RP0=0, select bank0
  2425     03A0  1303               	bcf	3,6	;RP1=0, select bank0
  2426     03A1  1108               	bcf	8,2	;volatile
  2427     03A2                     l1216:
  2428                           
  2429                           ;LCD.c: 37:     Lcd_Port(a);
  2430     03A2  0873               	movf	Lcd_Cmd@a,w
  2431     03A3  120A  118A  23F3  120A  118A  	fcall	_Lcd_Port
  2432     03A8                     l1218:
  2433                           
  2434                           ;LCD.c: 38:     RD3 = 1;
  2435     03A8  1283               	bcf	3,5	;RP0=0, select bank0
  2436     03A9  1303               	bcf	3,6	;RP1=0, select bank0
  2437     03AA  1588               	bsf	8,3	;volatile
  2438     03AB                     l1220:
  2439                           
  2440                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2441     03AB  300B               	movlw	11
  2442     03AC  00F2               	movwf	??_Lcd_Cmd+1
  2443     03AD  3062               	movlw	98
  2444     03AE  00F1               	movwf	??_Lcd_Cmd
  2445     03AF                     u1057:
  2446     03AF  0BF1               	decfsz	??_Lcd_Cmd,f
  2447     03B0  2BAF               	goto	u1057
  2448     03B1  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2449     03B2  2BAF               	goto	u1057
  2450     03B3  0000               	nop
  2451     03B4                     l1222:
  2452                           
  2453                           ;LCD.c: 40:     RD3 = 0;
  2454     03B4  1283               	bcf	3,5	;RP0=0, select bank0
  2455     03B5  1303               	bcf	3,6	;RP1=0, select bank0
  2456     03B6  1188               	bcf	8,3	;volatile
  2457     03B7                     l83:
  2458     03B7  0008               	return
  2459     03B8                     __end_of_Lcd_Cmd:
  2460                           
  2461                           	psect	text11
  2462     03F3                     __ptext11:	
  2463 ;; *************** function _Lcd_Port *****************
  2464 ;; Defined at:
  2465 ;;		line 13 in file "LCD.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;  a               1    wreg     unsigned char 
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;  a               1    0[COMMON] unsigned char 
  2470 ;; Return value:  Size  Location     Type
  2471 ;;                  1    wreg      void 
  2472 ;; Registers used:
  2473 ;;		wreg
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2479 ;;      Params:         0       0       0       0       0
  2480 ;;      Locals:         1       0       0       0       0
  2481 ;;      Temps:          0       0       0       0       0
  2482 ;;      Totals:         1       0       0       0       0
  2483 ;;Total ram usage:        1 bytes
  2484 ;; Hardware stack levels used: 1
  2485 ;; This function calls:
  2486 ;;		Nothing
  2487 ;; This function is called by:
  2488 ;;		_Lcd_Cmd
  2489 ;;		_Lcd_Init
  2490 ;;		_Lcd_Write_Char
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494     03F3                     _Lcd_Port:	
  2495                           ;psect for function _Lcd_Port
  2496                           
  2497                           
  2498                           ;incstack = 0
  2499                           ; Regs used in _Lcd_Port: [wreg]
  2500                           ;Lcd_Port@a stored from wreg
  2501     03F3  00F0               	movwf	Lcd_Port@a
  2502     03F4                     l1162:
  2503                           
  2504                           ;LCD.c: 14:     if (a & 1)
  2505     03F4  1C70               	btfss	Lcd_Port@a,0
  2506     03F5  2BF7               	goto	u501
  2507     03F6  2BF8               	goto	u500
  2508     03F7                     u501:
  2509     03F7  2BFC               	goto	l72
  2510     03F8                     u500:
  2511     03F8                     l1164:
  2512                           
  2513                           ;LCD.c: 15:         RD4 = 1;
  2514     03F8  1283               	bcf	3,5	;RP0=0, select bank0
  2515     03F9  1303               	bcf	3,6	;RP1=0, select bank0
  2516     03FA  1608               	bsf	8,4	;volatile
  2517     03FB  2BFF               	goto	l73
  2518     03FC                     l72:	
  2519                           ;LCD.c: 16:     else
  2520                           
  2521                           
  2522                           ;LCD.c: 17:         RD4 = 0;
  2523     03FC  1283               	bcf	3,5	;RP0=0, select bank0
  2524     03FD  1303               	bcf	3,6	;RP1=0, select bank0
  2525     03FE  1208               	bcf	8,4	;volatile
  2526     03FF                     l73:
  2527                           
  2528                           ;LCD.c: 19:     if (a & 2)
  2529     03FF  1CF0               	btfss	Lcd_Port@a,1
  2530     0400  2C02               	goto	u511
  2531     0401  2C03               	goto	u510
  2532     0402                     u511:
  2533     0402  2C05               	goto	l74
  2534     0403                     u510:
  2535     0403                     l1166:
  2536                           
  2537                           ;LCD.c: 20:         RD5 = 1;
  2538     0403  1688               	bsf	8,5	;volatile
  2539     0404  2C06               	goto	l75
  2540     0405                     l74:	
  2541                           ;LCD.c: 21:     else
  2542                           
  2543                           
  2544                           ;LCD.c: 22:         RD5 = 0;
  2545     0405  1288               	bcf	8,5	;volatile
  2546     0406                     l75:
  2547                           
  2548                           ;LCD.c: 24:     if (a & 4)
  2549     0406  1D70               	btfss	Lcd_Port@a,2
  2550     0407  2C09               	goto	u521
  2551     0408  2C0A               	goto	u520
  2552     0409                     u521:
  2553     0409  2C0C               	goto	l76
  2554     040A                     u520:
  2555     040A                     l1168:
  2556                           
  2557                           ;LCD.c: 25:         RD6 = 1;
  2558     040A  1708               	bsf	8,6	;volatile
  2559     040B  2C0D               	goto	l77
  2560     040C                     l76:	
  2561                           ;LCD.c: 26:     else
  2562                           
  2563                           
  2564                           ;LCD.c: 27:         RD6 = 0;
  2565     040C  1308               	bcf	8,6	;volatile
  2566     040D                     l77:
  2567                           
  2568                           ;LCD.c: 29:     if (a & 8)
  2569     040D  1DF0               	btfss	Lcd_Port@a,3
  2570     040E  2C10               	goto	u531
  2571     040F  2C11               	goto	u530
  2572     0410                     u531:
  2573     0410  2C13               	goto	l78
  2574     0411                     u530:
  2575     0411                     l1170:
  2576                           
  2577                           ;LCD.c: 30:         RD7 = 1;
  2578     0411  1788               	bsf	8,7	;volatile
  2579     0412  2C14               	goto	l80
  2580     0413                     l78:	
  2581                           ;LCD.c: 31:     else
  2582                           
  2583                           
  2584                           ;LCD.c: 32:         RD7 = 0;
  2585     0413  1388               	bcf	8,7	;volatile
  2586     0414                     l80:
  2587     0414  0008               	return
  2588     0415                     __end_of_Lcd_Port:
  2589                           
  2590                           	psect	text12
  2591     0387                     __ptext12:	
  2592 ;; *************** function _I2C_Master_Write *****************
  2593 ;; Defined at:
  2594 ;;		line 65 in file "I2C.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;  d               2    0[COMMON] unsigned int 
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;		None
  2599 ;; Return value:  Size  Location     Type
  2600 ;;                  1    wreg      void 
  2601 ;; Registers used:
  2602 ;;		wreg, status,2, status,0, pclath, cstack
  2603 ;; Tracked objects:
  2604 ;;		On entry : 0/0
  2605 ;;		On exit  : 0/0
  2606 ;;		Unchanged: 0/0
  2607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2608 ;;      Params:         2       0       0       0       0
  2609 ;;      Locals:         0       0       0       0       0
  2610 ;;      Temps:          0       0       0       0       0
  2611 ;;      Totals:         2       0       0       0       0
  2612 ;;Total ram usage:        2 bytes
  2613 ;; Hardware stack levels used: 1
  2614 ;; Hardware stack levels required when called: 1
  2615 ;; This function calls:
  2616 ;;		_I2C_Master_Wait
  2617 ;; This function is called by:
  2618 ;;		_main
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622     0387                     _I2C_Master_Write:	
  2623                           ;psect for function _I2C_Master_Write
  2624                           
  2625     0387                     l1252:	
  2626                           ;incstack = 0
  2627                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2628                           
  2629                           
  2630                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2631     0387  120A  118A  2391  120A  118A  	fcall	_I2C_Master_Wait
  2632     038C                     l1254:
  2633                           
  2634                           ;I2C.c: 68:     SSPBUF = d;
  2635     038C  0870               	movf	I2C_Master_Write@d,w
  2636     038D  1283               	bcf	3,5	;RP0=0, select bank0
  2637     038E  1303               	bcf	3,6	;RP1=0, select bank0
  2638     038F  0093               	movwf	19	;volatile
  2639     0390                     l47:
  2640     0390  0008               	return
  2641     0391                     __end_of_I2C_Master_Write:
  2642                           
  2643                           	psect	text13
  2644     037E                     __ptext13:	
  2645 ;; *************** function _I2C_Master_Stop *****************
  2646 ;; Defined at:
  2647 ;;		line 55 in file "I2C.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;		None
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;		None
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  1    wreg      void 
  2654 ;; Registers used:
  2655 ;;		wreg, status,2, status,0, pclath, cstack
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2661 ;;      Params:         0       0       0       0       0
  2662 ;;      Locals:         0       0       0       0       0
  2663 ;;      Temps:          0       0       0       0       0
  2664 ;;      Totals:         0       0       0       0       0
  2665 ;;Total ram usage:        0 bytes
  2666 ;; Hardware stack levels used: 1
  2667 ;; Hardware stack levels required when called: 1
  2668 ;; This function calls:
  2669 ;;		_I2C_Master_Wait
  2670 ;; This function is called by:
  2671 ;;		_main
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675     037E                     _I2C_Master_Stop:	
  2676                           ;psect for function _I2C_Master_Stop
  2677                           
  2678     037E                     l1248:	
  2679                           ;incstack = 0
  2680                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2681                           
  2682                           
  2683                           ;I2C.c: 57:     I2C_Master_Wait();
  2684     037E  120A  118A  2391  120A  118A  	fcall	_I2C_Master_Wait
  2685     0383                     l1250:
  2686                           
  2687                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2688     0383  1683               	bsf	3,5	;RP0=1, select bank1
  2689     0384  1303               	bcf	3,6	;RP1=0, select bank1
  2690     0385  1511               	bsf	17,2	;volatile
  2691     0386                     l44:
  2692     0386  0008               	return
  2693     0387                     __end_of_I2C_Master_Stop:
  2694                           
  2695                           	psect	text14
  2696     0375                     __ptext14:	
  2697 ;; *************** function _I2C_Master_Start *****************
  2698 ;; Defined at:
  2699 ;;		line 39 in file "I2C.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;		None
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;		None
  2704 ;; Return value:  Size  Location     Type
  2705 ;;                  1    wreg      void 
  2706 ;; Registers used:
  2707 ;;		wreg, status,2, status,0, pclath, cstack
  2708 ;; Tracked objects:
  2709 ;;		On entry : 0/0
  2710 ;;		On exit  : 0/0
  2711 ;;		Unchanged: 0/0
  2712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2713 ;;      Params:         0       0       0       0       0
  2714 ;;      Locals:         0       0       0       0       0
  2715 ;;      Temps:          0       0       0       0       0
  2716 ;;      Totals:         0       0       0       0       0
  2717 ;;Total ram usage:        0 bytes
  2718 ;; Hardware stack levels used: 1
  2719 ;; Hardware stack levels required when called: 1
  2720 ;; This function calls:
  2721 ;;		_I2C_Master_Wait
  2722 ;; This function is called by:
  2723 ;;		_main
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727     0375                     _I2C_Master_Start:	
  2728                           ;psect for function _I2C_Master_Start
  2729                           
  2730     0375                     l1244:	
  2731                           ;incstack = 0
  2732                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2733                           
  2734                           
  2735                           ;I2C.c: 41:     I2C_Master_Wait();
  2736     0375  120A  118A  2391  120A  118A  	fcall	_I2C_Master_Wait
  2737     037A                     l1246:
  2738                           
  2739                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2740     037A  1683               	bsf	3,5	;RP0=1, select bank1
  2741     037B  1303               	bcf	3,6	;RP1=0, select bank1
  2742     037C  1411               	bsf	17,0	;volatile
  2743     037D                     l38:
  2744     037D  0008               	return
  2745     037E                     __end_of_I2C_Master_Start:
  2746                           
  2747                           	psect	text15
  2748     0415                     __ptext15:	
  2749 ;; *************** function _I2C_Master_Read *****************
  2750 ;; Defined at:
  2751 ;;		line 74 in file "I2C.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  a               2    0[COMMON] unsigned short 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;  temp            2    4[COMMON] unsigned short 
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  2    0[COMMON] unsigned short 
  2758 ;; Registers used:
  2759 ;;		wreg, status,2, status,0, pclath, cstack
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2765 ;;      Params:         2       0       0       0       0
  2766 ;;      Locals:         2       0       0       0       0
  2767 ;;      Temps:          2       0       0       0       0
  2768 ;;      Totals:         6       0       0       0       0
  2769 ;;Total ram usage:        6 bytes
  2770 ;; Hardware stack levels used: 1
  2771 ;; Hardware stack levels required when called: 1
  2772 ;; This function calls:
  2773 ;;		_I2C_Master_Wait
  2774 ;; This function is called by:
  2775 ;;		_main
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779     0415                     _I2C_Master_Read:	
  2780                           ;psect for function _I2C_Master_Read
  2781                           
  2782     0415                     l1256:	
  2783                           ;incstack = 0
  2784                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2785                           
  2786                           
  2787                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2788     0415  120A  118A  2391  120A  118A  	fcall	_I2C_Master_Wait
  2789     041A                     l1258:
  2790                           
  2791                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2792     041A  1683               	bsf	3,5	;RP0=1, select bank1
  2793     041B  1303               	bcf	3,6	;RP1=0, select bank1
  2794     041C  1591               	bsf	17,3	;volatile
  2795                           
  2796                           ;I2C.c: 79:     I2C_Master_Wait();
  2797     041D  120A  118A  2391  120A  118A  	fcall	_I2C_Master_Wait
  2798     0422                     l1260:
  2799                           
  2800                           ;I2C.c: 80:     temp = SSPBUF;
  2801     0422  1283               	bcf	3,5	;RP0=0, select bank0
  2802     0423  1303               	bcf	3,6	;RP1=0, select bank0
  2803     0424  0813               	movf	19,w	;volatile
  2804     0425  00F2               	movwf	??_I2C_Master_Read
  2805     0426  01F3               	clrf	??_I2C_Master_Read+1
  2806     0427  0872               	movf	??_I2C_Master_Read,w
  2807     0428  00F4               	movwf	I2C_Master_Read@temp
  2808     0429  0873               	movf	??_I2C_Master_Read+1,w
  2809     042A  00F5               	movwf	I2C_Master_Read@temp+1
  2810     042B                     l1262:
  2811                           
  2812                           ;I2C.c: 81:     I2C_Master_Wait();
  2813     042B  120A  118A  2391  120A  118A  	fcall	_I2C_Master_Wait
  2814     0430                     l1264:
  2815                           
  2816                           ;I2C.c: 82:     if(a == 1){
  2817     0430  0370               	decf	I2C_Master_Read@a,w
  2818     0431  0471               	iorwf	I2C_Master_Read@a+1,w
  2819     0432  1D03               	btfss	3,2
  2820     0433  2C35               	goto	u651
  2821     0434  2C36               	goto	u650
  2822     0435                     u651:
  2823     0435  2C3A               	goto	l50
  2824     0436                     u650:
  2825     0436                     l1266:
  2826                           
  2827                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2828     0436  1683               	bsf	3,5	;RP0=1, select bank1
  2829     0437  1303               	bcf	3,6	;RP1=0, select bank1
  2830     0438  1291               	bcf	17,5	;volatile
  2831                           
  2832                           ;I2C.c: 84:     }else{
  2833     0439  2C3D               	goto	l51
  2834     043A                     l50:
  2835                           
  2836                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2837     043A  1683               	bsf	3,5	;RP0=1, select bank1
  2838     043B  1303               	bcf	3,6	;RP1=0, select bank1
  2839     043C  1691               	bsf	17,5	;volatile
  2840     043D                     l51:	
  2841                           ;I2C.c: 86:     }
  2842                           
  2843                           
  2844                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2845     043D  1611               	bsf	17,4	;volatile
  2846     043E                     l1268:
  2847                           
  2848                           ;I2C.c: 88:     return temp;
  2849     043E  0875               	movf	I2C_Master_Read@temp+1,w
  2850     043F  00F1               	movwf	?_I2C_Master_Read+1
  2851     0440  0874               	movf	I2C_Master_Read@temp,w
  2852     0441  00F0               	movwf	?_I2C_Master_Read
  2853     0442                     l52:
  2854     0442  0008               	return
  2855     0443                     __end_of_I2C_Master_Read:
  2856                           
  2857                           	psect	text16
  2858     0391                     __ptext16:	
  2859 ;; *************** function _I2C_Master_Wait *****************
  2860 ;; Defined at:
  2861 ;;		line 32 in file "I2C.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;		None
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;		None
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1    wreg      void 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2875 ;;      Params:         0       0       0       0       0
  2876 ;;      Locals:         0       0       0       0       0
  2877 ;;      Temps:          0       0       0       0       0
  2878 ;;      Totals:         0       0       0       0       0
  2879 ;;Total ram usage:        0 bytes
  2880 ;; Hardware stack levels used: 1
  2881 ;; This function calls:
  2882 ;;		Nothing
  2883 ;; This function is called by:
  2884 ;;		_I2C_Master_Start
  2885 ;;		_I2C_Master_Stop
  2886 ;;		_I2C_Master_Write
  2887 ;;		_I2C_Master_Read
  2888 ;;		_I2C_Master_RepeatedStart
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892     0391                     _I2C_Master_Wait:	
  2893                           ;psect for function _I2C_Master_Wait
  2894                           
  2895     0391                     l1210:	
  2896                           ;incstack = 0
  2897                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2898                           
  2899     0391                     l32:	
  2900                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2901                           
  2902     0391  1683               	bsf	3,5	;RP0=1, select bank1
  2903     0392  1303               	bcf	3,6	;RP1=0, select bank1
  2904     0393  1914               	btfsc	20,2	;volatile
  2905     0394  2B96               	goto	u621
  2906     0395  2B97               	goto	u620
  2907     0396                     u621:
  2908     0396  2B91               	goto	l32
  2909     0397                     u620:
  2910     0397                     l1212:
  2911     0397  0811               	movf	17,w	;volatile
  2912     0398  391F               	andlw	31
  2913     0399  1D03               	btfss	3,2
  2914     039A  2B9C               	goto	u631
  2915     039B  2B9D               	goto	u630
  2916     039C                     u631:
  2917     039C  2B91               	goto	l32
  2918     039D                     u630:
  2919     039D                     l35:
  2920     039D  0008               	return
  2921     039E                     __end_of_I2C_Master_Wait:
  2922     007E                     btemp	set	126	;btemp
  2923     007E                     wtemp0	set	126
  2924                           
  2925                           	psect	idloc
  2926                           
  2927                           ;Config register IDLOC0 @ 0x2000
  2928                           ;	unspecified, using default values
  2929     2000                     	org	8192
  2930     2000  3FFF               	dw	16383
  2931                           
  2932                           ;Config register IDLOC1 @ 0x2001
  2933                           ;	unspecified, using default values
  2934     2001                     	org	8193
  2935     2001  3FFF               	dw	16383
  2936                           
  2937                           ;Config register IDLOC2 @ 0x2002
  2938                           ;	unspecified, using default values
  2939     2002                     	org	8194
  2940     2002  3FFF               	dw	16383
  2941                           
  2942                           ;Config register IDLOC3 @ 0x2003
  2943                           ;	unspecified, using default values
  2944     2003                     	org	8195
  2945     2003  3FFF               	dw	16383
  2946                           
  2947                           	psect	config
  2948                           
  2949                           ;Config register CONFIG1 @ 0x2007
  2950                           ;	Oscillator Selection bits
  2951                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  2952                           ;	Watchdog Timer Enable bit
  2953                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2954                           ;	Power-up Timer Enable bit
  2955                           ;	PWRTE = OFF, PWRT disabled
  2956                           ;	RE3/MCLR pin function select bit
  2957                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2958                           ;	Code Protection bit
  2959                           ;	CP = OFF, Program memory code protection is disabled
  2960                           ;	Data Code Protection bit
  2961                           ;	CPD = OFF, Data memory code protection is disabled
  2962                           ;	Brown Out Reset Selection bits
  2963                           ;	BOREN = OFF, BOR disabled
  2964                           ;	Internal External Switchover bit
  2965                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2966                           ;	Fail-Safe Clock Monitor Enabled bit
  2967                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2968                           ;	Low Voltage Programming Enable bit
  2969                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2970                           ;	In-Circuit Debugger Mode bit
  2971                           ;	DEBUG = 0x1, unprogrammed default
  2972     2007                     	org	8199
  2973     2007  20D6               	dw	8406
  2974                           
  2975                           ;Config register CONFIG2 @ 0x2008
  2976                           ;	Brown-out Reset Selection bit
  2977                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2978                           ;	Flash Program Memory Self Write Enable bits
  2979                           ;	WRT = OFF, Write protection off
  2980     2008                     	org	8200
  2981     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    15
    Data        1
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 2
		 -> datos2(BANK0[2]), datos(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _I2C_Master_Init->___lldiv
    ___awmod->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init
    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5135
                                              8 BANK0      2     2      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     792
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     792
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     904
                                              8 COMMON     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     908
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     334
                                              5 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     532
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     478
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     197
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _setup
     _I2C_Master_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      13       5       23.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      21      12        0.0%
ABS                  0      0      21       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Aug 24 18:31:07 2023

                       _x 002C                         _y 002B                         _z 0032  
                       pc 0002                        l32 0391                        l50 043A  
                      l35 039D                        l51 043D                        l52 0442  
                      l44 0386                        l29 04AF                        l38 037D  
                      l47 0390                        l80 0414                        l72 03FC  
                      l73 03FF                        l74 0405                        l75 0406  
                      l83 03B7                        l76 040C                        l92 04F5  
                      l77 040D                        l78 0413                        l95 05AB  
                      l98 0477              ___awdiv@sign 0075                        fsr 0004  
                     l104 03F2                       l220 03D1                       l214 0692  
                     l342 0611                       l472 054E                       l459 0678  
                     _GIE 005F                       _RD3 0043                       _RD4 0044  
                     _RD5 0045                       _RD6 0046                       _RD7 0047  
                     u500 03F8                       u501 03F7                       u510 0403  
                     u511 0402                       u520 040A                       u600 0609  
                     u521 0409                       u601 0608                       u530 0411  
                     u610 048F                       u531 0410                       u620 0397  
                     u700 03F2                       u540 05BC                       u621 0396  
                     u701 03F1                       u541 05BB                       u630 039D  
                     u710 0617                       u631 039C                       u711 0616  
                     u615 048A                       u800 066F                       u720 0622  
                     u560 05D0                       u801 066E                       u721 0621  
                     u561 05CF                       u650 0436                       u730 0633  
                     u810 04FB                       u651 0435                       u731 0632  
                     u811 04FA                       u555 05C1                       u660 04B6  
                     u820 0506                       u580 05EB                       u661 04B5  
                     u645 0450                       u821 0505                       u581 05EA  
                     u750 0645                       u830 0511                       u751 0644  
                     u831 0510                       u575 05D2                       u680 04D9  
                     u681 04D8                       u745 0637                       u585 05E7  
                     u770 0656                       u850 0523                       u675 04BC  
                     u771 0655                       u851 0522                       u595 05FB  
                     u860 052D                       u765 0646                       u861 052C  
                     u845 0515                       u790 066A                       u695 04DF  
                     u791 0669                       u775 0652                       u880 0540  
                     u785 065E                       u881 053F                       u865 0529  
                     u890 0545                       u891 0544                       u875 0534  
                     u957 06B2                       u967 06DA                       u977 06FF  
                     u987 0727                       u997 07CA                       _mot 002A  
                     fsr0 0004                       indf 0000              ___awmod@sign 007D  
                    l1200 047C                      l1210 0391                      l1202 047F  
                    l1212 0397                      l1220 03AB                      l1300 0573  
                    l1204 04AC                      l1222 03B4                      l1214 039F  
                    l1230 045B                      l1302 03D3                      l1206 04AD  
                    l1310 03B8                      l1216 03A2                      l1240 046F  
                    l1232 045E                      l1224 0444                      l1304 03D6  
                    l1320 061C                      l1208 04AE                      l1312 03C4  
                    l1250 0383                      l1170 0411                      l1162 03F4  
                    l1218 03A8                      l1242 0474                      l1234 0463  
                    l1226 044A                      l1306 03E1                      l1330 062D  
                    l1322 061E                      l1314 0612                      l1260 0422  
                    l1244 0375                      l1252 0387                      l1164 03F8  
                    l1236 0466                      l1228 044D                      l1308 03E7  
                    l1340 0645                      l1332 0633                      l1324 0622  
                    l1316 0613                      l1180 05CC                      l1172 05AC  
                    l1262 042B                      l1246 037A                      l1254 038C  
                    l1166 0403                      l1238 046C                      l1342 0656  
                    l1334 0636                      l1350 066A                      l1326 0627  
                    l1318 0617                      l1190 05FA                      l1182 05D0  
                    l1174 05BC                      l1430 06B7                      l1422 0679  
                    l1264 0430                      l1256 0415                      l1248 037E  
                    l1168 040A                      l1280 04CC                      l1272 04B1  
                    l1352 066F                      l1344 065C                      l1336 063D  
                    l1328 062B                      l1360 04F7                      l1192 0603  
                    l1184 05D9                      l1176 05BF                      l1440 06FB  
                    l1432 06BC                      l1424 067E                      l1266 0436  
                    l1258 041A                      l1290 04EF                      l1274 04B6  
                    l1282 04D3                      l1354 0674                      l1346 065D  
                    l1338 0641                      l1370 050B                      l1362 04FB  
                    l1186 05EB                      l1178 05C8                      l1194 0609  
                    l1450 0723                      l1442 0704                      l1434 06C5  
                    l1426 0683                      l1268 043E                      l1292 054F  
                    l1284 04D9                      l1276 04C3                      l1348 0664  
                    l1380 0523                      l1372 0511                      l1364 0500  
                    l1188 05F9                      l1460 078F                      l1452 072C  
                    l1444 0709                      l1436 06D1                      l1428 06AE  
                    l1294 0555                      l1286 04E6                      l1278 04C6  
                    l1390 0545                      l1382 052D                      l1374 0514  
                    l1366 0502                      l1358 04F6                      l1198 0478  
                    l1470 07DC                      l1462 07B1                      l1454 0743  
                    l1446 0712                      l1438 06D6                      l1296 055E  
                    l1288 04E9                      l1392 054A                      l1384 0533  
                    l1376 051B                      l1368 0506                      l1472 07E4  
                    l1464 07C6                      l1456 0765                      l1448 071E  
                    l1298 056D                      l1386 053A                      l1378 051F  
                    l1466 07CE                      l1458 077A                      l1388 0540  
                    l1468 07D6                      _CREN 00C4                      u1007 0460  
                    u1017 0471                      u1027 0559                      u1037 0568  
                    u1047 0577                      u1057 03AF                      _PEIE 005E  
                    _RCIF 0065                      _OERR 00C1                      _TRMT 04C1  
       ?_Lcd_Write_String 0070                      _dato 002D                      _main 0679  
                    btemp 007E                      start 0000        ??_Lcd_Write_String 0075  
         __end_of_Lcd_Cmd 03B8          ?_I2C_Master_Init 0020          ?_I2C_Master_Read 0070  
        ?_I2C_Master_Wait 0070          ?_I2C_Master_Stop 0070                     ?_main 0070  
         __end_of___awdiv 0679           __end_of___awmod 054F                     _ANSEL 0188  
         __end_of___lldiv 0612           ___awdiv@divisor 0070           ___awdiv@counter 0074  
                   _RCREG 001A                     _RCSTA 0018                     _SPBRG 0099  
                   _PORTB 0006                     _PORTD 0008                     _TRISB 0086  
                   _TRISD 0088                     _SSPIE 0463                     _SSPIF 0063  
                   _TXREG 0019                     _TXSTA 0098                     _datos 0030  
         __end_of_message 0018                     _setup 03B8                     pclath 000A  
                   status 0003                     wtemp0 007E          __end_of_Lcd_Init 05AC  
        __end_of_Lcd_Port 0415           __initialization 07EE              __end_of_main 07EE  
                  ??_main 0028         ?_I2C_Master_Start 0070         ?_I2C_Master_Write 0070  
      ??_I2C_Master_Start 0070        ??_I2C_Master_Write 0072          ___awdiv@dividend 0072  
                  ?_setup 0070                    _ANSELH 0189                 ??_Lcd_Cmd 0071  
                  _SSPADD 0093                    _TRISC3 043B                    _TRISC4 043C  
                  _SSPCON 0014                    _SSPBUF 0013                 ??___awdiv 0074  
               ??___awmod 007C                    _datos2 002E                 ??___lldiv 0078  
        ___awdiv@quotient 0076           ___awmod@divisor 0078           ___awmod@counter 007C  
         Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078  
         Lcd_Set_Cursor@z 0077   __end_of__initialization 07FC            __pcstackCOMMON 0070  
            __pidataBANK0 0374             __end_of_setup 03D2            _Lcd_Set_Cursor 04B0  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070                   ??_setup 007E  
              __pbssBANK0 002A                __pmaintext 0679    __end_of_Lcd_Set_Cursor 04F6  
              ??_Lcd_Init 0074                ??_Lcd_Port 0070                   _SSPCON2 0091  
                 _SSPSTAT 0094                __stringtab 0003            _Lcd_Write_Char 0443  
                 _Lcd_Cmd 039E                   ___awdiv 0612                   ___awmod 04F6  
                 ___lldiv 05AC           ?_Lcd_Set_Cursor 0074                   __ptext1 03B8  
                 __ptext2 0478                   __ptext3 05AC                   __ptext4 04F6  
                 __ptext5 0612                   __ptext6 03D2                   __ptext7 0443  
                 __ptext8 04B0                   __ptext9 054F                   _message 0009  
        ___awmod@dividend 007A    __end_of_Lcd_Write_Char 0478      end_of_initialization 07FC  
         ___lldiv@divisor 0070           ___lldiv@counter 007D          I2C_Master_Init@c 0020  
        I2C_Master_Read@a 0070                 Lcd_Port@a 0070                 _PORTDbits 0008  
               _TRISCbits 0087           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0078  
       Lcd_Write_String@i 0076          _Lcd_Write_String 03D2       start_initialization 07EE  
       ??_I2C_Master_Init 0024         ??_I2C_Master_Read 0072         ??_I2C_Master_Wait 0070  
       ??_I2C_Master_Stop 0070               __pdataBANK0 0032           Lcd_Write_Char@a 0074  
         Lcd_Write_Char@y 0073                 ___latbits 0002             __pcstackBANK0 0020  
                ?_Lcd_Cmd 0070          _I2C_Master_Start 0375          _I2C_Master_Write 0387  
        ??_Lcd_Set_Cursor 0075                  ?___awdiv 0070                  ?___awmod 0078  
                ?___lldiv 0070                 __pstrings 0003                  Lcd_Cmd@a 0073  
             __stringbase 0008          ??_Lcd_Write_Char 0071                  _Lcd_Init 054F  
                _Lcd_Port 03F3       I2C_Master_Read@temp 0074  __end_of_Lcd_Write_String 03F3  
      __end_of__stringtab 0009           _I2C_Master_Init 0478           _I2C_Master_Read 0415  
         _I2C_Master_Wait 0391           _I2C_Master_Stop 037E                  __ptext10 039E  
                __ptext11 03F3                  __ptext12 0387                  __ptext13 037E  
                __ptext14 0375                  __ptext15 0415                  __ptext16 0391  
__end_of_I2C_Master_Start 037E  __end_of_I2C_Master_Write 0391        Lcd_Write_Char@temp 0072  
        ___lldiv@dividend 0074                 stringcode 0003   __end_of_I2C_Master_Init 04B0  
 __end_of_I2C_Master_Read 0443   __end_of_I2C_Master_Wait 039E   __end_of_I2C_Master_Stop 0387  
      Lcd_Set_Cursor@temp 0079          ___lldiv@quotient 0079         I2C_Master_Write@d 0070  
                stringdir 0003                  stringtab 0003               _SSPCON2bits 0091  
